bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  /  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  /  1;	  final    long    TWO_TO_32    =    0x100000000L    *    1;    	compilable	  [FE]  AssertionError  	78	1	replace
2	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  /  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  /  1;	  final    long    TWO_TO_32    =    0x100000000L    *    1;    	compilable	  [FE]  AssertionError  	78	1	replace
3	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  *  1;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  *  1;	  final    long    TWO_TO_32    =    0x100000000L    *    1;    	non-compiled	[CE]  possible  loss  of  precision	78	None	replace
4	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  1;	  final    long    TWO_TO_32    =    0x100000000L    *    1;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	78	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  -  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  -  1;	  final    long    TWO_TO_32    =    0x100000000L    *    1;    	compilable	  [FE]  AssertionError  	78	1	replace
6	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  -  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  -  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  -  1;	  final    long    TWO_TO_32    =    0x100000000L    *    1;    	compilable	  [FE]  AssertionError  	78	1	replace
7	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L  +  1;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x1000000000L  +  1;	  final    long    TWO_TO_32    =    0x1000000000L    +    1;    	non-compiled	[CE]  possible  loss  of  precision	34	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  *  1;	  final    long    TWO_TO_32    =    0x1000000000L    +    1;    	compilable	  [FE]  AssertionError  	34	1	replace
9	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  *  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  *  1;	  final    long    TWO_TO_32    =    0x1000000000L    +    1;    	compilable	  [FE]  AssertionError  	34	1	replace
10	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  *  2;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  *  2;	  final    long    TWO_TO_32    =    0x100000000L    *    2;    	non-compiled	[CE]  possible  loss  of  precision	44	None	replace
11	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  2;	  final    long    TWO_TO_32    =    0x100000000L    *    2;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	44	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  *  4;	  final    long    TWO_TO_32    =    0x100000000L    *    2;    	compilable	  [FE]  AssertionError  	44	1	replace
13	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  4;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  *  4;	  final    long    TWO_TO_32    =    0x100000000L    *    2;    	compilable	  [FE]  AssertionError  	44	1	replace
14	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    final    long    TWO_TO_32    =    0x1000000000L    +    1;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	48	None	replace
15	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  1;  final  int  TWO_TO_32  =  0x1000000000L  +  1;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  1;  final  int  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  1;  final  int  TWO_TO_32  =  0x1000000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    final    long    TWO_TO_32    =    0x1000000000L    +    1;    	non-compiled	[CE]  possible  loss  of  precision	48	None	replace
16	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    final    long    TWO_TO_32    =    0x1000000000L    +    1;    	non-compiled	[CE]  possible  loss  of  precision	48	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x1000000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    final    long    TWO_TO_32    =    0x1000000000L    +    1;    	compilable	  [FE]  AssertionError  	48	1	replace
18	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000L  +  1;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x1000000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    final    long    TWO_TO_32    =    0x1000000000L    +    1;    	compilable	  [FE]  AssertionError  	48	1	replace
19	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l.longValue();  [CE]  long  cannot  be  dereferenced  [FE]        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l.longValue();	  final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	79	None	replace
20	[BUG]  [BUGGY]  final  long  l  =  l.longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  l.longValue();	  final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	79	None	replace
21	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l.longValue()  +  1;  [CE]  long  cannot  be  dereferenced  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l.longValue()  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l.longValue()  +  1;	  final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	79	None	replace
22	[BUG]  [BUGGY]  final  long  tWO_TO_32  =  l.longValue();  [CE]  long  cannot  be  dereferenced  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  tWO_TO_32  =  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  tWO_TO_32  =  l.longValue();	  final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	79	None	replace
23	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  l.longValue();  [CE]  long  cannot  be  dereferenced  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  double  TWO_TO_32  =  l.longValue();	  final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	79	None	replace
24	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  <  <.longValue();  [CE]  illegal  start  of  type  [FE]                  IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  <  <.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  <  <.longValue();	  final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
25	[BUG]  [BUGGY]  long  l  =  unixTime.longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  unixTime.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  unixTime.longValue();	  long    l    =    createTime.longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	27	None	replace
26	[BUG]  [BUGGY]  long  l  =  createTime.longValue()  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  createTime.longValue()  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  createTime.longValue()  +  1;	  long    l    =    createTime.longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	27	None	replace
27	[BUG]  [BUGGY]  long  l  =  accessTime.longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  accessTime.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  accessTime.longValue();	  long    l    =    createTime.longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	27	None	replace
28	[BUG]  [BUGGY]  long  l  =  this.unixTime.longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  this.unixTime.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  this.unixTime.longValue();	  long    l    =    createTime.longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	27	None	replace
29	[BUG]  [BUGGY]  long  l  =  createTime.longValue()  +  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  createTime.longValue()  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  createTime.longValue()  +  2;	  long    l    =    createTime.longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	27	None	replace
30	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  /  ZipShort.DEFAULT_TIME_BIT;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  /  ZipShort.DEFAULT_TIME_BIT;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  /  ZipShort.DEFAULT_TIME_BIT;	  final    long    l    =    0x100000000L    *    ZipShort.DEFAULT_TIME_BIT;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	92	None	replace
31	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT  +  1;	  final    long    l    =    0x100000000L    *    ZipShort.DEFAULT_TIME_BIT;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	92	None	replace
32	[BUG]  [BUGGY]  final  int  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;	  final    long    l    =    0x100000000L    *    ZipShort.DEFAULT_TIME_BIT;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	92	None	replace
33	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT  +  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT  +  2;	  final    long    l    =    0x100000000L    *    ZipShort.DEFAULT_TIME_BIT;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	92	None	replace
34	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  ZipShort.DEFAULT_TIME_BIT;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  +  ZipShort.DEFAULT_TIME_BIT;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  ZipShort.DEFAULT_TIME_BIT;	  final    long    l    =    0x100000000L    *    ZipShort.DEFAULT_TIME_BIT;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	92	None	replace
35	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  -  ZipShort.DEFAULT_TIME_BIT;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  -  ZipShort.DEFAULT_TIME_BIT;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  -  ZipShort.DEFAULT_TIME_BIT;	  final    long    l    =    0x100000000L    *    ZipShort.DEFAULT_TIME_BIT;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	92	None	replace
36	[BUG]  [BUGGY]  final  long  tWO_TO_32  =  0x100000000L  +  1;  [CE]  cannot  find  symbol  TWO_TO_32  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  tWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  tWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	47	None	replace
37	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  *  2;	  final    long    TWO_TO_32    =    0x1000000000L    +    2;    	compilable	  [FE]  AssertionError  	40	1	replace
38	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  *  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  *  2;	  final    long    TWO_TO_32    =    0x1000000000L    +    2;    	compilable	  [FE]  AssertionError  	40	1	replace
39	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L  +  2;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x1000000000L  +  2;	  final    long    TWO_TO_32    =    0x1000000000L    +    2;    	non-compiled	[CE]  possible  loss  of  precision	40	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  +  3;	  final    long    TWO_TO_32    =    0x1000000000L    +    2;    	compilable	  [FE]  AssertionError  	40	1	replace
41	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  3;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  +  3;	  final    long    TWO_TO_32    =    0x1000000000L    +    2;    	compilable	  [FE]  AssertionError  	40	1	replace
42	[BUG]  [BUGGY]  final  long  tWO_TO_32  =  0x1000000000L;  [CE]  cannot  find  symbol  TWO_TO_32  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  tWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  tWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	19	None	replace
43	[BUG]  [BUGGY]  static  final  int  TWO_TO_32  =  0x100000000L  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  int  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  int  TWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    static    final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
44	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x1000000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    static    final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
45	[BUG]  [BUGGY]  static  final  Long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  Long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  Long  TWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    static    final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
46	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  l  +  2;	  long    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	68	1	replace
47	[BUG]  [BUGGY]  long  TWO_TO_32  =  l  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  l  +  2;	  long    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	68	1	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x100000000L  *  2;	  long    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	68	1	replace
49	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  *  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  *  2;	  long    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	68	1	replace
50	[BUG]  [BUGGY]  long  l  =  0x100000000L  +  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L  +  2;	  long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	68	None	replace
51	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x100000000L  +  3;	  long    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	68	1	replace
52	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  3;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  +  3;	  long    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	68	1	replace
53	[BUG]  [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  final  float  TWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  final  float  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    float    TWO_TO_32    =    0x100000000L;    final  float  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	87	None	add
54	[BUG]  [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  final  float  TWO_TO_32  =  0x1000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  final  float  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    float    TWO_TO_32    =    0x100000000L;    final  float  TWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	87	None	add
55	[BUG]  [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  final  float  TWO_TO_32  =  0x200000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  final  float  TWO_TO_32  =  0x200000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    float    TWO_TO_32    =    0x100000000L;    final  float  TWO_TO_32  =  0x200000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	87	None	add
56	[BUG]  [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  Final  float  TWO_TO_32  =  0x100000000L;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  Final  float  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    float    TWO_TO_32    =    0x100000000L;    Final  float  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  not  a  statement	87	None	add
57	[BUG]  [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  final  float  TWO_TO_32  =  0x100000000L);  [CE]  ';'  expected  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  final  float  TWO_TO_32  =  0x100000000L);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    float    TWO_TO_32    =    0x100000000L;    final  float  TWO_TO_32  =  0x100000000L);	  	non-compiled	[CE]  ';'  expected	87	None	add
58	[BUG]  [BUGGY]  long  l  =  0x100000000L;  short  TWO_TO_32  =  0x100000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L;  short  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L;  short  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    short    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	12	None	replace
59	[BUG]  [BUGGY]  Short  TWO_TO_32  =  0x100000000L;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  Short  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	Short  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    short    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  incompatible  types	12	None	replace
60	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.length;  [CE]  possible  loss  of  precision  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.length;	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.length;    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
61	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.length;  [CE]  possible  loss  of  precision  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.length;	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.length;    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
62	[BUG]  [BUGGY]  final  byte  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.length;  [CE]  possible  loss  of  precision  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  byte  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  byte  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.length;	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.length;    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
63	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l.length;  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l.length;	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.length;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
64	[BUG]  [BUGGY]  short  TWO_TO_32  =  0x100000000;  [CE]  integer  number  too  large:  100000000  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  short  TWO_TO_32  =  0x100000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	short  TWO_TO_32  =  0x100000000;	  int    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  integer  number  too  large:  100000000	115	None	replace
65	[BUG]  [BUGGY]  Long  TWO_TO_32  =  0x100000000;  [CE]  integer  number  too  large:  100000000  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  Long  TWO_TO_32  =  0x100000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	Long  TWO_TO_32  =  0x100000000;	  int    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  integer  number  too  large:  100000000	115	None	replace
66	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000  +  1;  [CE]  integer  number  too  large:  100000000  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x100000000  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000  +  1;	  int    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  integer  number  too  large:  100000000	115	None	replace
67	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  0x100000000;  [CE]  integer  number  too  large:  100000000  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x100000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  double  TWO_TO_32  =  0x100000000;	  final    double    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  integer  number  too  large:  100000000	86	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  double  TWO_TO_32  =  0x100000000L  +  1;	  final    double    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	86	1	replace
69	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  0x100000000L  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  double  TWO_TO_32  =  0x100000000L  +  1;	  final    double    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	86	1	replace
70	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  double  TWO_TO_32  =  0x100000000L  +  2;	  final    double    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	86	1	replace
71	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  0x100000000L  +  2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  double  TWO_TO_32  =  0x100000000L  +  2;	  final    double    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	86	1	replace
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  +  2L;	  final    long    TWO_TO_32    =    0x1000000000L    +    1L;    	compilable	  [FE]  AssertionError  	107	1	replace
73	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  +  2L;	  final    long    TWO_TO_32    =    0x1000000000L    +    1L;    	compilable	  [FE]  AssertionError  	107	1	replace
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  /  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  /  1L;	  final    long    TWO_TO_32    =    0x1000000000L    +    1L;    	compilable	  [FE]  AssertionError  	107	1	replace
75	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  /  1L;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  /  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  /  1L;	  final    long    TWO_TO_32    =    0x1000000000L    +    1L;    	compilable	  [FE]  AssertionError  	107	1	replace
76	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  *  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  *  1L;	  final    long    TWO_TO_32    =    0x1000000000L    +    1L;    	compilable	  [FE]  AssertionError  	107	1	replace
77	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  *  1L;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  *  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  *  1L;	  final    long    TWO_TO_32    =    0x1000000000L    +    1L;    	compilable	  [FE]  AssertionError  	107	1	replace
78	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L  +  1L;  [CE]  possible  loss  of  precision  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x1000000000L  +  1L;	  final    long    TWO_TO_32    =    0x1000000000L    +    1L;    	non-compiled	[CE]  possible  loss  of  precision	107	None	replace
79	[BUG]  [BUGGY]  final  long  l  =  0x1000000000L  +  1L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x1000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x1000000000L  +  1L;	  final    long    TWO_TO_32    =    0x1000000000L    +    1L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	107	None	replace
80	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  final  long  TWO_TO_32  =  0x100000000L  +  3;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  final  long  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    3;    final  long  TWO_TO_32  =  0x100000000L  +  3;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	101	None	add
81	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  final  long  TWO_TO_32  =  0x100000000L  +  4;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  final  long  TWO_TO_32  =  0x100000000L  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    3;    final  long  TWO_TO_32  =  0x100000000L  +  4;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	101	None	add
82	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  final  long  TWO_TO_32  =  0x1000000000L  +  3;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  final  long  TWO_TO_32  =  0x1000000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    3;    final  long  TWO_TO_32  =  0x1000000000L  +  3;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	101	None	add
83	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  final  long  TWO_TO_32  =  0x100000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  final  long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    3;    final  long  TWO_TO_32  =  0x100000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	101	None	add
84	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  long  TWO_TO_32  =  0x100000000L  +  3;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  long  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    3;    long  TWO_TO_32  =  0x100000000L  +  3;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	101	None	add
85	[BUG]  [BUGGY]  long  l  =  0x100000000;  [CE]  integer  number  too  large:  100000000  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000;	  long    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  integer  number  too  large:  100000000	60	None	replace
86	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000  +  1;  [CE]  integer  number  too  large:  100000000  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000  +  1;	  long    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  integer  number  too  large:  100000000	60	None	replace
87	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000  +  l;  [CE]  integer  number  too  large:  100000000  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000  +  l;	  long    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  integer  number  too  large:  100000000	60	None	replace
88	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  final  long  TWO_TO_32  =  0x100000000L  *  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  final  long  TWO_TO_32  =  0x100000000L  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    1;    final  long  TWO_TO_32  =  0x100000000L  *  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	77	None	add
89	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  final  long  TWO_TO_32  =  0x100000000L  *  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  final  long  TWO_TO_32  =  0x100000000L  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    1;    final  long  TWO_TO_32  =  0x100000000L  *  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	77	None	add
90	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  final  long  TWO_TO_32  =  0x1000000000L  *  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  final  long  TWO_TO_32  =  0x1000000000L  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    1;    final  long  TWO_TO_32  =  0x1000000000L  *  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	77	None	add
91	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  static  final  long  TWO_TO_32  =  0x100000000L  *  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  static  final  long  TWO_TO_32  =  0x100000000L  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    1;    static  final  long  TWO_TO_32  =  0x100000000L  *  1;	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
92	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  long  TWO_TO_32  =  0x100000000L  *  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  long  TWO_TO_32  =  0x100000000L  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    1;    long  TWO_TO_32  =  0x100000000L  *  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	77	None	add
93	[BUG]  [BUGGY]  long  tWO_TO_32  =  0x100000000L;  [CE]  cannot  find  symbol  TWO_TO_32  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  tWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  tWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    long    tWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	96	None	replace
94	[BUG]  [BUGGY]  long  tWO_TO_32  =  0x1000000000L;  [CE]  cannot  find  symbol  TWO_TO_32  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  tWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  tWO_TO_32  =  0x1000000000L;	  long    TWO_TO_32    =    0x100000000L;    long    tWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	96	None	replace
95	[BUG]  [BUGGY]  Long  tWO_TO_32  =  0x100000000L;  [CE]  cannot  find  symbol  TWO_TO_32  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  Long  tWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	Long  tWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    long    tWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	96	None	replace
96	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x10000000000L;    	compilable	  [FE]  AssertionError  	20	1	replace
97	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000000L;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x10000000000L;    	compilable	  [FE]  AssertionError  	20	1	replace
98	[BUG]  [BUGGY]  final  long  tWO_TO_32  =  0x10000000000L;  [CE]  cannot  find  symbol  TWO_TO_32  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  tWO_TO_32  =  0x10000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  tWO_TO_32  =  0x10000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x10000000000L;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	20	None	replace
99	[BUG]  [BUGGY]  long  l  =  getTimeInLong(l  +  1);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTimeInLong(l  +  1);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTimeInLong(l  +  1);	  long    l    =    getTimeInLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	31	None	replace
100	[BUG]  [BUGGY]  long  l  =  getTimeInLong(l)+  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTimeInLong(l)+  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTimeInLong(l)+  1;	  long    l    =    getTimeInLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	31	None	replace
101	[BUG]  [BUGGY]  long  l  =  getTimeInLong(l).longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTimeInLong(l).longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTimeInLong(l).longValue();	  long    l    =    getTimeInLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	31	None	replace
102	[BUG]  [BUGGY]  long  l  =  getTimeInLong(l).toZipLong();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTimeInLong(l).toZipLong();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTimeInLong(l).toZipLong();	  long    l    =    getTimeInLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	31	None	replace
103	[BUG]  [BUGGY]  long  l  =  getTimeInLong(l.longValue());  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTimeInLong(l.longValue());  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTimeInLong(l.longValue());	  long    l    =    getTimeInLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	31	None	replace
104	[BUG]  [BUGGY]  long  l  =  getTimeInLong(l.length);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTimeInLong(l.length);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTimeInLong(l.length);	  long    l    =    getTimeInLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	31	None	replace
105	[BUG]  [BUGGY]  long  TWO_TO_32  =  l;  long  TWO_TO_32  =  l;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l;  long  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    l;    long  TWO_TO_32  =  l;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	64	None	add
106	[BUG]  [BUGGY]  long  TWO_TO_32  =  l;  Long  TWO_TO_32  =  l;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l;  Long  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    l;    Long  TWO_TO_32  =  l;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	64	None	add
107	[BUG]  [BUGGY]  long  TWO_TO_32  =  l;  long  l  =  l;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l;  long  l  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    l;    long  l  =  l;	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	64	None	add
108	[BUG]  [BUGGY]  long  TWO_TO_32  =  l;  int  TWO_TO_32  =  l;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l;  int  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    l;    int  TWO_TO_32  =  l;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	64	None	add
109	[BUG]  [BUGGY]  long  TWO_TO_32  =  l;  short  TWO_TO_32  =  l;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l;  short  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    l;    short  TWO_TO_32  =  l;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	64	None	add
110	[BUG]  [BUGGY]  long  TWO_TO_32  =  l;  long  TWO_TO_32  =  l.length;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l;  long  TWO_TO_32  =  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    l;    long  TWO_TO_32  =  l.length;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	64	None	add
111	[BUG]  [BUGGY]  long  TWO_TO_32  =  l;  long  TWO_TO_32  =  l);  [CE]  ';'  expected  [FE]                IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l;  long  TWO_TO_32  =  l);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    l;    long  TWO_TO_32  =  l);	  	non-compiled	[CE]  ';'  expected	64	None	add
112	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	53	None	replace
113	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  possible  loss  of  precision	53	None	replace
114	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  2;  final  int  TWO_TO_32  =  0x100000000L  +  1;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  2;  final  int  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  2;  final  int  TWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  possible  loss  of  precision	53	None	replace
115	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  long  TWO_TO_32  =  0x1000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x1000000000L;    long  TWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	103	None	add
116	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  Long  TWO_TO_32  =  0x1000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  Long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x1000000000L;    Long  TWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	103	None	add
117	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  long  TWO_TO_32  =  0x10000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  long  TWO_TO_32  =  0x10000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x1000000000L;    long  TWO_TO_32  =  0x10000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	103	None	add
118	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  int  TWO_TO_32  =  0x1000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  int  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x1000000000L;    int  TWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	103	None	add
119	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  short  TWO_TO_32  =  0x1000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  short  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x1000000000L;    short  TWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	103	None	add
120	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  long  l  =  0x1000000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  long  l  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x1000000000L;    long  l  =  0x1000000000L;	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	103	None	add
121	[BUG]  [BUGGY]  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  [CE]  possible  loss  of  precision  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;	  final    long    TWO_TO_32    =    l;    Final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
122	[BUG]  [BUGGY]  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  [CE]  possible  loss  of  precision  [FE]                  IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;	  final    long    TWO_TO_32    =    l;    Final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
123	[BUG]  [BUGGY]  int  TWO_TO_32  =  l;  [CE]  possible  loss  of  precision  [FE]                    IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  l;	  final    long    TWO_TO_32    =    l;    Final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
124	[BUG]  [BUGGY]  final  byte  TWO_TO_32  =  0x100000000L  +  2;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  byte  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  byte  TWO_TO_32  =  0x100000000L  +  2;	  final    int    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  possible  loss  of  precision	45	None	replace
125	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  Long  TWO_TO_32  =  0x100000000L  +  2;	  final    int    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	45	1	replace
126	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L  +  2;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  Long  TWO_TO_32  =  0x100000000L  +  2;	  final    int    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	45	1	replace
127	[BUG]  [BUGGY]  final  byte  TWO_TO_32  =  l;  [CE]  possible  loss  of  precision  [FE]          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  byte  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  byte  TWO_TO_32  =  l;	  final    int    TWO_TO_32    =    l;    	non-compiled	[CE]  possible  loss  of  precision	80	None	replace
128	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  double  TWO_TO_32  =  l;	  final    int    TWO_TO_32    =    l;    	compilable	  [FE]  IllegalArgumentException  	80	4	replace
129	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  l;  [FE]  IllegalArgumentException  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  double  TWO_TO_32  =  l;	  final    int    TWO_TO_32    =    l;    	compilable	  [FE]  IllegalArgumentException  	80	4	replace
130	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  Long  TWO_TO_32  =  l;	  final    int    TWO_TO_32    =    l;    	compilable	  [FE]  IllegalArgumentException  	80	4	replace
131	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  l;  [FE]  IllegalArgumentException  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  Long  TWO_TO_32  =  l;	  final    int    TWO_TO_32    =    l;    	compilable	  [FE]  IllegalArgumentException  	80	4	replace
132	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  float  TWO_TO_32  =  l;	  final    int    TWO_TO_32    =    l;    	compilable	  [FE]  IllegalArgumentException  	80	4	replace
133	[BUG]  [BUGGY]  final  float  TWO_TO_32  =  l;  [FE]  IllegalArgumentException  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  float  TWO_TO_32  =  l;	  final    int    TWO_TO_32    =    l;    	compilable	  [FE]  IllegalArgumentException  	80	4	replace
134	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  final  long  TWO_TO_32  =  l  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  final  long  TWO_TO_32  =  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1;    final  long  TWO_TO_32  =  l  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	72	None	add
135	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  static  final  long  TWO_TO_32  =  l  +  1;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  static  final  long  TWO_TO_32  =  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1;    static  final  long  TWO_TO_32  =  l  +  1;	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
136	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  final  int  TWO_TO_32  =  l  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  final  int  TWO_TO_32  =  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1;    final  int  TWO_TO_32  =  l  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	72	None	add
137	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  Final  long  TWO_TO_32  =  l  +  1;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  Final  long  TWO_TO_32  =  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1;    Final  long  TWO_TO_32  =  l  +  1;	  	non-compiled	[CE]  not  a  statement	72	None	add
138	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  final  short  TWO_TO_32  =  l  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  final  short  TWO_TO_32  =  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1;    final  short  TWO_TO_32  =  l  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	72	None	add
139	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  long  TWO_TO_32  =  l  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  long  TWO_TO_32  =  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1;    long  TWO_TO_32  =  l  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	72	None	add
140	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  final  long  TWO_TO_32  =  l  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  final  long  TWO_TO_32  =  l  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1;    final  long  TWO_TO_32  =  l  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	72	None	add
141	[BUG]  [BUGGY]  long  l  =  0x100000000L;  int  TWO_TO_32  =  0x100000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L;  int  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L;  int  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    int    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	11	None	replace
142	[BUG]  [BUGGY]  short  TWO_TO_32  =  0x100000000L;  int  TWO_TO_32  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  short  TWO_TO_32  =  0x100000000L;  int  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	short  TWO_TO_32  =  0x100000000L;  int  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    int    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
143	[BUG]  [BUGGY]  short  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  short  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	short  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    int    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  possible  loss  of  precision	11	None	replace
144	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  final  long  TWO_TO_32  =  l  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  final  long  TWO_TO_32  =  l  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    2;    final  long  TWO_TO_32  =  l  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	41	None	add
145	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  static  final  long  TWO_TO_32  =  l  +  2;  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  static  final  long  TWO_TO_32  =  l  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    2;    static  final  long  TWO_TO_32  =  l  +  2;	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
146	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  final  int  TWO_TO_32  =  l  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  final  int  TWO_TO_32  =  l  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    2;    final  int  TWO_TO_32  =  l  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	41	None	add
147	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  final  short  TWO_TO_32  =  l  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  final  short  TWO_TO_32  =  l  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    2;    final  short  TWO_TO_32  =  l  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	41	None	add
148	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  Final  long  TWO_TO_32  =  l  +  2;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  Final  long  TWO_TO_32  =  l  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    2;    Final  long  TWO_TO_32  =  l  +  2;	  	non-compiled	[CE]  not  a  statement	41	None	add
149	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  final  long  TWO_TO_32  =  l  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  final  long  TWO_TO_32  =  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    2;    final  long  TWO_TO_32  =  l  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	41	None	add
150	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  long  TWO_TO_32  =  l  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  long  TWO_TO_32  =  l  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    2;    long  TWO_TO_32  =  l  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	41	None	add
151	[BUG]  [BUGGY]  final  long  l  =  0x1000000000L  +  l;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x1000000000L  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x1000000000L  +  l;	  final    long    TWO_TO_32    =    0x1000000000L    +    l;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	109	None	replace
152	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l.length;  [CE]  long  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  +  l.length;	  final    long    TWO_TO_32    =    0x1000000000L    +    l;    	non-compiled	[CE]  long  cannot  be  dereferenced	109	None	replace
153	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l.longValue();  [CE]  long  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  +  l.longValue();	  final    long    TWO_TO_32    =    0x1000000000L    +    l;    	non-compiled	[CE]  long  cannot  be  dereferenced	109	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  +  l  +  1;	  final    long    TWO_TO_32    =    0x1000000000L    +    l;    	compilable	  [FE]  AssertionError  	109	1	replace
155	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l  +  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  +  l  +  1;	  final    long    TWO_TO_32    =    0x1000000000L    +    l;    	compilable	  [FE]  AssertionError  	109	1	replace
156	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  *  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  *  l;	  final    long    TWO_TO_32    =    0x1000000000L    +    l;    	compilable	  [FE]  IllegalArgumentException  	109	1	replace
157	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  *  l;  [FE]  IllegalArgumentException  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  *  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  *  l;	  final    long    TWO_TO_32    =    0x1000000000L    +    l;    	compilable	  [FE]  IllegalArgumentException  	109	1	replace
158	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L  +  l;  [CE]  possible  loss  of  precision  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x1000000000L  +  l;	  final    long    TWO_TO_32    =    0x1000000000L    +    l;    	non-compiled	[CE]  possible  loss  of  precision	109	None	replace
159	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  +  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L    +    l;    	compilable	  [FE]  AssertionError  	109	1	replace
160	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  0x1000000000L;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  +  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L    +    l;    	compilable	  [FE]  AssertionError  	109	1	replace
161	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x10000000000L;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x10000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x10000000000L;	  final    long    TWO_TO_32    =    0x10000000000L;    	non-compiled	[CE]  possible  loss  of  precision	37	None	replace
162	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x10000000000L  +  1;	  final    long    TWO_TO_32    =    0x10000000000L;    	compilable	  [FE]  AssertionError  	37	1	replace
163	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x10000000000L  +  1;	  final    long    TWO_TO_32    =    0x10000000000L;    	compilable	  [FE]  AssertionError  	37	1	replace
164	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x10000000000L  +  1L;	  final    long    TWO_TO_32    =    0x10000000000L;    	compilable	  [FE]  AssertionError  	37	1	replace
165	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L  +  1L;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x10000000000L  +  1L;	  final    long    TWO_TO_32    =    0x10000000000L;    	compilable	  [FE]  AssertionError  	37	1	replace
166	[BUG]  [BUGGY]  final  long  l  =  0x10000000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x10000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x10000000000L;	  final    long    TWO_TO_32    =    0x10000000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	37	None	replace
167	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000;  [CE]  integer  number  too  large:  10000000000  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x10000000000;	  final    long    TWO_TO_32    =    0x10000000000L;    	non-compiled	[CE]  integer  number  too  large:  10000000000	37	None	replace
168	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x10000000000L  +  2;	  final    long    TWO_TO_32    =    0x10000000000L;    	compilable	  [FE]  AssertionError  	37	1	replace
169	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L  +  2;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x10000000000L  +  2;	  final    long    TWO_TO_32    =    0x10000000000L;    	compilable	  [FE]  AssertionError  	37	1	replace
170	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  final  double  TWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  final  double  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    double    TWO_TO_32    =    0x100000000L;    final  double  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	85	None	add
171	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  final  double  TWO_TO_32  =  0x1000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  final  double  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    double    TWO_TO_32    =    0x100000000L;    final  double  TWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	85	None	add
172	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  final  long  TWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  final  long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    double    TWO_TO_32    =    0x100000000L;    final  long  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	85	None	add
173	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  static  final  double  TWO_TO_32  =  0x100000000L;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  static  final  double  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    double    TWO_TO_32    =    0x100000000L;    static  final  double  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
174	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  Final  double  TWO_TO_32  =  0x100000000L;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  Final  double  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    double    TWO_TO_32    =    0x100000000L;    Final  double  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  not  a  statement	85	None	add
175	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l  +  1;	  static    final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
176	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  +  1L;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x100000000L  +  1L;	  static    final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
177	[BUG]  [BUGGY]  static  final  long  l  =  0x100000000L  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  l  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  l  =  0x100000000L  +  1;	  static    final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
178	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  *  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x100000000L  *  1;	  static    final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
179	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l  +  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l  +  2;	  static    final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
180	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  *  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x100000000L  *  2;	  static    final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
181	[BUG]  [BUGGY]  static  final  long  l  =  0x100000000L  +  2;  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  l  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  l  =  0x100000000L  +  2;	  static    final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
182	[BUG]  [BUGGY]  static  final  int  TWO_TO_32  =  0x100000000L  +  2;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  int  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  int  TWO_TO_32  =  0x100000000L  +  2;	  static    final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
183	[BUG]  [BUGGY]  final  long  l  =  l;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  l;	  final    long    TWO_TO_32    =    l;    final    long    l    =    l;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	113	None	replace
184	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  long  l  =  l;  [CE]  possible  loss  of  precision  [FE]          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  long  l  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  long  l  =  l;	  final    long    TWO_TO_32    =    l;    final    long    l    =    l;    	non-compiled	[CE]  possible  loss  of  precision	113	None	replace
185	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  int  l  =  l;  [CE]  possible  loss  of  precision  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  int  l  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  int  l  =  l;	  final    long    TWO_TO_32    =    l;    final    long    l    =    l;    	non-compiled	[CE]  possible  loss  of  precision	113	None	replace
186	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l;  final  long  l  =  l;  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l;  final  long  l  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l;  final  long  l  =  l;	  final    long    TWO_TO_32    =    l;    final    long    l    =    l;    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
187	[BUG]  [BUGGY]  final  byte  TWO_TO_32  =  l;  final  long  l  =  l;  [CE]  possible  loss  of  precision  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  byte  TWO_TO_32  =  l;  final  long  l  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  byte  TWO_TO_32  =  l;  final  long  l  =  l;	  final    long    TWO_TO_32    =    l;    final    long    l    =    l;    	non-compiled	[CE]  possible  loss  of  precision	113	None	replace
188	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  l;  final  long  l  =  l;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                  IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  l;  final  long  l  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  double  TWO_TO_32  =  l;  final  long  l  =  l;	  final    long    TWO_TO_32    =    l;    final    long    l    =    l;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	113	None	replace
189	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  1L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  1L;	  final    long    l    =    0x100000000L    +    1;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	70	None	replace
190	[BUG]  [BUGGY]  final  int  l  =  0x100000000L  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  l  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  l  =  0x100000000L  +  1;	  final    long    l    =    0x100000000L    +    1;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	70	None	replace
191	[BUG]  [BUGGY]  final  long  l  =  0x100000000  +  1L;  [CE]  integer  number  too  large:  100000000  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000  +  1L;	  final    long    l    =    0x100000000L    +    1;    	non-compiled	[CE]  integer  number  too  large:  100000000	70	None	replace
192	[BUG]  [BUGGY]  final  long  l  =  0x100000000  +  1;  [CE]  integer  number  too  large:  100000000  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000  +  1;	  final    long    l    =    0x100000000L    +    1;    	non-compiled	[CE]  integer  number  too  large:  100000000	70	None	replace
193	[BUG]  [BUGGY]  long  l  =  0x100000000L  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	51	None	replace
194	[BUG]  [BUGGY]  long  tWO_TO_32  =  0x100000000L  +  1;  [CE]  cannot  find  symbol  TWO_TO_32  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  tWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  tWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	51	None	replace
195	[BUG]  [BUGGY]  short  TWO_TO_32  =  0x100000000L  +  1;  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  short  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	short  TWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  possible  loss  of  precision	51	None	replace
196	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  *  3;	  final    long    TWO_TO_32    =    0x100000000L    +    3;    	compilable	  [FE]  AssertionError  	102	1	replace
197	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  3;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  *  3;	  final    long    TWO_TO_32    =    0x100000000L    +    3;    	compilable	  [FE]  AssertionError  	102	1	replace
198	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  3;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  3;	  final    long    TWO_TO_32    =    0x100000000L    +    3;    	non-compiled	[CE]  possible  loss  of  precision	102	None	replace
199	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  +  3;	  final    long    TWO_TO_32    =    0x100000000L    +    3;    	compilable	  [FE]  AssertionError  	102	1	replace
200	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  3;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  +  3;	  final    long    TWO_TO_32    =    0x100000000L    +    3;    	compilable	  [FE]  AssertionError  	102	1	replace
201	[BUG]  [BUGGY]  final  Long  l  =  0x100000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  l  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  Long  l  =  0x100000000L;	  final    int    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	69	None	replace
202	[BUG]  [BUGGY]  final  double  l  =  0x100000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  l  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  double  l  =  0x100000000L;	  final    int    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	69	None	replace
203	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  /  ZipShort.MIN_VALUE;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  /  ZipShort.MIN_VALUE;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  /  ZipShort.MIN_VALUE;	  final    long    l    =    0x100000000L    *    ZipShort.MIN_VALUE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	93	None	replace
204	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE  +  1;	  final    long    l    =    0x100000000L    *    ZipShort.MIN_VALUE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	93	None	replace
205	[BUG]  [BUGGY]  final  int  l  =  0x100000000L  *  ZipShort.MIN_VALUE;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  l  =  0x100000000L  *  ZipShort.MIN_VALUE;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  l  =  0x100000000L  *  ZipShort.MIN_VALUE;	  final    long    l    =    0x100000000L    *    ZipShort.MIN_VALUE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	93	None	replace
206	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE  +  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE  +  2;	  final    long    l    =    0x100000000L    *    ZipShort.MIN_VALUE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	93	None	replace
207	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE  +  4;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE  +  4;	  final    long    l    =    0x100000000L    *    ZipShort.MIN_VALUE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	93	None	replace
208	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE  +  3;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE  +  3;	  final    long    l    =    0x100000000L    *    ZipShort.MIN_VALUE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	93	None	replace
209	[BUG]  [BUGGY]  long  l  =  0x1000000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	23	None	replace
210	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x1000000000L;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
211	[BUG]  [BUGGY]  short  TWO_TO_32  =  0x1000000000L;  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  short  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	short  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
212	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  Long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	Long  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	23	1	replace
213	[BUG]  [BUGGY]  Long  TWO_TO_32  =  0x1000000000L;  [FE]  AssertionError  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  Long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	Long  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	23	1	replace
214	[BUG]  [BUGGY]  final  byte  TWO_TO_32  =  0x1000000000L;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  byte  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  byte  TWO_TO_32  =  0x1000000000L;	  final    int    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  possible  loss  of  precision	32	None	replace
215	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  double  TWO_TO_32  =  0x1000000000L;	  final    int    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	32	1	replace
216	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  0x1000000000L;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  double  TWO_TO_32  =  0x1000000000L;	  final    int    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	32	1	replace
217	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  float  TWO_TO_32  =  0x1000000000L;	  final    int    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	32	1	replace
218	[BUG]  [BUGGY]  final  float  TWO_TO_32  =  0x1000000000L;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  float  TWO_TO_32  =  0x1000000000L;	  final    int    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	32	1	replace
219	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  Long  TWO_TO_32  =  0x1000000000L;	  final    int    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	32	1	replace
220	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  0x1000000000L;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  Long  TWO_TO_32  =  0x1000000000L;	  final    int    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	32	1	replace
221	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  /  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  /  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  /  DateTimeConstants.MILLIS_PER_SECOND;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	91	None	replace
222	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND  +  1;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	91	None	replace
223	[BUG]  [BUGGY]  final  int  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	91	None	replace
224	[BUG]  [BUGGY]  final  long  l  =  0x1000000000L  /  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x1000000000L  /  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x1000000000L  /  DateTimeConstants.MILLIS_PER_SECOND;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	91	None	replace
225	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND  +  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND  +  2;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	91	None	replace
226	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  -  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  -  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  -  DateTimeConstants.MILLIS_PER_SECOND;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	91	None	replace
227	[BUG]  [BUGGY]  long  l  =  unixTime(l);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  unixTime(l);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  unixTime(l);	  long    l    =    createTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	30	None	replace
228	[BUG]  [BUGGY]  long  l  =  createTime(l,  bit0_modifyTimePresent);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  createTime(l,  bit0_modifyTimePresent);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  createTime(l,  bit0_modifyTimePresent);	  long    l    =    createTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	30	None	replace
229	[BUG]  [BUGGY]  long  l  =  createTime(l,  X5455_ExtendedTimestamp);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  createTime(l,  X5455_ExtendedTimestamp);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  createTime(l,  X5455_ExtendedTimestamp);	  long    l    =    createTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	30	None	replace
230	[BUG]  [BUGGY]  long  l  =  createTime(l,  bit1_modifyTimePresent);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  createTime(l,  bit1_modifyTimePresent);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  createTime(l,  bit1_modifyTimePresent);	  long    l    =    createTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	30	None	replace
231	[BUG]  [BUGGY]  long  l  =  createTime(l,  this);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  createTime(l,  this);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  createTime(l,  this);	  long    l    =    createTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	30	None	replace
232	[BUG]  [BUGGY]  long  l  =  createTime(l,  null);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  createTime(l,  null);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  createTime(l,  null);	  long    l    =    createTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	30	None	replace
233	[BUG]  [BUGGY]  long  l  =  createTime(l,  false);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  createTime(l,  false);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  createTime(l,  false);	  long    l    =    createTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	30	None	replace
234	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l,  false);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  unixTimeToZipLong(l,  false);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  unixTimeToZipLong(l,  false);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	98	None	replace
235	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l,  true);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  unixTimeToZipLong(l,  true);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  unixTimeToZipLong(l,  true);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	98	None	replace
236	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l,  X5455_ExtendedTimestamp);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  unixTimeToZipLong(l,  X5455_ExtendedTimestamp);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  unixTimeToZipLong(l,  X5455_ExtendedTimestamp);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	98	None	replace
237	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l,  this);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  unixTimeToZipLong(l,  this);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  unixTimeToZipLong(l,  this);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	98	None	replace
238	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l,  this.accessTime);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  unixTimeToZipLong(l,  this.accessTime);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  unixTimeToZipLong(l,  this.accessTime);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	98	None	replace
239	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l,  null);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  unixTimeToZipLong(l,  null);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  unixTimeToZipLong(l,  null);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	98	None	replace
240	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x2000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x2000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x2000000000L;    	compilable	  [FE]  AssertionError  	112	1	replace
241	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x2000000000L;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x2000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x2000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x2000000000L;    	compilable	  [FE]  AssertionError  	112	1	replace
242	[BUG]  [BUGGY]  final  long  l  =  0x1000000000L;  final  long  TWO_TO_32  =  0x2000000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x1000000000L;  final  long  TWO_TO_32  =  0x2000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x1000000000L;  final  long  TWO_TO_32  =  0x2000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x2000000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	112	None	replace
243	[BUG]  [BUGGY]  final  long  tWO_TO_32  =  0x2000000000L;  [CE]  cannot  find  symbol  TWO_TO_32  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  tWO_TO_32  =  0x2000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  tWO_TO_32  =  0x2000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x2000000000L;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	112	None	replace
244	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x2000000000L;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x2000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x2000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x2000000000L;    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
245	[BUG]  [BUGGY]  long  l  =  getTime().longValue()  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime().longValue()  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime().longValue()  +  1;	  long    l    =    getTime().longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	26	None	replace
246	[BUG]  [BUGGY]  long  l  =  getTime().longValue()  +  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime().longValue()  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime().longValue()  +  2;	  long    l    =    getTime().longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	26	None	replace
247	[BUG]  [BUGGY]  long  l  =  getTime().longValue()  +  3;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime().longValue()  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime().longValue()  +  3;	  long    l    =    getTime().longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	26	None	replace
248	[BUG]  [BUGGY]  long  l  =  getTime().longValue()  *  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime().longValue()  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime().longValue()  *  2;	  long    l    =    getTime().longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	26	None	replace
249	[BUG]  [BUGGY]  long  l  =  getTime().longValue()  +  4;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime().longValue()  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime().longValue()  +  4;	  long    l    =    getTime().longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	26	None	replace
250	[BUG]  [BUGGY]  long  l  =  getTime().longValue()  +  1L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime().longValue()  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime().longValue()  +  1L;	  long    l    =    getTime().longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	26	None	replace
251	[BUG]  [BUGGY]  long  l  =  getLocalMillis();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getLocalMillis();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getLocalMillis();	  long    l    =    getTime();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	29	None	replace
252	[BUG]  [BUGGY]  long  l  =  getTime()  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime()  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime()  +  1;	  long    l    =    getTime();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	29	None	replace
253	[BUG]  [BUGGY]  long  l  =  getTimeInMillis();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTimeInMillis();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTimeInMillis();	  long    l    =    getTime();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	29	None	replace
254	[BUG]  [BUGGY]  long  l  =  getLongTime();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getLongTime();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getLongTime();	  long    l    =    getTime();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	29	None	replace
255	[BUG]  [BUGGY]  long  l  =  getTime()  -  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime()  -  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime()  -  1;	  long    l    =    getTime();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	29	None	replace
256	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    static    final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
257	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }	  final    long    TWO_TO_32    =    l;    static    final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
258	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  be  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  expression  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  be  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  be  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    static    final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
259	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  not  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  not  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  not  fit  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    static    final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
260	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    static    final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
261	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.longValue();  [CE]  possible  loss  of  precision  [FE]        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.longValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  possible  loss  of  precision	116	None	replace
262	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.longValue();  [CE]  possible  loss  of  precision  [FE]          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.longValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  possible  loss  of  precision	116	None	replace
263	[BUG]  [BUGGY]  final  byte  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.longValue();  [CE]  possible  loss  of  precision  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  byte  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  byte  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.longValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  possible  loss  of  precision	116	None	replace
264	[BUG]  [BUGGY]  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);  [CE]  ';'  expected  [FE]                    IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l);    	non-compiled	[CE]  ';'  expected	7	None	replace
265	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l);  [CE]  ';'  expected  [FE]                      IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l);	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l);    	non-compiled	[CE]  ';'  expected	7	None	replace
266	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);  [CE]  ';'  expected  [FE]                        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l);    	non-compiled	[CE]  ';'  expected	7	None	replace
267	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  [CE]  possible  loss  of  precision  [FE]                          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l);    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
268	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);  [CE]  illegal  start  of  expression  [FE]                            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
269	[BUG]  [BUGGY]  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);  [CE]  ';'  expected  [FE]                              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l);    	non-compiled	[CE]  ';'  expected	7	None	replace
270	[BUG]  [BUGGY]  null  TWO_TO_32  =  0x1000000000L;  static  final  long  TWO_TO_32  =  0x1000000000L;  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  null  TWO_TO_32  =  0x1000000000L;  static  final  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	null  TWO_TO_32  =  0x1000000000L;  static  final  long  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    static    final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  not  a  statement	21	None	replace
271	[BUG]  [BUGGY]  static  final  int  TWO_TO_32  =  0x1000000000L;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  int  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  int  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    static    final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
272	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x10000000000L;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x10000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x10000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    static    final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
273	[BUG]  [BUGGY]  null  TWO_TO_32  =  0x1000000000L;  static  final  int  TWO_TO_32  =  0x1000000000L;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  null  TWO_TO_32  =  0x1000000000L;  static  final  int  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	null  TWO_TO_32  =  0x1000000000L;  static  final  int  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    static    final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  not  a  statement	21	None	replace
274	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  final  Long  TWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  final  Long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    Long    TWO_TO_32    =    0x100000000L;    final  Long  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	89	None	add
275	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  final  Long  TWO_TO_32  =  0x1000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  final  Long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    Long    TWO_TO_32    =    0x100000000L;    final  Long  TWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	89	None	add
276	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  final  long  TWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  final  long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    Long    TWO_TO_32    =    0x100000000L;    final  long  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	89	None	add
277	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  Final  Long  TWO_TO_32  =  0x100000000L;  [CE]  ';'  expected  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  Final  Long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    Long    TWO_TO_32    =    0x100000000L;    Final  Long  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  ';'  expected	89	None	add
278	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    Long    TWO_TO_32    =    0x100000000L;    long  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	89	None	add
279	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  0x100000000;  [CE]  integer  number  too  large:  100000000  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  Long  TWO_TO_32  =  0x100000000;	  final    Long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  integer  number  too  large:  100000000	90	None	replace
280	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  Long  TWO_TO_32  =  0x100000000L  +  1;	  final    Long    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	90	1	replace
281	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  Long  TWO_TO_32  =  0x100000000L  +  1;	  final    Long    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	90	1	replace
282	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  Long  TWO_TO_32  =  0x100000000L  +  1L;	  final    Long    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	90	1	replace
283	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L  +  1L;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  Long  TWO_TO_32  =  0x100000000L  +  1L;	  final    Long    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	90	1	replace
284	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x100000000L  +  2L;	  long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	120	1	replace
285	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  +  2L;	  long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	120	1	replace
286	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  *  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x100000000L  *  1L;	  long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	120	1	replace
287	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  *  1L;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  *  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  *  1L;	  long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	120	1	replace
288	[BUG]  [BUGGY]  long  l  =  0x100000000L  +  1L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L  +  1L;	  long    TWO_TO_32    =    0x100000000L    +    1L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	120	None	replace
289	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  /  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x100000000L  /  1L;	  long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	120	1	replace
290	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  /  1L;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  /  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  /  1L;	  long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	120	1	replace
291	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x100000000L  +  1L  +  1L;	  long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	120	1	replace
292	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L  +  1L;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  +  1L  +  1L;	  long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	120	1	replace
293	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x200000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x200000000L;	  final    short    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	123	1	replace
294	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x200000000L;  [FE]  AssertionError  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x200000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x200000000L;	  final    short    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	123	1	replace
295	[BUG]  [BUGGY]  final  short  TWO_TO_32  =  0x1000000000L;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  short  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  short  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    short    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  possible  loss  of  precision	24	None	replace
296	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  *  1;	  final    long    TWO_TO_32    =    l    +    1;    	compilable	  [FE]  IllegalArgumentException  	73	4	replace
297	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  *  1;  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  *  1;	  final    long    TWO_TO_32    =    l    +    1;    	compilable	  [FE]  IllegalArgumentException  	73	4	replace
298	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l  +  1;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l  +  1;	  final    long    TWO_TO_32    =    l    +    1;    	non-compiled	[CE]  possible  loss  of  precision	73	None	replace
299	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  /  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  /  1;	  final    long    TWO_TO_32    =    l    +    1;    	compilable	  [FE]  IllegalArgumentException  	73	4	replace
300	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  /  1;  [FE]  IllegalArgumentException  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  /  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  /  1;	  final    long    TWO_TO_32    =    l    +    1;    	compilable	  [FE]  IllegalArgumentException  	73	4	replace
301	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000  +  1;  [CE]  integer  number  too  large:  100000000  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000  +  1;	  final    long    TWO_TO_32    =    0x100000000    +    1;    	non-compiled	[CE]  integer  number  too  large:  100000000	58	None	replace
302	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000  +  1L;  [CE]  integer  number  too  large:  100000000  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000  +  1L;	  final    long    TWO_TO_32    =    0x100000000    +    1;    	non-compiled	[CE]  integer  number  too  large:  100000000	58	None	replace
303	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000  +  2;  [CE]  integer  number  too  large:  100000000  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000  +  2;	  final    long    TWO_TO_32    =    0x100000000    +    1;    	non-compiled	[CE]  integer  number  too  large:  100000000	58	None	replace
304	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    1;    final  long  TWO_TO_32  =  0x1000000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	33	None	add
305	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  final  long  TWO_TO_32  =  0x10000000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  final  long  TWO_TO_32  =  0x10000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    1;    final  long  TWO_TO_32  =  0x10000000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	33	None	add
306	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    1;    final  long  TWO_TO_32  =  0x1000000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	33	None	add
307	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  static  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  static  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    1;    static  final  long  TWO_TO_32  =  0x1000000000L  +  1;	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
308	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  Final  long  TWO_TO_32  =  0x1000000000L  +  1;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  Final  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    1;    Final  long  TWO_TO_32  =  0x1000000000L  +  1;	  	non-compiled	[CE]  not  a  statement	33	None	add
309	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  long  TWO_TO_32  =  0x1000000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    1;    long  TWO_TO_32  =  0x1000000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	33	None	add
310	[BUG]  [BUGGY]  static  final  int  TWO_TO_32  =  0x100000000;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  int  TWO_TO_32  =  0x100000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  int  TWO_TO_32  =  0x100000000;	  static    final    long    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
311	[BUG]  [BUGGY]  static  final  long  l  =  0x100000000;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  l  =  0x100000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  l  =  0x100000000;	  static    final    long    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
312	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x100000000  +  1;	  static    final    long    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
313	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  long  TWO_TO_32  =  0x100000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    2;    long  TWO_TO_32  =  0x100000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	67	None	add
314	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  Long  TWO_TO_32  =  0x100000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  Long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    2;    Long  TWO_TO_32  =  0x100000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	67	None	add
315	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    2;    long  TWO_TO_32  =  0x100000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	67	None	add
316	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  long  TWO_TO_32  =  0x1000000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  long  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    2;    long  TWO_TO_32  =  0x1000000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	67	None	add
317	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  long  l  =  0x100000000L  +  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  long  l  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    2;    long  l  =  0x100000000L  +  2;	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	67	None	add
318	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l.longValue()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l.longValue()  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l.longValue()  +  1;	  static    final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
319	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l.longValue()  +  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l.longValue()  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l.longValue()  +  2;	  static    final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
320	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l.doubleValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l.doubleValue();	  static    final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
321	[BUG]  [BUGGY]  static  final  int  TWO_TO_32  =  l.longValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  int  TWO_TO_32  =  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  int  TWO_TO_32  =  l.longValue();	  static    final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
322	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l.longValue()  *  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l.longValue()  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l.longValue()  *  2;	  static    final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
323	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l.length();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l.length();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l.length();	  static    final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
324	[BUG]  [BUGGY]  static  final  int  TWO_TO_32  =  l;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  int  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  int  TWO_TO_32  =  l;	  static    final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
325	[BUG]  [BUGGY]  static  final  long  l  =  l;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  l  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  l  =  l;	  static    final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
326	[BUG]  [BUGGY]  long  l  =  0x100000000L;  long  TWO_TO_32  =  0x100000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L;  long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L;  long  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	8	None	replace
327	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  final  long  TWO_TO_32  =  0x100000000L  +  4;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  final  long  TWO_TO_32  =  0x100000000L  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    4;    final  long  TWO_TO_32  =  0x100000000L  +  4;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	110	None	add
328	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  final  long  TWO_TO_32  =  0x1000000000L  +  4;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  final  long  TWO_TO_32  =  0x1000000000L  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    4;    final  long  TWO_TO_32  =  0x1000000000L  +  4;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	110	None	add
329	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  static  final  long  TWO_TO_32  =  0x100000000L  +  4;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  static  final  long  TWO_TO_32  =  0x100000000L  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    4;    static  final  long  TWO_TO_32  =  0x100000000L  +  4;	  	non-compiled	[CE]  illegal  start  of  expression	110	None	add
330	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  long  TWO_TO_32  =  0x100000000L  +  4;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  long  TWO_TO_32  =  0x100000000L  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    4;    long  TWO_TO_32  =  0x100000000L  +  4;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	110	None	add
331	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  final  long  TWO_TO_32  =  0x100000000L  +  5;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  final  long  TWO_TO_32  =  0x100000000L  +  5;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    4;    final  long  TWO_TO_32  =  0x100000000L  +  5;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	110	None	add
332	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  *  2;	  final    long    TWO_TO_32    =    l    +    2;    	compilable	  [FE]  AssertionError  	42	1	replace
333	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  *  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  *  2;	  final    long    TWO_TO_32    =    l    +    2;    	compilable	  [FE]  AssertionError  	42	1	replace
334	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l  +  2;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l  +  2;	  final    long    TWO_TO_32    =    l    +    2;    	non-compiled	[CE]  possible  loss  of  precision	42	None	replace
335	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  /  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  /  2;	  final    long    TWO_TO_32    =    l    +    2;    	compilable	  [FE]  IllegalArgumentException  	42	4	replace
336	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  /  2;  [FE]  IllegalArgumentException  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  /  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  /  2;	  final    long    TWO_TO_32    =    l    +    2;    	compilable	  [FE]  IllegalArgumentException  	42	4	replace
337	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  2L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  +  2L;	  final    long    TWO_TO_32    =    l    +    2;    	compilable	  [FE]  AssertionError  	42	1	replace
338	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  2L;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  2L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  +  2L;	  final    long    TWO_TO_32    =    l    +    2;    	compilable	  [FE]  AssertionError  	42	1	replace
339	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  /  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  /  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  /  DateTimeConstants.MILLIS_PER_MINUTE;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	122	None	replace
340	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE  +  1;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	122	None	replace
341	[BUG]  [BUGGY]  final  int  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	122	None	replace
342	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE  +  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE  +  2;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	122	None	replace
343	[BUG]  [BUGGY]  final  long  l  =  0x1000000000L  /  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x1000000000L  /  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x1000000000L  /  DateTimeConstants.MILLIS_PER_MINUTE;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	122	None	replace
344	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  -  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  -  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  -  DateTimeConstants.MILLIS_PER_MINUTE;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	122	None	replace
345	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  System.currentTimeMillis()  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  System.currentTimeMillis()  +  1;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	28	None	replace
346	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  -  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  System.currentTimeMillis()  -  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  System.currentTimeMillis()  -  1;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	28	None	replace
347	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  +  1L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  System.currentTimeMillis()  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  System.currentTimeMillis()  +  1L;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	28	None	replace
348	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  +  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  System.currentTimeMillis()  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  System.currentTimeMillis()  +  2;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	28	None	replace
349	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  /  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  System.currentTimeMillis()  /  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  System.currentTimeMillis()  /  2;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	28	None	replace
350	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  /  1024;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  System.currentTimeMillis()  /  1024;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  System.currentTimeMillis()  /  1024;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	28	None	replace
351	[BUG]  [BUGGY]  final  int  l  =  0x100000000F;  [CE]  integer  number  too  large:  100000000F  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  l  =  0x100000000F;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  l  =  0x100000000F;	  final    long    l    =    0x100000000F;    	non-compiled	[CE]  integer  number  too  large:  100000000F	71	None	replace
352	[BUG]  [BUGGY]  final  long  l  =  0x100000000F  +  1;  [CE]  integer  number  too  large:  100000000F  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000F  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000F  +  1;	  final    long    l    =    0x100000000F;    	non-compiled	[CE]  integer  number  too  large:  100000000F	71	None	replace
353	[BUG]  [BUGGY]  final  long  l  =  0x100000000F  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  integer  number  too  large:  100000000F  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000F  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000F  *  DateTimeConstants.MILLIS_PER_SECOND;	  final    long    l    =    0x100000000F;    	non-compiled	[CE]  integer  number  too  large:  100000000F	71	None	replace
354	[BUG]  [BUGGY]  final  long  l  =  0x100000000F  +  1L;  [CE]  integer  number  too  large:  100000000F  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000F  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000F  +  1L;	  final    long    l    =    0x100000000F;    	non-compiled	[CE]  integer  number  too  large:  100000000F	71	None	replace
355	[BUG]  [BUGGY]  final  long  l  =  0x100000000F  *  DateTimeConstants.MILLIS_PER_LONG;  [CE]  integer  number  too  large:  100000000F  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000F  *  DateTimeConstants.MILLIS_PER_LONG;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000F  *  DateTimeConstants.MILLIS_PER_LONG;	  final    long    l    =    0x100000000F;    	non-compiled	[CE]  integer  number  too  large:  100000000F	71	None	replace
356	[BUG]  [BUGGY]  static  final  Long  TWO_TO_32  =  0x100000000L;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  Long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  Long  TWO_TO_32  =  0x100000000L;	  static    final    int    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
357	[BUG]  [BUGGY]  static  final  byte  TWO_TO_32  =  0x100000000L;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  byte  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  byte  TWO_TO_32  =  0x100000000L;	  static    final    int    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
358	[BUG]  [BUGGY]  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND;	  long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	63	None	replace
359	[BUG]  [BUGGY]  long  l  =  0x100000000L  *  DateTimeConstants.DEFAULT_TIME_BIT;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L  *  DateTimeConstants.DEFAULT_TIME_BIT;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L  *  DateTimeConstants.DEFAULT_TIME_BIT;	  long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	63	None	replace
360	[BUG]  [BUGGY]  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE;	  long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	63	None	replace
361	[BUG]  [BUGGY]  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_DECEMBER;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_DECEMBER;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_DECEMBER;	  long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	63	None	replace
362	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  3;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  3;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    final    long    TWO_TO_32    =    0x100000000L    +    3;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	56	None	replace
363	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  3;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  3;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    final    long    TWO_TO_32    =    0x100000000L    +    3;    	non-compiled	[CE]  possible  loss  of  precision	56	None	replace
364	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  2;  final  int  TWO_TO_32  =  0x100000000L  +  3;  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  2;  final  int  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  2;  final  int  TWO_TO_32  =  0x100000000L  +  3;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    final    long    TWO_TO_32    =    0x100000000L    +    3;    	non-compiled	[CE]  possible  loss  of  precision	56	None	replace
365	[BUG]  [BUGGY]  long  l  =  0x100000000L;  long  TWO_TO_32  =  0x1000000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L;  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L;  long  TWO_TO_32  =  0x1000000000L;	  long    TWO_TO_32    =    0x100000000L;    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	10	None	replace
366	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x1000000000L;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x1000000000L;	  long    TWO_TO_32    =    0x100000000L;    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
367	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000L;  int  TWO_TO_32  =  0x1000000000L;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x100000000L;  int  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000L;  int  TWO_TO_32  =  0x1000000000L;	  long    TWO_TO_32    =    0x100000000L;    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
368	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x10000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x10000000000L;	  long    TWO_TO_32    =    0x100000000L;    long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	10	1	replace
369	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x10000000000L;  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x10000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x10000000000L;	  long    TWO_TO_32    =    0x100000000L;    long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	10	1	replace
370	[BUG]  [BUGGY]  long  l  =  0x100000000L;  long  TWO_TO_32  =  0x10000000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L;  long  TWO_TO_32  =  0x10000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L;  long  TWO_TO_32  =  0x10000000000L;	  long    TWO_TO_32    =    0x100000000L;    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	10	None	replace
371	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  l  +  1;	  long    TWO_TO_32    =    l;    	compilable	  [FE]  AssertionError  	65	1	replace
372	[BUG]  [BUGGY]  long  TWO_TO_32  =  l  +  1;  [FE]  AssertionError  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  l  +  1;	  long    TWO_TO_32    =    l;    	compilable	  [FE]  AssertionError  	65	1	replace
373	[BUG]  [BUGGY]  long  TWO_TO_32  =  l.longValue();  [CE]  long  cannot  be  dereferenced  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  l.longValue();	  long    TWO_TO_32    =    l;    	non-compiled	[CE]  long  cannot  be  dereferenced	65	None	replace
374	[BUG]  [BUGGY]  long  l  =  l;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  l;	  long    TWO_TO_32    =    l;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	65	None	replace
375	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  l  +  1L;	  long    TWO_TO_32    =    l;    	compilable	  [FE]  AssertionError  	65	1	replace
376	[BUG]  [BUGGY]  long  TWO_TO_32  =  l  +  1L;  [FE]  AssertionError  [FE]          IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  l  +  1L;	  long    TWO_TO_32    =    l;    	compilable	  [FE]  AssertionError  	65	1	replace
377	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  l  +  3;	  long    TWO_TO_32    =    l;    	compilable	  [FE]  AssertionError  	65	1	replace
378	[BUG]  [BUGGY]  long  TWO_TO_32  =  l  +  3;  [FE]  AssertionError  [FE]            IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  l  +  3;	  long    TWO_TO_32    =    l;    	compilable	  [FE]  AssertionError  	65	1	replace
379	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  Long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	Long  TWO_TO_32  =  0x100000000L;	  int    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	66	1	replace
380	[BUG]  [BUGGY]  Long  TWO_TO_32  =  0x100000000L;  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  Long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	Long  TWO_TO_32  =  0x100000000L;	  int    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	66	1	replace
381	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  double  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	double  TWO_TO_32  =  0x100000000L;	  int    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	66	1	replace
382	[BUG]  [BUGGY]  double  TWO_TO_32  =  0x100000000L;  [FE]  AssertionError  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  double  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	double  TWO_TO_32  =  0x100000000L;	  int    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	66	1	replace
383	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  float  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	float  TWO_TO_32  =  0x100000000L;	  int    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	66	1	replace
384	[BUG]  [BUGGY]  float  TWO_TO_32  =  0x100000000L;  [FE]  AssertionError  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  float  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	float  TWO_TO_32  =  0x100000000L;	  int    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	66	1	replace
385	[BUG]  [BUGGY]  byte  TWO_TO_32  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  byte  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	byte  TWO_TO_32  =  0x100000000L;	  int    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  possible  loss  of  precision	66	None	replace
386	[BUG]  [BUGGY]  long  l  =  0x100000000L;  Long  TWO_TO_32  =  0x100000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L;  Long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L;  Long  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    Long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	9	None	replace
387	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000L;  Long  TWO_TO_32  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x100000000L;  Long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000L;  Long  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    Long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
388	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000L;  Integer  TWO_TO_32  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x100000000L;  Integer  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000L;  Integer  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    Long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
389	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  *  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  *  1L;	  final    long    TWO_TO_32    =    l    +    1L;    	compilable	  [FE]  IllegalArgumentException  	83	4	replace
390	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  *  1L;  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  *  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  *  1L;	  final    long    TWO_TO_32    =    l    +    1L;    	compilable	  [FE]  IllegalArgumentException  	83	4	replace
391	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l  +  1L;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l  +  1L;	  final    long    TWO_TO_32    =    l    +    1L;    	non-compiled	[CE]  possible  loss  of  precision	83	None	replace
392	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  final  long  TWO_TO_32  =  0x1000000000L  +  l;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  final  long  TWO_TO_32  =  0x1000000000L  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    l;    final  long  TWO_TO_32  =  0x1000000000L  +  l;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	108	None	add
393	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  final  long  TWO_TO_32  =  0x1000000000L  +  l);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  final  long  TWO_TO_32  =  0x1000000000L  +  l);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    l;    final  long  TWO_TO_32  =  0x1000000000L  +  l);	  	non-compiled	[CE]  ';'  expected	108	None	add
394	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  final  long  TWO_TO_32  =  0x10000000000L  +  l;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  final  long  TWO_TO_32  =  0x10000000000L  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    l;    final  long  TWO_TO_32  =  0x10000000000L  +  l;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	108	None	add
395	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  final  long  TWO_TO_32  =  0x1000000000L  +  l.longValue();  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  final  long  TWO_TO_32  =  0x1000000000L  +  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    l;    final  long  TWO_TO_32  =  0x1000000000L  +  l.longValue();	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	108	None	add
396	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  final  long  TWO_TO_32  =  0x1000000000L  +  l.length;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  final  long  TWO_TO_32  =  0x1000000000L  +  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    l;    final  long  TWO_TO_32  =  0x1000000000L  +  l.length;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	108	None	add
397	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  static  final  long  TWO_TO_32  =  0x1000000000L  +  l;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  static  final  long  TWO_TO_32  =  0x1000000000L  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    l;    static  final  long  TWO_TO_32  =  0x1000000000L  +  l;	  	non-compiled	[CE]  illegal  start  of  expression	108	None	add
398	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x1000000000;  [CE]  integer  number  too  large:  1000000000  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x1000000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x1000000000;	  final    long    TWO_TO_32    =    0x1000000000;    	non-compiled	[CE]  integer  number  too  large:  1000000000	35	None	replace
399	[BUG]  [BUGGY]  final  long  l  =  0x1000000000;  [CE]  integer  number  too  large:  1000000000  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x1000000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x1000000000;	  final    long    TWO_TO_32    =    0x1000000000;    	non-compiled	[CE]  integer  number  too  large:  1000000000	35	None	replace
400	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x1000000000;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x1000000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x1000000000;	  final    long    TWO_TO_32    =    0x1000000000;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
401	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000  +  1;  [CE]  integer  number  too  large:  1000000000  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000  +  1;	  final    long    TWO_TO_32    =    0x1000000000;    	non-compiled	[CE]  integer  number  too  large:  1000000000	35	None	replace
402	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l.getValue();  [CE]  long  cannot  be  dereferenced  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l.getValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l.getValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	118	None	replace
403	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.getValue();  [CE]  possible  loss  of  precision  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.getValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.getValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getValue();    	non-compiled	[CE]  possible  loss  of  precision	118	None	replace
404	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getValue();  [CE]  possible  loss  of  precision  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getValue();    	non-compiled	[CE]  possible  loss  of  precision	118	None	replace
405	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l.getValue();  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l.getValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l.getValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getValue();    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
406	[BUG]  [BUGGY]  final  byte  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getValue();  [CE]  possible  loss  of  precision  [FE]                    IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  byte  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  byte  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getValue();    	non-compiled	[CE]  possible  loss  of  precision	118	None	replace
407	[BUG]  [BUGGY]  long  TWO_TO_32  =  l.getValue();  [CE]  long  cannot  be  dereferenced  [FE]                      IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l.getValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  l.getValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	118	None	replace
408	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  2;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    final    long    TWO_TO_32    =    0x1000000000L    +    2;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	54	None	replace
409	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  2;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    final    long    TWO_TO_32    =    0x1000000000L    +    2;    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
410	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  2;  final  int  TWO_TO_32  =  0x1000000000L  +  2;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  2;  final  int  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  2;  final  int  TWO_TO_32  =  0x1000000000L  +  2;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    final    long    TWO_TO_32    =    0x1000000000L    +    2;    	non-compiled	[CE]  possible  loss  of  precision	54	None	replace
411	[BUG]  [BUGGY]  long  l  =  Long.parseLong(l  +  1);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  Long.parseLong(l  +  1);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  Long.parseLong(l  +  1);	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	25	None	replace
412	[BUG]  [BUGGY]  long  l  =  Long.parseLong(l)+  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  Long.parseLong(l)+  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  Long.parseLong(l)+  1;	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	25	None	replace
413	[BUG]  [BUGGY]  long  l  =  Long.parseLong(l).longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  Long.parseLong(l).longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  Long.parseLong(l).longValue();	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	25	None	replace
414	[BUG]  [BUGGY]  long  l  =  Long.parseLong(t);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  Long.parseLong(t);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  Long.parseLong(t);	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	25	None	replace
415	[BUG]  [BUGGY]  long  l  =  Long.parseLong(getTime());  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  Long.parseLong(getTime());  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  Long.parseLong(getTime());	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	25	None	replace
416	[BUG]  [BUGGY]  long  l  =  Long.parseLong(tempTime);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  Long.parseLong(tempTime);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  Long.parseLong(tempTime);	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	25	None	replace
417	[BUG]  [BUGGY]  final  int  l  =  0x100000000L  +  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  l  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  l  =  0x100000000L  +  2;	  final    long    l    =    0x100000000L    +    2;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	46	None	replace
418	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  /  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  /  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  /  2;	  final    long    l    =    0x100000000L    +    2;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	46	None	replace
419	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  3;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  3;	  final    long    l    =    0x100000000L    +    2;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	46	None	replace
420	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  +  2L;	  final    long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	75	1	replace
421	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  +  2L;	  final    long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	75	1	replace
422	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  /  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  /  1L;	  final    long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	75	1	replace
423	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  /  1L;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  /  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  /  1L;	  final    long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	75	1	replace
424	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  *  1L;	  final    long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	75	1	replace
425	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1L;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  *  1L;	  final    long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	75	1	replace
426	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  1L;  [CE]  possible  loss  of  precision  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  1L;	  final    long    TWO_TO_32    =    0x100000000L    +    1L;    	non-compiled	[CE]  possible  loss  of  precision	75	None	replace
427	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    1L;    final  long  TWO_TO_32  =  0x1000000000L  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	106	None	add
428	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  final  long  TWO_TO_32  =  0x10000000000L  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  final  long  TWO_TO_32  =  0x10000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    1L;    final  long  TWO_TO_32  =  0x10000000000L  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	106	None	add
429	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  static  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  static  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    1L;    static  final  long  TWO_TO_32  =  0x1000000000L  +  1L;	  	non-compiled	[CE]  illegal  start  of  expression	106	None	add
430	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  final  short  TWO_TO_32  =  0x1000000000L  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  final  short  TWO_TO_32  =  0x1000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    1L;    final  short  TWO_TO_32  =  0x1000000000L  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	106	None	add
431	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  Final  long  TWO_TO_32  =  0x1000000000L  +  1L;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  Final  long  TWO_TO_32  =  0x1000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    1L;    Final  long  TWO_TO_32  =  0x1000000000L  +  1L;	  	non-compiled	[CE]  not  a  statement	106	None	add
432	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  long  TWO_TO_32  =  0x100000000L  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  long  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    1L;    long  TWO_TO_32  =  0x100000000L  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	119	None	add
433	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  Long  TWO_TO_32  =  0x100000000L  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  Long  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    1L;    Long  TWO_TO_32  =  0x100000000L  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	119	None	add
434	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  long  TWO_TO_32  =  0x1000000000L  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  long  TWO_TO_32  =  0x1000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    1L;    long  TWO_TO_32  =  0x1000000000L  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	119	None	add
435	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  long  l  =  0x100000000L  +  1L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  long  l  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    1L;    long  l  =  0x100000000L  +  1L;	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	119	None	add
436	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  short  TWO_TO_32  =  0x100000000L  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  short  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    1L;    short  TWO_TO_32  =  0x100000000L  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	119	None	add
437	[BUG]  [BUGGY]  final  short  TWO_TO_32  =  0x100000000L  +  1;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  short  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  short  TWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    final    short    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  possible  loss  of  precision	97	None	replace
438	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000L;  long  l  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x100000000L;  long  l  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000L;  long  l  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    long    l    =    0x100000000L;    	non-compiled	[CE]  possible  loss  of  precision	95	None	replace
439	[BUG]  [BUGGY]  short  TWO_TO_32  =  0x100000000L;  long  l  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  short  TWO_TO_32  =  0x100000000L;  long  l  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	short  TWO_TO_32  =  0x100000000L;  long  l  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    long    l    =    0x100000000L;    	non-compiled	[CE]  possible  loss  of  precision	95	None	replace
440	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000L;  int  l  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x100000000L;  int  l  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000L;  int  l  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    long    l    =    0x100000000L;    	non-compiled	[CE]  possible  loss  of  precision	95	None	replace
441	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000;  long  l  =  0x100000000L;  [CE]  integer  number  too  large:  100000000  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000;  long  l  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000;  long  l  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    long    l    =    0x100000000L;    	non-compiled	[CE]  integer  number  too  large:  100000000	95	None	replace
442	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  long  l  =  0x100000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  long  l  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  +  1;  long  l  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	95	None	replace
443	[BUG]  [BUGGY]  final  short  TWO_TO_32  =  l;  [CE]  possible  loss  of  precision  [FE]                  IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  short  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  short  TWO_TO_32  =  l;	  final    long    TWO_TO_32    =    l;    final    short    TWO_TO_32    =    l;    	non-compiled	[CE]  possible  loss  of  precision	6	None	replace
444	[BUG]  [BUGGY]  long  l  =  getTime(l).doubleValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(l).doubleValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l).doubleValue();	  long    l    =    getTime(l).longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	125	None	replace
445	[BUG]  [BUGGY]  long  l  =  getTime(l).longValue()  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(l).longValue()  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l).longValue()  +  1;	  long    l    =    getTime(l).longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	125	None	replace
446	[BUG]  [BUGGY]  long  l  =  getTime(Locale.getDefault()).longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(Locale.getDefault()).longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(Locale.getDefault()).longValue();	  long    l    =    getTime(l).longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	125	None	replace
447	[BUG]  [BUGGY]  long  l  =  getTime(l).toZipLong();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(l).toZipLong();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l).toZipLong();	  long    l    =    getTime(l).longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	125	None	replace
448	[BUG]  [BUGGY]  long  l  =  getTime(l).longValue().longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(l).longValue().longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l).longValue().longValue();	  long    l    =    getTime(l).longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	125	None	replace
449	[BUG]  [BUGGY]  long  l  =  getTime(l).unixTimeToZipLong();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(l).unixTimeToZipLong();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l).unixTimeToZipLong();	  long    l    =    getTime(l).longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	125	None	replace
450	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x100000000L  *  1;	  long    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	62	1	replace
451	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  *  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  *  1;	  long    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	62	1	replace
452	[BUG]  [BUGGY]  static  final  long  l  =  0x1000000000L;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  l  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  l  =  0x1000000000L;	  static    final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
453	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  4;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  4;	  final    long    TWO_TO_32    =    0x100000000L    +    4;    	non-compiled	[CE]  possible  loss  of  precision	111	None	replace
454	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  +  4;	  final    long    TWO_TO_32    =    0x100000000L    +    4;    	compilable	  [FE]  AssertionError  	111	1	replace
455	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  4;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  +  4;	  final    long    TWO_TO_32    =    0x100000000L    +    4;    	compilable	  [FE]  AssertionError  	111	1	replace
456	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l.getLongValue();  [CE]  long  cannot  be  dereferenced  [FE]          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l.getLongValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l.getLongValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getLongValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	117	None	replace
457	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.getLongValue();  [CE]  possible  loss  of  precision  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.getLongValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.getLongValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getLongValue();    	non-compiled	[CE]  possible  loss  of  precision	117	None	replace
458	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getLongValue();  [CE]  possible  loss  of  precision  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getLongValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getLongValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getLongValue();    	non-compiled	[CE]  possible  loss  of  precision	117	None	replace
459	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l.getLongValue();  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l.getLongValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l.getLongValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getLongValue();    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
460	[BUG]  [BUGGY]  long  TWO_TO_32  =  l.getLongValue();  [CE]  long  cannot  be  dereferenced  [FE]                  IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l.getLongValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  l.getLongValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getLongValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	117	None	replace
461	[BUG]  [BUGGY]  final  long  tWO_TO_32  =  l.getLongValue();  [CE]  long  cannot  be  dereferenced  [FE]                    IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  tWO_TO_32  =  l.getLongValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  tWO_TO_32  =  l.getLongValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getLongValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	117	None	replace
462	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  final  long  TWO_TO_32  =  l  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  final  long  TWO_TO_32  =  l  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1L;    final  long  TWO_TO_32  =  l  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	82	None	add
463	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  final  short  TWO_TO_32  =  l  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  final  short  TWO_TO_32  =  l  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1L;    final  short  TWO_TO_32  =  l  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	82	None	add
464	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  static  final  long  TWO_TO_32  =  l  +  1L;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  static  final  long  TWO_TO_32  =  l  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1L;    static  final  long  TWO_TO_32  =  l  +  1L;	  	non-compiled	[CE]  illegal  start  of  expression	82	None	add
465	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  final  int  TWO_TO_32  =  l  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  final  int  TWO_TO_32  =  l  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1L;    final  int  TWO_TO_32  =  l  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	82	None	add
466	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  Final  long  TWO_TO_32  =  l  +  1L;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  Final  long  TWO_TO_32  =  l  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1L;    Final  long  TWO_TO_32  =  l  +  1L;	  	non-compiled	[CE]  not  a  statement	82	None	add
467	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  long  TWO_TO_32  =  l  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  long  TWO_TO_32  =  l  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1L;    long  TWO_TO_32  =  l  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	82	None	add
468	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000  +  l;  [CE]  integer  number  too  large:  100000000  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000  +  l;	  final    long    TWO_TO_32    =    0x100000000    +    l;    	non-compiled	[CE]  integer  number  too  large:  100000000	94	None	replace
469	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  0x100000000;  [CE]  integer  number  too  large:  100000000  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  0x100000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  +  0x100000000;	  final    long    TWO_TO_32    =    0x100000000    +    l;    	non-compiled	[CE]  integer  number  too  large:  100000000	94	None	replace
470	[BUG]  [BUGGY]  final  long  l  =  0x100000000  +  l;  [CE]  integer  number  too  large:  100000000  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000  +  l;	  final    long    TWO_TO_32    =    0x100000000    +    l;    	non-compiled	[CE]  integer  number  too  large:  100000000	94	None	replace
471	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000  +  l.longValue();  [CE]  integer  number  too  large:  100000000  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000  +  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000  +  l.longValue();	  final    long    TWO_TO_32    =    0x100000000    +    l;    	non-compiled	[CE]  integer  number  too  large:  100000000	94	None	replace
472	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000  +  l  +  1;  [CE]  integer  number  too  large:  100000000  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000  +  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000  +  l  +  1;	  final    long    TWO_TO_32    =    0x100000000    +    l;    	non-compiled	[CE]  integer  number  too  large:  100000000	94	None	replace
473	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000  +  l.length;  [CE]  integer  number  too  large:  100000000  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000  +  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000  +  l.length;	  final    long    TWO_TO_32    =    0x100000000    +    l;    	non-compiled	[CE]  integer  number  too  large:  100000000	94	None	replace
474	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    1;    long  TWO_TO_32  =  0x100000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	61	None	add
475	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  Long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  Long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    1;    Long  TWO_TO_32  =  0x100000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	61	None	add
476	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x1000000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    1;    long  TWO_TO_32  =  0x1000000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	61	None	add
477	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  int  TWO_TO_32  =  0x100000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  int  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    1;    int  TWO_TO_32  =  0x100000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	61	None	add
478	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  long  l  =  0x100000000L  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  long  l  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    1;    long  l  =  0x100000000L  +  1;	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	61	None	add
479	[BUG]  [BUGGY]  final  byte  TWO_TO_32  =  0x100000000L  +  1;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  byte  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  byte  TWO_TO_32  =  0x100000000L  +  1;	  final    int    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  possible  loss  of  precision	76	None	replace
480	[BUG]  [BUGGY]  null  TWO_TO_32  =  0x1000000000L;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  null  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	null  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    Final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  not  a  statement	22	None	replace
481	[BUG]  [BUGGY]  long  l  =  this.accessTime.longValue()  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  this.accessTime.longValue()  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  this.accessTime.longValue()  +  1;	  long    l    =    this.accessTime.longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	124	None	replace
482	[BUG]  [BUGGY]  long  l  =  this.accessTime.longValue()  +  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  this.accessTime.longValue()  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  this.accessTime.longValue()  +  2;	  long    l    =    this.accessTime.longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	124	None	replace
483	[BUG]  [BUGGY]  long  l  =  l.longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  l.longValue();	  long    l    =    this.accessTime.longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	124	None	replace
484	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x1000000000L  +  2;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    static    final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
485	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  +  3;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x100000000L  +  3;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    static    final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
486	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  final  long  TWO_TO_32  =  0x100000000L  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  final  long  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    1L;    final  long  TWO_TO_32  =  0x100000000L  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	74	None	add
487	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    1L;    final  long  TWO_TO_32  =  0x1000000000L  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	74	None	add
488	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  final  short  TWO_TO_32  =  0x100000000L  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  final  short  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    1L;    final  short  TWO_TO_32  =  0x100000000L  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	74	None	add
489	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  Final  long  TWO_TO_32  =  0x100000000L  +  1L;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  Final  long  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    1L;    Final  long  TWO_TO_32  =  0x100000000L  +  1L;	  	non-compiled	[CE]  not  a  statement	74	None	add
490	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  final  long  TWO_TO_32  =  0x100000000L  *  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  final  long  TWO_TO_32  =  0x100000000L  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    2;    final  long  TWO_TO_32  =  0x100000000L  *  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	43	None	add
491	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  final  long  TWO_TO_32  =  0x100000000L  *  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  final  long  TWO_TO_32  =  0x100000000L  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    2;    final  long  TWO_TO_32  =  0x100000000L  *  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	43	None	add
492	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  final  long  TWO_TO_32  =  0x1000000000L  *  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  final  long  TWO_TO_32  =  0x1000000000L  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    2;    final  long  TWO_TO_32  =  0x1000000000L  *  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	43	None	add
493	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  final  long  TWO_TO_32  =  0x100000000L  *  3;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  final  long  TWO_TO_32  =  0x100000000L  *  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    2;    final  long  TWO_TO_32  =  0x100000000L  *  3;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	43	None	add
494	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  final  long  TWO_TO_32  =  0x100000000L  *  4;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  final  long  TWO_TO_32  =  0x100000000L  *  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    2;    final  long  TWO_TO_32  =  0x100000000L  *  4;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	43	None	add
495	[BUG]  [BUGGY]  long  l  =  getTime(l)+  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(l)+  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l)+  1;	  long    l    =    getTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	99	None	replace
496	[BUG]  [BUGGY]  long  l  =  getTime(l.longValue());  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(l.longValue());  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l.longValue());	  long    l    =    getTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	99	None	replace
497	[BUG]  [BUGGY]  long  l  =  getTime(l  +  1);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(l  +  1);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l  +  1);	  long    l    =    getTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	99	None	replace
498	[BUG]  [BUGGY]  long  l  =  getTime(l)-  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(l)-  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l)-  1;	  long    l    =    getTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	99	None	replace
499	[BUG]  [BUGGY]  static  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND;	  static    final    long    l    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
500	[BUG]  [BUGGY]  static  final  long  l  =  0x100000000L  *  Long.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  l  =  0x100000000L  *  Long.MAX_VALUE;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  l  =  0x100000000L  *  Long.MAX_VALUE;	  static    final    long    l    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
501	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  Long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	Long  TWO_TO_32  =  0x100000000L  +  1;	  int    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	114	1	replace
502	[BUG]  [BUGGY]  Long  TWO_TO_32  =  0x100000000L  +  1;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  Long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	Long  TWO_TO_32  =  0x100000000L  +  1;	  int    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	114	1	replace
503	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  double  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	double  TWO_TO_32  =  0x100000000L  +  1;	  int    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	114	1	replace
504	[BUG]  [BUGGY]  double  TWO_TO_32  =  0x100000000L  +  1;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  double  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	double  TWO_TO_32  =  0x100000000L  +  1;	  int    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	114	1	replace
505	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  float  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	float  TWO_TO_32  =  0x100000000L  +  1;	  int    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	114	1	replace
506	[BUG]  [BUGGY]  float  TWO_TO_32  =  0x100000000L  +  1;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  float  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	float  TWO_TO_32  =  0x100000000L  +  1;	  int    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	114	1	replace
507	[BUG]  [BUGGY]  byte  TWO_TO_32  =  0x100000000L  +  1;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  byte  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	byte  TWO_TO_32  =  0x100000000L  +  1;	  int    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  possible  loss  of  precision	114	None	replace
508	[BUG]  [BUGGY]  final  float  TWO_TO_32  =  0x100000000;  [CE]  integer  number  too  large:  100000000  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  0x100000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  float  TWO_TO_32  =  0x100000000;	  final    float    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  integer  number  too  large:  100000000	88	None	replace
509	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  float  TWO_TO_32  =  0x100000000L  +  1;	  final    float    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	88	1	replace
510	[BUG]  [BUGGY]  final  float  TWO_TO_32  =  0x100000000L  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  float  TWO_TO_32  =  0x100000000L  +  1;	  final    float    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	88	1	replace
511	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    2;    final  long  TWO_TO_32  =  0x1000000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	39	None	add
512	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    2;    final  long  TWO_TO_32  =  0x1000000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	39	None	add
513	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  final  long  TWO_TO_32  =  0x10000000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  final  long  TWO_TO_32  =  0x10000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    2;    final  long  TWO_TO_32  =  0x10000000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	39	None	add
514	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  static  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  static  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    2;    static  final  long  TWO_TO_32  =  0x1000000000L  +  2;	  	non-compiled	[CE]  illegal  start  of  expression	39	None	add
515	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  3;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    2;    final  long  TWO_TO_32  =  0x1000000000L  +  3;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	39	None	add
516	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  long  TWO_TO_32  =  0x1000000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  long  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    2;    long  TWO_TO_32  =  0x1000000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	39	None	add
517	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  final  long  TWO_TO_32  =  0x10000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  final  long  TWO_TO_32  =  0x10000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x10000000000L;    final  long  TWO_TO_32  =  0x10000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	36	None	add
518	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x10000000000L;    final  long  TWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	36	None	add
519	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  static  final  long  TWO_TO_32  =  0x10000000000L;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  static  final  long  TWO_TO_32  =  0x10000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x10000000000L;    static  final  long  TWO_TO_32  =  0x10000000000L;	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
520	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  Final  long  TWO_TO_32  =  0x10000000000L;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  Final  long  TWO_TO_32  =  0x10000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x10000000000L;    Final  long  TWO_TO_32  =  0x10000000000L;	  	non-compiled	[CE]  not  a  statement	36	None	add
521	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  final  int  TWO_TO_32  =  0x10000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  final  int  TWO_TO_32  =  0x10000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x10000000000L;    final  int  TWO_TO_32  =  0x10000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	36	None	add
522	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  long  TWO_TO_32  =  0x10000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  long  TWO_TO_32  =  0x10000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x10000000000L;    long  TWO_TO_32  =  0x10000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	36	None	add
523	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  final  short  TWO_TO_32  =  0x10000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  final  short  TWO_TO_32  =  0x10000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x10000000000L;    final  short  TWO_TO_32  =  0x10000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	36	None	add
524	[BUG]  [BUGGY]  final  int  l  =  0x100000000;  [CE]  integer  number  too  large:  100000000  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  l  =  0x100000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  l  =  0x100000000;	  final    long    l    =    0x100000000;    	non-compiled	[CE]  integer  number  too  large:  100000000	59	None	replace
525	[BUG]  [BUGGY]  final  long  l  =  0x100000000  +  2;  [CE]  integer  number  too  large:  100000000  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000  +  2;	  final    long    l    =    0x100000000;    	non-compiled	[CE]  integer  number  too  large:  100000000	59	None	replace
526	[BUG]  [BUGGY]  final  short  TWO_TO_32  =  0x100000000L  +  2;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  short  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  short  TWO_TO_32  =  0x100000000L  +  2;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    final    short    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  possible  loss  of  precision	100	None	replace
527	[BUG]  [BUGGY]  final  int  l  =  0x1000000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  l  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  l  =  0x1000000000L;	  final    long    l    =    0x1000000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	38	None	replace
528	[BUG]  [BUGGY]  final  long  l  =  0x1000000000L  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x1000000000L  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x1000000000L  *  DateTimeConstants.MILLIS_PER_SECOND;	  final    long    l    =    0x1000000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	38	None	replace
529	[BUG]  [BUGGY]  final  long  l  =  0x1000000000L  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x1000000000L  +  1;	  final    long    l    =    0x1000000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	38	None	replace
530	[BUG]  [BUGGY]  final  long  l  =  0x1000000000L  *  DateTimeConstants.DEFAULT_TIME_BIT;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x1000000000L  *  DateTimeConstants.DEFAULT_TIME_BIT;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x1000000000L  *  DateTimeConstants.DEFAULT_TIME_BIT;	  final    long    l    =    0x1000000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	38	None	replace
531	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x100000000L  +  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x100000000L  +  2;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	49	None	replace
532	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  1;  final  int  TWO_TO_32  =  0x100000000L  +  2;  [CE]  possible  loss  of  precision  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  1;  final  int  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  1;  final  int  TWO_TO_32  =  0x100000000L  +  2;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  possible  loss  of  precision	49	None	replace
533	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x100000000L  +  2;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x100000000L  +  2;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  possible  loss  of  precision	49	None	replace
534	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000;  [CE]  integer  number  too  large:  1000000000  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x1000000000;	  long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  integer  number  too  large:  1000000000	104	None	replace
535	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x1000000000L  +  2;	  long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	104	1	replace
536	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000L  +  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x1000000000L  +  2;	  long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	104	1	replace
537	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l.length;  [CE]  long  cannot  be  dereferenced  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l.length;	  final    long    TWO_TO_32    =    l.length;    	non-compiled	[CE]  long  cannot  be  dereferenced	81	None	replace
538	[BUG]  [BUGGY]  final  long  l  =  l.length;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  l.length;	  final    long    TWO_TO_32    =    l.length;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	81	None	replace
539	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l,  l.length;  [CE]  ';'  expected  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l,  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l,  l.length;	  final    long    TWO_TO_32    =    l.length;    	non-compiled	[CE]  ';'  expected	81	None	replace
540	[BUG]  [BUGGY]  final  long  tWO_TO_32  =  l.length;  [CE]  long  cannot  be  dereferenced  [FE]                  IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  tWO_TO_32  =  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  tWO_TO_32  =  l.length;	  final    long    TWO_TO_32    =    l.length;    	non-compiled	[CE]  long  cannot  be  dereferenced	81	None	replace
541	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  +  4;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  System.currentTimeMillis()  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  System.currentTimeMillis()  +  4;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	28	None	replace
542	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis()  +  10;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  System.currentTimeMillis()  +  10;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  System.currentTimeMillis()  +  10;	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	28	None	replace
543	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l  +  1L;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l  +  1L;	  static    final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
544	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000  /  l;  [CE]  integer  number  too  large:  100000000  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000  /  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000  /  l;	  final    long    TWO_TO_32    =    0x100000000    +    l;    	non-compiled	[CE]  integer  number  too  large:  100000000	94	None	replace
545	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  final  long  l  =  l  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  final  long  l  =  l  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1;    final  long  l  =  l  +  1;	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	72	None	add
546	[BUG]  [BUGGY]  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getValue();  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getValue();    	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	118	None	replace
547	[BUG]  [BUGGY]  final  long  tWO_TO_32  =  l.getValue();  [CE]  long  cannot  be  dereferenced  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  tWO_TO_32  =  l.getValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  tWO_TO_32  =  l.getValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	118	None	replace
548	[BUG]  [BUGGY]  long  l  =  getLocalFile();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getLocalFile();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getLocalFile();	  long    l    =    getTime();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	29	None	replace
549	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  final  long  TWO_TO_32  =  l  +  3;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  final  long  TWO_TO_32  =  l  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    2;    final  long  TWO_TO_32  =  l  +  3;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	41	None	add
550	[BUG]  [BUGGY]  final  long  l  =  0x100000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000L;	  final    long    l    =    0x100000000;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	59	None	replace
551	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    final    long    TWO_TO_32    =    0x1000000000L    +    1;    	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	48	None	replace
552	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  static  final  long  TWO_TO_32  =  0x100000000L  +  1L;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  static  final  long  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    1L;    static  final  long  TWO_TO_32  =  0x100000000L  +  1L;	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
553	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  final  long  TWO_TO_32  =  0x200000000L  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  final  long  TWO_TO_32  =  0x200000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    1L;    final  long  TWO_TO_32  =  0x200000000L  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	74	None	add
554	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  final  long  TWO_TO_32  =  0x100000000L  +  2L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  final  long  TWO_TO_32  =  0x100000000L  +  2L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    1L;    final  long  TWO_TO_32  =  0x100000000L  +  2L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	74	None	add
555	[BUG]  [BUGGY]  final  long  tWO_TO_32  =  l;  [CE]  cannot  find  symbol  TWO_TO_32  [FE]        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  tWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  tWO_TO_32  =  l;	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	1	None	replace
556	[BUG]  [BUGGY]  long  l  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	51	None	replace
557	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  possible  loss  of  precision	51	None	replace
558	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000L  +  1;  int  TWO_TO_32  =  0x100000000L  +  1;  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x100000000L  +  1;  int  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000L  +  1;  int  TWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  possible  loss  of  precision	51	None	replace
559	[BUG]  [BUGGY]  short  TWO_TO_32  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  short  TWO_TO_32  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	short  TWO_TO_32  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  possible  loss  of  precision	51	None	replace
560	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L;  final  int  TWO_TO_32  =  0x2000000000L;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L;  final  int  TWO_TO_32  =  0x2000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x1000000000L;  final  int  TWO_TO_32  =  0x2000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x2000000000L;    	non-compiled	[CE]  possible  loss  of  precision	112	None	replace
561	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x2000000000L;  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x2000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x2000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x2000000000L;    	non-compiled	[CE]  possible  loss  of  precision	112	None	replace
562	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x2000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x2000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x2000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x2000000000L;    	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	112	None	replace
563	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  +  1L  +  1L;	  final    long    TWO_TO_32    =    l    +    1L;    	compilable	  [FE]  AssertionError  	83	1	replace
564	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1L  +  1L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  +  1L  +  1L;	  final    long    TWO_TO_32    =    l    +    1L;    	compilable	  [FE]  AssertionError  	83	1	replace
565	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  32L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  +  32L;	  final    long    TWO_TO_32    =    l    +    1L;    	compilable	  [FE]  AssertionError  	83	1	replace
566	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  32L;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  32L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  +  32L;	  final    long    TWO_TO_32    =    l    +    1L;    	compilable	  [FE]  AssertionError  	83	1	replace
567	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x1000000000L  +  1L;	  long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	104	1	replace
568	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000L  +  1L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x1000000000L  +  1L;	  long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	104	1	replace
569	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  static  final  long  TWO_TO_32  =  0x1000000000L;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  static  final  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x1000000000L;  static  final  long  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    static    final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
570	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  +  1L  +  1L;	  final    long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	75	1	replace
571	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L  +  1L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  +  1L  +  1L;	  final    long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	75	1	replace
572	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  float  TWO_TO_32  =  0x100000000L  +  2;	  final    float    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	88	1	replace
573	[BUG]  [BUGGY]  final  float  TWO_TO_32  =  0x100000000L  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  float  TWO_TO_32  =  0x100000000L  +  2;	  final    float    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	88	1	replace
574	[BUG]  [BUGGY]  long  l  =  getTime(l).unixTimeToZipLong(l);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(l).unixTimeToZipLong(l);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l).unixTimeToZipLong(l);	  long    l    =    getTime(l).longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	125	None	replace
575	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  Long  TWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  Long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  +  1;  Long  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    Long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	9	None	replace
576	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L;  Integer  TWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L;  Integer  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L;  Integer  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    Long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	9	None	replace
577	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L;  Long  TWO_TO_32  =  0x1000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L;  Long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L;  Long  TWO_TO_32  =  0x1000000000L;	  long    TWO_TO_32    =    0x100000000L;    Long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	9	None	replace
578	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  +  4;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x100000000L  +  4;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    static    final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
579	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x200000000L  +  2;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x200000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x200000000L  +  2;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    static    final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
580	[BUG]  [BUGGY]  if(l  <  =  0)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  expression  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  =  0)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  =  0)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    Final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
581	[BUG]  [BUGGY]  if(l  <  =  0)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  be  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  expression  [FE]                  IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  =  0)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  be  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  =  0)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  be  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    Final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
582	[BUG]  [BUGGY]  if(l  <  =  0)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  expression  [FE]                    IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  =  0)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  =  0)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    Final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
583	[BUG]  [BUGGY]  if(l  <  =  0)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  not  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  illegal  start  of  expression  [FE]                      IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  =  0)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  not  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  =  0)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  not  fit  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    Final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
584	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  short  TWO_TO_32  =  l.length;  [CE]  possible  loss  of  precision  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  short  TWO_TO_32  =  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  short  TWO_TO_32  =  l.length;	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.length;    	non-compiled	[CE]  possible  loss  of  precision	3	None	replace
585	[BUG]  [BUGGY]  long  l  =  0x100000000L;  long  l  =  0x1000000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L;  long  l  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L;  long  l  =  0x1000000000L;	  long    TWO_TO_32    =    0x100000000L;    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	10	None	replace
586	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  final  short  TWO_TO_32  =  0x100000000L  *  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  final  short  TWO_TO_32  =  0x100000000L  *  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    1;    final  short  TWO_TO_32  =  0x100000000L  *  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	77	None	add
587	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  final  long  TWO_TO_32  =  0x100000000L  *  3;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  final  long  TWO_TO_32  =  0x100000000L  *  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    1;    final  long  TWO_TO_32  =  0x100000000L  *  3;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	77	None	add
588	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    1;    long  TWO_TO_32  =  0x100000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	61	None	add
589	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  short  TWO_TO_32  =  0x100000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  short  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    1;    short  TWO_TO_32  =  0x100000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	61	None	add
590	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  4L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x100000000L  +  4L;	  long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	120	1	replace
591	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  4L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  4L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  +  4L;	  long    TWO_TO_32    =    0x100000000L    +    1L;    	compilable	  [FE]  AssertionError  	120	1	replace
592	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  +  2L;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  +  2L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x100000000L  +  2L;	  static    final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
593	[BUG]  [BUGGY]  long  l  =  getTime(l).trim();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(l).trim();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l).trim();	  long    l    =    getTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	99	None	replace
594	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  +  4;	  final    long    TWO_TO_32    =    0x1000000000L    +    2;    	compilable	  [FE]  AssertionError  	40	1	replace
595	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  4;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  +  4;	  final    long    TWO_TO_32    =    0x1000000000L    +    2;    	compilable	  [FE]  AssertionError  	40	1	replace
596	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l.longValue()  +  4;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l.longValue()  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l.longValue()  +  4;	  static    final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
597	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l.longValue()  +  3;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l.longValue()  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l.longValue()  +  3;	  static    final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
598	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l.longValue()  +  1L;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  l.longValue()  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l.longValue()  +  1L;	  static    final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
599	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    final    int    TWO_TO_32    =    l;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	4	None	replace
600	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }	  final    long    TWO_TO_32    =    l;    final    int    TWO_TO_32    =    l;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	4	None	replace
601	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]                  IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    final    int    TWO_TO_32    =    l;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	4	None	replace
602	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  be  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]                    IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  be  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  be  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    final    int    TWO_TO_32    =    l;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	4	None	replace
603	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  not  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]                      IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  not  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  not  fit  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    final    int    TWO_TO_32    =    l;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	4	None	replace
604	[BUG]  [BUGGY]  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.longValue();  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.longValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	116	None	replace
605	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l.longValue());  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  unixTimeToZipLong(l.longValue());  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  unixTimeToZipLong(l.longValue());	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	98	None	replace
606	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x200000000L  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x200000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x200000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    static    final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
607	[BUG]  [BUGGY]  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getLongValue();  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getLongValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getLongValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getLongValue();    	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	117	None	replace
608	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l.length  +  1;  [CE]  long  cannot  be  dereferenced  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l.length  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l.length  +  1;	  final    long    TWO_TO_32    =    l.length;    	non-compiled	[CE]  long  cannot  be  dereferenced	81	None	replace
609	[BUG]  [BUGGY]  final  byte  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  byte  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  byte  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;	  final    long    l    =    0x100000000L    *    ZipShort.DEFAULT_TIME_BIT;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	92	None	replace
610	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  long  l  =  0x100000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  long  l  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  +  1L;  long  l  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	95	None	replace
611	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  LAST_VALID_TIME_BIT.longValue();  [CE]  cannot  find  symbol  LAST_VALID_TIME_BIT  [FE]        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  LAST_VALID_TIME_BIT.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  LAST_VALID_TIME_BIT.longValue();	  final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  cannot  find  symbol  LAST_VALID_TIME_BIT	79	None	replace
612	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  LAST_TIME_BIT.longValue();  [CE]  cannot  find  symbol  LAST_TIME_BIT  [FE]          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  LAST_TIME_BIT.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  LAST_TIME_BIT.longValue();	  final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  cannot  find  symbol  LAST_TIME_BIT	79	None	replace
613	[BUG]  [BUGGY]  final  short  TWO_TO_32  =  l.longValue();  [CE]  long  cannot  be  dereferenced  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  short  TWO_TO_32  =  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  short  TWO_TO_32  =  l.longValue();	  final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	79	None	replace
614	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  int  TWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  int  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  +  1;  int  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    int    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	11	None	replace
615	[BUG]  [BUGGY]  Long  TWO_TO_32  =  0x100000000L;  int  TWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  Long  TWO_TO_32  =  0x100000000L;  int  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	Long  TWO_TO_32  =  0x100000000L;  int  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    int    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	11	None	replace
616	[BUG]  [BUGGY]  long  l  =  getTimeToZipLong(l);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTimeToZipLong(l);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTimeToZipLong(l);	  long    l    =    getTimeInLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	31	None	replace
617	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  final  Long  tWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  final  Long  tWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    Long    TWO_TO_32    =    0x100000000L;    final  Long  tWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	89	None	add
618	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  final  Long  TWO_TO_32  =  0x200000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  final  Long  TWO_TO_32  =  0x200000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    Long    TWO_TO_32    =    0x100000000L;    final  Long  TWO_TO_32  =  0x200000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	89	None	add
619	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  final  short  TWO_TO_32  =  0x1000000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  final  short  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    2;    final  short  TWO_TO_32  =  0x1000000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	39	None	add
620	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  final  short  TWO_TO_32  =  0x1000000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  final  short  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    1;    final  short  TWO_TO_32  =  0x1000000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	33	None	add
621	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  final  double  TWO_TO_32  =  0x200000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  final  double  TWO_TO_32  =  0x200000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    double    TWO_TO_32    =    0x100000000L;    final  double  TWO_TO_32  =  0x200000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	85	None	add
622	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x1000000000L;  long  TWO_TO_32  =  0x1000000000L;  [CE]  possible  loss  of  precision  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x1000000000L;  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x1000000000L;  long  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
623	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x1000000000L;  int  TWO_TO_32  =  0x1000000000L;  [CE]  possible  loss  of  precision  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x1000000000L;  int  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x1000000000L;  int  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
624	[BUG]  [BUGGY]  short  TWO_TO_32  =  0x1000000000L;  long  TWO_TO_32  =  0x1000000000L;  [CE]  possible  loss  of  precision  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  short  TWO_TO_32  =  0x1000000000L;  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	short  TWO_TO_32  =  0x1000000000L;  long  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
625	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x1000000000L;  short  TWO_TO_32  =  0x1000000000L;  [CE]  possible  loss  of  precision  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x1000000000L;  short  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x1000000000L;  short  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
626	[BUG]  [BUGGY]  long  l  =  Long.parseLong(l,  getTime());  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  Long.parseLong(l,  getTime());  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  Long.parseLong(l,  getTime());	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	25	None	replace
627	[BUG]  [BUGGY]  long  l  =  Long.parseLong(l)-  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  Long.parseLong(l)-  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  Long.parseLong(l)-  1;	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	25	None	replace
628	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
629	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000L;  int  TWO_TO_32  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x100000000L;  int  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000L;  int  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  possible  loss  of  precision	8	None	replace
630	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  2;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    final    long    TWO_TO_32    =    0x1000000000L    +    2;    	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	54	None	replace
631	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x100000000L  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  double  TWO_TO_32  =  0x100000000L  +  l;	  final    double    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	86	1	replace
632	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  0x100000000L  +  l;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x100000000L  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  double  TWO_TO_32  =  0x100000000L  +  l;	  final    double    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	86	1	replace
633	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  *  2L;	  final    long    TWO_TO_32    =    0x100000000L    *    2;    	compilable	  [FE]  AssertionError  	44	1	replace
634	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  *  2L;	  final    long    TWO_TO_32    =    0x100000000L    *    2;    	compilable	  [FE]  AssertionError  	44	1	replace
635	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  *  2L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    *    2;    	compilable	  [FE]  AssertionError  	44	1	replace
636	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2L  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  *  2L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    *    2;    	compilable	  [FE]  AssertionError  	44	1	replace
637	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  final  long  TWO_TO_32  =  0x2000000000L  +  1L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  final  long  TWO_TO_32  =  0x2000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    1L;    final  long  TWO_TO_32  =  0x2000000000L  +  1L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	106	None	add
638	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  final  long  TWO_TO_32  =  0x1000000000L  +  2L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  final  long  TWO_TO_32  =  0x1000000000L  +  2L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    1L;    final  long  TWO_TO_32  =  0x1000000000L  +  2L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	106	None	add
639	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000  +  l;  [CE]  integer  number  too  large:  1000000000  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000  +  l;	  final    long    TWO_TO_32    =    0x1000000000;    	non-compiled	[CE]  integer  number  too  large:  1000000000	35	None	replace
640	[BUG]  [BUGGY]  final  long  l  =  0x1000000000L  +  TWO_TO_32;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x1000000000L  +  TWO_TO_32;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x1000000000L  +  TWO_TO_32;	  final    long    l    =    0x1000000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	38	None	replace
641	[BUG]  [BUGGY]  final  long  l  =  0x1000000000L  *  ZipShort.DEFAULT_TIME_BIT;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x1000000000L  *  ZipShort.DEFAULT_TIME_BIT;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x1000000000L  *  ZipShort.DEFAULT_TIME_BIT;	  final    long    l    =    0x1000000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	38	None	replace
642	[BUG]  [BUGGY]  long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;	  long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	63	None	replace
643	[BUG]  [BUGGY]  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L  *  ZipShort.MIN_VALUE;	  long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	63	None	replace
644	[BUG]  [BUGGY]  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_HOUR;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_HOUR;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_HOUR;	  long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	63	None	replace
645	[BUG]  [BUGGY]  long  l  =  createTime(l,  X5455_ExtendedTimestamp.class);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  createTime(l,  X5455_ExtendedTimestamp.class);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  createTime(l,  X5455_ExtendedTimestamp.class);	  long    l    =    createTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	30	None	replace
646	[BUG]  [BUGGY]  long  l  =  this.accessTime.longValue()  +  1L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  this.accessTime.longValue()  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  this.accessTime.longValue()  +  1L;	  long    l    =    this.accessTime.longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	124	None	replace
647	[BUG]  [BUGGY]  final  long  l  =  0x100000000F  +  2;  [CE]  integer  number  too  large:  100000000F  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000F  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000F  +  2;	  final    long    l    =    0x100000000F;    	non-compiled	[CE]  integer  number  too  large:  100000000F	71	None	replace
648	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  +  1L  +  1L;	  final    long    TWO_TO_32    =    0x1000000000L    +    1L;    	compilable	  [FE]  AssertionError  	107	1	replace
649	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L  +  1L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  +  1L  +  1L;	  final    long    TWO_TO_32    =    0x1000000000L    +    1L;    	compilable	  [FE]  AssertionError  	107	1	replace
650	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  3L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  +  3L;	  final    long    TWO_TO_32    =    0x1000000000L    +    1L;    	compilable	  [FE]  AssertionError  	107	1	replace
651	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  3L;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  3L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  +  3L;	  final    long    TWO_TO_32    =    0x1000000000L    +    1L;    	compilable	  [FE]  AssertionError  	107	1	replace
652	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  [CE]  illegal  start  of  expression  [FE]          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;	  final    long    TWO_TO_32    =    l;    static    final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
653	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  static  final  int  TWO_TO_32  =  l;  [CE]  illegal  start  of  expression  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  static  final  int  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  static  final  int  TWO_TO_32  =  l;	  final    long    TWO_TO_32    =    l;    static    final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
654	[BUG]  [BUGGY]  null  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  [CE]  not  a  statement  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  null  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	null  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;	  final    long    TWO_TO_32    =    l;    static    final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  not  a  statement	2	None	replace
655	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  static  final  long  TWO_TO_32  =  0x100000000L  +  3;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  static  final  long  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    3;    static  final  long  TWO_TO_32  =  0x100000000L  +  3;	  	non-compiled	[CE]  illegal  start  of  expression	101	None	add
656	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  final  short  TWO_TO_32  =  0x100000000L  +  3;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  final  short  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    3;    final  short  TWO_TO_32  =  0x100000000L  +  3;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	101	None	add
657	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  static  final  long  TWO_TO_32  =  0x100000000L  *  2;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  static  final  long  TWO_TO_32  =  0x100000000L  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    2;    static  final  long  TWO_TO_32  =  0x100000000L  *  2;	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
658	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  final  short  TWO_TO_32  =  0x100000000L  *  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  final  short  TWO_TO_32  =  0x100000000L  *  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    2;    final  short  TWO_TO_32  =  0x100000000L  *  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	43	None	add
659	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  +  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  DateTimeConstants.MILLIS_PER_SECOND;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	91	None	replace
660	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND  +  4;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND  +  4;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	91	None	replace
661	[BUG]  [BUGGY]  final  byte  l  =  0x100000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  byte  l  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  byte  l  =  0x100000000L;	  final    int    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	69	None	replace
662	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  4;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  4;	  final    long    l    =    0x100000000L    +    2;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	46	None	replace
663	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  2L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  +  2L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  2L;	  final    long    l    =    0x100000000L    +    2;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	46	None	replace
664	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  final  short  TWO_TO_32  =  0x100000000L  +  4;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  final  short  TWO_TO_32  =  0x100000000L  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    4;    final  short  TWO_TO_32  =  0x100000000L  +  4;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	110	None	add
665	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  final  long  TWO_TO_32  =  0x200000000L  +  4;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  final  long  TWO_TO_32  =  0x200000000L  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    4;    final  long  TWO_TO_32  =  0x200000000L  +  4;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	110	None	add
666	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x1000000000L  +  1L;	  static    final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
667	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  final  long  l  =  l  +  1L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  final  long  l  =  l  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1L;    final  long  l  =  l  +  1L;	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	82	None	add
668	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  last  long  TWO_TO_32  =  l  +  1L;  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  last  long  TWO_TO_32  =  l  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1L;    last  long  TWO_TO_32  =  l  +  1L;	  	non-compiled	[CE]  not  a  statement	82	None	add
669	[BUG]  [BUGGY]  static  final  long  l  =  0x800000000L;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  l  =  0x800000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  l  =  0x800000000L;	  static    final    long    l    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
670	[BUG]  [BUGGY]  static  final  long  l  =  0x100000000L  +  4;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  l  =  0x100000000L  +  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  l  =  0x100000000L  +  4;	  static    final    long    l    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
671	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  [CE]  possible  loss  of  precision  [FE]                    IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l);    	non-compiled	[CE]  possible  loss  of  precision	7	None	replace
672	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  long  tWO_TO_32  =  0x1000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  long  tWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x1000000000L;    long  tWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	103	None	add
673	[BUG]  [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  static  final  float  TWO_TO_32  =  0x100000000L;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  static  final  float  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    float    TWO_TO_32    =    0x100000000L;    static  final  float  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
674	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x10000000000L  +  l;	  final    long    TWO_TO_32    =    0x10000000000L;    	compilable	  [FE]  AssertionError  	37	1	replace
675	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L  +  l;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x10000000000L  +  l;	  final    long    TWO_TO_32    =    0x10000000000L;    	compilable	  [FE]  AssertionError  	37	1	replace
676	[BUG]  [BUGGY]  long  TWO_TO_32  =  l;  long  tWO_TO_32  =  l;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l;  long  tWO_TO_32  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    l;    long  tWO_TO_32  =  l;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	64	None	add
677	[BUG]  [BUGGY]  long  TWO_TO_32  =  l;  Long  l  =  l;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      IllegalArgumentException    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l;  Long  l  =  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    l;    Long  l  =  l;	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	64	None	add
678	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000  +  l;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x100000000  +  l;	  static    final    long    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
679	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x200000000L;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x200000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x200000000L;	  static    final    long    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
680	[BUG]  [BUGGY]  long  l  =  getTime().longValue()  +  10;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime().longValue()  +  10;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime().longValue()  +  10;	  long    l    =    getTime().longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	26	None	replace
681	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE  -  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE  -  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE  -  1;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	122	None	replace
682	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  +  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  DateTimeConstants.MILLIS_PER_MINUTE;	  final    long    l    =    0x100000000L    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	122	None	replace
683	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  short  TWO_TO_32  =  0x100000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  short  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    2;    short  TWO_TO_32  =  0x100000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	67	None	add
684	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  6;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  +  6;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    final    long    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	52	1	replace
685	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  6;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  6;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  +  6;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    final    long    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	52	1	replace
686	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  final  short  TWO_TO_32  =  0x1000000000L  +  l;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  final  short  TWO_TO_32  =  0x1000000000L  +  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L    +    l;    final  short  TWO_TO_32  =  0x1000000000L  +  l;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	108	None	add
687	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  Long  l  =  0x100000000L  +  1L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  Long  l  =  0x100000000L  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    1L;    Long  l  =  0x100000000L  +  1L;	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	119	None	add
688	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  ZipShort.MIN_VALUE;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  +  ZipShort.MIN_VALUE;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  ZipShort.MIN_VALUE;	  final    long    l    =    0x100000000L    *    ZipShort.MIN_VALUE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	93	None	replace
689	[BUG]  [BUGGY]  null  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  null  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	null  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    Final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  not  a  statement	22	None	replace
690	[BUG]  [BUGGY]  null  TWO_TO_32  =  0x1000000000L;  Final  long  TWO_TO_32  =  0x1000000000L;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  null  TWO_TO_32  =  0x1000000000L;  Final  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	null  TWO_TO_32  =  0x1000000000L;  Final  long  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    Final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  not  a  statement	22	None	replace
691	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L;  Final  long  TWO_TO_32  =  0x1000000000L;  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L;  Final  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x1000000000L;  Final  long  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    Final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  not  a  statement	22	None	replace
692	[BUG]  [BUGGY]  static  final  float  TWO_TO_32  =  0x100000000L;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  float  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  float  TWO_TO_32  =  0x100000000L;	  final    float    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
693	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  -  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  -  2;	  final    long    TWO_TO_32    =    0x100000000L    *    2;    	compilable	  [FE]  AssertionError  	44	1	replace
694	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  -  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  -  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  -  2;	  final    long    TWO_TO_32    =    0x100000000L    *    2;    	compilable	  [FE]  AssertionError  	44	1	replace
695	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]                    IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l);    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	7	None	replace
696	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]                      IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  fit  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l);    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	7	None	replace
697	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);  }  [CE]  ';'  expected  [FE]                        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);  }	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l);    	non-compiled	[CE]  ';'  expected	7	None	replace
698	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  be  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]                          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  be  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  be  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l);    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	7	None	replace
699	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer: "  +  l);  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]                            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer: "  +  l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  }  else  {  throw  new  IllegalArgumentException( "X5455  timestamps  must  match  in  a  signed  32  bit  integer: "  +  l);  }	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l);    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	7	None	replace
700	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  1x100000000L  +  2;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  1x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  1x100000000L  +  2;	  static    final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
701	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  final  double  TWO_TO_32  =  0x100000000L);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  final  double  TWO_TO_32  =  0x100000000L);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    double    TWO_TO_32    =    0x100000000L;    final  double  TWO_TO_32  =  0x100000000L);	  	non-compiled	[CE]  ';'  expected	85	None	add
702	[BUG]  [BUGGY]  long  l  =  getTime(l).longValue()  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(l).longValue()  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l).longValue()  *  DateTimeConstants.MILLIS_PER_SECOND;	  long    l    =    getTime(l).longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	125	None	replace
703	[BUG]  [BUGGY]  long  l  =  getTime(l).longValue()  *  DateTimeConstants.MILLIS_PER_LONG;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(l).longValue()  *  DateTimeConstants.MILLIS_PER_LONG;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l).longValue()  *  DateTimeConstants.MILLIS_PER_LONG;	  long    l    =    getTime(l).longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	125	None	replace
704	[BUG]  [BUGGY]  int  l  =  getTime(l).longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  l  =  getTime(l).longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  l  =  getTime(l).longValue();	  long    l    =    getTime(l).longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	125	None	replace
705	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  -  ZipShort.MIN_VALUE;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  -  ZipShort.MIN_VALUE;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  -  ZipShort.MIN_VALUE;	  final    long    l    =    0x100000000L    *    ZipShort.MIN_VALUE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	93	None	replace
706	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.MAX_VALUE;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.MAX_VALUE;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  ZipShort.MAX_VALUE;	  final    long    l    =    0x100000000L    *    ZipShort.MIN_VALUE;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	93	None	replace
707	[BUG]  [BUGGY]  static  final  long  l  =  0x100000000F;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  l  =  0x100000000F;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  l  =  0x100000000F;	  final    long    l    =    0x100000000F;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
708	[BUG]  [BUGGY]  long  l  =  0x100000000F;  [CE]  integer  number  too  large:  100000000F  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  0x100000000F;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000F;	  final    long    l    =    0x100000000F;    	non-compiled	[CE]  integer  number  too  large:  100000000F	71	None	replace
709	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000  +  1L;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000  +  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x100000000  +  1L;	  final    long    TWO_TO_32    =    0x100000000    +    1;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
710	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  }	  final    long    TWO_TO_32    =    0x1000000000L;    Final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	22	None	replace
711	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  }  else  {  final  long  TWO_TO_32  =  0x1000000000L;  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  }  else  {  final  long  TWO_TO_32  =  0x1000000000L;  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  }  else  {  final  long  TWO_TO_32  =  0x1000000000L;  }	  final    long    TWO_TO_32    =    0x1000000000L;    Final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	22	None	replace
712	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  }  else  {  return  new  ZipLong(l);  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  }  else  {  return  new  ZipLong(l);  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  }  else  {  return  new  ZipLong(l);  }	  final    long    TWO_TO_32    =    0x1000000000L;    Final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	22	None	replace
713	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    long    TWO_TO_32    =    0x1000000000L;    Final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	22	None	replace
714	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  l.longValue();  [CE]  long  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  l.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  Long  TWO_TO_32  =  l.longValue();	  final    Long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  long  cannot  be  dereferenced	90	None	replace
715	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  }	  final    long    TWO_TO_32    =    l;    Final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	5	None	replace
716	[BUG]  [BUGGY]  long  l  =  this.createTime.longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  this.createTime.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  this.createTime.longValue();	  long    l    =    createTime.longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	27	None	replace
717	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  l  =  l;  final  long  l  =  l;  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  long  l  =  l;  final  long  l  =  l;  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  long  l  =  l;  final  long  l  =  l;  }	  final    long    TWO_TO_32    =    l;    final    long    l    =    l;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	113	None	replace
718	[BUG]  [BUGGY]  if(l  <  TWO_TO_32)  {  final  int  TWO_TO_32  =  l;  final  long  l  =  l;  }  [CE]  cannot  find  symbol  TWO_TO_32  [FE]          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  if(l  <  TWO_TO_32)  {  final  int  TWO_TO_32  =  l;  final  long  l  =  l;  }  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	if(l  <  TWO_TO_32)  {  final  int  TWO_TO_32  =  l;  final  long  l  =  l;  }	  final    long    TWO_TO_32    =    l;    final    long    l    =    l;    	non-compiled	[CE]  cannot  find  symbol  TWO_TO_32	113	None	replace
719	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  final  long  TWO_TO_32  =  0x20000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  final  long  TWO_TO_32  =  0x20000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x10000000000L;    final  long  TWO_TO_32  =  0x20000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	36	None	add
720	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  final  long  TWO_TO_32  =  0x10000000000L);  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  final  long  TWO_TO_32  =  0x10000000000L);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x10000000000L;    final  long  TWO_TO_32  =  0x10000000000L);	  	non-compiled	[CE]  ';'  expected	36	None	add
721	[BUG]  [BUGGY]  float  TWO_TO_32  =  0x100000000;  [CE]  integer  number  too  large:  100000000  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  float  TWO_TO_32  =  0x100000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	float  TWO_TO_32  =  0x100000000;	  final    int    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  integer  number  too  large:  100000000	57	None	replace
722	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  -  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  -  2;	  final    long    TWO_TO_32    =    l    +    2;    	compilable	  [FE]  IllegalArgumentException  	42	4	replace
723	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  -  2;  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  -  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  -  2;	  final    long    TWO_TO_32    =    l    +    2;    	compilable	  [FE]  IllegalArgumentException  	42	4	replace
724	[BUG]  [BUGGY]  int  l  =  getTime().longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  l  =  getTime().longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  l  =  getTime().longValue();	  long    l    =    getTime().longValue();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	26	None	replace
725	[BUG]  [BUGGY]  long  l  =  getTime(l)+  1L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTime(l)+  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l)+  1L;	  long    l    =    getTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	99	None	replace
726	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  /  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  /  1L;	  final    long    TWO_TO_32    =    l    +    1L;    	compilable	  [FE]  IllegalArgumentException  	83	4	replace
727	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  /  1L;  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  /  1L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  /  1L;	  final    long    TWO_TO_32    =    l    +    1L;    	compilable	  [FE]  IllegalArgumentException  	83	4	replace
728	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x1000000000;  [CE]  integer  number  too  large:  1000000000  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x1000000000;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x1000000000;	  final    long    TWO_TO_32    =    0x1000000000;    	non-compiled	[CE]  integer  number  too  large:  1000000000	35	None	replace
729	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l.getLongValue();  [CE]  long  cannot  be  dereferenced  [FE]          IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l.getLongValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l.getLongValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getLongValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	117	None	replace
730	[BUG]  [BUGGY]  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.getLongValue();  [CE]  possible  loss  of  precision  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.getLongValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l.getLongValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getLongValue();    	non-compiled	[CE]  possible  loss  of  precision	117	None	replace
731	[BUG]  [BUGGY]  long  l  =  Long.parseLong(TimeZipLong.valueOf(l));  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  Long.parseLong(TimeZipLong.valueOf(l));  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  Long.parseLong(TimeZipLong.valueOf(l));	  long    l    =    Long.parseLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	25	None	replace
732	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L;  long  l  =  0x1000000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L;  long  l  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L;  long  l  =  0x1000000000L;	  long    TWO_TO_32    =    0x100000000L;    long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	95	None	replace
733	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  /  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  /  l;	  final    long    TWO_TO_32    =    0x1000000000L    +    l;    	compilable	  [FE]  IllegalArgumentException  	109	2	replace
734	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  /  l;  [FE]  IllegalArgumentException  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  /  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  /  l;	  final    long    TWO_TO_32    =    0x1000000000L    +    l;    	compilable	  [FE]  IllegalArgumentException  	109	2	replace
735	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l.getValue();  [CE]  long  cannot  be  dereferenced  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  l.getValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l.getValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	118	None	replace
736	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  l.getValue();  [CE]  long  cannot  be  dereferenced  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  l.getValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  double  TWO_TO_32  =  l.getValue();	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.getValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	118	None	replace
737	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  '.';  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  +  '.';	  final    long    TWO_TO_32    =    0x100000000    +    l;    	compilable	  [FE]  AssertionError  	94	1	replace
738	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  '.';  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  '.';  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  +  '.';	  final    long    TWO_TO_32    =    0x100000000    +    l;    	compilable	  [FE]  AssertionError  	94	1	replace
739	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000  -  l;  [CE]  integer  number  too  large:  100000000  [FE]              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000  -  l;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000  -  l;	  final    long    TWO_TO_32    =    0x100000000    +    l;    	non-compiled	[CE]  integer  number  too  large:  100000000	94	None	replace
740	[BUG]  [BUGGY]  long  l  =  modifyTime(l);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  modifyTime(l);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  modifyTime(l);	  long    l    =    createTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	30	None	replace
741	[BUG]  [BUGGY]  long  l  =  createTime(l  +  1);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  createTime(l  +  1);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  createTime(l  +  1);	  long    l    =    createTime(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	30	None	replace
742	[BUG]  [BUGGY]  int  l  =  System.currentTimeMillis();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  l  =  System.currentTimeMillis();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  l  =  System.currentTimeMillis();	  long    l    =    System.currentTimeMillis();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	28	None	replace
743	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x2000000000L;  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  int  TWO_TO_32  =  0x2000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x2000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x2000000000L;    	non-compiled	[CE]  possible  loss  of  precision	112	None	replace
744	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x2000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x2000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x2000000000L;    	compilable	  [FE]  AssertionError  	112	1	replace
745	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x2000000000L;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x2000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x2000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x2000000000L;    	compilable	  [FE]  AssertionError  	112	1	replace
746	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x20000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x20000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x2000000000L;    	compilable	  [FE]  AssertionError  	112	1	replace
747	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x20000000000L;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x20000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x20000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    final    long    TWO_TO_32    =    0x2000000000L;    	compilable	  [FE]  AssertionError  	112	1	replace
748	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  static  final  Long  TWO_TO_32  =  0x100000000L;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  static  final  Long  TWO_TO_32  =  0x100000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    Long    TWO_TO_32    =    0x100000000L;    static  final  Long  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
749	[BUG]  [BUGGY]  final  long  l  =  0x10000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x10000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x10000000L;	  final    long    l    =    0x100000000;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	59	None	replace
750	[BUG]  [BUGGY]  static  final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE;	  static    final    long    l    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
751	[BUG]  [BUGGY]  static  final  long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;	  static    final    long    l    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
752	[BUG]  [BUGGY]  static  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_HOUR;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_HOUR;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_HOUR;	  static    final    long    l    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
753	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l,  ZipShort.UTF8);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  unixTimeToZipLong(l,  ZipShort.UTF8);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  unixTimeToZipLong(l,  ZipShort.UTF8);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	98	None	replace
754	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l,  ZipShort.DEFAULT_TIME_BIT);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  unixTimeToZipLong(l,  ZipShort.DEFAULT_TIME_BIT);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  unixTimeToZipLong(l,  ZipShort.DEFAULT_TIME_BIT);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	98	None	replace
755	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l,  ZipShort.DEFAULT);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  unixTimeToZipLong(l,  ZipShort.DEFAULT);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  unixTimeToZipLong(l,  ZipShort.DEFAULT);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	98	None	replace
756	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l,  ZipShort.MIN_VALUE);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  unixTimeToZipLong(l,  ZipShort.MIN_VALUE);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  unixTimeToZipLong(l,  ZipShort.MIN_VALUE);	  long    l    =    unixTimeToZipLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	98	None	replace
757	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000L  +  2;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000L  +  2;	  long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  possible  loss  of  precision	68	None	replace
758	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  final  long  TWO_TO_32  =  l  +  1);  [CE]  ';'  expected  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  final  long  TWO_TO_32  =  l  +  1);  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l    +    1;    final  long  TWO_TO_32  =  l  +  1);	  	non-compiled	[CE]  ';'  expected	72	None	add
759	[BUG]  [BUGGY]  long  TWO_TO_32  =  l.length;  [CE]  long  cannot  be  dereferenced  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  l.length;	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.length;    	non-compiled	[CE]  long  cannot  be  dereferenced	3	None	replace
760	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  l.length;  [CE]  long  cannot  be  dereferenced  [FE]              IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  double  TWO_TO_32  =  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  double  TWO_TO_32  =  l.length;	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.length;    	non-compiled	[CE]  long  cannot  be  dereferenced	3	None	replace
761	[BUG]  [BUGGY]  final  short  TWO_TO_32  =  l.length;  [CE]  long  cannot  be  dereferenced  [FE]                IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  short  TWO_TO_32  =  l.length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  short  TWO_TO_32  =  l.length;	  final    long    TWO_TO_32    =    l;    final    long    TWO_TO_32    =    l.length;    	non-compiled	[CE]  long  cannot  be  dereferenced	3	None	replace
762	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  final  long  TWO_TO_32  =  0x100000000L  +  3;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  final  long  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    4;    final  long  TWO_TO_32  =  0x100000000L  +  3;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	110	None	add
763	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  final  long  TWO_TO_32  =  0x100000000L  *  4;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  final  long  TWO_TO_32  =  0x100000000L  *  4;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    *    1;    final  long  TWO_TO_32  =  0x100000000L  *  4;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	77	None	add
764	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l.trim().length;  [CE]  long  cannot  be  dereferenced  [FE]            IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l.trim().length;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l.trim().length;	  final    long    TWO_TO_32    =    l.length;    	non-compiled	[CE]  long  cannot  be  dereferenced	81	None	replace
765	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000L;  short  TWO_TO_32  =  0x1000000000L;  [CE]  possible  loss  of  precision  [FE]            AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  int  TWO_TO_32  =  0x100000000L;  short  TWO_TO_32  =  0x1000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000L;  short  TWO_TO_32  =  0x1000000000L;	  long    TWO_TO_32    =    0x100000000L;    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  possible  loss  of  precision	10	None	replace
766	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  long  TWO_TO_32  =  0x100000000L  +  3;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  long  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L    +    2;    long  TWO_TO_32  =  0x100000000L  +  3;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	67	None	add
767	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  long  TWO_TO_32  =  0x2000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  long  TWO_TO_32  =  0x2000000000L;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x1000000000L;    long  TWO_TO_32  =  0x2000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	103	None	add
768	[BUG]  [BUGGY]  long  l  =  getLong();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getLong();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getLong();	  long    l    =    getTime();    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	29	None	replace
769	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  l  =  0x100000000L  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  static  final  long  TWO_TO_32  l  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  l  =  0x100000000L  +  1;	  static    final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
770	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  /  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  /  2;	  final    long    TWO_TO_32    =    0x1000000000L    +    2;    	compilable	  [FE]  AssertionError  	40	1	replace
771	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  /  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  /  2;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  /  2;	  final    long    TWO_TO_32    =    0x1000000000L    +    2;    	compilable	  [FE]  AssertionError  	40	1	replace
772	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l,  unixTime.longValue();  [CE]  ';'  expected  [FE]        IllegalArgumentException      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  TWO_TO_32  =  l,  unixTime.longValue();  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l,  unixTime.longValue();	  final    long    TWO_TO_32    =    l.longValue();    	non-compiled	[CE]  ';'  expected	79	None	replace
773	[BUG]  [BUGGY]  long  l  =  getTimeInLong(l)-  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                    AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  long  l  =  getTimeInLong(l)-  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTimeInLong(l)-  1;	  long    l    =    getTimeInLong(l);    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	31	None	replace
774	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError      [CONTEXT]      private  static  ZipLong  unixTimeToZipLong(long  l)  {      [BUGGY]  final  long  l  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]      if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(     "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:       "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	47	None	replace
