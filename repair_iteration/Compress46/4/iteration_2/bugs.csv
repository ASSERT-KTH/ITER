bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l;    final  long  TWO_TO_32  =  l;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	5	None	add
2	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l;  static  final  long  TWO_TO_32  =  l;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l;    static  final  long  TWO_TO_32  =  l;	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
3	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.length;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.length;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l;    final  long  TWO_TO_32  =  l.length;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	5	None	add
4	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l;  final  int  TWO_TO_32  =  l;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l;    final  int  TWO_TO_32  =  l;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	5	None	add
5	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l;  Final  long  TWO_TO_32  =  l;  [CE]  not  a  statement  [FE]            IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l;  Final  long  TWO_TO_32  =  l;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l;    Final  long  TWO_TO_32  =  l;	  	non-compiled	[CE]  not  a  statement	5	None	add
6	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l;  final  short  TWO_TO_32  =  l;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l;  final  short  TWO_TO_32  =  l;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l;    final  short  TWO_TO_32  =  l;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	5	None	add
7	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);  [CE]  ';'  expected  [FE]                IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l);  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l;    final  long  TWO_TO_32  =  l);	  	non-compiled	[CE]  ';'  expected	5	None	add
8	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L;    long  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	13	None	add
9	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L;  Long  TWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x100000000L;  Long  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L;    Long  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	13	None	add
10	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x1000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x100000000L;  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L;    long  TWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	13	None	add
11	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L;  int  TWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x100000000L;  int  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L;    int  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	13	None	add
12	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L;  short  TWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x100000000L;  short  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L;    short  TWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	13	None	add
13	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x100000000;	  static    final    long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
14	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  static  final  long  TWO_TO_32  =  l;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l;	  static    final    long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
15	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x100000000L  +  1;	  static    final    long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
16	[BUG]  [BUGGY]  static  final  long  l  =  0x100000000L;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  static  final  long  l  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  l  =  0x100000000L;	  static    final    long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
17	[BUG]  [BUGGY]  static  final  int  TWO_TO_32  =  0x100000000L;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  static  final  int  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  int  TWO_TO_32  =  0x100000000L;	  static    final    long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
18	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  +  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  static  final  long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x100000000L  +  2;	  static    final    long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
19	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L;    final  long  TWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	11	None	add
20	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x10000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x10000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L;    final  long  TWO_TO_32  =  0x10000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	11	None	add
21	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  static  final  long  TWO_TO_32  =  0x1000000000L;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  static  final  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L;    static  final  long  TWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
22	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  Final  long  TWO_TO_32  =  0x1000000000L;  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  Final  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L;    Final  long  TWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  not  a  statement	11	None	add
23	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  long  TWO_TO_32  =  0x1000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L;    long  TWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	11	None	add
24	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  final  short  TWO_TO_32  =  0x1000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]              AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  final  short  TWO_TO_32  =  0x1000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L;    final  short  TWO_TO_32  =  0x1000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	11	None	add
25	[BUG]  [BUGGY]  long  l  =  Long.parseLong(l);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  l  =  Long.parseLong(l);  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  Long.parseLong(l);	      	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	10	None	replace
26	[BUG]  [BUGGY]  long  l  =  getTime().longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  l  =  getTime().longValue();  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime().longValue();	      	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	10	None	replace
27	[BUG]  [BUGGY]  long  l  =  createTime.longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  l  =  createTime.longValue();  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  createTime.longValue();	      	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	10	None	replace
28	[BUG]  [BUGGY]  long  l  =  System.currentTimeMillis();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  l  =  System.currentTimeMillis();  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  System.currentTimeMillis();	      	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	10	None	replace
29	[BUG]  [BUGGY]  long  l  =  getTime();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  l  =  getTime();  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime();	      	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	10	None	replace
30	[BUG]  [BUGGY]  long  l  =  createTime(l);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                              AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  l  =  createTime(l);  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  createTime(l);	      	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	10	None	replace
31	[BUG]  [BUGGY]  long  l  =  getTimeInLong(l);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                                AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  l  =  getTimeInLong(l);  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTimeInLong(l);	      	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	10	None	replace
32	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  int  TWO_TO_32  =  0x1000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  possible  loss  of  precision	12	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  +  1;	  final    long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	12	1	replace
34	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  +  1;	  final    long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	12	1	replace
35	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000;  [CE]  integer  number  too  large:  1000000000  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000;	  final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  integer  number  too  large:  1000000000	12	None	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x10000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	12	1	replace
37	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x10000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x10000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	12	1	replace
38	[BUG]  [BUGGY]  final  long  l  =  0x1000000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  l  =  0x1000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x1000000000L;	  final    long    TWO_TO_32    =    0x1000000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	12	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  +  2;	  final    long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	12	1	replace
40	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  +  2;	  final    long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	12	1	replace
41	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  +  2;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	9	1	replace
42	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l  +  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  +  2;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	9	1	replace
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  *  2;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	9	1	replace
44	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  *  2;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	9	1	replace
45	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  2;  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  2;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
46	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  2;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  l  =  0x100000000L  +  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  2;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	9	None	replace
47	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    1;    final  long  TWO_TO_32  =  0x100000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	3	None	add
48	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x1000000000L  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    1;    final  long  TWO_TO_32  =  0x1000000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	3	None	add
49	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x100000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  final  long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    1;    final  long  TWO_TO_32  =  0x100000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	3	None	add
50	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  static  final  long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  static  final  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    1;    static  final  long  TWO_TO_32  =  0x100000000L  +  1;	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
51	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    1;    long  TWO_TO_32  =  0x100000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	3	None	add
52	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    2;    final  long  TWO_TO_32  =  0x100000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	8	None	add
53	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    2;    final  long  TWO_TO_32  =  0x100000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	8	None	add
54	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x1000000000L  +  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    2;    final  long  TWO_TO_32  =  0x1000000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	8	None	add
55	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  static  final  long  TWO_TO_32  =  0x100000000L  +  2;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  static  final  long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    2;    static  final  long  TWO_TO_32  =  0x100000000L  +  2;	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
56	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  3;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  final  long  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    2;    final  long  TWO_TO_32  =  0x100000000L  +  3;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	8	None	add
57	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000;  [CE]  integer  number  too  large:  100000000  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  int  TWO_TO_32  =  0x100000000;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000;	  final    long    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  integer  number  too  large:  100000000	1	None	replace
58	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000  +  1;  [CE]  integer  number  too  large:  100000000  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000  +  1;	  final    long    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  integer  number  too  large:  100000000	1	None	replace
59	[BUG]  [BUGGY]  final  long  l  =  0x100000000;  [CE]  integer  number  too  large:  100000000  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  l  =  0x100000000;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000;	  final    long    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  integer  number  too  large:  100000000	1	None	replace
60	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000;  [CE]  integer  number  too  large:  100000000  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x100000000;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000;	  long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  integer  number  too  large:  100000000	14	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x100000000L  +  1;	  long    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	14	1	replace
62	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  +  1;	  long    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	14	1	replace
63	[BUG]  [BUGGY]  long  l  =  0x100000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  l  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	14	None	replace
64	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  l;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  l;	  long    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  IllegalArgumentException  	14	4	replace
65	[BUG]  [BUGGY]  long  TWO_TO_32  =  l;  [FE]  IllegalArgumentException  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  l;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  l;	  long    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  IllegalArgumentException  	14	4	replace
66	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  int  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  possible  loss  of  precision	14	None	replace
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x100000000L  +  2;	  long    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	14	1	replace
68	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  +  2;	  long    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	14	1	replace
69	[BUG]  [BUGGY]  final  int  l  =  0x100000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  int  l  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  l  =  0x100000000L;	  final    long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	7	None	replace
70	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  +  1;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                  AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  l  =  0x100000000L  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  +  1;	  final    long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	7	None	replace
71	[BUG]  [BUGGY]  final  long  l  =  0x100000000F;  [CE]  integer  number  too  large:  100000000F  [FE]                    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  l  =  0x100000000F;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000F;	  final    long    l    =    0x100000000L;    	non-compiled	[CE]  integer  number  too  large:  100000000F	7	None	replace
72	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	4	1	replace
73	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	4	1	replace
74	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  +  1L;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	4	1	replace
75	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  +  1L;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	4	1	replace
76	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  1;  [CE]  possible  loss  of  precision  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  int  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
77	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  *  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	4	1	replace
78	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  [FE]  AssertionError  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  *  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  *  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	4	1	replace
79	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l.longValue();  [CE]  long  cannot  be  dereferenced  [FE]    IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l.longValue();  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l.longValue();	  final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  long  cannot  be  dereferenced	6	None	replace
80	[BUG]  [BUGGY]  final  int  TWO_TO_32  =  l;  [CE]  possible  loss  of  precision  [FE]      IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  int  TWO_TO_32  =  l;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  int  TWO_TO_32  =  l;	  final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  possible  loss  of  precision	6	None	replace
81	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l.length;  [CE]  long  cannot  be  dereferenced  [FE]        IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l.length;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l.length;	  final    long    TWO_TO_32    =    l;    	non-compiled	[CE]  long  cannot  be  dereferenced	6	None	replace
82	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  l  +  1L;	  final    long    TWO_TO_32    =    l;    	compilable	  [FE]  AssertionError  	6	1	replace
83	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  [FE]  AssertionError  [FE]          IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l  +  1L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  l  +  1L;	  final    long    TWO_TO_32    =    l;    	compilable	  [FE]  AssertionError  	6	1	replace
84	[BUG]  [BUGGY]  final  byte  TWO_TO_32  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  byte  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  byte  TWO_TO_32  =  0x100000000L;	  final    int    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
85	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  double  TWO_TO_32  =  0x100000000L;	  final    int    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	2	1	replace
86	[BUG]  [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  double  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  double  TWO_TO_32  =  0x100000000L;	  final    int    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	2	1	replace
87	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  float  TWO_TO_32  =  0x100000000L;	  final    int    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	2	1	replace
88	[BUG]  [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  [FE]  AssertionError  [FE]              AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  float  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  float  TWO_TO_32  =  0x100000000L;	  final    int    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	2	1	replace
89	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  Long  TWO_TO_32  =  0x100000000L;	  final    int    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	2	1	replace
90	[BUG]  [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  [FE]  AssertionError  [FE]                AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  Long  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  Long  TWO_TO_32  =  0x100000000L;	  final    int    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	2	1	replace
91	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_SECOND;	  final    long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	7	None	replace
92	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                  AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  ZipShort.DEFAULT_TIME_BIT;	  final    long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	7	None	replace
93	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  ZipShort.MIN_VALUE;	  final    long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	7	None	replace
94	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000  +  l;  [CE]  integer  number  too  large:  100000000  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000  +  l;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000  +  l;	  final    long    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  integer  number  too  large:  100000000	1	None	replace
95	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L;  long  l  =  0x100000000L;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x100000000L;  long  l  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L;    long  l  =  0x100000000L;	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	13	None	add
96	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L;  long  tWO_TO_32  =  0x100000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x100000000L;  long  tWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long    TWO_TO_32    =    0x100000000L;    long  tWO_TO_32  =  0x100000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	13	None	add
97	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  final  short  TWO_TO_32  =  0x100000000L  +  1;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  1;  final  short  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    1;    final  short  TWO_TO_32  =  0x100000000L  +  1;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	3	None	add
98	[BUG]  [BUGGY]  long  l  =  unixTimeToZipLong(l);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  l  =  unixTimeToZipLong(l);  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  unixTimeToZipLong(l);	      	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	10	None	replace
99	[BUG]  [BUGGY]  long  l  =  getTime(l);  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  l  =  getTime(l);  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l);	      	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	10	None	replace
100	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  final  short  TWO_TO_32  =  0x100000000L  +  2;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  2;  final  short  TWO_TO_32  =  0x100000000L  +  2;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x100000000L    +    2;    final  short  TWO_TO_32  =  0x100000000L  +  2;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	8	None	add
101	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  +  3;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	4	1	replace
102	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  3;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  +  3;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    	compilable	  [FE]  AssertionError  	4	1	replace
103	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x1000000000L;	  long    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	14	1	replace
104	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x1000000000L;	  long    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	14	1	replace
105	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  0x1000000000L;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  static  final  long  TWO_TO_32  =  0x1000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  0x1000000000L;	  static    final    long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
106	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  +  1L;	  final    long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	12	1	replace
107	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  1L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  +  1L;	  final    long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	12	1	replace
108	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x1000000000L  +  l;	  final    long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	12	1	replace
109	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L  +  l;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x1000000000L  +  l;	  final    long    TWO_TO_32    =    0x1000000000L;    	compilable	  [FE]  AssertionError  	12	1	replace
110	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	final  long  TWO_TO_32  =  0x100000000L  +  4;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	9	1	replace
111	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x100000000L  +  4;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  TWO_TO_32  =  0x100000000L  +  4;	  final    long    TWO_TO_32    =    0x100000000L    +    2;    	compilable	  [FE]  AssertionError  	9	1	replace
112	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x2000000000L;  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  0x1000000000L;  final  long  TWO_TO_32  =  0x2000000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    0x1000000000L;    final  long  TWO_TO_32  =  0x2000000000L;	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	11	None	add
113	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l;  final  long  l  =  l;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l;  final  long  l  =  l;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l;    final  long  l  =  l;	  	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	5	None	add
114	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000L  +  1;  [CE]  possible  loss  of  precision  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  int  TWO_TO_32  =  0x100000000L  +  1;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000L  +  1;	  final    long    TWO_TO_32    =    0x100000000L    +    1;    	non-compiled	[CE]  possible  loss  of  precision	4	None	replace
115	[BUG]  [BUGGY]  int  TWO_TO_32  =  0x100000000;  [CE]  integer  number  too  large:  100000000  [FE]        AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  int  TWO_TO_32  =  0x100000000;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	int  TWO_TO_32  =  0x100000000;	  final    long    TWO_TO_32    =    0x100000000;    	non-compiled	[CE]  integer  number  too  large:  100000000	1	None	replace
116	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.longValue();  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]    IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.longValue();  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l;    final  long  TWO_TO_32  =  l.longValue();	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	5	None	add
117	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getLongValue();  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]      IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getLongValue();  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l;    final  long  TWO_TO_32  =  l.getLongValue();	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	5	None	add
118	[BUG]  [BUGGY]  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getValue();  [CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]        IllegalArgumentException    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  TWO_TO_32  =  l;  final  long  TWO_TO_32  =  l.getValue();  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final    long    TWO_TO_32    =    l;    final  long  TWO_TO_32  =  l.getValue();	  	non-compiled	[CE]  variable  TWO_TO_32  is  already  defined  in  method  unixTimeToZipLong(long)	5	None	add
119	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	add	long  TWO_TO_32  =  0x100000000L  +  1L;	  long    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	14	1	replace
120	[BUG]  [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  TWO_TO_32  =  0x100000000L  +  1L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  TWO_TO_32  =  0x100000000L  +  1L;	  long    TWO_TO_32    =    0x100000000L;    	compilable	  [FE]  AssertionError  	14	1	replace
121	[BUG]  [BUGGY]  short  TWO_TO_32  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  short  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	short  TWO_TO_32  =  0x100000000L;	  long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  possible  loss  of  precision	14	None	replace
122	[BUG]  [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  long  l  =  0x100000000L  *  DateTimeConstants.MILLIS_PER_MINUTE;	  final    long    l    =    0x100000000L;    	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	7	None	replace
123	[BUG]  [BUGGY]  final  short  TWO_TO_32  =  0x100000000L;  [CE]  possible  loss  of  precision  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  final  short  TWO_TO_32  =  0x100000000L;  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	final  short  TWO_TO_32  =  0x100000000L;	  final    int    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  possible  loss  of  precision	2	None	replace
124	[BUG]  [BUGGY]  long  l  =  this.accessTime.longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                    AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  l  =  this.accessTime.longValue();  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  this.accessTime.longValue();	      	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	10	None	replace
125	[BUG]  [BUGGY]  long  l  =  getTime(l).longValue();  [CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)  [FE]                      AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  long  l  =  getTime(l).longValue();  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	long  l  =  getTime(l).longValue();	      	non-compiled	[CE]  variable  l  is  already  defined  in  method  unixTimeToZipLong(long)	10	None	replace
126	[BUG]  [BUGGY]  static  final  long  TWO_TO_32  =  l.longValue();  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    private  static  ZipLong  unixTimeToZipLong(long  l)  {    [BUGGY]  static  final  long  TWO_TO_32  =  l.longValue();  [BUGGY]    if  (l  >=  TWO_TO_32)  {  throw  new  IllegalArgumentException(   "X5455  timestamps  must  fit  in  a  signed  32  bit  integer:     "  +  l);  }  return  new  ZipLong(l);  }  [CLASS]  X5455_ExtendedTimestamp  [METHOD]  unixTimeToZipLong  [RETURN_TYPE]  ZipLong  long  l  [VARIABLES]  ZipLong  accessTime  createTime  l  modifyTime  unixTime  ZipShort  HEADER_ID  boolean  bit0_modifyTimePresent  bit1_accessTimePresent  bit2_createTimePresent  byte  ACCESS_TIME_BIT  CREATE_TIME_BIT  MODIFY_TIME_BIT  flags  long  TWO_TO_32  l  serialVersionUID  	projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java	0.5	529	529	1	replace	static  final  long  TWO_TO_32  =  l.longValue();	  static    final    long    TWO_TO_32    =    0x100000000L;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
