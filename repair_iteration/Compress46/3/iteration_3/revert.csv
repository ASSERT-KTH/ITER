projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.getValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getLongValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.FUNCTION){for(inti=0;i<d.getLength();i++){returnLong.parseLong(i);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_DAY);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_HOUR);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_HOUR);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_MINUTE);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_MINUTE);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);DateunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);Dated=getChronology().dateToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);Dated=getChronology().dateToZipLong(d.getTime()/10000);returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);DateunixTimeToZipLong(d.getTime()/10000);returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);Dated=getChronology().dateToZipLong(d.getTime()/10000);unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);Dated=getChronology().dateToZipLong(d.getTime()/10000);returnnewZipLong(unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);UnsupportedDateTimeFormatunixTime=DateTimeUtils.getInstance(d.getTime()/10000);returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.HOUR_OF_DAY);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returncreateTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.toZipLong());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);unixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");unixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()+1000!=null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()+1000!=null){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS"));unixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()+1000!=null){for(Dated:d.getTime()){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()+1000!=null){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getVersion());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*100.0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+100.0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.length);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()==null){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());ZipLongunixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()!=null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()==null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()!=null){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()!=null){returnnewZipLong(unixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);unixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);DateunixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);((ZipLong)d).setTime(unixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);((ZipLong)d.getTime()/2).append(unixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);((ZipLong)d.getTime()/2).setTime(unixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);ZipLongunixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/2);if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/2);if(accessTime==null){returnunixTimeToZipLong(accessTime.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){ZipLongaccessTime=getAccessTime(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){ZipLongaccessTime=newZipLong(DateUtils.currentTimeMillis());unixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/2);if(accessTime!=null){returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);ZipLongunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);UnsupportedDateTimeFormatunixTime=DateTimeUtils.currentTimeMillis();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);ZipLongunixTimeToZipLong(d.getTime()/1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);Dated=getTime(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);DateunixTimeToZipLong(d.getTime()/1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);ZipLongunixTimeToZipLong(d.getTime()/100000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),this);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getPeriodType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.type);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getCharset());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,null);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,null);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,12);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);ZipLongunixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()<1000){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()+1000!=null){if(bit0_modifyTimePresent){returnnewZipLong(dateToZipLong(d.getTime()+1000));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()+1000!=null){if(bit0_modifyTimePresent){returnZipLong.valueOf(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.getZipLong(d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnthis.dateToZipLong(d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);longunixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()<1000){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1000);if(d.getTime()+1000!=null){returnnewZipLong(unixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getEndTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()<=0){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);((ZipLong)d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);longtime=d.getTime()/10000;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);DateunixTimeToZipLong(d.getTime()/100000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);longtime=d.getTime()%10000;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);((ZipLong)d.getTime()).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMonth());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()!=null){if(bit0_modifyTimePresent){returnunixLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getMonth());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_HOUR+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_HOUR+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,3+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,4+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/100.0,d.getSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getMinimumSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getMaximumSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getSize()-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_accessTimePresent){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnnewZipLong(unixTimeToZipLong(d.getTime()));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525while(d.getTime()!=null){unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longmod0_modifyTimePresent=unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/10000);}else{ZipLongunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/10000);}else{finalZipLongunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525finalZipLongunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525ZipLongunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMillis()*100.0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getValue()*100.0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getSize()*100.0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*100.0,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),100.0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_MINUTE,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_MINUTE,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getChronology()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525ZipLongunixTimeToZipLong(d.getTime()/100000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getChronology(),d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getChronology(),d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getChronology(),d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getChronology().unixTimeToZipLong(unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/2);}else{unixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/2);}else{unixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedOperation.checkState(d.getTime()!=null);unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_HOUR,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,DEFAULT_TIME_BIT,HEADER_ID);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,0,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,DEFAULT_TIME_BIT+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_HOUR,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY,d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();(ZipLong)d.clone();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();d=(ZipLong)d.clone();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();(ZipLong)d.clone();return(ZipLong)d.clone();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();d=(ZipLong)d.clone();return(ZipLong)d.clone();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();(ZipLong)d.clone();d=(ZipLong)d.clone();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();Dated=d.getChronology();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);unixTimeToZipLong(d.getTime()+10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);Dated=getChronology().dateToZipLong(d.getTime()+10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);Dated=getChronology().dateToZipLong(d.getTime()+10000);returnunixTimeToZipLong(d.getTime()+10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);Dated=getChronology().withZipLong(d.getTime()+10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);Dated=getChronology().withZipLong(d.getTime()+10000);unixTimeToZipLong(d.getTime()+10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);Dated=getChronology().withZipLong(d.getTime()+10000);returnunixTimeToZipLong(d.getTime()+10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);((ZipLong)d.getTime()+10000).add(unixTimeToZipLong(d.getTime()+10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);unixTimeToZipLong(d.getTime()*10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);if(d.getTime()<10000){returnunixTimeToZipLong(d.getTime()*10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);Dated=getChronology().dateToZipLong(d.getTime()*10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);Dated=getChronology().dateToZipLong(d.getTime()*10000);returnunixTimeToZipLong(d.getTime()*10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);Dated=getChronology().withZipLong(d.getTime()*10000);unixTimeToZipLong(d.getTime()*10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);Dated=getChronology().withZipLong(d.getTime()*10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);if(d.getTime()<10000){returnunixTimeToZipLong(d.getTime()*10000);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getChronology().dateToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getChronology().dateToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525d=getChronology().dateToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525finalDated=getChronology().dateToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longd=getChronology().dateToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Durationd=getChronology().dateToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525d=getChronology().dateToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,16);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_HOUR,12);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getZipLongValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.toZipLong();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnthis.d.getLongValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getLongValue()+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getUpperValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525finalDated=getChronology().dateToZipLong(d.getTime()/10000);returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getChronology().dateToZipLong(d.getTime()/10000);returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longd=getChronology().dateToZipLong(d.getTime()/10000);returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getChronology().dateToZipLong(d.getTime());returnunixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getChronology().dateToZipLong(d.getTime());returnunixTimeToZipLong(d.getTime()+10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatunixTime=DateTimeUtils.getInstance(d.getTime()/10000);returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatunixTime=DateTimeUtils.getInstance(d.getTime());returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatunixTime=DateTimeUtils.getInstance(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525unixTime=DateTimeUtils.getInstance(d.getTime()/10000);returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatunixTime=DateTimeUtils.getInstance(d.getTime()*10000);returnunixTimeToZipLong(d.getTime()*10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");unixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525df=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");unixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-HH:mm:ss.SSS");unixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longunixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longunixTimeToZipLong(d.getTime()/1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());longunixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525intunixTimeToZipLong(d.getTime()/1000);longunixTimeToZipLong(d.getTime()/1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/1000);longunixTimeToZipLong(d.getTime()/1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longunixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);unixTimeToZipLong(d.getTime()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");unixTimeToZipLong(d.getTime()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);d.setTime(unixTimeToZipLong(d.getTime()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS"));unixTimeToZipLong(d.getTime()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);Dated=getChronology().dateToZipLong(d.getTime()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");unixTimeToZipLong(dF.getTime()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525DateunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{DateunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{finalDateunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525finalDateunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{returnnewZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{finalZipLongunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).append(unixTimeToZipLong(d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).append(unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).append(unixTimeToZipLong(d.getTime()/2));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.FUNCTION){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.byteValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getMaximumValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_SECOND,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getValue(),HEADER_ID);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getKey());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getValue()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_SECOND,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getValue(),0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>=0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnaccessTime
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(modifyTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,0,1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_MINUTE,1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getNext());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_HOUR,d.getParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getLastChr());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_HOUR,d.getParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getStart());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/1000000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);DateunixTimeToZipLong(d.getTime()/4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);Dated=getChronology().dateToZipLong(d.getTime()/4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);((ZipLong)d.getTime()/4).add(unixTimeToZipLong(d.getTime()/4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);((ZipLong)d.getTime()/4).append(unixTimeToZipLong(d.getTime()/4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);DateunixTimeToZipLong(d.getTime()/4);returnunixTimeToZipLong(d.getTime()/4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);((ZipLong)d.getTime()/4).setTime(unixTimeToZipLong(d.getTime()/4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);Dated=d.getLastChronology();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_DAY);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_DAY);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_DAY,1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_DAY)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_DAY,4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_DAY,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_DAY+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getValue(),d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getValue(),d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getKey());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getValue(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getValue(),d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525d=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525null=unixTimeToZipLong(d.getTime());Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longd=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525dateToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525finalDated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Durationd=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getYear());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getStart());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_MINUTE,d.getMonth());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getMonth()-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getMaximumSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),HEADER_ID);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),DATE_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),accessTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnthis.dateToZipLong.getValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getValue()*DateTimeConstants.MILLIS_PER_SECOND;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getValue()*DateTimeConstants.MILLIS_PER_DECEMBER;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getValue()*DateTimeConstants.MILLIS_PER_HOUR;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.timeZone);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.second);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.months);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.date);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.year);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime());}else{unixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/100.0,d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,date.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getShortMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getMillis(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*100.0,d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,l.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS",d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525unixTimeToZipLong(d.getTime()+1000);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.getZipLong(d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.getZipLong(d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.getZipLong(dateToZipLong(d));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.getZipLong(d,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.getZipLong(d.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.getZipLong(d.getYear());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_SECOND,d.getType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getCharacterIndex());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getCharacterEncoding());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000,this);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000,ctxt);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000,12000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000,cfg);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY,d.getParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getNext());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getLastChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getStart());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getName());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnZipLong.valueOf(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnZipLong.valueOf(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnZipLong.valueOf(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnZipLong.valueOf(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnZipLong.valueOf(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnZipLong.valueOf(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnZipLong.valueOf(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_SECOND,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_SECOND,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getChronology())+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getChronology()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getID()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getMillis()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getTime(),bit0_modifyTimePresent));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getTime(),unixTime));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,unixTime,d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getValue()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getChronology()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_SECOND)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_SECOND)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND)+2;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND)+4;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND)+3;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).setTime(unixTimeToZipLong(d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).setTime(unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525(ZipLong)d.getTime()).setTime(unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).setTime(unixTimeToZipLong(d.getTime()/2));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).setTime(unixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnnewZipLong(dateToZipLong(d.getTime()+1000));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnnewZipLong(dateToZipLong(d.getTime()+1000));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit1_accessTimePresent){returnnewZipLong(dateToZipLong(d.getTime()+1000));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(modifyTimePresent){returnnewZipLong(dateToZipLong(d.getTime()+1000));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnnewZipLong(dateToZipLong(d.getTime()+1000));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnnewZipLong(dateToZipLong(d.getTime()));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>=0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnnewZipLong(accessTime
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnnewZipLong(access
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.getKey();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d,d.getValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.getValue()+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.toZipLong();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMillis(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMillis(),0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMillis(),HEADER_ID);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.HOUR_OF_DAY,d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.TRY){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==0){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525while(d.getTime()>0){unixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnunixLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit1_accessTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit1_accessTimePresent!=null){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit1_accessTimePresent==null){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longbit1_accessTimePresent=unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(modifyTimePresent){returnunixLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime());}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==0){returnunixTimeToZipLong(d.getTime()/2);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime()/2);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.GETPROP){returnunixTimeToZipLong(d.getTime()/2);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525dateToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525dateToZipLong(d.getTime()/10000);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/1000);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_MINUTE,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_MINUTE,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getKey());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getValue()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_accessTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.dateToZipLong(this);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.dateToZipLong();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnthis.dateToZipLong(d,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnthis.dateToZipLong(d,d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.dateToZipLong(false);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d).setTime(unixTimeToZipLong(d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d).setTime(unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525(ZipLong)d).setTime(unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d).setTime(unixTimeToZipLong(d.getTime()/2));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/2);if(accessTime==null){returnunixTimeToZipLong(accessTime.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime());if(accessTime==null){returnunixTimeToZipLong(accessTime.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/2);if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/2);if(accessTime==null){returnunixTimeToZipLong(accessTime.getTime()/2
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime());if(accessTime==null){returnunixTimeToZipLong(accessTime.getTime()
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime());if(accessTime==null){returnunixTimeToZipLong(accessTime.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returngetTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=getAccessTime(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=getAccessTime(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=getAccessTime(d.getTime());if(accessTime==null){returnunixTimeToZipLong(accessTime.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longaccessTime=getAccessTime(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=getAccessTime(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=newZipLong(DateUtils.currentTimeMillis());unixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=newZipLong(DateUtils.currentTimeMillis());unixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnnewZipLong(DateUtils.currentTimeMillis());}else{unixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS"));unixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS"));unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime());newZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime());if(d.getTime()!=null){for(Dated:d.getTime()){returnnewZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime());if(d.getTime()!=null){returnnewZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime());if(d.getTime()==null){returnnewZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime());Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime());if(d.getTime()!=null){for(inti=0;i<d.getTime();i++){ZipLongd=newZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime());if(d.getTime()!=null){for(inti=0;i<d.getTime();i++){returnnewZipLong(i+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime());if(d.getTime()!=null){for(inti=0;i<d.getTime();i++){returnnewZipLong(i,d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_HOUR,1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,0,1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);DateunixTimeToZipLong(d.getTime()/2+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");unixTimeToZipLong(d.getTime()/2+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);Dated=getChronology().dateToZipLong(d.getTime()/2+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);((ZipLong)d.getTime()/2+1).add(unixTimeToZipLong(d.getTime()/2+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);DateunixTimeToZipLong(d.getTime()/2+1);returnunixTimeToZipLong(d.getTime()/2+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),dateToZipLong(d));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d,dateToZipLong(d));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.length));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatunixTime=DateTimeUtils.currentTimeMillis();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatunixTime=dateToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525unixTime=DateTimeUtils.currentTimeMillis();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatunixTime=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit1_accessTimePresent){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_HOUR,d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getStartValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getLongValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_HOUR,d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getOID());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/100.0,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.toString());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getKey());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,date.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.TRY){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.FUNCTION){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime());}else{ZipLongunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getSize()-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_MINUTE,d.getSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getMinimumSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),this,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),this,d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime(),this);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_SECOND,null);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_SECOND,null);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,this);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime()/10000);}else{returnunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.TRY){returnunixTimeToZipLong(d.getTime()/10000);}else{returnunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{returnunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525unixTimeToZipLong(d.getTime()/1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525unixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525DateunixTimeToZipLong(d.getTime()/100000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525finalDateunixTimeToZipLong(d.getTime()/100000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.longValue()*DateTimeConstants.MILLIS_PER_SECOND;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.longValue()+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.longValue()*DateTimeConstants.MILLIS_PER_LONG;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.longValue()*DateTimeConstants.MILLIS_PER_DECEMBER;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.longValue()*DateTimeConstants.MILLIS_PER_MINUTE;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnthis.dateToZipLong.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.GETPROP){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.TRY){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY,4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,12);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime(),d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,l.getTime(),d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),l.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getChronology(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),localDate.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnuniqueTimeToZipLong(d.getTime()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10.0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getMillis()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+100.0,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+100.0,d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+100.0,d.getSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+100.0,d.getPeriodType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+100.0,d.type);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_MINUTE+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_MINUTE+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.length+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE*2+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);DateunixTimeToZipLong(d.getTime()*2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()*2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);Dated=getChronology().dateToZipLong(d.getTime()*2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);Dated=getChronology().dateToZipLong(d.getTime()*2);returnunixTimeToZipLong(d.getTime()*2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);Dated=getChronology().withZipLong(d.getTime()*2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);DateunixTimeToZipLong(d.getTime()*2);returnunixTimeToZipLong(d.getTime()*2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);Dated=getChronology().withZipLong(d.getTime()*2);unixTimeToZipLong(d.getTime()*2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(unixTimeToZipLong(d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getChronology().dateToZipLong(d.getTime());returnnewZipLong(unixTimeToZipLong(d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525finalDated=getChronology().dateToZipLong(d.getTime()/10000);returnnewZipLong(unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525finalDated=getChronology().dateToZipLong(d.getTime());returnnewZipLong(unixTimeToZipLong(d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getChronology().dateToZipLong(d.getTime());returnnewZipLong(unixTimeToZipLong(d.getTime())/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_SECOND,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_SECOND,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_SECOND+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}else{ZipLongunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime());}else{ZipLongunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.TRY){returnunixTimeToZipLong(d.getTime());}else{ZipLongunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.VAR){returnunixTimeToZipLong(d.getTime());}else{ZipLongunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY,d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.HOUR_OF_DAY,d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.byteValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525for(Dated:d.getTime()){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){for(Dated:d.getTime()){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){for(Dated:d.getTime()){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525for(Dated:d.getTime()){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getValue()!=null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/2);if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()/2
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()+1);if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_HOUR,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_HOUR)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_HOUR,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.toZipLong());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.toZipLong(),d.toString());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.toZipLong(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.toZipLong(),d.toCharArray());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.toZipLong(),d.toByteArray());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.toZipLong(),d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getStartTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/100.0,d.getEndTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,date.getEndTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getLastChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d.getTime(),d.getMillis()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d.getTime(),l));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d.getTime(),d.getChronology()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d.getTime(),d.getValue()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime(),dateToZipLong(d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d.getTime(),d.getType()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY,1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,0,1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,0,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_MINUTE,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_MINUTE,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getMillis(),d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getMillis(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getMillis(),d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getMillis(),d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getMillis(),d.getPeriod());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getMillis(),d.getVersion());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.length-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.length+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime(),d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getShortValue(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getLongValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,l.getTime(),d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),l.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_MINUTE,null);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_MINUTE,null);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,0,null);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,this);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnnewZipLong(unixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnnewZipLong(unixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>=null){returnnewZipLong(unixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnnewZipLong(unixTimeToZipLong(d.getTime()));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(unixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()+1000);}else{ZipLongunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()+1000);}else{ZipLongunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime()+1000);}else{ZipLongunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()+1000);}else{ZipLongunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMillis()+DateTimeConstants.MILLIS_PER_MINUTE);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-DateTimeConstants.MILLIS_PER_MINUTE);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMillIS_PER_MINUTE);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/100.0,d.getVersion());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-DateTimeConstants.HOUR_OF_DAY);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.HOUR_OF_DAY,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()+DateTimeConstants.HOUR_OF_DAY);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.HOUR_OF_DAY,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{returnZipLong.valueOf(d.getTime()).longValue();}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/10000);}else{returnZipLong.valueOf(d.getTime()).longValue();}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{((ZipLong)d.getTime()).longValue();}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{returnnewZipLong(d.getTime()).longValue();}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{returnLong.parseLong(d.getTime()).longValue();}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525DateunixTimeToZipLong(d.getTime()/1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{DateunixTimeToZipLong(d.getTime()/1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{finalDateunixTimeToZipLong(d.getTime()/1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{finalZipLongunixTimeToZipLong(d.getTime()/1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.HOUR_OF_DAY)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY)+2;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY)+4;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY)+3;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525for(inti=0;i<d.getLength();i++){returnLong.parseLong(i);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525luate(d.getType()){for(inti=0;i<d.getLength();i++){returnLong.parseLong(i);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.FUNCTION||d.getType()==Token.NAME){for(inti=0;i<d.getLength();i++){returnLong.parseLong(i);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){for(inti=0;i<d.getLength();i++){returnLong.parseLong(i);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.FUNCTION||d.getType()==Token.VAR){for(inti=0;i<d.getLength();i++){returnLong.parseLong(i);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.FUNCTION||d.getType()==Token.TRY){for(inti=0;i<d.getLength();i++){returnLong.parseLong(i);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<1000){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<1000){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<100){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525while(d.getTime()<1000){unixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<100){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/2);if(accessTime!=null){returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime());if(accessTime!=null){returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/2);if(accessTime!=null){returnaccess
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/2);if(accessTime==null){returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/2);if(accessTime!=null){returnaccess
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returncreateTimeToZipLong(d,d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returncreateTimeToZipLong(d.getTime(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returncreateTimeToZipLong(d.getTime(),unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returncreateTimeToZipLong(d,unixTime.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returncreateTimeToZipLong(d.getTime(),bit0_modifyTimePresent);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returncreateTimeToZipLong(d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525dateToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525dateToZipLong(d.getTime()/1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),d.getZipShort());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).minutes();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).setMaximumFractionDigits(1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).returnZipLong();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).returnZipLong(0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).setMillis(0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getSeconds()+DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMillis()+DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525ZipLongunixTimeToZipLong(d.getTime()/1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525finalZipLongunixTimeToZipLong(d.getTime()/1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_HOUR,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getKey());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_HOUR,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getValue()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getValue(),HEADER_ID);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/100.0,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*100.0,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,l.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,date.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getTime()/100.0,unixTime.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_MINUTE,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,0,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,DEFAULT_TIME_BIT,HEADER_ID);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,CREATE_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_MINUTE,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,DEFAULT_TIME_BIT+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getKey());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getValue()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525(ZipLong)d.clone();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.cloneTTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.cloneTail();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getChronology())+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,0,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_HOUR,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMillis(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime(),d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMillis(),HEADER_ID);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,l.getTime(),d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),l.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMillis(),0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longtime=d.getTime()%10000;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/1000);longtime=d.getTime()%1000;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);longtime=d.getTime()%10000;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);longtime=d.getTime()%10000;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_SECOND+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND*1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.length+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMinimumSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getTime(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525d=getTime(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Durationd=getTime(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525finalDated=getTime(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longd=getTime(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525dateToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);DateunixTimeToZipLong(d.getTime()-1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");unixTimeToZipLong(d.getTime()-1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);Dated=getChronology().dateToZipLong(d.getTime()-1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()-1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);Dated=getChronology().dateToZipLong(d.getTime()-1000);returnunixTimeToZipLong(d.getTime()-1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);Dated=getChronology().withZipLong(d.getTime()-1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getTime()*DateTimeConstants.MILLIS_PER_SECOND;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getTime()+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getTime()*DateTimeConstants.MILLIS_PER_MINUTE;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getTime()*DateTimeConstants.MILLIS_PER_DECEMBER;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getTime()*DateTimeConstants.MILLIS_PER_HOUR;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getTime()*DateTimeConstants.HOUR_OF_DAY;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),d,unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),d.toZipLong());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),d+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,l+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_SECOND,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,c);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,z);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longtime=d.getTime()/10000;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longtime=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10000);longtime=d.getTime()*10000;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);longtime=d.getTime()*10000;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime());longtime=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(modifyTimePresent){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Datemod0_modifyTimePresent=unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longmod0_modifyTimePresent=unixTimeToZipLong(d.getTime());if(mod1_modifyTimePresent){returnmod1_modifyTimePresent;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<=0){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<=0){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525while(d.getTime()<=0){unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>=0){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==0){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,DEFAULT_TIME_BIT,HEADER_ID);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,DEFAULT_TIME_BIT,MISSING_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,0,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,DEFAULT_TIME_BIT+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.HOUR_OF_DAY,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");unixTimeToZipLong(d.getTime()+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);unixTimeToZipLong(d.getTime()+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);if(d.getTime()+2!=null){returnunixTimeToZipLong(d.getTime()+2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);if(d.getTime()+2!=null){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime()+2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);if(d.getTime()+2!=null){for(Dated:d.getTime()){returnunixTimeToZipLong(d.getTime()+2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS"));unixTimeToZipLong(d.getTime()+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_MINUTE,d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()*DateTimeConstants.MILLIS_PER_MINUTE);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_HOUR,4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<1000){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit1_accessTimePresent){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-DateTimeConstants.MILLIS_PER_HOUR);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_HOUR,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMillIS_PER_HOUR);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getValue()!=null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnnewZipLong(accessTime
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getKey());returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimed=getChronology().dateToZipLong(d.getTime()/10000);unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeZipLongd=getChronology().dateToZipLong(d.getTime()/10000);unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getChronology().dateToZipLong(d.getTime()/10000);unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getChronology().dateToZipLong(d.getTime());unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longd=getChronology().dateToZipLong(d.getTime()/10000);unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeZipLongd=getChronology().dateToZipLong(d.getTime());unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimed=getChronology().dateToZipLong(d.getTime());unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_MINUTE)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE)+2;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_MINUTE)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE)+4;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE)+3;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/100.0,d.getCharset());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getCharacterEncoding());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getOffset());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime(),d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getValue(),l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,l.getTime(),d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getValue(),HEADER_ID);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),l.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getValue(),DATE_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/100.0,d.getPeriodType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getValueType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getPrimitiveType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,0,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,0,d.length);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_SECOND,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),1000,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),3000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),4000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),1000,0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),128);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/100.0,d.getParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getNext());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getName());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime(),d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime(),d.getZipShort());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/2);}else{DateunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/2);}else{DateunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.TRY){returnunixTimeToZipLong(d.getTime()/2);}else{DateunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525DateunixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnnewZipLong(unixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnnewZipLong(unixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.TRY){returnnewZipLong(unixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getZipShort()!=null){returnnewZipLong(unixTimeToZipLong(d.getZipShort());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.GETPROP){returnnewZipLong(unixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.MILLIS_PER_HOUR,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getChronology())+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMinYear());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),12);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10*DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR)+2;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+DateTimeConstants.MILLIS_PER_HOUR)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR)+4;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR)+3;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getYear());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMonth(),0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*DateTimeConstants.HOUR_OF_DAY,d.getMonth());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMonth()-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).dateToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).setTime(dateToZipLong(d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).dateToZipLong(d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getGrandparent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000,X5455_ExtendedTimestamp);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000,d.type);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000,fn);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000,fns);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),8);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()).longValue();if(accessTime!=null){returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()+1);if(accessTime!=null){returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longaccessTime=DateUtils.getZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()/1);if(accessTime!=null){returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnuniqueTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE*1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE+1,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()+DateTimeConstants.MILLIS_PER_MINUTE);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),DateTimeConstants.MILLIS_PER_MINUTE);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getShortMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMinimumMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getValue(),DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getValue(),this);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d).setTime(unixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d).setTime(unixTimeToZipLong(d.getTime()+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d).setTime(unixTimeToZipLong(d.getTime()+2));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,getTime(),d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getYearValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnuniqueTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);((ZipLong)d.getTime()).longValue();}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/10000);((ZipLong)d.getTime()).longValue();}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,ZipShort.toZipLong());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.toZipLong(),d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnthis.dateToZipLong.getLongValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getLastZipLong();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getMinimumMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getTime(),this));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getTime(),bits));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getTime()),this);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getTime(),bit1_modifyTimePresent));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getTime()),unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeZipLongd=getChronology().dateToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeZipLongd=getChronology().dateToZipLong(d.getTime());unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getChronology().dateToZipLong(d.getTime());unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<0){returnunixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<0){returnunixTimeToZipLong(d.getTime()-1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<0){returnunixTimeToZipLong(d.getTime()/100.0);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{ZipLongunixTimeToZipLong(d.getTime()/1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/10000);}else{ZipLongunixTimeToZipLong(d.getTime()/1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);ZipLongunixTimeToZipLong(d.getTime()/1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/10000);ZipLongunixTimeToZipLong(d.getTime()/1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getShortMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMillis(),d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),bit1_accessTimePresent);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_accessTimePresent){returnunixLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnnewZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()*DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,0,d.length);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getCharacterIndex());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/2);}else{((ZipLong)d.getTime()).append(unixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/2);}else{((ZipLong)d.getTime()).append(unixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/2);((ZipLong)d.getTime()).append(unixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}else{((ZipLong)d.getTime()).append(unixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/2);}else{((ZipLong)d.getTime()).append(unixTimeToZipLong(d.getTime()/2));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,getTime(),d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getTime()*DateTimeConstants.MILLIS_PER_LONG;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnthis.dateToZipLong.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{ZipLongunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/10000);}else{ZipLongunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/10000);}else{finalZipLongunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returndateToZipLong.getValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getValue()+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(modifyTime){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime());}else{returnnewZipLong(dateToZipLong(d.getTime()));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getBase());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getMinuteValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getID());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getCharset());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/2);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/2);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>=0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getOID());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.toZipLong());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getYearValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.dateToZipLong();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.dateToZipLong(d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,32);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{DateunixTimeToZipLong(d.getTime()/100000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/10000);}else{DateunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/10000);}else{DateunixTimeToZipLong(d.getTime()/100000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()*DateTimeConstants.MILLIS_PER_HOUR);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getYearValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getFieldType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525unixTime=DateTimeUtils.getInstance(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR*1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR*2+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()+DateTimeConstants.MILLIS_PER_SECOND);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.cloneTwin();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);ZipLongunixTimeToZipLong(d.getTime()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);if(d.getTime()==null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);if(d.getTime()==null){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);if(d.getTime()==null){if(bit0_modifyTimePresent){returnZipLong.valueOf(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);if(d.getTime()==null){if(bit0_modifyTimePresent){returnnewZipLong(dateToZipLong(d.getTime()+1));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);if(d.getTime()==null){if(bit0_modifyTimePresent){returnnewZipLong(DateUtils.currentTimeMillis());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(dateToZipLong==null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(modifyTime){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(dateToZipLong==null){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>=0){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getYearValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getShortChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getFieldType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<1000){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10);Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.monthOfYear);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.value);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()+DateTimeConstants.MILLIS_PER_HOUR);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnlenToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getDate());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,12);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/10000);}else{returnnewZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/10000);}else{returnnewZipLong(d.getTime()*10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+3);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,null+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,NUMBER_ID);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getBase());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.dateToZipLong(d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);ZipLongunixTimeToZipLong(d.getTime()/4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);IllegalArgumentExceptioniae=newZipLong(d.getTime()/4);unixTimeToZipLong(iae);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);if(d.getTime()>0){IllegalArgumentExceptioniae=newZipLong(d.getTime()/4);iae.setZipLong(iae);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);if(d.getTime()>0){IllegalArgumentExceptioniae=newZipLong(d.getTime()/4);iae.setZipLong(iae);returniae;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);IllegalArgumentExceptioniae=ZipShort.createZipLong(d.getTime()/4);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);if(d.getTime()>0){IllegalArgumentExceptioniae=newZipLong(dateToZipLong(d.getTime()/4);iae.removeChangeListener(this);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+100.0,d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+100.0,d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(dateToZipLong==null){returnunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/1000);longtime=d.getTime()/1000;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>=null){returnunixTimeToZipLong(d.getTime()/10000);}else{DateunixTimeToZipLong(d.getTime()/10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);ZipLongunixTimeToZipLong(d.getTime()/2+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);if(d.getTime()>0){ZipLongunixTime=newZipLong(d.getTime()/2+1);returnunixTimeToZipLong(d.getTime()/2+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);if(d.getTime()>0){IllegalArgumentExceptioniae=newZipLong(d.getTime()/2+1);iae.setZipLong(iae);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);if(d.getTime()>0){ZipLongunixTime=newZipLong(d.getTime()/2+1);returnunixTimeToZipLong(d.getTime()/3+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);IllegalArgumentExceptioniae=newZipLong(d.getTime()/2+1);unixTimeToZipLong(iae);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);if(d.getTime()>0){ZipLongunixTime=newZipLong(d.getTime()/2+1);returnunixTimeToZipLong(d.getTime()/4+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);if(d.getTime()>0){IllegalArgumentExceptioniae=newZipLong(d.getTime()/2+1);iae.setZipLong(iae);returniae;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returncreateTimeToZipLong(d,this.unixTime.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returncreateTimeToZipLong(d,l.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getChronology().dateToZipLong(d.getTime());returnnewZipLong(unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getChronology().dateToZipLong(d.getTime()/10000);returnnewZipLong(unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525finalDated=getChronology().dateToZipLong(d.getTime());returnnewZipLong(unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getChronology().dateToZipLong(d.getTime());returnnewZipLong(unixTimeToZipLong(d.getTime()+10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,l.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime())+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2-1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_accessTimePresent){returnZipLong.valueOf(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnZipLong.valueOf(d.getTime()).longValue();}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_accessTimePresent){returnZipLong.valueOf(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),null);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()*DateTimeConstants.HOUR_OF_DAY);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d,bit0_modifyTimePresent);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/100.0,d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime(),this);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.toZipLong());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime(),d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/10+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);if(d.getTime()>0){ZipLongunixTime=newZipLong(d.getTime()-1000);returnunixTimeToZipLong(d.getTime()-1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);if(d.getTime()>0){ZipLongunixTime=newZipLong(d.getTime()-1000);returnunixTimeToZipLong(d.getTime()-10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);if(d.getTime()>0){IllegalArgumentExceptioniae=ZipLong.valueOf(d.getTime()-1000);if(iae!=null){returniae;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);if(d.getTime()>0){IllegalArgumentExceptioniae=newZipLong(dateToZipLong(d.getTime()-1000));returniae;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);if(d.getTime()>0){ZipLongunixTime=newZipLong(d.getTime()-1000);returnunixTimeToZipLong(d.getTime()-100);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),createTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),BYTE_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/10000);}else{DateunixTimeToZipLong(d.getTime()/1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);DateunixTimeToZipLong(d.getTime()/1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d.getTime(),bit0_modifyTimePresent));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d.getTime(),d));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d.getTime(),unixTime));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d.getTime(),this));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,MODIFY_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,LIVE_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);ZipLongunixTimeToZipLong(d.getTime()+10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);Dated=getChronology().dateToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);Dated=getChronology().withZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);Dated=getTime(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,16);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d==null){returnunixTimeToZipLong(d.getTime()+1000);}else{ZipLongunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>=null){returnunixTimeToZipLong(d.getTime()+1000);}else{ZipLongunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime());}else{ZipLongunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());ZipLongunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,16);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,12);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getBase());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getIndex());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getLastValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMinuteValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longd=unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getChronology());Dated=d.getTime();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getUpperCase());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getShortVersion());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());ZipLongunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime());ZipLongunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d!=null){returnunixTimeToZipLong(d.getTime());ZipLongunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d==null){returnunixTimeToZipLong(d.getTime());ZipLongunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525df=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525unsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=getAccessTime(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=getAccessTime(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()+2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>=null){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getLastValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}else{returnnewZipLong(dateToZipLong(d.getTime()));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);if(d.getTime()+2!=null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);Dated=getChronology().dateToZipLong(d.getTime()+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);if(d.getTime()+2!=null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);if(d.getTime()+2!=null){if(bit0_modifyTimePresent){returnnewZipLong(DateUtils.currentTimeMillis());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);if(d.getTime()+2!=null){if(bit0_modifyTimePresent){returnZipLong.valueOf(d.getTime()+2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);Dated=getChronology().withZipLong(d.getTime()+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getLastChr());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getShortParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/DateTimeConstants.HOUR_OF_DAY,d);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,0,d.length);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,10);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getImmediateParentType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getParentType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returndateToZipLong.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnlong.longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){finalDated=d.getTime();if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDated=getChronology().dateToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returngetChronology().dateToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getMinimumSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>=null){returnnewZipLong(unixTimeToZipLong(d.getTime()));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),4096);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()+1000);}else{longunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()+1000);}else{longunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime());longunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());longunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>=0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime());if(accessTime==null){returnunixTimeToZipLong(accessTime.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()+1);if(accessTime==null){returnunixTimeToZipLong(accessTime.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525Dated=getChronology().dateToZipLong(d.getTime());returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longd=getChronology().dateToZipLong(d.getTime());returnunixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.getZipLong(d,this);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.getZipLong(dateToZipLong);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.getZipLong(d,unixTime);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.getZipLong(d+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,DEFAULT_TIME_BIT)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/2);ZipLongunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/2);ZipLongunixTimeToZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(dateToZipLong!=null){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime());if(d.getTime()!=null){if(bit0_modifyTimePresent){returnnewZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime());if(d.getTime()!=null){for(finalDated:d.getTime()){returnnewZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime());if(d.getTime()!=null){if(bit0_modifyTimePresent||bit2_createTimePresent){returnnewZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();ZipLongd=(ZipLong)d.clone();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();Dated=(Date)d.clone();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();ZipLongd=(ZipLong)d.clone();return(ZipLong)d.clone();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();Dated=(Date)d.clone();return(ZipLong)d.clone();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS"));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS"));unixTimeToZipLong(d.getTime()
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnnewZipLong(dateToZipLong(d.getTime()));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getYearValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getShortChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMinuteSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,ZipShort.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,this.accessTime.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.getTimeMillis(d));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),this);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_DAY,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnnewZipLong(dateToZipLong(d.getTime()));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_accessTimePresent){returnnewZipLong(dateToZipLong(d.getTime()+1000));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_accessTimePresent){returnnewZipLong(dateToZipLong(d.getTime()));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()*100.0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*100.0,d.getPeriodType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),d,this);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),DATE_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),d)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,0,null);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,DEFAULT_TIME_BIT)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(dateToZipLong==null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(dateToZipLong!=null){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525unixTime=unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/2);}else{returnnewZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/2);}else{returnnewZipLong(d.getTime()/2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.bytes);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.longValue()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getBase());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getIndex());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).setTime(unixTimeToZipLong(d.getTime()+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime()/10000);}else{ZipLongunixTimeToZipLong(d.getTime()/100000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()/10000);}else{ZipLongunixTimeToZipLong(d.getTime()/100000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.VAR){for(inti=0;i<d.getLength();i++){returnLong.parseLong(i);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.GETPROP){for(inti=0;i<d.getLength();i++){returnLong.parseLong(i);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.FUNCTION||d.getType()==Token.TIME){for(inti=0;i<d.getLength();i++){returnLong.parseLong(i);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returngetTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,t);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,ctxt);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getHour());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getMinuteSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getLastChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);ZipLongunixTimeToZipLong(d.getTime()*10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);if(d.getTime()<10000){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()*10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);if(d.getTime()<10000){if(bit0_modifyTimePresent){returnnewZipLong(dateToZipLong(d.getTime()*10000));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);if(d.getTime()<10000){if(bit0_modifyTimePresent){returnZipLong.valueOf(dateToZipLong(d.getTime()*10000));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);if(d.getTime()<10000){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()*1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);ZipLongunixTimeToZipLong(d.getTime()*1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);if(d.getTime()<10000){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()*100000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);ZipLongunixTimeToZipLong(d.getTime()*2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);if(d.getTime()>0){ZipLongunixTime=newZipLong(d.getTime()*2);returnunixTimeToZipLong(d.getTime()*2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);if(d.getTime()>0){ZipLongunixTime=newZipLong(d.getTime()*2);returnunixTimeToZipLong(d.getTime()*4);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);if(d.getTime()>0){ZipLongunixTime=newZipLong(d.getTime()*2);returnunixTimeToZipLong(d.getTime()*1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);if(d.getTime()>0){ZipLongunixTime=newZipLong(d.getTime()*2);returnunixTimeToZipLong(d.getTime()*3);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);if(d.getTime()>0){IllegalArgumentExceptioniae=newZipLong(d.getTime()*2);iae.setZipLong(iae);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);if(d.getTime()>0){IllegalArgumentExceptioniae=newZipLong(d.getTime());iae.setZipLong(iae);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateUtils.currentTimeMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=newZipLong(DateUtils.currentTimeMillis());unixTimeToZipLong(d.getTime()+2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(dateToZipLong==null){returnnewZipLong(unixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(dateToZipLong!=null){returnnewZipLong(unixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnnewZipLong(unixTimeToZipLong(d.getTime());}else{returnnewZipLong(unixTimeToZipLong(d.getTime()));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.getValue()/DateTimeConstants.MILLIS_PER_HOUR;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.getValue()/DateTimeConstants.MILLIS_PER_SECOND;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS"));unixTimeToZipLong(d.getTime()*1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getMonth());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(modifyTime){returnunixTimeToZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).setTime(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).setTime(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getMinimumValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getEndValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getMonthOfYear());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getMinimumValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDated=getChronology().dateToZipLong(d.getTime()/10000);unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimed=getChronology().dateToZipLong(d.getTime());unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime()*2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longunixTimeToZipLong(d.getTime()-1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525intunixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returntoZipLong(d.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewLong(d.longValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime()+2);if(accessTime!=null){returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,l.getTime()/100.0,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,this.accessTime.getTime(),d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getMillis(),d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime(),d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525d=unixTimeToZipLong(d.getTime()+1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,0,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,0,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,0,d.byteValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMinimumValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,HEADER_ID);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnthis.d.getValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getKey();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnthis.dateToZipLong(d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime());}else{ZipLongunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()*2);}else{ZipLongunixTimeToZipLong(d.getTime()*2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime());}else{finalZipLongunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,l.getTime()/100.0,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longbit0_modifyTimePresent=unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getTime()*100.0);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525while(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){for(Dated:d.getTime()){returnunixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),d.dateToZipLong());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,this.accessTime.getTime(),d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),d.getMillis(),DATE_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getShortParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getParent()+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longunixTime=unixTimeToZipLong(d.getTime()/10000);((ZipLong)d.getTime()).longValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525while(d.getTime()<=0){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<=0){returnunixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<=0){returnnewZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);if(d.getTime()+2!=null){if(bit0_modifyTimePresent){returnnewZipLong(d.getTime()+2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);if(d.getTime()+2!=null){returnunixTimeToZipLong(d.getTime()+2);}else{ZipLongaccessTime=super.dateToZipLong(d.getTime()+1);returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+2);if(d.getTime()+2!=null){returnunixTimeToZipLong(d.getTime()+2);}else{ZipLongaccessTime=getAccessTime(d.getTime()+1);returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getShortCharset());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getOID());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longtime=d.getTime()*10000;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);longunixTimeToZipLong(d.getTime()-1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);if(d.getTime()<1000){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()-1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);if(d.getTime()<1000){if(bit0_modifyTimePresent){returnnewZipLong(d.getTime()-1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);if(d.getTime()>0){if(modifyTimePresent){returnnewZipLong(d.getTime()-1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);if(d.getTime()<1000){if(bit0_modifyTimePresent){returngetZipLong(d.getTime()-1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()-1000);IllegalArgumentExceptioniae=newZipLong(d.getTime()-1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(unixTimeToZipLong(d.getTime()/10000));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525n=getChronology().dateToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(unixTimeToZipLong(d.getTime()+10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525finalDated=getChronology().dateToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returngetChronology().dateToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525while(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnnewZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnunixTimeToZipLong(d.getTime()*2);}else{returnnewZipLong(d.getTime()*2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMonth(),d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<60){returnunixTimeToZipLong(d.getTime()+60000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.days);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.monthOfMonth());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525unixTimeToZipLong(d.getTime()/1000);UnsupportedDateTimeFormatdf=newUnsupportedDateTimeFormat("yyyy-MM-dd'T'HH:mm:ss.SSS");
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525unixTimeToZipLong(d.getTime(),d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525unixTimeToZipLong(d.getTime()-1000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,l.getTime()/100.0,d.getPeriodType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getImmediateParentPointer());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getPrimitiveType());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getPrimaryKey());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixZipLong(d.getTime());}else{ZipLongaccessTime=getAccessTime(d.getValue());returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,l.getTime()/100.0,d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.cloneTwoLong();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.intValue();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10*DateTimeConstants.MILLIS_PER_HOUR);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),bit0_modifyTimePresent);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);if(d.getTime()>0){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime()/4);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/4);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);if(d.getTime()>4){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime()/4);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/4);}else{ZipLongaccessTime=DateUtils.currentTimeMillis();returnnewZipLong(accessTime.getTime()/4);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/4);}else{ZipLongaccessTime=DateUtils.currentTimeMillis();returncreateTime(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()/4);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/4);if(d.getTime()>0){if(unixTimeToZipLong(d.getTime()/4);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).append(unixTimeToZipLong(d.getTime()/2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).append(unixTimeToZipLong(d.getTime()+2);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).append(modifyTimeToZipLong(d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d.getTime()).setTime(modifyTimeToZipLong(d.getTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnZipLong.valueOf(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){if(bit0_modifyTimePresent){returnZipLong.valueOf(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){if(bit0_modifyTimePresent){returnZipLong.valueOf(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){if(bit0_modifyTimePresent){returnZipLong.valueOf(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);if(d.getTime()+10000!=null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);if(d.getTime()+10000!=null){returnunixTimeToZipLong(d.getTime()+10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);if(d.getTime()<10000){returnunixTimeToZipLong(d.getTime()+10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);if(d.getTime()+10000!=null){if(bit0_modifyTimePresent){returnunixLong(d.getTime()+10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);if(d.getTime()+10000!=null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+100000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+10000);if(d.getTime()+10000!=null){if(bit0_modifyTimePresent){returnZipLong.valueOf(d.getTime()+10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime());if(accessTime==null){returnunixTimeToZipLong(accessTime.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){ZipLongaccessTime=DateUtils.getZipLong(d.getTime());if(accessTime==null){returnunixTimeToZipLong(accessTime.getTime()*2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}else{DateunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime());}else{DateunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}else{finalDateunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnunixTimeToZipLong(d.getTime());}else{returnnewZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND)-1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,this.accessTime.getTime(),d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<=0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()-1);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnaccessTime;}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnthis.dateToZipLong(d,d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getTime(),bit0_modifyTime));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d,d.getTime()+1));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){if(bit0_modifyTimePresent){returnunixLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(modifyTime){returnunixLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525longbit0_modifyTimePresent=unixLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,DEFAULT_TIME_BIT)+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,DATE_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<=0){returnunixTimeToZipLong(d.getTime()/2);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()-1);}else{ZipLongaccessTime=getAccessTime(d.getTime()-1);returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+10);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getCharacterIndex());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>=0){returnunixTimeToZipLong(d.getTime());if(accessTime!=null){returnunixTimeToZipLong(accessTime.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);longunixTimeToZipLong(d.getTime()*10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);if(d.getTime()*10000!=null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()*10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);if(d.getTime()<100){returnunixTimeToZipLong(d.getTime()*10000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);if(d.getTime()<10000){returnunixTimeToZipLong(d.getTime()*1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*10000);if(d.getTime()<10000){returnunixTimeToZipLong(d.getTime()*10000);}else{ZipLongaccessTime=createTime(d.getTime());returnnewZipLong(accessTime);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getValue(),d.getCharacterIndex());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getValue(),d.getShortValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(!bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1000);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+100.0,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+100.0,d.getParent());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND,d.getMonth());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,d.getMinimumSize());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_BIT,DEFAULT_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,MODIFY_TIME_BIT);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnDateTimeUtils.getZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getTime());if(d.getTime()!=null){returnnewZipLong(d.getTime());}else{returnnewZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.HOUR_OF_DAY,DEFAULT_TIME_BIT,l);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnunixTimeToZipLong(d.getTime());}else{returnnewZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<=0){returnunixTimeToZipLong(d.getTime());}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){returnunixTimeToZipLong(d.getTime()+1);}else{thrownewIllegalArgumentException("");}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getPeriod());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returncreateTimeToZipLong(d.getTime(),d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returncreateTimeToZipLong(d,this.accessTime.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525UnsupportedDateTimeFormatunixTime=d.currentTimeMillis();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getMinimumValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525while(d.getType()!=Token.FUNCTION){for(inti=0;i<d.getLength();i++){returnLong.parseLong(i);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525while(d.getType()==Token.FUNCTION){for(inti=0;i<d.getLength();i++){returnLong.parseLong(i);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()!=Token.FUNCTION){for(inti=0;i<d.getLength();i++){returnLong.parseLong(i);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();Dated=(ZipLong)d.clone();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525return(ZipLong)d.clone();Dated=(ZipLong)d.clone();return(ZipLong)d.clone();
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525d=unixTimeToZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d.getTime(),d.getSize()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d.getTime(),d.getEndTime()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(dateToZipLong(d.getTime(),d.getCharset()));
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()>0){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525d=unixTimeToZipLong(d.getTime()/10000);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()==null){returnnewZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_DAY,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_SECOND+1,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1DateTimeConstants.MILLIS_PER_SECOND+1);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);if(d.getTime()*2!=null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()*2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);if(d.getTime()*2!=null){returnunixTimeToZipLong(d.getTime()*2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);if(d.getTime()*2==null){returnunixTimeToZipLong(d.getTime()*2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);if(d.getTime()*2!=null){if(unixTimeToZipLong(d.getTime()*2==null)){returnnewZipLong(d.getTime()*2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);if(d.getTime()*2!=null){if(bit0_modifyTimePresent){returnnewZipLong(d.getTime()*2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()*2);if(d.getTime()*2!=null){if(unixTimeToZipLong(d.getTime()*2==null)){returnnewZipLong(d.getTime()*3);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(DateTimeUtils.currentTimeMillis(),d.getZone());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getSecond());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/100.0,d.getSecondTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d,l.getTime()/100.0,d.getEndTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getLongValue()*DateTimeConstants.MILLIS_PER_SECOND;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnnewZipLong(d.getLongValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getLongValue()*DateTimeConstants.MILLIS_PER_HOUR;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnd.getLongValue()*DateTimeConstants.MILLIS_PER_MINUTE;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getShortChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_MINUTE,d.getChronology())+1;
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimetoZipLong(d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getType()==Token.NAME){returnnewZipLong(unixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){returnnewZipLong(unixTimeToZipLong(d.getTime()).longValue());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()!=null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime());}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);if(d.getTime()+1!=null){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);if(d.getTime()+1!=null){returnunixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);if(d.getTime()+1>=null){returnunixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);if(d.getTime()+1!=null){if(unixTimeToZipLong(d.getTime()+1)==null){returnnewZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);if(d.getTime()+1!=null){if(bit0_modifyTimePresent){returnnewZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);if(d.getTime()+1!=null){if(unixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()+1);if(d.getTime()+1!=null){if(unixTimeToZipLong(d.getTime()+1)==null){returnnewZipLong(d.getTime()+2);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);if(d.getTime()>0){if(unixTimeToZipLong(d.getTime()/2+1)==null){returnunixTimeToZipLong(d.getTime()/2+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);if(d.getTime()>0){if(unixTimeToZipLong(d.getTime()/2+1)==null){returnnewZipLong(d.getTime()/2+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);if(d.getTime()>0){if(modifyTimePresent){returnunixTimeToZipLong(d.getTime()/2+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);if(d.getTime()>0){if(modifyTimePresent){returnnewZipLong(unixTimeToZipLong(d.getTime()/2+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/2+1);if(d.getTime()>0){if(modifyTimePresent){returnnewZipLong(unixTimeToZipLong(d.getTime()/2+1));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime()/DateTimeConstants.MILLIS_PER_HOUR,d.getTime());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(d.getTime()<1000){if(bit0_modifyTimePresent){returnunixTimeToZipLong(d.getTime()+1);}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000,d.getMillis());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000,d.getChronology());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000,d.getValue());
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525returnunixTimeToZipLong(d.getTime(),10000,d.second);
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525if(bit0_modifyTimePresent){returnnewZipLong(dateToZipLong(d.getTime()+10000));}
projects/Compress46/src/main/java/org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.java525((ZipLong)d).setTime(unixTimeToZipLong(d.getTime()+1);
