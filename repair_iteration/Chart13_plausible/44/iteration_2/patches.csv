bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  LengthConstraintType.FI  [CE]  ')'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  LengthConstraintType.FI  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  LengthConstraintType.FI	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[3],    null,    RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getHeight()    -    w[2]),    LengthConstraintType.RANGE,    h[3],    null,    	non-compiled	[CE]  ')'  expected	25	None	replace
2	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  LengthConstraintType.FI  [CE]  ')'  expected  [FE]          java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  LengthConstraintType.FI  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  LengthConstraintType.FI	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[3],    null,    RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getHeight()    -    w[2]),    LengthConstraintType.RANGE,    h[3],    null,    	non-compiled	[CE]  ')'  expected	25	None	replace
3	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FI  [CE]  ')'  expected  [FE]          java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FI  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FI	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[2],    null,    RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    LengthConstraintType.FIXED);    	non-compiled	[CE]  ')'  expected	27	None	replace
4	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  new  Range(0.0,  constraint.getWi  [CE]  ')'  expected  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  new  Range(0.0,  constraint.getWi  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  new  Range(0.0,  constraint.getWi	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[2],    null,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    	non-compiled	[CE]  ')'  expected	7	None	replace
5	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  new  Range(0.0,  constraint.getW  [CE]  ')'  expected  [FE]                  java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  new  Range(0.0,  constraint.getW  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  new  Range(0.0,  constraint.getW	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[2],    null,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    	non-compiled	[CE]  ')'  expected	7	None	replace
6	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  Length  [CE]  ')'  expected  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  Length  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  Length	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getHeight()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType    	non-compiled	[CE]  ')'  expected	5	None	replace
7	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  [CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,Range,LengthConstraintType)  [FE]                  java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getHeight()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType    	non-compiled	[CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,Range,LengthConstraintType)	5	None	replace
8	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  new  Range(0.0,  constraint.getWi  [CE]  ')'  expected  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  new  Range(0.0,  constraint.getWi  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  new  Range(0.0,  constraint.getWi	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[2],    null,    new    Range(0.0,    constraint.getWi    	non-compiled	[CE]  ')'  expected	8	None	replace
9	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  [CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,Range,LengthConstraintType)  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[3]),    LengthConstraintType.RANGE,    h[3],    null,    new    Range(0.0,    constraint.getWidth()    -    w[3]),    	non-compiled	[CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,Range,LengthConstraintType)	3	None	replace
10	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  [CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,Range,LengthConstraintType)  [FE]                  java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[3]),	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[3]),    LengthConstraintType.RANGE,    h[3],    null,    new    Range(0.0,    constraint.getWidth()    -    w[3]),    	non-compiled	[CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,Range,LengthConstraintType)	3	None	replace
11	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  LengthConstraintType.RANGE,  h[3],  null,  LengthConstraintType.FI  [CE]  ')'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  LengthConstraintType.RANGE,  h[3],  null,  LengthConstraintType.FI  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  LengthConstraintType.RANGE,  h[3],  null,  LengthConstraintType.FI	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    LengthConstraintType.FI    	non-compiled	[CE]  ')'  expected	24	None	replace
12	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getWi  [CE]  ')'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getWi  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getWi	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getHeight()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getWi    	non-compiled	[CE]  ')'  expected	28	None	replace
13	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  [CE]  ')'  expected  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[3],    null,    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,	  	non-compiled	[CE]  ')'  expected	14	None	add
14	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FI  [CE]  ')'  expected  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FI  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[3],    null,    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FI	  	non-compiled	[CE]  ')'  expected	14	None	add
15	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  [CE]  ')'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[3],    null,    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,	  	non-compiled	[CE]  ')'  expected	14	None	add
16	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  [CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,Range,LengthConstraintType)  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2]),	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getHeight()    -    w[2]),    Length    	non-compiled	[CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,Range,LengthConstraintType)	23	None	replace
17	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  [CE]  ')'  expected  [FE]                  java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getHeight()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    	non-compiled	[CE]  ')'  expected	20	None	replace
18	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[3]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWi  [CE]  ')'  expected  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[3]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWi  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[3]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWi	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[3]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getWi    	non-compiled	[CE]  ')'  expected	29	None	replace
19	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  [CE]  ')'  expected  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[3]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getWi    	non-compiled	[CE]  ')'  expected	29	None	replace
20	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c4);	  Size2D    size    =    this.rightBlock.arrange(g2,    c4);    	non-compiled	[CE]  not  a  statement	4	None	replace
21	[BUG]  [BUGGY]  Size2D  w[3]  =  this.centerBlock.arrange(g2,  c4);  [CE]  ']'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  Size2D  w[3]  =  this.centerBlock.arrange(g2,  c4);  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	Size2D  w[3]  =  this.centerBlock.arrange(g2,  c4);	  Size2D    w[3]    =    this.rightBlock.arrange(g2,    c4);    	non-compiled	[CE]  ']'  expected	31	None	replace
22	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2])  [CE]  ')'  expected  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2])  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2])	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getHeight()    -    w[2]),    	non-compiled	[CE]  ')'  expected	19	None	replace
23	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[4],  null,  new  Range(0.0,  constraint.getWi  [CE]  ')'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[4],  null,  new  Range(0.0,  constraint.getWi  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[4],  null,  new  Range(0.0,  constraint.getWi	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[3],    null,    new    Range(0.0,    constraint.getWi    	non-compiled	[CE]  ')'  expected	13	None	replace
24	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  [CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,Range,LengthConstraintType)  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2]),	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getHeight()    -    w[2]),    	non-compiled	[CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,Range,LengthConstraintType)	21	None	replace
25	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  h[3],  null,  [CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,double,<null>,LengthConstraintType)  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  h[3],  null,  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  h[3],  null,	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[3],    null,    h[3],    null,    	non-compiled	[CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,double,<null>,LengthConstraintType)	33	None	replace
26	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[4],  null,  h[4],  null,  [CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,double,<null>,LengthConstraintType)  [FE]          java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[4],  null,  h[4],  null,  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[4],  null,  h[4],  null,	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[3],    null,    h[3],    null,    	non-compiled	[CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,double,<null>,LengthConstraintType)	33	None	replace
27	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  [CE]  ')'  expected  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getHeight()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    	non-compiled	[CE]  ')'  expected	22	None	replace
28	[BUG]  [BUGGY]  Size2D  w[3]  =  this.bottomBlock.arrange(g2,  c3);  [CE]  ']'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  Size2D  w[3]  =  this.bottomBlock.arrange(g2,  c3);  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	Size2D  w[3]  =  this.bottomBlock.arrange(g2,  c3);	  Size2D    w[3]    =    this.centerBlock.arrange(g2,    c3);    	non-compiled	[CE]  ']'  expected	1	None	replace
29	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  [CE]  ')'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getHeight()    -    	non-compiled	[CE]  ')'  expected	32	None	replace
30	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getHeight()  -  [CE]  ')'  expected  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getHeight()  -  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getHeight()  -	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getHeight()    -    	non-compiled	[CE]  ')'  expected	32	None	replace
31	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  LengthConstraintType.RANGE  [CE]  ')'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  LengthConstraintType.RANGE  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  LengthConstraintType.RANGE	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[2],    null,    RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    LengthConstraintType.FI    	non-compiled	[CE]  ')'  expected	10	None	replace
32	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getWi  [CE]  ')'  expected  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getWi  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getWi	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[2],    null,    new    Range(0.0,    constraint.getWi    	non-compiled	[CE]  ')'  expected	8	None	replace
33	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWi  [CE]  ')'  expected  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWi  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWi	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getHeight()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FI    	non-compiled	[CE]  ')'  expected	2	None	replace
34	[BUG]  [BUGGY]  Size2D  w[2]  =  this.centerBlock.arrange(g2,  c3);  [CE]  ']'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  Size2D  w[2]  =  this.centerBlock.arrange(g2,  c3);  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	Size2D  w[2]  =  this.centerBlock.arrange(g2,  c3);	  Size2D    w[3]    =    this.centerBlock.arrange(g2,    c3);    	non-compiled	[CE]  ']'  expected	1	None	replace
35	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2])  [CE]  ')'  expected  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2])  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2])	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getHeight()    -    w[2]),    	non-compiled	[CE]  ')'  expected	21	None	replace
36	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  LengthConstraintType.FI  [CE]  ')'  expected  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  LengthConstraintType.FI  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[3],    null,    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  LengthConstraintType.FI	  	non-compiled	[CE]  ')'  expected	14	None	add
37	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  [CE]  ')'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getHeight()    -    	non-compiled	[CE]  ')'  expected	32	None	replace
38	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  [CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,Range,LengthConstraintType)  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getWidth()  -  w[3]),	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[3]),    LengthConstraintType.RANGE,    h[3],    null,    new    Range(0.0,    constraint.getWidth()    -    w[3]),    	non-compiled	[CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,Range,LengthConstraintType)	3	None	replace
39	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getWi  [CE]  ')'  expected  [FE]                  java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getWi  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getWi	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[3]),    LengthConstraintType.RANGE,    h[3],    null,    new    Range(0.0,    constraint.getWidth()    -    w[3]),    	non-compiled	[CE]  ')'  expected	3	None	replace
40	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FI  [CE]  ')'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FI  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[3]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FI	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    LengthConstraintType.FI    	non-compiled	[CE]  ')'  expected	24	None	replace
41	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  [CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,Range,LengthConstraintType)  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[2],    null,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    	non-compiled	[CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,Range,LengthConstraintType)	7	None	replace
42	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED  [CE]  ')'  expected  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[3],  null,  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[3],    null,    RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED	  	non-compiled	[CE]  ')'  expected	14	None	add
43	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  '  [CE]  illegal  line  end  in  character  literal  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  '  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  '	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getHeight()    -    	non-compiled	[CE]  illegal  line  end  in  character  literal	32	None	replace
44	[BUG]  [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]  [CE]  ')'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c1  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]	  RectangleConstraint    c1    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getHeight()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getWi    	non-compiled	[CE]  ')'  expected	28	None	replace
45	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  LengthConstraintType.FI  [CE]  ')'  expected  [FE]          java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  LengthConstraintType.FI  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  LengthConstraintType.FI	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[2],    null,    RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[2],    null,    LengthConstraintType.FI    	non-compiled	[CE]  ')'  expected	11	None	replace
46	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED  [CE]  ')'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[2],    null,    RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    LengthConstraintType.FIXED    	non-compiled	[CE]  ')'  expected	26	None	replace
47	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  Length  [CE]  ')'  expected  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  Length  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getHeight()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  Length	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getHeight()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FI    	non-compiled	[CE]  ')'  expected	2	None	replace
48	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2]  [CE]  ')'  expected  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2]  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  new  Range(0.0,  constraint.getHeight()  -  w[2]	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[2],    null,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    	non-compiled	[CE]  ')'  expected	7	None	replace
49	[BUG]  [BUGGY]  Size2D  w[2]  =  this.rightBlock.arrange(g2,  c4);  [CE]  ']'  expected  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  Size2D  w[2]  =  this.rightBlock.arrange(g2,  c4);  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	Size2D  w[2]  =  this.rightBlock.arrange(g2,  c4);	  Size2D    w[3]    =    this.rightBlock.arrange(g2,    c4);    	non-compiled	[CE]  ']'  expected	31	None	replace
50	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  LengthConstraintType.RANGE  [CE]  ')'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  LengthConstraintType.RANGE  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.FIXED,  h[2],  null,  LengthConstraintType.RANGE	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.FIXED,    h[2],    null,    RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[2],    null,    LengthConstraintType.FI    	non-compiled	[CE]  ')'  expected	10	None	replace
51	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[4],  null,  h[3],  null,  [CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,double,<null>,LengthConstraintType)  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[4],  null,  h[3],  null,  [BUGGY]      new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[4],  null,  h[3],  null,	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[2]),    LengthConstraintType.RANGE,    h[3],    null,    h[3],    null,    	non-compiled	[CE]  no  suitable  constructor  found  for  RectangleConstraint(double,Range,LengthConstraintType,double,<null>,double,<null>,LengthConstraintType)	33	None	replace
52	[BUG]  [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getWidth()  -  w[3]  [CE]  ')'  expected  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      if  (this.leftBlock  !=  null)  {  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  }  h[3]  =  h[2];  if  (this.rightBlock  !=  null)  {      [BUGGY]  RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getWidth()  -  w[3]  [BUGGY]      RectangleConstraint  c4  =  new  RectangleConstraint(0.0,      new  Range(0.0,  constraint.getWidth()  -  w[2]),          LengthConstraintType.RANGE,  h[2],  null,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[2],  null,  LengthConstraintType.FIXED);  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  w[3]  =  size.width;  }  h[4]  =  h[2];  w[4]  =  constraint.getWidth()  -  w[3]  -  w[2];  RectangleConstraint  c5  =  new  RectangleConstraint(w[4],  h[4]);  if  (this.centerBlock  !=  null)  {  [CLASS]  BorderArrangement  [METHOD]  arrangeFF  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  RectangleConstraint  constraint  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  c5  constraint  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	454	456	1	replace	RectangleConstraint  c4  =  new  RectangleConstraint(0.0,  new  Range(0.0,  constraint.getWidth()  -  w[2]),  LengthConstraintType.RANGE,  h[3],  null,  new  Range(0.0,  constraint.getWidth()  -  w[3]	  RectangleConstraint    c4    =    new    RectangleConstraint(0.0,    new    Range(0.0,    constraint.getWidth()    -    w[3]),    LengthConstraintType.RANGE,    h[3],    null,    new    Range(0.0,    constraint.getWidth()    -    w[3]),    	non-compiled	[CE]  ')'  expected	3	None	replace
