bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW,  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  [CE]  ')'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW,  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  [BUGGY]    new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW,  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);	  RectangleConstraint    c3    =    new    RectangleConstraint(0.0,    new    Range(Math.min(w[2],    maxW,    height),    LengthConstraintType.RANGE,    0.0,    null,    	non-compiled	[CE]  ')'  expected	9	None	replace
2	[BUG]  [BUGGY]  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW,  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE  [CE]  ')'  expected  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW,  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE  [BUGGY]    new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW,  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE	  RectangleConstraint    c3    =    new    RectangleConstraint(0.0,    new    Range(Math.min(w[2],    maxW,    height),    LengthConstraintType.RANGE,    0.0,    null,    	non-compiled	[CE]  ')'  expected	9	None	replace
3	[BUG]  [BUGGY]      double  height  =  Math.max(width  -  w[2],  0.0);  double  height  =  Math.max(width  -  w[2],  0.0);  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]      double  height  =  Math.max(width  -  w[2],  0.0);  double  height  =  Math.max(width  -  w[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	        double    height    =    Math.max(width    -    w[2],    0.0);    double  height  =  Math.max(width  -  w[2],  0.0);	  	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	add
4	[BUG]  [BUGGY]      double  height  =  Math.max(width  -  w[2],  0.0);  Double  height  =  Math.max(width  -  w[2],  0.0);  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]      double  height  =  Math.max(width  -  w[2],  0.0);  Double  height  =  Math.max(width  -  w[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	        double    height    =    Math.max(width    -    w[2],    0.0);    Double  height  =  Math.max(width  -  w[2],  0.0);	  	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	add
5	[BUG]  [BUGGY]      double  height  =  Math.max(width  -  w[2],  0.0);  double  height  =  Math.max(height  -  w[2],  0.0);  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]      double  height  =  Math.max(width  -  w[2],  0.0);  double  height  =  Math.max(height  -  w[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	        double    height    =    Math.max(width    -    w[2],    0.0);    double  height  =  Math.max(height  -  w[2],  0.0);	  	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	add
6	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  [CE]  not  a  statement  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c3);	      Size2D    size    =    this.rightBlock.arrange(g2,    c1);    	non-compiled	[CE]  not  a  statement	3	None	replace
7	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  [CE]  not  a  statement  [FE]              java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c4);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c4);	      Size2D    size    =    this.rightBlock.arrange(g2,    c1);    	non-compiled	[CE]  not  a  statement	3	None	replace
8	[BUG]  [BUGGY]      double  height  =  Math.max(width  -  w[2],  maxW);  double  height  =  Math.max(width  -  w[2],  maxW);  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]      double  height  =  Math.max(width  -  w[2],  maxW);  double  height  =  Math.max(width  -  w[2],  maxW);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	        double    height    =    Math.max(width    -    w[2],    maxW);    double  height  =  Math.max(width  -  w[2],  maxW);	  	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	7	None	add
9	[BUG]  [BUGGY]      double  height  =  Math.max(width  -  w[2],  maxW);  Double  height  =  Math.max(width  -  w[2],  maxW);  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]      double  height  =  Math.max(width  -  w[2],  maxW);  Double  height  =  Math.max(width  -  w[2],  maxW);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	        double    height    =    Math.max(width    -    w[2],    maxW);    Double  height  =  Math.max(width  -  w[2],  maxW);	  	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	7	None	add
10	[BUG]  [BUGGY]      double  height  =  Math.max(width  -  w[2],  maxW);  double  height  =  Math.max(height  -  w[2],  maxW);  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]      double  height  =  Math.max(width  -  w[2],  maxW);  double  height  =  Math.max(height  -  w[2],  maxW);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	        double    height    =    Math.max(width    -    w[2],    maxW);    double  height  =  Math.max(height  -  w[2],  maxW);	  	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	7	None	add
11	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]      h[2]  =  Math.max(h[2],  maxW);  h[2]  =  Math.max(h[2],  maxW);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	add	        h[2]    =    Math.max(h[2],    maxW);    h[2]  =  Math.max(h[2],  maxW);	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
12	[BUG]  [BUGGY]      h[2]  =  Math.max(h[2],  maxW);  h[2]  =  Math.max(h[2],  maxW);  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]      h[2]  =  Math.max(h[2],  maxW);  h[2]  =  Math.max(h[2],  maxW);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	        h[2]    =    Math.max(h[2],    maxW);    h[2]  =  Math.max(h[2],  maxW);	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
13	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]      h[2]  =  Math.max(h[2],  maxW);  w[2]  =  Math.max(h[2],  maxW);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	add	        h[2]    =    Math.max(h[2],    maxW);    w[2]  =  Math.max(h[2],  maxW);	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
14	[BUG]  [BUGGY]      h[2]  =  Math.max(h[2],  maxW);  w[2]  =  Math.max(h[2],  maxW);  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]      h[2]  =  Math.max(h[2],  maxW);  w[2]  =  Math.max(h[2],  maxW);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	        h[2]    =    Math.max(h[2],    maxW);    w[2]  =  Math.max(h[2],  maxW);	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	add
15	[BUG]  [BUGGY]  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  [CE]  ')'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  [BUGGY]    new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);	  RectangleConstraint    c3    =    new    RectangleConstraint(0.0,    new    Range(Math.min(w[2],    maxW),    maxW,    LengthConstraintType.RANGE,    0.0,    null,    	non-compiled	[CE]  ')'  expected	4	None	replace
16	[BUG]  [BUGGY]  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE  [CE]  ')'  expected  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE  [BUGGY]    new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW,  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE	  RectangleConstraint    c3    =    new    RectangleConstraint(0.0,    new    Range(Math.min(w[2],    maxW),    maxW,    LengthConstraintType.RANGE,    0.0,    null,    	non-compiled	[CE]  ')'  expected	4	None	replace
17	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  0.0,  height);  [CE]  not  a  statement  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  0.0,  height);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	double  maxW  =  Math.max(width  -  w[2],  0.0,  height);	      double    maxW    =    Math.max(width    -    w[2],    0.0);    	non-compiled	[CE]  not  a  statement	2	None	replace
18	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  0.0,  width);  [CE]  not  a  statement  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  0.0,  width);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	double  maxW  =  Math.max(width  -  w[2],  0.0,  width);	      double    maxW    =    Math.max(width    -    w[2],    0.0);    	non-compiled	[CE]  not  a  statement	2	None	replace
19	[BUG]  [BUGGY]  h[2]  =  Math.max(w[2],  maxW);  [CE]  not  a  statement  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  h[2]  =  Math.max(w[2],  maxW);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	h[2]  =  Math.max(w[2],  maxW);	      h[2]    =    Math.max(h[2],    maxW);    	non-compiled	[CE]  not  a  statement	12	None	replace
20	[BUG]  [BUGGY]  double  height  =  Math.max(width  -  maxW[2],  0.0);  [CE]  not  a  statement  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  double  height  =  Math.max(width  -  maxW[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	double  height  =  Math.max(width  -  maxW[2],  0.0);	      double    height    =    Math.max(width    -    w[2],    0.0);    	non-compiled	[CE]  not  a  statement	6	None	replace
21	[BUG]  [BUGGY]  double  height  =  Math.max(width  -  w[2],  maxW,  0.0);  [CE]  not  a  statement  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  double  height  =  Math.max(width  -  w[2],  maxW,  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	double  height  =  Math.max(width  -  w[2],  maxW,  0.0);	      double    height    =    Math.max(width    -    w[2],    maxW);    	non-compiled	[CE]  not  a  statement	8	None	replace
22	[BUG]  [BUGGY]  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW,  height),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  [CE]  ')'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW,  height),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  [BUGGY]    new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW,  height),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);	  RectangleConstraint    c3    =    new    RectangleConstraint(0.0,    new    Range(Math.min(w[2],    maxW,    height),    LengthConstraintType.RANGE,    0.0,    null,    	non-compiled	[CE]  ')'  expected	9	None	replace
23	[BUG]  [BUGGY]      h[2]  =  Math.max(h[2],  maxW);  h[2]  =  Math.max(h[2],  maxw);  [CE]  cannot  find  symbol  maxw  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]      h[2]  =  Math.max(h[2],  maxW);  h[2]  =  Math.max(h[2],  maxw);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	        h[2]    =    Math.max(h[2],    maxW);    h[2]  =  Math.max(h[2],  maxw);	  	non-compiled	[CE]  cannot  find  symbol  maxw	11	None	add
24	[BUG]  [BUGGY]  double  height  =  Math.max(width  -  w[3],  0.0);  [CE]  not  a  statement  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  double  height  =  Math.max(width  -  w[3],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	double  height  =  Math.max(width  -  w[3],  0.0);	      double    height    =    Math.max(width    -    w[2],    0.0);    	non-compiled	[CE]  not  a  statement	6	None	replace
25	[BUG]  [BUGGY]  double  width  =  Math.max(width  -  w[2],  0.0);  [CE]  not  a  statement  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  double  width  =  Math.max(width  -  w[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	double  width  =  Math.max(width  -  w[2],  0.0);	      double    maxW    =    Math.max(width    -    w[2],    0.0);    	non-compiled	[CE]  not  a  statement	2	None	replace
26	[BUG]  [BUGGY]  double  height  =  Math.max(height  -  w[2],  0.0);  [CE]  not  a  statement  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);    [BUGGY]  double  height  =  Math.max(height  -  w[2],  0.0);  [BUGGY]    RectangleConstraint  c3  =  new  RectangleConstraint(0.0,      new  Range(Math.min(w[2],  maxW),  maxW),          LengthConstraintType.RANGE,  0.0,  null,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	302	304	1	replace	double  height  =  Math.max(height  -  w[2],  0.0);	      double    height    =    Math.max(width    -    w[2],    0.0);    	non-compiled	[CE]  not  a  statement	6	None	replace
