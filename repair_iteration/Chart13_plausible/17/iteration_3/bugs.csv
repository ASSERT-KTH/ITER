bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  width  =  Math.min(w[2],  0.0,  maxW);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.min(w[2],  0.0,  maxW);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.min(w[2],  0.0,  maxW);	  double    width    =    Math.min(w[2],    0.0,    height);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	24	None	replace
2	[BUG]  [BUGGY]  double  width  =  Math.min(w[2],  0.0,  height,  maxW);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.min(w[2],  0.0,  height,  maxW);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.min(w[2],  0.0,  height,  maxW);	  double    width    =    Math.min(w[2],    0.0,    height);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	24	None	replace
3	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  1.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	add	double  maxW  =  Math.max(width  /  w[2],  1.0);	  double    maxW    =    Math.max(width    /    w[2],    0.0);    double    maxW    =    Math.max(width    /    w[2],    1.0);    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	29	1	replace
4	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  1.0);  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  1.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  /  w[2],  1.0);	  double    maxW    =    Math.max(width    /    w[2],    0.0);    double    maxW    =    Math.max(width    /    w[2],    1.0);    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	29	1	replace
5	[BUG]  [BUGGY]  double  height  =  Math.max(width,  w[2],  width,  0.0);  [CE]  no  suitable  method  found  for  max(double,double,double,double)  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.max(width,  w[2],  width,  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(width,  w[2],  width,  0.0);	  double    height    =    Math.max(width    -    w[2],    width,    0.0);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double,double)	18	None	replace
6	[BUG]  [BUGGY]  w[2]  =  this.rightBlock.arrange(g2,  c4);  [CE]  cannot  find  symbol  c4  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  w[2]  =  this.rightBlock.arrange(g2,  c4);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	w[2]  =  this.rightBlock.arrange(g2,  c4);	  w[2]    =    this.rightBlock.arrange(g2,    c1);    	non-compiled	[CE]  cannot  find  symbol  c4	8	None	replace
7	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  *  w[2],  0.0);  double  maxW  =  Math.max(width  *  w[2],  0.0);  [CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  *  w[2],  0.0);  double  maxW  =  Math.max(width  *  w[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double    maxW    =    Math.max(width    *    w[2],    0.0);    double  maxW  =  Math.max(width  *  w[2],  0.0);	  	non-compiled	[CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	10	None	add
8	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  *  w[2],  0.0);  Double  maxW  =  Math.max(width  *  w[2],  0.0);  [CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  *  w[2],  0.0);  Double  maxW  =  Math.max(width  *  w[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double    maxW    =    Math.max(width    *    w[2],    0.0);    Double  maxW  =  Math.max(width  *  w[2],  0.0);	  	non-compiled	[CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	10	None	add
9	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  *  w[2],  0.0);  w[2]  =  Math.max(width  *  w[2],  0.0);  [CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  *  w[2],  0.0);  w[2]  =  Math.max(width  *  w[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double    maxW    =    Math.max(width    *    w[2],    0.0);    w[2]  =  Math.max(width  *  w[2],  0.0);	  	non-compiled	[CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	10	None	add
10	[BUG]  [BUGGY]  Size2D  w[2]  =  this.rightBlock.arrange(g2,  c4);  [CE]  ']'  expected  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  Size2D  w[2]  =  this.rightBlock.arrange(g2,  c4);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	Size2D  w[2]  =  this.rightBlock.arrange(g2,  c4);	  Size2D    w[2]    =    this.rightBlock.arrange(g2,    c1);    	non-compiled	[CE]  ']'  expected	13	None	replace
11	[BUG]  [BUGGY]  double  height  =  Math.max(width  -  w[2],  width);  [CE]  cannot  find  symbol  maxW  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.max(width  -  w[2],  width);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(width  -  w[2],  width);	  double    height    =    Math.max(width    -    w[2],    maxW);    	non-compiled	[CE]  cannot  find  symbol  maxW	28	None	replace
12	[BUG]  [BUGGY]  double  width  =  Math.max(width  -  w[2],  maxW,  h);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.max(width  -  w[2],  maxW,  h);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.max(width  -  w[2],  maxW,  h);	  double    width    =    Math.max(width    -    w[2],    h);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	31	None	replace
13	[BUG]  [BUGGY]  double  width  =  Math.max(width  -  w[2],  maxW);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.max(width  -  w[2],  maxW);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.max(width  -  w[2],  maxW);	  double    width    =    Math.max(width    -    w[2],    h);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	31	None	replace
14	[BUG]  [BUGGY]  double  height  =  Math.max(width[2],  0.0);  [CE]  array  required,  but  double  found  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.max(width[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(width[2],  0.0);	  double    height    =    Math.max(w[2],    0.0);    	non-compiled	[CE]  array  required,  but  double  found	20	None	replace
15	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  width);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	add	double  maxW  =  Math.max(width  -  w[2],  width);	  double    maxW    =    Math.max(width    -    w[2],    maxW);    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	21	1	replace
16	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  width);  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  width);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  -  w[2],  width);	  double    maxW    =    Math.max(width    -    w[2],    maxW);    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	21	1	replace
17	[BUG]  [BUGGY]  Double  height  =  Math.min(w[2],  0.0);  [CE]  incompatible  types  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  Double  height  =  Math.min(w[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	Double  height  =  Math.min(w[2],  0.0);	          double    height    =    Math.min(w[2],    0.0);    double    height    =    Math.min(w[2],    0.0);    	non-compiled	[CE]  incompatible  types	1	None	replace
18	[BUG]  [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.getHeight());  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.getHeight());  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.min(w[2],  0.0,  this.rightBlock.getHeight());	  double    width    =    Math.min(w[2],    0.0,    this.rightBlock.getWidth());    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	6	None	replace
19	[BUG]  [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.getWidth()  +  1);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.getWidth()  +  1);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.min(w[2],  0.0,  this.rightBlock.getWidth()  +  1);	  double    width    =    Math.min(w[2],    0.0,    this.rightBlock.getWidth());    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	6	None	replace
20	[BUG]  [BUGGY]  double  maxW  =  Math.max(w[2  /  this.rightBlock[2],  0.0);  [CE]  ']'  expected  [FE]          java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(w[2  /  this.rightBlock[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(w[2  /  this.rightBlock[2],  0.0);	  double    maxW    =    Math.max(width    /    this.rightBlock[2],    0.0);    	non-compiled	[CE]  ']'  expected	12	None	replace
21	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  *  this.rightBlock[2],  0.0);  [CE]  array  required,  but  Block  found  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  *  this.rightBlock[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  *  this.rightBlock[2],  0.0);	  double    maxW    =    Math.max(width    /    this.rightBlock[2],    0.0);    	non-compiled	[CE]  array  required,  but  Block  found	12	None	replace
22	[BUG]  [BUGGY]  double  height  =  Math.max(width  -  this.rightBlock[2],  0.0);  [CE]  array  required,  but  Block  found  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.max(width  -  this.rightBlock[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(width  -  this.rightBlock[2],  0.0);	  double    height    =    Math.max(width    -    w[2],    0.0);    	non-compiled	[CE]  array  required,  but  Block  found	33	None	replace
23	[BUG]  [BUGGY]  double  height  =  Math.min(width,  w[2],  0.0);  [CE]  no  suitable  method  found  for  min(double,double,double)  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.min(width,  w[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.min(width,  w[2],  0.0);	  double    height    =    Math.min(width[2],    0.0);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double,double)	26	None	replace
24	[BUG]  [BUGGY]  float  maxW  =  Math.max(width  /  w[2],  0.0);  [CE]  possible  loss  of  precision  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  float  maxW  =  Math.max(width  /  w[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	float  maxW  =  Math.max(width  /  w[2],  0.0);	  double    maxW    =    Math.max(width    /    w[2],    0.0);    float    maxW    =    Math.max(width    /    w[2],    0.0);    	non-compiled	[CE]  possible  loss  of  precision	23	None	replace
25	[BUG]  [BUGGY]  double  width  =  Math.max(width  /  this.rightBlock.w[2],  0.0);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.max(width  /  this.rightBlock.w[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.max(width  /  this.rightBlock.w[2],  0.0);	  double    maxW    =    Math.max(width    /    this.rightBlock.w[2],    0.0);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	30	None	replace
26	[BUG]  [BUGGY]  w[2]  =  Math.max(width  /  w[2],  0.0);  [CE]  cannot  find  symbol  maxW  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  w[2]  =  Math.max(width  /  w[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	w[2]  =  Math.max(width  /  w[2],  0.0);	  double    maxW    =    Math.max(width    /    w[2],    0.0);    w[2]    =    Math.max(width    /    w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  maxW	17	None	replace
27	[BUG]  [BUGGY]  w[2]  =  Math.max(width  *  w[2],  0.0);  [CE]  cannot  find  symbol  maxW  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  w[2]  =  Math.max(width  *  w[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	w[2]  =  Math.max(width  *  w[2],  0.0);	  double    maxW    =    Math.max(width    /    w[2],    0.0);    w[2]    =    Math.max(width    /    w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  maxW	17	None	replace
28	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(w[2]  *  width,  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	add	double  maxW  =  Math.max(w[2]  *  width,  0.0);	  double    maxW    =    Math.max(width    *    w[2],    0.0);    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	replace
29	[BUG]  [BUGGY]  double  maxW  =  Math.max(w[2]  *  width,  0.0);  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(w[2]  *  width,  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(w[2]  *  width,  0.0);	  double    maxW    =    Math.max(width    *    w[2],    0.0);    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	replace
30	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  *  this.rightBlock.w[2],  0.0);  [CE]  cannot  find  symbol  w  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  *  this.rightBlock.w[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  *  this.rightBlock.w[2],  0.0);	  double    maxW    =    Math.max(width    *    w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  w	11	None	replace
31	[BUG]  [BUGGY]  Double  height  =  Math.max(w[2],  0.0);  [CE]  incompatible  types  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  Double  height  =  Math.max(w[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	Double  height  =  Math.max(w[2],  0.0);	          double    height    =    Math.min(w[2],    0.0);    double    height    =    Math.max(w[2],    0.0);    	non-compiled	[CE]  incompatible  types	32	None	replace
32	[BUG]  [BUGGY]  float  height  =  Math.min(w[2],  0.0);  [CE]  possible  loss  of  precision  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  float  height  =  Math.min(w[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	float  height  =  Math.min(w[2],  0.0);	          double    height    =    Math.min(w[2],    0.0);    float    height    =    Math.min(w[2],    0.0);    	non-compiled	[CE]  possible  loss  of  precision	25	None	replace
33	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  maxW,  0.0,  LengthConstraintType.NONE);  [CE]  no  suitable  method  found  for  max(double,double,double,LengthConstraintType)  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  maxW,  0.0,  LengthConstraintType.NONE);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  -  w[2],  maxW,  0.0,  LengthConstraintType.NONE);	  double    maxW    =    Math.max(width    -    w[2],    maxW,    0.0);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double,LengthConstraintType)	19	None	replace
34	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  maxW,  0.0,  length);  [CE]  cannot  find  symbol  length  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  maxW,  0.0,  length);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  -  w[2],  maxW,  0.0,  length);	  double    maxW    =    Math.max(width    -    w[2],    maxW,    0.0);    	non-compiled	[CE]  cannot  find  symbol  length	19	None	replace
35	[BUG]  [BUGGY]  Double  maxW  =  Math.max(width  /  w[2],  0.0);  [CE]  incompatible  types  [FE]          java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  Double  maxW  =  Math.max(width  /  w[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	Double  maxW  =  Math.max(width  /  w[2],  0.0);	  double    maxW    =    Math.max(width    /    w[2],    0.0);    Double    maxW    =    Math.max(width    /    w[2],    0.0);    	non-compiled	[CE]  incompatible  types	16	None	replace
36	[BUG]  [BUGGY]  w[2]  =  Math.min(w[2],  0.0);  [CE]  cannot  find  symbol  maxW  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  w[2]  =  Math.min(w[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	w[2]  =  Math.min(w[2],  0.0);	          double    height    =    Math.min(w[2],    0.0);    w[2]    =    Math.min(w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  maxW	4	None	replace
37	[BUG]  [BUGGY]  double  maxW  =  Math.max(w[2]  -  width[2],  h);  [CE]  array  required,  but  double  found  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(w[2]  -  width[2],  h);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(w[2]  -  width[2],  h);	  double    maxW    =    Math.max(width    -    w[2],    h);    	non-compiled	[CE]  array  required,  but  double  found	22	None	replace
38	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  h,  height);  [CE]  cannot  find  symbol  height  [FE]                java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  h,  height);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  -  w[2],  h,  height);	  double    maxW    =    Math.max(width    -    w[2],    h);    	non-compiled	[CE]  cannot  find  symbol  height	22	None	replace
39	[BUG]  [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.width,  size.height);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.width,  size.height);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.min(w[2],  0.0,  this.rightBlock.width,  size.height);	  double    width    =    Math.min(w[2],    0.0,    this.rightBlock.width);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	replace
40	[BUG]  [BUGGY]          double    height    =    Math.min(w[2],    0.0);    w[2]  =  Math.min(w[2],  0.0);  double  height  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]          double    height    =    Math.min(w[2],    0.0);    w[2]  =  Math.min(w[2],  0.0);  double  height  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	                double        height        =        Math.min(w[2],        0.0);        w[2]    =    Math.min(w[2],    0.0);    double  height  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);	  	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	3	None	add
41	[BUG]  [BUGGY]          double    height    =    Math.min(w[2],    0.0);    w[2]  =  Math.min(w[2],  0.0);  Double  height  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]          double    height    =    Math.min(w[2],    0.0);    w[2]  =  Math.min(w[2],  0.0);  Double  height  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	                double        height        =        Math.min(w[2],        0.0);        w[2]    =    Math.min(w[2],    0.0);    Double  height  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);	  	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	3	None	add
42	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]          double    height    =    Math.min(w[2],    0.0);    w[2]  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	add	                double        height        =        Math.min(w[2],        0.0);        w[2]    =    Math.min(w[2],    0.0);    w[2]  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
43	[BUG]  [BUGGY]          double    height    =    Math.min(w[2],    0.0);    w[2]  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]          double    height    =    Math.min(w[2],    0.0);    w[2]  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	                double        height        =        Math.min(w[2],        0.0);        w[2]    =    Math.min(w[2],    0.0);    w[2]  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);	  	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	3	1	add
44	[BUG]  [BUGGY]  double  height  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(h[2],  0.0);  [CE]  cannot  find  symbol  maxW  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(h[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.min(w[2],  0.0);  w[2]  =  Math.min(h[2],  0.0);	          double    height    =    Math.min(w[2],    0.0);    w[2]    =    Math.min(w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  maxW	4	None	replace
45	[BUG]  [BUGGY]  double  height  =  Math.max(height  -  w[2],  maxW,  0.0);  [CE]  cannot  find  symbol  maxW  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.max(height  -  w[2],  maxW,  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(height  -  w[2],  maxW,  0.0);	  double    height    =    Math.max(width    -    w[2],    width,    0.0);    	non-compiled	[CE]  cannot  find  symbol  maxW	18	None	replace
46	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  *  w[2],  0.0);  float  maxW  =  Math.max(width  *  w[2],  0.0);  [CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  *  w[2],  0.0);  float  maxW  =  Math.max(width  *  w[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double    maxW    =    Math.max(width    *    w[2],    0.0);    float  maxW  =  Math.max(width  *  w[2],  0.0);	  	non-compiled	[CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	10	None	add
47	[BUG]  [BUGGY]  double  width  =  Math.max(width  /  w[2],  1.0);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.max(width  /  w[2],  1.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.max(width  /  w[2],  1.0);	  double    maxW    =    Math.max(width    /    w[2],    0.0);    double    maxW    =    Math.max(width    /    w[2],    1.0);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	29	None	replace
48	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  /  this.rightBlock.width[2],  0.0);  [CE]  cannot  find  symbol  width  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  /  this.rightBlock.width[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  /  this.rightBlock.width[2],  0.0);	  double    maxW    =    Math.max(width    /    this.rightBlock.w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  width	30	None	replace
49	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  0.0,  height);  [CE]  cannot  find  symbol  height  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  /  w[2],  0.0,  height);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  /  w[2],  0.0,  height);	  double    maxW    =    Math.max(width    /    w[2],    0.0);    double    maxW    =    Math.max(width    /    w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  height	15	None	replace
50	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  /  this.rightBlock[2],  width,  0.0);  [CE]  array  required,  but  Block  found  [FE]          java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  /  this.rightBlock[2],  width,  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  /  this.rightBlock[2],  width,  0.0);	  double    maxW    =    Math.max(width    /    this.rightBlock[2],    0.0);    	non-compiled	[CE]  array  required,  but  Block  found	12	None	replace
51	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  /  this.rightBlock[2],  height,  0.0);  [CE]  array  required,  but  Block  found  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  /  this.rightBlock[2],  height,  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  /  this.rightBlock[2],  height,  0.0);	  double    maxW    =    Math.max(width    /    this.rightBlock[2],    0.0);    	non-compiled	[CE]  array  required,  but  Block  found	12	None	replace
52	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  maxW,  0.0,  LengthConstraintType.RANGE);  [CE]  no  suitable  method  found  for  max(double,double,double,LengthConstraintType)  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  maxW,  0.0,  LengthConstraintType.RANGE);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  -  w[2],  maxW,  0.0,  LengthConstraintType.RANGE);	  double    maxW    =    Math.max(width    -    w[2],    maxW,    0.0);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double,double,LengthConstraintType)	19	None	replace
53	[BUG]  [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.width  +  1);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.width  +  1);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.min(w[2],  0.0,  this.rightBlock.width  +  1);	  double    width    =    Math.min(w[2],    0.0,    this.rightBlock.width);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	replace
54	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  *  this.rightBlock.width[2],  0.0);  [CE]  cannot  find  symbol  width  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  *  this.rightBlock.width[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  *  this.rightBlock.width[2],  0.0);	  double    maxW    =    Math.max(width    *    w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  width	11	None	replace
55	[BUG]  [BUGGY]  double  width  =  Math.min(w[2],  0.0,  h);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.min(w[2],  0.0,  h);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.min(w[2],  0.0,  h);	  double    width    =    Math.min(w[2],    0.0,    height);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	24	None	replace
56	[BUG]  [BUGGY]  double  width  =  Math.max(width  /  w[2],  0.0);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.max(width  /  w[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.max(width  /  w[2],  0.0);	  double    maxW    =    Math.max(width    /    w[2],    0.0);    double    maxW    =    Math.max(width    /    w[2],    0.0);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	15	None	replace
57	[BUG]  [BUGGY]          double    height    =    Math.min(w[2],    0.0);    w[2]  =  Math.min(w[2],  0.0);  double  height  =  Math.max(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  [CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]          double    height    =    Math.min(w[2],    0.0);    w[2]  =  Math.min(w[2],  0.0);  double  height  =  Math.max(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	                double        height        =        Math.min(w[2],        0.0);        w[2]    =    Math.min(w[2],    0.0);    double  height  =  Math.max(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);	  	non-compiled	[CE]  variable  height  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	3	None	add
58	[BUG]  [BUGGY]  double  height  =  Math.max(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  [CE]  cannot  find  symbol  maxW  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.max(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(w[2],  0.0);  w[2]  =  Math.min(w[2],  0.0);	          double    height    =    Math.min(w[2],    0.0);    w[2]    =    Math.min(w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  maxW	4	None	replace
59	[BUG]  [BUGGY]  double  height  =  Math.min(width  w[2],  0.0);  [CE]  ')'  expected  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.min(width  w[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.min(width  w[2],  0.0);	  double    height    =    Math.min(width[2],    0.0);    	non-compiled	[CE]  ')'  expected	26	None	replace
60	[BUG]  [BUGGY]  double  height  =  Math.min(h[2],  0.0);  [CE]  cannot  find  symbol  maxW  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.min(h[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.min(h[2],  0.0);	          double    height    =    Math.min(w[2],    0.0);    double    height    =    Math.min(w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  maxW	1	None	replace
61	[BUG]  [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.height);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.height);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.min(w[2],  0.0,  this.rightBlock.height);	  double    width    =    Math.min(w[2],    0.0,    this.rightBlock.width);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	5	None	replace
62	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  h,  w[3]);  [CE]  no  suitable  method  found  for  max(double,double[],double)  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  -  w[2],  h,  w[3]);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  -  w[2],  h,  w[3]);	  double    maxW    =    Math.max(width    -    w[2],    h);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double[],double)	22	None	replace
63	[BUG]  [BUGGY]  double  height  =  Math.max(width  -  w[2],  maxHeight,  0.0);  [CE]  cannot  find  symbol  maxHeight  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.max(width  -  w[2],  maxHeight,  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(width  -  w[2],  maxHeight,  0.0);	  double    height    =    Math.max(width    -    w[2],    maxW,    0.0);    	non-compiled	[CE]  cannot  find  symbol  maxHeight	27	None	replace
64	[BUG]  [BUGGY]  double  height  =  Math.max(width  -  w[2],  h);  [CE]  no  suitable  method  found  for  max(double,double[])  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.max(width  -  w[2],  h);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(width  -  w[2],  h);	  double    height    =    Math.max(width    -    w[2],    maxW);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double[])	28	None	replace
65	[BUG]  [BUGGY]  double  height  =  Math.max(h[2],  0.0);  [CE]  cannot  find  symbol  maxW  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.max(h[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(h[2],  0.0);	          double    height    =    Math.min(w[2],    0.0);    double    height    =    Math.max(w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  maxW	32	None	replace
66	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  /  this.rightBlock,  w[2],  0.0);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]          java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  /  this.rightBlock,  w[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  /  this.rightBlock,  w[2],  0.0);	  double    maxW    =    Math.max(width    /    this.rightBlock[2],    0.0);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	12	None	replace
67	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  /  this.rightBlock.length[2],  0.0);  [CE]  cannot  find  symbol  length  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  /  this.rightBlock.length[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  maxW  =  Math.max(width  /  this.rightBlock.length[2],  0.0);	  double    maxW    =    Math.max(width    /    this.rightBlock[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  length	12	None	replace
68	[BUG]  [BUGGY]  double  height  =  Math.max(this.rightBlock.width[2],  0.0);  [CE]  cannot  find  symbol  width  [FE]        java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.max(this.rightBlock.width[2],  0.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(this.rightBlock.width[2],  0.0);	  double    height    =    Math.max(w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  width	20	None	replace
69	[BUG]  [BUGGY]  double  width  =  Math.max(width  -  w[2],  height);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.max(width  -  w[2],  height);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.max(width  -  w[2],  height);	  double    width    =    Math.max(width    -    w[2],    h);    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	31	None	replace
70	[BUG]  [BUGGY]  double  height  =  Math.max(width  /  w[2],  0.0);  w[2]  =  Math.max(height  /  w[2],  0.0);  [CE]  cannot  find  symbol  maxW  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.max(width  /  w[2],  0.0);  w[2]  =  Math.max(height  /  w[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(width  /  w[2],  0.0);  w[2]  =  Math.max(height  /  w[2],  0.0);	  double    maxW    =    Math.max(width    /    w[2],    0.0);    w[2]    =    Math.max(width    /    w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  maxW	17	None	replace
71	[BUG]  [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.getWidth()  /  2.0);  [CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]              java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  width  =  Math.min(w[2],  0.0,  this.rightBlock.getWidth()  /  2.0);  [BUGGY]      double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  width  =  Math.min(w[2],  0.0,  this.rightBlock.getWidth()  /  2.0);	  double    width    =    Math.min(w[2],    0.0,    this.rightBlock.getWidth());    	non-compiled	[CE]  variable  width  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	6	None	replace
72	[BUG]  [BUGGY]  double  height  =  Math.max(width  -  this.rightBlock.w[2],  0.0);  [CE]  cannot  find  symbol  w  [FE]            java.lang.IllegalArgumentException:  Range(double      [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  height  =  Math.max(width  -  this.rightBlock.w[2],  0.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double  height  =  Math.max(width  -  this.rightBlock.w[2],  0.0);	  double    height    =    Math.max(width    -    w[2],    0.0);    	non-compiled	[CE]  cannot  find  symbol  w	33	None	replace
73	[BUG]  [BUGGY]  double  maxW  =  Math.max(width  *  w[2],  0.0);  double  maxW  =  Math.max(width  *  w[2],  1.0);  [CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    java.lang.IllegalArgumentException:  Range(double    [CONTEXT]      }  RectangleConstraint  c2  =  new  RectangleConstraint(0.0,  new  Range(0.0,  width),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  if  (this.leftBlock  !=  null)  {  Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {      [BUGGY]  double  maxW  =  Math.max(width  *  w[2],  0.0);  double  maxW  =  Math.max(width  *  w[2],  1.0);  [BUGGY]      RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	301	301	1	replace	double    maxW    =    Math.max(width    *    w[2],    0.0);    double  maxW  =  Math.max(width  *  w[2],  1.0);	  	non-compiled	[CE]  variable  maxW  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	10	None	add
