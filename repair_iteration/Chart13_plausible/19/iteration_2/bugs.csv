bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	      Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    h;    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	12	1	replace
2	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	      Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    h;    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	12	1	replace
3	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;	      Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	6	1	replace
4	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [FE]  NullPointerException  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;	      Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	6	1	replace
5	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	      Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	6	1	replace
6	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [FE]  NullPointerException  [FE]              java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	      Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	6	1	replace
7	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[3]    =    size.width;    	compilable	  [FE]  NullPointerException  	10	1	replace
8	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  [FE]  NullPointerException  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[3]    =    size.width;    	compilable	  [FE]  NullPointerException  	10	1	replace
9	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.centerBlock.arrange(g2,  c1);	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    	compilable	  [FE]  NullPointerException  	2	1	replace
10	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c1);	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    	compilable	  [FE]  NullPointerException  	2	1	replace
11	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.leftBlock.arrange(g2,  c1);	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    	compilable	  [FE]  NullPointerException  	9	1	replace
12	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  [FE]  NullPointerException  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c1);	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    	compilable	  [FE]  NullPointerException  	9	1	replace
13	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.bottomBlock.arrange(g2,  c1);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c3);    	compilable	  [FE]  NullPointerException  	8	1	replace
14	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c1);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c1);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c3);    	compilable	  [FE]  NullPointerException  	8	1	replace
15	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	4	1	replace
16	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [FE]  NullPointerException  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	4	1	replace
17	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	4	1	replace
18	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [FE]  NullPointerException  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	4	1	replace
19	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.bottomBlock.arrange(g2,    c3);    Size2D  size  =  this.bottomBlock.arrange(g2,  c3);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	7	None	add
20	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.bottomBlock.arrange(g2,    c3);    Size2D  size  =  this.bottomBlock.arrange(g2,  c4);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	7	None	add
21	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  Size2D  size  =  this.bottomBlock.arrange(g2,  c2);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.bottomBlock.arrange(g2,    c3);    Size2D  size  =  this.bottomBlock.arrange(g2,  c2);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	7	None	add
22	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;	      Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	5	1	replace
23	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c1);  w[3]  =  size.width;  h[3]  =  size.height;	      Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	5	1	replace
24	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    Size2D  size  =  this.centerBlock.arrange(g2,  c3);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	1	None	add
25	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]      NullPointerException    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    Size2D  size  =  this.centerBlock.arrange(g2,  c4);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	1	None	add
26	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]        NullPointerException    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c1);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    Size2D  size  =  this.centerBlock.arrange(g2,  c1);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	1	None	add
27	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.rightBlock.arrange(g2,  c1);	  Size2D    size    =    this.rightBlock.arrange(g2,    c4);    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	replace
28	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c1);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c1);	  Size2D    size    =    this.rightBlock.arrange(g2,    c4);    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	11	1	replace
29	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  [CE]  cannot  find  symbol  c4  [FE]    NullPointerException    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c4);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c4);	  Size2D    size    =    this.centerBlock.arrange(g2,    c3);    	non-compiled	[CE]  cannot  find  symbol  c4	2	None	replace
30	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  Size2D  size  =  this.centerBlock.arrange(g2,  c2);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.centerBlock.arrange(g2,    c3);    Size2D  size  =  this.centerBlock.arrange(g2,  c2);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	1	None	add
31	[BUG]  [BUGGY]  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	      Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	5	1	replace
32	[BUG]  [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [FE]  java.lang.IllegalArgumentException:  Range(double  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	      Size2D    size    =    this.rightBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  java.lang.IllegalArgumentException:  Range(double  	5	1	replace
33	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	      Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	6	1	replace
34	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [FE]  NullPointerException  [FE]            java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[2]  =  size.height;	      Size2D    size    =    this.centerBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	6	1	replace
35	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  Size2D  size  =  this.topBlock.arrange(g2,  c3);  [CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)  [FE]    NullPointerException    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c3);  Size2D  size  =  this.topBlock.arrange(g2,  c3);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D    size    =    this.bottomBlock.arrange(g2,    c3);    Size2D  size  =  this.topBlock.arrange(g2,  c3);	  	non-compiled	[CE]  variable  size  is  already  defined  in  method  arrangeFN(BlockContainer,Graphics2D,double)	7	None	add
36	[BUG]  [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  [CE]  cannot  find  symbol  c4  [FE]    NullPointerException    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.bottomBlock.arrange(g2,  c4);  [BUGGY]    w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.bottomBlock.arrange(g2,  c4);	  Size2D    size    =    this.bottomBlock.arrange(g2,    c3);    	non-compiled	[CE]  cannot  find  symbol  c4	8	None	replace
37	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  [CE]  cannot  find  symbol  c4  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c4);  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c4);	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    	non-compiled	[CE]  cannot  find  symbol  c4	9	None	replace
38	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[3]    =    size.width;    	compilable	  [FE]  NullPointerException  	10	1	replace
39	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  [FE]  NullPointerException  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[3]    =    size.width;    	compilable	  [FE]  NullPointerException  	10	1	replace
40	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	4	1	replace
41	[BUG]  [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [FE]  NullPointerException  [FE]        java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.leftBlock.arrange(g2,  c3);  w[2]  =  size.width;  h[3]  =  size.height;	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[3]    =    size.width;    h[3]    =    size.height;    	compilable	  [FE]  NullPointerException  	4	1	replace
42	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	add	Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[3]    =    size.width;    	compilable	  [FE]  NullPointerException  	10	1	replace
43	[BUG]  [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  [FE]  NullPointerException  [FE]          java.lang.IllegalArgumentException:  Range(double    [CONTEXT]    Size2D  size  =  this.leftBlock.arrange(g2,  c2);  w[2]  =  size.width;  h[2]  =  size.height;  }  if  (this.rightBlock  !=  null)  {  double  maxW  =  Math.max(width  -  w[2],  0.0);  RectangleConstraint  c3  =  new  RectangleConstraint(0.0,  new  Range(Math.min(w[2],  maxW),  maxW),  LengthConstraintType.RANGE,  0.0,  null,  LengthConstraintType.NONE);    [BUGGY]  Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;  [BUGGY]    Size2D  size  =  this.rightBlock.arrange(g2,  c3);  w[3]  =  size.width;  h[3]  =  size.height;  }  h[2]  =  Math.max(h[2],  h[3]);  h[3]  =  h[2];  if  (this.centerBlock  !=  null)  {  RectangleConstraint  c4  =  new  RectangleConstraint(width  -  w[2]  -  w[3],  null,  LengthConstraintType.FIXED,  0.0,  null,  [CLASS]  BorderArrangement  [METHOD]  arrangeFN  [RETURN_TYPE]  Size2D  BlockContainer  container  Graphics2D  g2  double  width  [VARIABLES]  Size2D  size  boolean  double[]  h  w  BlockContainer  container  double  height  maxW  width  Block  block  bottomBlock  centerBlock  leftBlock  rightBlock  topBlock  RectangleConstraint  c1  c2  c3  c4  long  serialVersionUID  Graphics2D  g2  	projects/Chart13/source/org/jfree/chart/block/BorderArrangement.java	1.0	306	306	1	replace	Size2D  size  =  this.centerBlock.arrange(g2,  c3);  w[3]  =  size.width;	      Size2D    size    =    this.leftBlock.arrange(g2,    c3);    w[3]    =    size.width;    	compilable	  [FE]  NullPointerException  	10	1	replace
