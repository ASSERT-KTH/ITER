bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  sign  =  f.value(sig);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  sign  =  f.value(sig);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  sign  =  f.value(sig);	      double    sign    =    f.value(ret);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
2	[BUG]  [BUGGY]  if(ret  ==  0)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  if(ret  ==  0)  {  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	if(ret  ==  0)  {	  if(sign    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
3	[BUG]  [BUGGY]  if(sign  ==  1)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  if(sign  ==  1)  {  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	if(sign  ==  1)  {	  if(sign    ==    0)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
4	[BUG]  [BUGGY]  double  yMin  =  f.value(sign);  double  yMax  =  f.value(min);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  yMin  =  f.value(sign);  double  yMax  =  f.value(min);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  yMin  =  f.value(sign);  double  yMax  =  f.value(min);	      double    yMin    =    f.value(sign);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  double  sign  =  yMax  *  ret;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  sign  =  yMax  *  ret;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  sign  =  yMax  *  ret;	      double    sign    =    yMax    *    yMin;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
6	[BUG]  [BUGGY]  double  sign  =  min  *  yMin;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  sign  =  min  *  yMin;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  sign  =  min  *  yMin;	      double    sign    =    yMax    *    yMin;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
7	[BUG]  [BUGGY]  double  sign  =  ret  *  yMin;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  sign  =  ret  *  yMin;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  sign  =  ret  *  yMin;	      double    sign    =    yMax    *    yMin;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
8	[BUG]  [BUGGY]  if(sign  <  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  if(sign  <  0)  {  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	if(sign  <  0)  {	  if(sign    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
9	[BUG]  [BUGGY]  double  yMin  =  f.value(min);  Double  yMax  =  f.value(max);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  yMin  =  f.value(min);  Double  yMax  =  f.value(max);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  yMin  =  f.value(min);  Double  yMax  =  f.value(max);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  ret  =  Math.max(ret,  sign  +  1);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	ret  =  Math.max(ret,  sign  +  1);	      ret    =    Math.max(ret,    sign);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
11	[BUG]  [BUGGY]  ret  =  Math.min(ret,  sign);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  ret  =  Math.min(ret,  sign);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	ret  =  Math.min(ret,  sign);	      ret    =    Math.max(ret,    sign);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
12	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign,  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  ret  =  Math.max(ret,  sign,  1);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	ret  =  Math.max(ret,  sign,  1);	      ret    =    Math.max(ret,    sign);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign,  max);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  ret  =  Math.max(ret,  sign,  max);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	ret  =  Math.max(ret,  sign,  max);	      ret    =    Math.max(ret,    sign);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
14	[BUG]  [BUGGY]  double  sign  =  yMin  *  ret;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  sign  =  yMin  *  ret;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  sign  =  yMin  *  ret;	      double    sign    =    yMin    *    yMax;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  double  sign  =  min  *  yMax;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  sign  =  min  *  yMax;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  sign  =  min  *  yMax;	      double    sign    =    yMin    *    yMax;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  double  sign  =  ret  *  yMax;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  sign  =  ret  *  yMax;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  sign  =  ret  *  yMax;	      double    sign    =    yMin    *    yMax;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
17	[BUG]  [BUGGY]  double  min  =  f.value(min,  sign);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  min  =  f.value(min,  sign);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  min  =  f.value(min,  sign);	      double    min    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  Double  min  =  f.value(min);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  Double  min  =  f.value(min);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	Double  min  =  f.value(min);	      double    min    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  double  min  =  f.value(sign);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  min  =  f.value(sign);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  min  =  f.value(sign);	      double    min    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  if(ret  >=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  if(ret  >=  0)  {  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	if(ret  >=  0)  {	  if(sign    >=    0)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
21	[BUG]  [BUGGY]  double  yMin  =  f.value(sign);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  yMin  =  f.value(sign);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  yMin  =  f.value(sign);	      double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
22	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  sign);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  yMin  =  f.value(min,  sign);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  yMin  =  f.value(min,  sign);	      double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
23	[BUG]  [BUGGY]  if(ret!=  0)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  if(ret!=  0)  {  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	if(ret!=  0)  {	  if(sign!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  double  sign  =  f.value(signature);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  sign  =  f.value(signature);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  sign  =  f.value(signature);	      double    sign    =    f.value(sign);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
25	[BUG]  [BUGGY]  if(f.hasResult(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  if(f.hasResult(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	if(f.hasResult(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  Double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  Double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	Double  yMin  =  f.value(min);  double  yMax  =  f.value(max);	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
27	[BUG]  [BUGGY]  double  yMax  =  f.value(sign);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  yMax  =  f.value(sign);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  yMax  =  f.value(sign);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
28	[BUG]  [BUGGY]  double  min  =  f.value(min,  max);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  min  =  f.value(min,  max);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  min  =  f.value(min,  max);	      double    min    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
29	[BUG]  [BUGGY]  double  min  =  f.value(min  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  min  =  f.value(min  +  1);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  min  =  f.value(min  +  1);	      double    min    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
30	[BUG]  [BUGGY]  boolean  yMin  =  f.value(min);  boolean  yMax  =  f.value(max);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  boolean  yMin  =  f.value(min);  boolean  yMax  =  f.value(max);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	boolean  yMin  =  f.value(min);  boolean  yMax  =  f.value(max);	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  double  sign  =  f.value(sign  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  sign  =  f.value(sign  +  1);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  sign  =  f.value(sign  +  1);	      double    sign    =    f.value(sign);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
33	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign,  0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  ret  =  Math.max(ret,  sign,  0);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	ret  =  Math.max(ret,  sign,  0);	      ret    =    Math.max(ret,    sign);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
34	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  max);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  yMin  =  f.value(min,  max);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  yMin  =  f.value(min,  max);	      double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
35	[BUG]  [BUGGY]  double  yMin  =  f.value(min  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  yMin  =  f.value(min  +  1);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  yMin  =  f.value(min  +  1);	      double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
36	[BUG]  [BUGGY]  if(f.isInterval(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  if(f.isInterval(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	if(f.isInterval(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
37	[BUG]  [BUGGY]  if(f.isInterval(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  if(f.isInterval(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	if(f.isInterval(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
38	[BUG]  [BUGGY]  if(ret  <  =  0)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  if(ret  <  =  0)  {  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	if(ret  <  =  0)  {	  if(sign    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign  *  yMax);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  ret  =  Math.max(ret,  sign  *  yMax);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	ret  =  Math.max(ret,  sign  *  yMax);	      ret    =    Math.max(ret,    sign);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
40	[BUG]  [BUGGY]  ret  =  Math.max(ret,  sign,  yMax);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  ret  =  Math.max(ret,  sign,  yMax);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	ret  =  Math.max(ret,  sign,  yMax);	      ret    =    Math.max(ret,    sign);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
41	[BUG]  [BUGGY]  double  max  =  f.value(max);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  max  =  f.value(max);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  max  =  f.value(max);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
42	[BUG]  [BUGGY]  double  max  =  f.value(ret);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  max  =  f.value(ret);  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  max  =  f.value(ret);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
43	[BUG]  [BUGGY]  if(sign!=  1)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  if(sign!=  1)  {  [BUGGY]      if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	if(sign!=  1)  {	  if(sign!=    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
44	[BUG]  [BUGGY]  Double  yMin  =  f.value(min);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  Double  yMin  =  f.value(min);  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	Double  yMin  =  f.value(min);	      double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
45	[BUG]  [BUGGY]  double  min  =  f.value(min)*  sign;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  min  =  f.value(min)*  sign;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  min  =  f.value(min)*  sign;	      double    min    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
46	[BUG]  [BUGGY]  double  sign  =  yMax  /  yMin;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  sign  =  yMax  /  yMin;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  sign  =  yMax  /  yMin;	      double    sign    =    yMax    *    yMin;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
47	[BUG]  [BUGGY]  double  sign  =  max  *  yMin;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;    [BUGGY]  double  sign  =  max  *  yMin;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	178	178	1	replace	double  sign  =  max  *  yMin;	      double    sign    =    yMax    *    yMin;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
