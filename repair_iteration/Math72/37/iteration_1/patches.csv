bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  max);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  yMin  =  f.value(min,  max);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  yMin  =  f.value(min,  max);	      double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  double  yMin  =  f.value(ret);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  yMin  =  f.value(ret);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  yMin  =  f.value(ret);	      double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  double  yMin  =  f.value(min  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  yMin  =  f.value(min  +  1);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  yMin  =  f.value(min  +  1);	      double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  double  yMax  =  f.value(mini);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  yMax  =  f.value(mini);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  yMax  =  f.value(mini);	      double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
5	[BUG]  [BUGGY]  double  ret  =  f.value(ret);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  ret  =  f.value(ret);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  ret  =  f.value(ret);	      double    yMax    =    f.value(ret);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  double  sign  =  yMax  *  ret;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  sign  =  yMax  *  ret;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  sign  =  yMax  *  ret;	  double    sign    =    ret    *    yMax;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
7	[BUG]  [BUGGY]  double  sign  =  ret  *  yMin;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  sign  =  ret  *  yMin;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  sign  =  ret  *  yMin;	  double    sign    =    ret    *    yMax;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  double  sign  =  min  /  yMax;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  sign  =  min  /  yMax;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  sign  =  min  /  yMax;	  double    sign    =    yMin    /    yMax;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
9	[BUG]  [BUGGY]  double  sign  =  yMax  /  yMin;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  sign  =  yMax  /  yMin;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  sign  =  yMax  /  yMin;	  double    sign    =    yMin    /    yMax;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
10	[BUG]  [BUGGY]  double  sign  =  yMin  /  ret;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  sign  =  yMin  /  ret;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  sign  =  yMin  /  ret;	  double    sign    =    yMin    /    yMax;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]  double  sign  =  yMax  /  min;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  sign  =  yMax  /  min;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  sign  =  yMax  /  min;	  double    sign    =    yMin    /    yMax;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  Double  yMin  =  f.value(min,  max);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  Double  yMin  =  f.value(min,  max);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	Double  yMin  =  f.value(min,  max);	      Double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  Double  yMin  =  f.value(ret);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  Double  yMin  =  f.value(ret);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	Double  yMin  =  f.value(ret);	      Double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
14	[BUG]  [BUGGY]  double  yMax  =  f.value(min,  max);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  yMax  =  f.value(min,  max);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  yMax  =  f.value(min,  max);	      double    yMax    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  double  sign  =  yMax  *  min;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  sign  =  yMax  *  min;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  sign  =  yMax  *  min;	  double    sign    =    min    *    yMax;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  double  sign  =  min  *  ret;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  sign  =  min  *  ret;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  sign  =  min  *  ret;	  double    sign    =    min    *    yMax;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  yMin  =  f.value(min,  max);  double  yMax  =  f.value(max);	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
18	[BUG]  [BUGGY]  double  sign  =  yMin  *  ret  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  sign  =  yMin  *  ret  +  1;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  sign  =  yMin  *  ret  +  1;	  double    sign    =    yMin    *    ret;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  double  sign  =  yMin  *  ret.doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  sign  =  yMin  *  ret.doubleValue();  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  sign  =  yMin  *  ret.doubleValue();	  double    sign    =    yMin    *    ret;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  Double  yMax  =  f.value(min);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  Double  yMax  =  f.value(min);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	Double  yMax  =  f.value(min);	      Double    yMax    =    f.value(ret);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
21	[BUG]  [BUGGY]  Double  yMax  =  f.value(ret  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  Double  yMax  =  f.value(ret  +  1);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	Double  yMax  =  f.value(ret  +  1);	      Double    yMax    =    f.value(ret);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
22	[BUG]  [BUGGY]  double  sign  =  min  *  yMin;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  sign  =  min  *  yMin;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  sign  =  min  *  yMin;	  double    sign    =    yMax    *    yMin;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
23	[BUG]  [BUGGY]  double  sign  =  max  /  yMin;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  sign  =  max  /  yMin;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  sign  =  max  /  yMin;	  double    sign    =    yMin    /    yMax;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  double  yMin  =  f.value(max);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  yMin  =  f.value(max);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  yMin  =  f.value(max);	      double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  double  yMax  =  f.value(x);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  yMax  =  f.value(x);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  yMax  =  f.value(x);	      double    yMax    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]  boolean  yMin  =  f.value(min);  boolean  yMax  =  f.value(max);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  boolean  yMin  =  f.value(min);  boolean  yMax  =  f.value(max);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	boolean  yMin  =  f.value(min);  boolean  yMax  =  f.value(max);	      Double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
27	[BUG]  [BUGGY]  double  yMin  =  f.value(min  +  1);  double  yMax  =  f.value(max);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  yMin  =  f.value(min  +  1);  double  yMax  =  f.value(max);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  yMin  =  f.value(min  +  1);  double  yMax  =  f.value(max);	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  double  yMax  =  f.value(ret  +  1);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  yMax  =  f.value(ret  +  1);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  yMax  =  f.value(ret  +  1);	      double    yMax    =    f.value(ret);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
29	[BUG]  [BUGGY]  Double  yMax  =  f.value(max);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  Double  yMax  =  f.value(max);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	Double  yMax  =  f.value(max);	      Double    yMax    =    f.value(ret);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  Double  yMin  =  f.value(min  +  1);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  Double  yMin  =  f.value(min  +  1);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	Double  yMin  =  f.value(min  +  1);	      Double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  Double  yMin  =  f.value(max);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  Double  yMin  =  f.value(max);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	Double  yMin  =  f.value(max);	      Double    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  double  yMax  =  f.value(s);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  yMax  =  f.value(s);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  yMax  =  f.value(s);	      double    yMax    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
33	[BUG]  [BUGGY]  double  sign  =  ret  *  yMax  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  double  sign  =  ret  *  yMax  +  1;  [BUGGY]    if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	double  sign  =  ret  *  yMax  +  1;	  double    sign    =    ret    *    yMax;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
34	[BUG]  [BUGGY]  boolean  yMin  =  f.value(min);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  boolean  yMin  =  f.value(min);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	boolean  yMin  =  f.value(min);	      Double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  if(f.hasResult(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  if(f.hasResult(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	if(f.hasResult(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  if(f.hasResult(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  else  {  setResult(min,  0);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  if(f.hasResult(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  else  {  setResult(min,  0);  }  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	if(f.hasResult(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  else  {  setResult(min,  0);  }	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  if(f.hasResult(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  if(f.hasResult(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	if(f.hasResult(min))  {  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  }  else  {  throw  new  IllegalArgumentException( " ");  }	      double    yMin    =    f.value(min);    double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
38	[BUG]  [BUGGY]  Double  yMax  =  f.value(x);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);      [BUGGY]  Double  yMax  =  f.value(x);  [BUGGY]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  ret  =  max;  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	177	177	1	replace	Double  yMax  =  f.value(x);	      Double    yMax    =    f.value(ret);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
