bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    double  yMin  =  f.value(min);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  [BUGGY]    double  yMin  =  f.value(min);  [BUGGY]  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	173	173	1	replace	    double  yMin  =  f.value(min);		non-compiled	[CE]  illegal  start  of  type	70	None	add
2	[BUG]  [BUGGY]    Double  yMin  =  f.value(min);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  [BUGGY]    Double  yMin  =  f.value(min);  [BUGGY]  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	173	173	1	replace	    Double  yMin  =  f.value(min);		non-compiled	[CE]  illegal  start  of  type	70	None	add
3	[BUG]  [BUGGY]    double  min  =  f.value(min);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  [BUGGY]    double  min  =  f.value(min);  [BUGGY]  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	173	173	1	replace	    double  min  =  f.value(min);		non-compiled	[CE]  illegal  start  of  type	70	None	add
4	[BUG]  [BUGGY]    double  yMax  =  f.value(min);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError  [CONTEXT]  FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  [BUGGY]    double  yMax  =  f.value(min);  [BUGGY]  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	173	173	1	replace	    double  yMax  =  f.value(min);		non-compiled	[CE]  illegal  start  of  type	70	None	add
5	[BUG]  [BUGGY]    ret  =  Math.max(ret,  min);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  [BUGGY]    ret  =  Math.max(ret,  min);  [BUGGY]  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	173	173	1	replace	    ret  =  Math.max(ret,  min);		non-compiled	[CE]  illegal  start  of  type	70	None	add
6	[BUG]  [BUGGY]  double  yMin  =  f.value(ret);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  [BUGGY]  double  yMin  =  f.value(ret);  [BUGGY]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	173	173	1	replace	double  yMin  =  f.value(ret);	double  yMin  =  f.value(min);  	non-compiled	[CE]  illegal  start  of  type	69	None	replace
7	[BUG]  [BUGGY]  double  yMin  =  f.value(max);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  [BUGGY]  double  yMin  =  f.value(max);  [BUGGY]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	173	173	1	replace	double  yMin  =  f.value(max);	double  yMin  =  f.value(min);  	non-compiled	[CE]  illegal  start  of  type	69	None	replace
8	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  max);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError  [CONTEXT]  FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  [BUGGY]  double  yMin  =  f.value(min,  max);  [BUGGY]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	173	173	1	replace	double  yMin  =  f.value(min,  max);	double  yMin  =  f.value(min);  	non-compiled	[CE]  illegal  start  of  type	69	None	replace
9	[BUG]  [BUGGY]    double  yMax  =  f.value(ret);  [CE]  illegal  start  of  type  [FE]    AssertionFailedError  [CONTEXT]  FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  [BUGGY]    double  yMax  =  f.value(ret);  [BUGGY]  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	173	173	1	replace	    double  yMax  =  f.value(ret);		non-compiled	[CE]  illegal  start  of  type	70	None	add
10	[BUG]  [BUGGY]    Double  yMin  =  f.value(ret);  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  FunctionEvaluationException  {  clearResult();  verifyInterval(min,  max);  double  ret  =  Double.NaN;  [BUGGY]    Double  yMin  =  f.value(ret);  [BUGGY]  double  yMin  =  f.value(min);  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4082482904638631	173	173	1	replace	    Double  yMin  =  f.value(ret);		non-compiled	[CE]  illegal  start  of  type	70	None	add
