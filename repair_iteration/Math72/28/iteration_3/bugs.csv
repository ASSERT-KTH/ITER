bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  y0  =  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  oldDelta.doubleValue();  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  oldDelta.doubleValue();	  y0    =    y1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
2	[BUG]  [BUGGY]  y0  =  y2.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y2.doubleValue();  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y2.doubleValue();	  y0    =    y1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
3	[BUG]  [BUGGY]  y0  =  y1.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y1.doubleValue()  +  1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y1.doubleValue()  +  1;	  y0    =    y1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
4	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y0)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y0)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y0)    <    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
5	[BUG]  [BUGGY]  if(Math.abs(y1)  <  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y1)  <  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y1)  <  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y0)    <    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
6	[BUG]  [BUGGY]  if(oldDelta  >  0)  {  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  0)  {  y0  =  y1;  y1  =  y2;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  0)  {  y0  =  y1;  y1  =  y2;  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
7	[BUG]  [BUGGY]  if(y0  >  0)  {  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  0)  {  y0  =  y1;  y1  =  y2;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  0)  {  y0  =  y1;  y1  =  y2;  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
8	[BUG]  [BUGGY]  y0  =  x0  +  y1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  x0  +  y1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  x0  +  y1;	  y0    =    y1    +    x2;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
9	[BUG]  [BUGGY]  y0  =  y0  +  x2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y0  +  x2;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y0  +  x2;	  y0    =    y1    +    x2;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
10	[BUG]  [BUGGY]  y1  =  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y1  =  oldDelta  +  1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y1  =  oldDelta  +  1;	  y1    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
11	[BUG]  [BUGGY]  y1  =  y3;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y1  =  y3;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y1  =  y3;	  y1    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
12	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(oldDelta)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(oldDelta)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(oldDelta)    <    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
13	[BUG]  [BUGGY]  setResult(x0,  i);  return  result;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  setResult(x0,  i);  return  result;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	setResult(x0,  i);  return  result;	  setResult(x1,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
14	[BUG]  [BUGGY]  if(i  <  maximalIterationCount)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(i  <  maximalIterationCount)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(i  <  maximalIterationCount)  {  setResult(x1,  i);  return  result;  }	  setResult(x1,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
15	[BUG]  [BUGGY]  Double  y0  =  y1;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  Double  y0  =  y1;  y1  =  y2;  y2  =  y0;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	Double  y0  =  y1;  y1  =  y2;  y2  =  y0;	  if(y1    >    oldDelta)    {    double    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
16	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(delta  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(delta  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y0    >    oldDelta)    {    y1    =    y0;    y1    =    y2;    y2    =    y0;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
17	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(delta  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(delta  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }	  if(y0    >    oldDelta)    {    y1    =    y0;    y1    =    y2;    y2    =    y0;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
18	[BUG]  [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y2)    <    =    functionValueAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
19	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y1  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y1  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y1  =  x1;  y1  =  y2;  y2  =  y0;  }	  if(y1    >    oldDelta)    {    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
20	[BUG]  [BUGGY]  y1  =  x1;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y1  =  x1;  y1  =  y2;  y2  =  y0;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y1  =  x1;  y1  =  y2;  y2  =  y0;	  if(y1    >    oldDelta)    {    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
21	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }	  if(y1    <    =    tolerance)    {    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
22	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y1)  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y1)  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y1    <    =    tolerance)    {    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
23	[BUG]  [BUGGY]  if(Math.abs(y1)  <  Math.abs(y1))  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y1)  <  Math.abs(y1))  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y1)  <  Math.abs(y1))  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }	  if(y1    <    =    tolerance)    {    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
24	[BUG]  [BUGGY]  double  y1  =  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  double  y1  =  oldDelta.doubleValue();  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	double  y1  =  oldDelta.doubleValue();	  int    y1    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  float  y1  =  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  float  y1  =  oldDelta.doubleValue();  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	float  y1  =  oldDelta.doubleValue();	  int    y1    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  if(i  <  maximalIterationCount)  {  if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(i  <  maximalIterationCount)  {  if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(i  <  maximalIterationCount)  {  if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y1    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
27	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y1    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
28	[BUG]  [BUGGY]  if(i  <  maximalIterationCount)  {  if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(i  <  maximalIterationCount)  {  if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(i  <  maximalIterationCount)  {  if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }	  if(y1    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
29	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y1    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
30	[BUG]  [BUGGY]  y0  =  oldDelta  +  2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  oldDelta  +  2;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  oldDelta  +  2;	  y0    =    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
31	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y1  =  x0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y1  =  x0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y1  =  x0;  y1  =  y2;  y2  =  y0;  }	  if(y0    >    oldDelta)    {    y1    =    y0;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
32	[BUG]  [BUGGY]  if(Math.abs(y1)  <  tolerance)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y1)  <  tolerance)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y1)  <  tolerance)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    tolerance)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
34	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y1)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y1)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
35	[BUG]  [BUGGY]  if(Math.abs(y1)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y1)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y1)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
36	[BUG]  [BUGGY]  if(Math.abs(y0)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y0)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y0)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
37	[BUG]  [BUGGY]  y0  =  y1  -  delta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y1  -  delta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y1  -  delta;	  y0    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
38	[BUG]  [BUGGY]  y0  =  delta  -  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  delta  -  oldDelta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  delta  -  oldDelta;	  y0    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
39	[BUG]  [BUGGY]  y0  =  y2  -  delta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y2  -  delta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y2  -  delta;	  y0    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
40	[BUG]  [BUGGY]  y0  =  y2  +  i;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y2  +  i;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y2  +  i;	  y0    =    y1    +    i;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
41	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  }	  if(y0    >    oldDelta)    {    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
42	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(delta  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(delta  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
43	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y1  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y1  =  y1;  y1  =  y2;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y1  =  y1;  y1  =  y2;  }	  if(y1    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
44	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(oldDelta)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(oldDelta)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(oldDelta)    <    =    functionValueAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y0    >    oldDelta)    {    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
46	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(delta  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(delta  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
47	[BUG]  [BUGGY]  if(y0  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
48	[BUG]  [BUGGY]  if(i  <  maximalIterationCount)  {  y1  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(i  <  maximalIterationCount)  {  y1  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(i  <  maximalIterationCount)  {  y1  =  y1;  y1  =  y2;  y2  =  y0;  }	  y1    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
49	[BUG]  [BUGGY]  if(i  <  maximalIterationCount)  {  y1  =  y1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(i  <  maximalIterationCount)  {  y1  =  y1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(i  <  maximalIterationCount)  {  y1  =  y1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  }	  y1    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
50	[BUG]  [BUGGY]  double  y1  =  oldDelta  -  delta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  double  y1  =  oldDelta  -  delta;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	double  y1  =  oldDelta  -  delta;	  double    y1    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
51	[BUG]  [BUGGY]  y0  =  y2;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y2;  y1  =  y2;  y2  =  y0;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y2;  y1  =  y2;  y2  =  y0;	  y0    =    y0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
52	[BUG]  [BUGGY]  y1  =  y2;  y0  =  y1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y1  =  y2;  y0  =  y1;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y1  =  y2;  y0  =  y1;	  y0    =    y0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
53	[BUG]  [BUGGY]  if(Math.abs(y1)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y1)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y1)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
54	[BUG]  [BUGGY]  y1  =  y1;  y1  =  y2;  y2  =  y3;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y1  =  y1;  y1  =  y2;  y2  =  y3;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y1  =  y1;  y1  =  y2;  y2  =  y3;	  y1    =    y0;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
55	[BUG]  [BUGGY]  y1  =  y2;  y2  =  y3;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y1  =  y2;  y2  =  y3;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y1  =  y2;  y2  =  y3;	  y1    =    y0;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
56	[BUG]  [BUGGY]  y1  =  y0;  y1  =  y2;  y2  =  y3);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y1  =  y0;  y1  =  y2;  y2  =  y3);  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y1  =  y0;  y1  =  y2;  y2  =  y3);	  y1    =    y0;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
57	[BUG]  [BUGGY]  y0  =  y2;  y1  =  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y2;  y1  =  y0;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y2;  y1  =  y0;	  y0    =    y2;    y1    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
58	[BUG]  [BUGGY]  y0  =  y0;  y1  =  y1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y0;  y1  =  y1;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y0;  y1  =  y1;	  y0    =    y2;    y1    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
59	[BUG]  [BUGGY]  y0  =  y2;  y1  =  y3;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y2;  y1  =  y3;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y2;  y1  =  y3;	  y0    =    y2;    y1    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
60	[BUG]  [BUGGY]  y0  =  y0;  y1  =  y2;  y2  =  y3;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y0;  y1  =  y2;  y2  =  y3;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y0;  y1  =  y2;  y2  =  y3;	  y0    =    x1;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
61	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    =    functionValueAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
62	[BUG]  [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    =    functionValueAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
63	[BUG]  [BUGGY]  y0  =  x0;  y1  =  y1;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  x0;  y1  =  y1;  y2  =  y0;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  x0;  y1  =  y1;  y2  =  y0;	  y0    =    x0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
64	[BUG]  [BUGGY]  n  =  Math.max(relativeAccuracy  *  delta);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  n  =  Math.max(relativeAccuracy  *  delta);  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	n  =  Math.max(relativeAccuracy  *  delta);	  n    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
65	[BUG]  [BUGGY]  n  =  Math.max(relativeAccuracy  *  oldDelta,  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  n  =  Math.max(relativeAccuracy  *  oldDelta,  i);  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	n  =  Math.max(relativeAccuracy  *  oldDelta,  i);	  n    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
66	[BUG]  [BUGGY]  n  =  Math.min(relativeAccuracy  *  oldDelta,  i);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  n  =  Math.min(relativeAccuracy  *  oldDelta,  i);  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	n  =  Math.min(relativeAccuracy  *  oldDelta,  i);	  n    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
67	[BUG]  [BUGGY]  n  =  Math.max(relativeAccuracy  *  oldDelta,  x1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  n  =  Math.max(relativeAccuracy  *  oldDelta,  x1);  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	n  =  Math.max(relativeAccuracy  *  oldDelta,  x1);	  n    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
68	[BUG]  [BUGGY]  y1  =  y1;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y1  =  y1;  y2  =  y0;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y1  =  y1;  y2  =  y0;	  y1    =    y0;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
69	[BUG]  [BUGGY]  y1  =  y0;  y2  =  y1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y1  =  y0;  y2  =  y1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y1  =  y0;  y2  =  y1;	  y1    =    y0;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
70	[BUG]  [BUGGY]  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y1  =  y2;  y2  =  y0;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y1  =  y2;  y2  =  y0;	  y1    =    y0;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
71	[BUG]  [BUGGY]  y1  =  y3;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y1  =  y3;  y2  =  y0;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y1  =  y3;  y2  =  y0;	  y1    =    y0;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
72	[BUG]  [BUGGY]  y0  =  y0;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y0;  y1  =  y2;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y0;  y1  =  y2;	  y0    =    x1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
73	[BUG]  [BUGGY]  if(oldDelta  >  0)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  0)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  0)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
74	[BUG]  [BUGGY]  if(oldDelta  >  i)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  i)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  i)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
75	[BUG]  [BUGGY]  if(Math.abs(y0)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y0)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y0)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    Math.abs(y2))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
76	[BUG]  [BUGGY]  y0  =  y2;  y1  =  y2;  y2  =  y3;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y2;  y1  =  y2;  y2  =  y3;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y2;  y1  =  y2;  y2  =  y3;	  y0    =    y1;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
77	[BUG]  [BUGGY]  y0  =  y0  +  y2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y0  +  y2;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y0  +  y2;	  y0    =    y1    +    y2;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
78	[BUG]  [BUGGY]  double  y2  =  y1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  double  y2  =  y1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	double  y2  =  y1;	  double    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
79	[BUG]  [BUGGY]  double  y2  =  oldDelta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  double  y2  =  oldDelta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	double  y2  =  oldDelta;	  double    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
80	[BUG]  [BUGGY]  double  y2  =  delta;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  double  y2  =  delta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	double  y2  =  delta;	  double    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
81	[BUG]  [BUGGY]  y0  =  y0;  y1  =  y2;  y2  =  y1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y0;  y1  =  y2;  y2  =  y1;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y0;  y1  =  y2;  y2  =  y1;	  y0    =    y1;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
82	[BUG]  [BUGGY]  y0  =  x0;  y1  =  y2;  y2  =  y1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  x0;  y1  =  y2;  y2  =  y1;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  x0;  y1  =  y2;  y2  =  y1;	  y0    =    y1;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
83	[BUG]  [BUGGY]  y0  =  x1;  y1  =  y0;  y2  =  y1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  x1;  y1  =  y0;  y2  =  y1;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  x1;  y1  =  y0;  y2  =  y1;	  y0    =    x1;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
84	[BUG]  [BUGGY]  if(i  <  maximalIterationCount)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(i  <  maximalIterationCount)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(i  <  maximalIterationCount)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }	  y1    =    y0;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
85	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y1)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y1)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(oldDelta)    <    tolerance)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
86	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(oldDelta)    <    tolerance)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
87	[BUG]  [BUGGY]  y0  =  oldDelta  +  y1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  oldDelta  +  y1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  oldDelta  +  y1;	  y0    =    y1    +    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  y0  =  y2  +  oldDelta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y2  +  oldDelta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y2  +  oldDelta;	  y0    =    y1    +    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
89	[BUG]  [BUGGY]  double  y0  =  y0;  y1  =  y1;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  double  y0  =  y0;  y1  =  y1;  y2  =  y0;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	double  y0  =  y0;  y1  =  y1;  y2  =  y0;	  double    y0    =    y0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
90	[BUG]  [BUGGY]  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y0    >    oldDelta)    {    double    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
91	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y1    <    =    tolerance)    {    double    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
92	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  tolerance)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y1)  <  =  tolerance)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y1)  <  =  tolerance)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y1    <    =    tolerance)    {    double    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
93	[BUG]  [BUGGY]  y0  =  y0  +  delta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y0  +  delta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y0  +  delta;	  y0    =    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
94	[BUG]  [BUGGY]  y0  =  oldDelta  +  i;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  oldDelta  +  i;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  oldDelta  +  i;	  y0    =    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
95	[BUG]  [BUGGY]  y0  =  delta  +  oldDelta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  delta  +  oldDelta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  delta  +  oldDelta;	  y0    =    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
96	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }	  if(y1    >    oldDelta)    {    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
97	[BUG]  [BUGGY]  if(oldDelta  >  delta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  delta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  delta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }	  if(y1    >    oldDelta)    {    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
98	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y3  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y3  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y3  =  y0;  }	  if(y1    >    oldDelta)    {    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
99	[BUG]  [BUGGY]  n  =  Math.max(relativeAccuracy  *  oldDelta  +  delta);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  n  =  Math.max(relativeAccuracy  *  oldDelta  +  delta);  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	n  =  Math.max(relativeAccuracy  *  oldDelta  +  delta);	  n    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
100	[BUG]  [BUGGY]  y0  =  y1  +  delta3;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y1  +  delta3;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y1  +  delta3;	  y0    =    y1    +    delta2;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
101	[BUG]  [BUGGY]  if(oldDelta  >  delta)  {  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  delta)  {  y0  =  y1;  y1  =  y2;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  delta)  {  y0  =  y1;  y1  =  y2;  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
102	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(delta  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(delta  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
103	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
104	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    Math.abs(y2))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
105	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(delta  >  oldDelta)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(delta  >  oldDelta)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y0    >    oldDelta)    {    double    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
106	[BUG]  [BUGGY]  y1  =  y2  +  delta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y1  =  y2  +  delta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y1  =  y2  +  delta;	  y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
107	[BUG]  [BUGGY]  if(oldDelta  >  delta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  delta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  delta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y0    >    oldDelta)    {    y1    =    y0;    y1    =    y2;    y2    =    y0;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
108	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y0    >    oldDelta)    {    y1    =    y0;    y1    =    y2;    y2    =    y0;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
109	[BUG]  [BUGGY]  y0  =  x0  +  oldDelta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  x0  +  oldDelta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  x0  +  oldDelta;	  y0    =    y1    +    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
110	[BUG]  [BUGGY]  int  y1  =  oldDelta.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  int  y1  =  oldDelta.doubleValue()  +  1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	int  y1  =  oldDelta.doubleValue()  +  1;	  int    y1    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
111	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  double  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  double  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  double  y0  =  x1;  y1  =  y2;  y2  =  y0;  }	  double    y0    =    x1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
112	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  double  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  double  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  double  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  double    y0    =    x1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
113	[BUG]  [BUGGY]  if(oldDelta  >  delta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  delta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  delta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y1    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
114	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y1    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
115	[BUG]  [BUGGY]  if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y1)    <    =    Math.abs(y2))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
116	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y1)    <    =    Math.abs(y2))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
117	[BUG]  [BUGGY]  if(oldDelta  >  delta)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  delta)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  delta)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
118	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y1)    <    Math.abs(y2))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
119	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y2;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y2;  y1  =  y2;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  y2;  y1  =  y2;  }	  y0    =    y2;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
120	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y2;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y2;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  y2;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }	  y0    =    y2;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
121	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y2;  y1  =  y2;  }  else  {  x0  =  x1;  x1  =  x2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y2;  y1  =  y2;  }  else  {  x0  =  x1;  x1  =  x2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  y2;  y1  =  y2;  }  else  {  x0  =  x1;  x1  =  x2;  y2  =  y0;  }	  y0    =    y2;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
122	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(oldDelta)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(oldDelta)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(oldDelta)    <    =    functionValueAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
123	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y1    <    =    tolerance)    {    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
124	[BUG]  [BUGGY]  if(y0  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y1    <    =    tolerance)    {    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
125	[BUG]  [BUGGY]  ble  y0  =  y1;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  ble  y0  =  y1;  y1  =  y2;  y2  =  y0;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	ble  y0  =  y1;  y1  =  y2;  y2  =  y0;	  if(y1    >    oldDelta)    {    double    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
126	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  y0;  y1  =  y2;  y2  =  y0;  }	  y0    =    y0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
127	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  y0    =    y0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
128	[BUG]  [BUGGY]  y1  =  oldDelta  +  delta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y1  =  oldDelta  +  delta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y1  =  oldDelta  +  delta;	  y1    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
129	[BUG]  [BUGGY]  double  y1  =  oldDelta  +  delta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  double  y1  =  oldDelta  +  delta;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	double  y1  =  oldDelta  +  delta;	  double    y1    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
130	[BUG]  [BUGGY]  y0  =  y2  +  delta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y2  +  delta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y2  +  delta;	  y0    =    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
131	[BUG]  [BUGGY]  y0  =  oldDelta;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  oldDelta;  y1  =  y2;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  oldDelta;  y1  =  y2;	  y0    =    y2;    y1    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
132	[BUG]  [BUGGY]  n  =  Math.min(y0,  oldDelta);  n  =  Math.abs(y2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  n  =  Math.min(y0,  oldDelta);  n  =  Math.abs(y2);  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	n  =  Math.min(y0,  oldDelta);  n  =  Math.abs(y2);	  y0    =    y2;    y1    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
133	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }	  y0    =    x1;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
134	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }  else  {  setResult(x1,  i);  return  result;  }	  y0    =    x1;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
135	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }  else  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }  else  {  setResult(x1,  i);  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }  else  {  setResult(x1,  i);  }	  y0    =    x1;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
136	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }	  y1    =    y0;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
137	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }  else  {  setResult(x1,  i);  return  result;  }	  y1    =    y0;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
138	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }  else  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }  else  {  setResult(x1,  i);  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }  else  {  setResult(x1,  i);  }	  y1    =    y0;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
139	[BUG]  [BUGGY]  y0  =  x1  +  i;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  x1  +  i;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  x1  +  i;	  y0    =    y1    +    i;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
140	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
141	[BUG]  [BUGGY]  if(i  >  0)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(i  >  0)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(i  >  0)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }	  y0    =    y1;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
142	[BUG]  [BUGGY]  if(y1  >=  0.0)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  >=  0.0)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  >=  0.0)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }	  y0    =    y1;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
143	[BUG]  [BUGGY]  n  =  Math.min(y0,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  n  =  Math.min(y0,  oldDelta);  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	n  =  Math.min(y0,  oldDelta);	  y1    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
144	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(oldDelta)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(oldDelta)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(oldDelta)    <    Math.abs(y2))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
145	[BUG]  [BUGGY]  if(oldDelta  >  delta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  delta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  delta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
146	[BUG]  [BUGGY]  if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(delta  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
147	[BUG]  [BUGGY]  if(oldDelta  >  delta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  delta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  delta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }	  if(y0    >    oldDelta)    {    y1    =    y0;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
148	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  x0;  y1  =  y2;  y2  =  y0;  }	  y0    =    x0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
149	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  x0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  y0    =    x0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
150	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y0)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y0)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
151	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y1    <    =    tolerance)    {    double    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
152	[BUG]  [BUGGY]  if(i  <  =  maximalIterationCount)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(i  <  =  maximalIterationCount)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(i  <  =  maximalIterationCount)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }	  if(i    <    maximalIterationCount)    {    y1    =    y0;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
153	[BUG]  [BUGGY]  if(i  <  maximalIterationCount)  {  y1  =  x0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(i  <  maximalIterationCount)  {  y1  =  x0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(i  <  maximalIterationCount)  {  y1  =  x0;  y1  =  y2;  y2  =  y0;  }	  if(i    <    maximalIterationCount)    {    y1    =    y0;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
154	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y0    >    oldDelta)    {    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
155	[BUG]  [BUGGY]  if(oldDelta  >  delta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  delta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  delta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y0    >    oldDelta)    {    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
156	[BUG]  [BUGGY]  y0  =  oldDelta  -  delta1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  oldDelta  -  delta1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  oldDelta  -  delta1;	  y0    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
157	[BUG]  [BUGGY]  y0  =  oldDelta  /  delta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  oldDelta  /  delta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  oldDelta  /  delta;	  y0    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
158	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y3;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y3;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y3;  }	  y0    =    x1;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
159	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y3;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y3;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y3;  }  else  {  setResult(x1,  i);  return  result;  }	  y0    =    x1;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
160	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }	  y0    =    x1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
161	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }	  y0    =    x1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
162	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }	  y0    =    x1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
163	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  y2  =  y1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  y2  =  y1;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  y2  =  y1;  }	  y0    =    y1;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
164	[BUG]  [BUGGY]  if(i  >  0)  {  y1  =  y0;  y1  =  y2;  y2  =  y3;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(i  >  0)  {  y1  =  y0;  y1  =  y2;  y2  =  y3;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(i  >  0)  {  y1  =  y0;  y1  =  y2;  y2  =  y3;  }	  y1    =    y0;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
165	[BUG]  [BUGGY]  if(i  >  0)  {  y1  =  y0;  y1  =  y2;  y2  =  y3;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(i  >  0)  {  y1  =  y0;  y1  =  y2;  y2  =  y3;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(i  >  0)  {  y1  =  y0;  y1  =  y2;  y2  =  y3;  }  else  {  setResult(x1,  i);  return  result;  }	  y1    =    y0;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
166	[BUG]  [BUGGY]  y0  =  oldDelta  +  y2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  oldDelta  +  y2;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  oldDelta  +  y2;	  y0    =    y1    +    y2;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
167	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  double  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  double  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  double  y0  =  y0;  y1  =  y2;  y2  =  y0;  }	  double    y0    =    y0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
168	[BUG]  [BUGGY]  double  y0  =  oldDelta;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  double  y0  =  oldDelta;  y1  =  y2;  y2  =  y0;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	double  y0  =  oldDelta;  y1  =  y2;  y2  =  y0;	  double    y0    =    y0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
169	[BUG]  [BUGGY]  y0  =  x1  +  y2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  x1  +  y2;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  x1  +  y2;	  y0    =    y1    +    x2;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
170	[BUG]  [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  x0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  x0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  <  =  tolerance)  {  y0  =  x0;  y1  =  y2;  y2  =  y0;  }	  y0    =    x0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
171	[BUG]  [BUGGY]  Double  y1  =  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  Double  y1  =  oldDelta.doubleValue();  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	Double  y1  =  oldDelta.doubleValue();	  int    y1    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
172	[BUG]  [BUGGY]  if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
173	[BUG]  [BUGGY]  n  =  Math.max(relativeAccuracy  *  oldDelta,  tolerance);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  n  =  Math.max(relativeAccuracy  *  oldDelta,  tolerance);  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	n  =  Math.max(relativeAccuracy  *  oldDelta,  tolerance);	  n    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
174	[BUG]  [BUGGY]  n  =  Math.max(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  n  =  Math.max(relativeAccuracy  *  oldDelta,  absoluteAccuracy);  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	n  =  Math.max(relativeAccuracy  *  oldDelta,  absoluteAccuracy);	  n    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
175	[BUG]  [BUGGY]  n  =  Math.max(relativeAccuracy  *  oldDelta  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  n  =  Math.max(relativeAccuracy  *  oldDelta  +  1);  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	n  =  Math.max(relativeAccuracy  *  oldDelta  +  1);	  n    =    Math.max(relativeAccuracy    *    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
176	[BUG]  [BUGGY]  if(oldDelta  >  tolerance)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  tolerance)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  tolerance)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y1    >    oldDelta)    {    double    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
177	[BUG]  [BUGGY]  if(oldDelta  >  delta)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  delta)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  delta)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y1    >    oldDelta)    {    double    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
178	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  double  y1  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  double  y1  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  double  y1  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y1    >    oldDelta)    {    double    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
179	[BUG]  [BUGGY]  if(oldDelta  >  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
180	[BUG]  [BUGGY]  double  y1  =  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  double  y1  =  oldDelta  +  1;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	double  y1  =  oldDelta  +  1;	  double    y1    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
181	[BUG]  [BUGGY]  double  y1  =  y3;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  double  y1  =  y3;  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	double  y1  =  y3;	  double    y1    =    delta;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
182	[BUG]  [BUGGY]  y0  =  y1,  oldDelta  +  delta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  y1,  oldDelta  +  delta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  y1,  oldDelta  +  delta;	  y0    =    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
183	[BUG]  [BUGGY]  if(y0  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
184	[BUG]  [BUGGY]  setResult(x1,  i);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  setResult(x1,  i);  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	setResult(x1,  i);	  setResult(x1,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
185	[BUG]  [BUGGY]  setResult(x0,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  setResult(x0,  i);  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	setResult(x0,  i);	  setResult(x1,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
186	[BUG]  [BUGGY]  y0  =  oldDelta  *  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  oldDelta  *  1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  oldDelta  *  1;	  y0    =    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
187	[BUG]  [BUGGY]  if(y1  >  oldDelta)  {  y0  =  y2;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  >  oldDelta)  {  y0  =  y2;  y1  =  y2;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  >  oldDelta)  {  y0  =  y2;  y1  =  y2;  }	  y0    =    y2;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
188	[BUG]  [BUGGY]  if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  y2  =  y1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  y2  =  y1;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  y2  =  y1;  }	  y0    =    y1;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
189	[BUG]  [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y1;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y1;  }	  y0    =    y1;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
190	[BUG]  [BUGGY]  if(y1  <  =  tolerance)  {  double  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  <  =  tolerance)  {  double  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  <  =  tolerance)  {  double  y0  =  x1;  y1  =  y2;  y2  =  y0;  }	  double    y0    =    x1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
191	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y1)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y0)    <    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
192	[BUG]  [BUGGY]  if(oldDelta  >  tolerance)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  tolerance)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  tolerance)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }	  if(y0    >    oldDelta)    {    y1    =    y0;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
193	[BUG]  [BUGGY]  if(y1  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }	  if(y0    >    oldDelta)    {    y1    =    y0;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
194	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
195	[BUG]  [BUGGY]  if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }	  y0    =    y1;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
196	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }	  y0    =    y1;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
197	[BUG]  [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  y2  =  y3;  }	  y0    =    y1;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
198	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y0    >    oldDelta)    {    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
199	[BUG]  [BUGGY]  if(y1  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y0    >    oldDelta)    {    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
200	[BUG]  [BUGGY]  y2  =  y1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y2  =  y1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y2  =  y1;	  y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
201	[BUG]  [BUGGY]  double  y2  =  y1.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  double  y2  =  y1.doubleValue();  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	double  y2  =  y1.doubleValue();	  double    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
202	[BUG]  [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  <  =  tolerance)  {  y0  =  y0;  y1  =  y2;  y2  =  y0;  }	  y0    =    y0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
203	[BUG]  [BUGGY]  if(y1  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y0    >    oldDelta)    {    y1    =    y0;    y1    =    y2;    y2    =    y0;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
204	[BUG]  [BUGGY]  if(oldDelta  <  =  tolerance)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  <  =  tolerance)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  <  =  tolerance)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y1    <    =    tolerance)    {    double    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
205	[BUG]  [BUGGY]  if(y0  <  =  tolerance)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  <  =  tolerance)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  <  =  tolerance)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y1    <    =    tolerance)    {    double    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
206	[BUG]  [BUGGY]  if(y1  <  =  y3)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  <  =  y3)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  <  =  y3)  {  double  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y1    <    =    tolerance)    {    double    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
207	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y1  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y1  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y1  =  y1;  y1  =  y2;  y2  =  y0;  }	  y1    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
208	[BUG]  [BUGGY]  y0  =  oldDelta  -  delta  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  y0  =  oldDelta  -  delta  +  1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	y0  =  oldDelta  -  delta  +  1;	  y0    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
209	[BUG]  [BUGGY]  if(oldDelta  >  tolerance)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(oldDelta  >  tolerance)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(oldDelta  >  tolerance)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }	  if(y1    >    oldDelta)    {    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
210	[BUG]  [BUGGY]  if(x0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(x0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(x0  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y0;  }	  if(y0    >    oldDelta)    {    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
211	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y2;  y1  =  y1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y0  =  y2;  y1  =  y1;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y0  =  y2;  y1  =  y1;  }	  y0    =    y2;    y1    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
212	[BUG]  [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  y2;  y1  =  y1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  y2;  y1  =  y1;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  <  =  tolerance)  {  y0  =  y2;  y1  =  y1;  }	  y0    =    y2;    y1    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
213	[BUG]  [BUGGY]  if(y0  <  =  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  <  =  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  <  =  oldDelta)  {  y0  =  y1;  y1  =  y2;  }	  if(y0    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
214	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  =  Math.abs(oldDelta))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(oldDelta)  <  =  Math.abs(oldDelta))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(oldDelta)  <  =  Math.abs(oldDelta))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y1)    <    =    Math.abs(y2))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
215	[BUG]  [BUGGY]  if(i  >  0)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(i  >  0)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(i  >  0)  {  y1  =  y0;  y1  =  y2;  y2  =  y0;  }	  if(i    <    maximalIterationCount)    {    y1    =    y0;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
216	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(oldDelta)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(oldDelta)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
217	[BUG]  [BUGGY]  if(y1  <  =  tolerance)  {  double  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  <  =  tolerance)  {  double  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  <  =  tolerance)  {  double  y0  =  y0;  y1  =  y2;  y2  =  y0;  }	  double    y0    =    y0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
218	[BUG]  [BUGGY]  if(y0  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y3;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y0  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y3;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y0  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y3;  }	  y1    =    y0;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
219	[BUG]  [BUGGY]  if(y1  >=  0)  {  y1  =  y0;  y1  =  y2;  y2  =  y3;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  >=  0)  {  y1  =  y0;  y1  =  y2;  y2  =  y3;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  >=  0)  {  y1  =  y0;  y1  =  y2;  y2  =  y3;  }	  y1    =    y0;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
220	[BUG]  [BUGGY]  if(y1  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  >  oldDelta)  {  y1  =  y0;  y1  =  y2;  y2  =  y1;  }	  y1    =    y0;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
221	[BUG]  [BUGGY]  double  y1  =  y2.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  double  y1  =  y2.doubleValue();  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	double  y1  =  y2.doubleValue();	  double    y1    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
222	[BUG]  [BUGGY]  if(y1  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }	  y0    =    x1;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
223	[BUG]  [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  <  =  tolerance)  {  y0  =  x1;  y1  =  y2;  y2  =  y1;  }	  y0    =    x1;    y1    =    y2;    y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
224	[BUG]  [BUGGY]  if(y1  >  oldDelta)  {  y1  =  y0;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  >  oldDelta)  {  y1  =  y0;  y2  =  y0;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  >  oldDelta)  {  y1  =  y0;  y2  =  y0;  }	  y1    =    y0;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
225	[BUG]  [BUGGY]  if(y1  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y3;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y3;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  >  oldDelta)  {  y0  =  x1;  y1  =  y2;  y2  =  y3;  }	  y0    =    x1;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
226	[BUG]  [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  x1;  y1  =  y2;  y2  =  y3;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  x1;  y1  =  y2;  y2  =  y3;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  <  =  tolerance)  {  y0  =  x1;  y1  =  y2;  y2  =  y3;  }	  y0    =    x1;    y1    =    y2;    y2    =    y3;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
227	[BUG]  [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  <  =  tolerance)  {  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }	  if(y1    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
228	[BUG]  [BUGGY]  if(y1  <  =  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  <  =  oldDelta)  {  y0  =  y1;  y1  =  y2;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  <  =  oldDelta)  {  y0  =  y1;  y1  =  y2;  }	  if(y1    >    oldDelta)    {    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
229	[BUG]  [BUGGY]  if(y1  <  =  y3)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  <  =  y3)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  <  =  y3)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y1    <    =    tolerance)    {    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
230	[BUG]  [BUGGY]  if(y1  <  =  y2)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(y1  <  =  y2)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(y1  <  =  y2)  {  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(y1    <    =    tolerance)    {    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
231	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(oldDelta))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;      [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(oldDelta))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	239	239	1	replace	if(Math.abs(oldDelta)  <  Math.abs(oldDelta))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y1)    <    Math.abs(y2))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
