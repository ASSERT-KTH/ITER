projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243if(Math.abs(y1)<=functionValueAccuracy){
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243if(Math.abs(x1)<=functionValueAccuracy){
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243if(Math.abs(dx)<=functionValueAccuracy){
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243if(Math.abs(y2)<=functionValueAccuracy){
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243setResult(x1,i);
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243setResult(x1,i);returnresult;
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243doubleresult=Math.max(result,x1);
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243doubleresult=Math.max(result,i);
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243intresult=Math.max(result,i);
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243if(Math.abs(y1)<=functionValueAccuracy){setResult(x1,i);returnresult;}
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243if(Math.abs(y2)<Math.abs(y1)){setResult(x1,i);returnresult;}
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243if(Math.abs(y1)<=functionValueAccuracy){setResult(x0,i);returnresult;}
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243if(Math.abs(y2)<Math.abs(y1)){setResult(x0,i);returnresult;}
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243intresult=Math.max(result,x1);
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243if(Math.abs(y1)<=absoluteAccuracy){
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243i=Math.max(relativeAccuracy*Math.abs(x1),absoluteAccuracy);
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243intresult=Math.max(result,x1);setResult(x1,i);
projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java243doubleresult=Math.max(result,x1);setResult(x1,i);
