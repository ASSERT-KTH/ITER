bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] setResult(yMin, 0); [FE] AssertionFailedError testRootEndpoints [CONTEXT]  double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { [BUGGY] setResult(yMin, 0); [BUGGY] return result; }  if (yInitial * yMin < 0) { return solve(f, min, yMin, initial, yInitial, min, yMin); }  double yMax = f.value(max); [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError testRootEndpoints [CONTEXT]  double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { [BUGGY] [BUGGY] setResult(yMin, 0); return result; }  if (yInitial * yMin < 0) { return solve(f, min, yMin, initial, yInitial, min, yMin); }  double yMax = f.value(max); [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	
3	[BUG] [BUGGY] return result; [FE] AssertionFailedError testRootEndpoints [CONTEXT] double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); [BUGGY] return result; [BUGGY] }  if (yInitial * yMin < 0) { return solve(f, min, yMin, initial, yInitial, min, yMin); }  double yMax = f.value(max); if (Math.abs(yMax) <= functionValueAccuracy) { [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	116	116	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError testRootEndpoints [CONTEXT] double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); [BUGGY] [BUGGY] return result; }  if (yInitial * yMin < 0) { return solve(f, min, yMin, initial, yInitial, min, yMin); }  double yMax = f.value(max); if (Math.abs(yMax) <= functionValueAccuracy) { [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	116	116	1	add	
5	[BUG] [BUGGY] setResult(max, 0); [FE] AssertionFailedError testRootEndpoints [CONTEXT] double yMax = f.value(max);  double sign = yMin * yMax; if (sign > 0) {  if (Math.abs(yMin) <= functionValueAccuracy) { setResult(min, 0); ret = min; } else if (Math.abs(yMax) <= functionValueAccuracy) { [BUGGY] setResult(max, 0); [BUGGY] ret = max; } else {  throw MathRuntimeException.createIllegalArgumentException( NON_BRACKETING_MESSAGE, min, max, yMin, yMax); } } else if (sign < 0){  ret = solve(f, min, yMin, max, yMax, min, yMin); } else { [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double max min ret sign yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	184	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError testRootEndpoints [CONTEXT] double yMax = f.value(max);  double sign = yMin * yMax; if (sign > 0) {  if (Math.abs(yMin) <= functionValueAccuracy) { setResult(min, 0); ret = min; } else if (Math.abs(yMax) <= functionValueAccuracy) { [BUGGY] [BUGGY] setResult(max, 0); ret = max; } else {  throw MathRuntimeException.createIllegalArgumentException( NON_BRACKETING_MESSAGE, min, max, yMin, yMax); } } else if (sign < 0){  ret = solve(f, min, yMin, max, yMax, min, yMin); } else { [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double max min ret sign yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	184	1	add	
7	[BUG] [BUGGY] ret = max; [FE] AssertionFailedError testRootEndpoints [CONTEXT]  double sign = yMin * yMax; if (sign > 0) {  if (Math.abs(yMin) <= functionValueAccuracy) { setResult(min, 0); ret = min; } else if (Math.abs(yMax) <= functionValueAccuracy) { setResult(max, 0); [BUGGY] ret = max; [BUGGY] } else {  throw MathRuntimeException.createIllegalArgumentException( NON_BRACKETING_MESSAGE, min, max, yMin, yMax); } } else if (sign < 0){  ret = solve(f, min, yMin, max, yMax, min, yMin); } else {  [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double max min ret sign yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError testRootEndpoints [CONTEXT]  double sign = yMin * yMax; if (sign > 0) {  if (Math.abs(yMin) <= functionValueAccuracy) { setResult(min, 0); ret = min; } else if (Math.abs(yMax) <= functionValueAccuracy) { setResult(max, 0); [BUGGY] [BUGGY] ret = max; } else {  throw MathRuntimeException.createIllegalArgumentException( NON_BRACKETING_MESSAGE, min, max, yMin, yMax); } } else if (sign < 0){  ret = solve(f, min, yMin, max, yMax, min, yMin); } else {  [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double max min ret sign yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	add	
9	[BUG] [BUGGY] if (Math.abs(yMin) <= functionValueAccuracy) { [FE] AssertionFailedError testRootEndpoints [CONTEXT] double ret = Double.NaN; double yMin = f.value(min); double yMax = f.value(max);  double sign = yMin * yMax; if (sign > 0) {  [BUGGY] if (Math.abs(yMin) <= functionValueAccuracy) { [BUGGY] setResult(min, 0); ret = min; } else if (Math.abs(yMax) <= functionValueAccuracy) { setResult(max, 0); ret = max; } else {  throw MathRuntimeException.createIllegalArgumentException( NON_BRACKETING_MESSAGE, min, max, yMin, yMax); } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double max min ret sign yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	180	180	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError testRootEndpoints [CONTEXT] double ret = Double.NaN; double yMin = f.value(min); double yMax = f.value(max);  double sign = yMin * yMax; if (sign > 0) {  [BUGGY] [BUGGY] if (Math.abs(yMin) <= functionValueAccuracy) { setResult(min, 0); ret = min; } else if (Math.abs(yMax) <= functionValueAccuracy) { setResult(max, 0); ret = max; } else {  throw MathRuntimeException.createIllegalArgumentException( NON_BRACKETING_MESSAGE, min, max, yMin, yMax); } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double max min ret sign yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	180	180	1	add	
11	[BUG] [BUGGY] } else if (Math.abs(yMax) <= functionValueAccuracy) { [FE] AssertionFailedError testRootEndpoints [CONTEXT] double yMin = f.value(min); double yMax = f.value(max);  double sign = yMin * yMax; if (sign > 0) {  if (Math.abs(yMin) <= functionValueAccuracy) { setResult(min, 0); ret = min; [BUGGY] } else if (Math.abs(yMax) <= functionValueAccuracy) { [BUGGY] setResult(max, 0); ret = max; } else {  throw MathRuntimeException.createIllegalArgumentException( NON_BRACKETING_MESSAGE, min, max, yMin, yMax); } } else if (sign < 0){  ret = solve(f, min, yMin, max, yMax, min, yMin); [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double max min ret sign yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	183	183	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError testRootEndpoints [CONTEXT] double yMin = f.value(min); double yMax = f.value(max);  double sign = yMin * yMax; if (sign > 0) {  if (Math.abs(yMin) <= functionValueAccuracy) { setResult(min, 0); ret = min; [BUGGY] [BUGGY] } else if (Math.abs(yMax) <= functionValueAccuracy) { setResult(max, 0); ret = max; } else {  throw MathRuntimeException.createIllegalArgumentException( NON_BRACKETING_MESSAGE, min, max, yMin, yMax); } } else if (sign < 0){  ret = solve(f, min, yMin, max, yMax, min, yMin); [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double max min ret sign yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.7071067811865475	183	183	1	add	
13	[BUG] [BUGGY] clearResult(); [FE] AssertionFailedError testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { [BUGGY] clearResult(); [BUGGY] verifySequence(min, initial, max);  double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }   [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	102	102	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { [BUGGY] [BUGGY] clearResult(); verifySequence(min, initial, max);  double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }   [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	102	102	1	add	
15	[BUG] [BUGGY] verifySequence(min, initial, max); [FE] AssertionFailedError testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); [BUGGY] verifySequence(min, initial, max); [BUGGY]   double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	103	103	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); [BUGGY] [BUGGY] verifySequence(min, initial, max);  double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	103	103	1	add	
17	[BUG] [BUGGY] double yInitial = f.value(initial); [FE] AssertionFailedError testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); verifySequence(min, initial, max);  [BUGGY] double yInitial = f.value(initial); [BUGGY] if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); return result; [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	106	106	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); verifySequence(min, initial, max);  [BUGGY] [BUGGY] double yInitial = f.value(initial); if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); return result; [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	106	106	1	add	
19	[BUG] [BUGGY] if (Math.abs(yInitial) <= functionValueAccuracy) { [FE] AssertionFailedError testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); verifySequence(min, initial, max);  double yInitial = f.value(initial); [BUGGY] if (Math.abs(yInitial) <= functionValueAccuracy) { [BUGGY] setResult(initial, 0); return result; }  double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); return result; } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	107	107	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError testRootEndpoints [CONTEXT] throws MaxIterationsExceededException, FunctionEvaluationException { clearResult(); verifySequence(min, initial, max);  double yInitial = f.value(initial); [BUGGY] [BUGGY] if (Math.abs(yInitial) <= functionValueAccuracy) { setResult(initial, 0); return result; }  double yMin = f.value(min); if (Math.abs(yMin) <= functionValueAccuracy) { setResult(yMin, 0); return result; } [CLASS] BrentSolver [METHOD] solve [RETURN_TYPE] double  UnivariateRealFunction f final double min final double max final double initial [VARIABLES] UnivariateRealFunction f String NON_BRACKETING_MESSAGE boolean long serialVersionUID double initial max min yInitial yMax yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	107	107	1	add	
