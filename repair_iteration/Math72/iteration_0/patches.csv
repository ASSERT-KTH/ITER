bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [BUGGY]    setResult(min,  1);  ret  =  min;  [BUGGY]  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	184	1	add	    setResult(min,  1);  ret  =  min;		compilable	  [FE]  AssertionFailedError  testRootEndpoints	6	1
2	[BUG]  [BUGGY]    setResult(min,  1);  ret  =  min;  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [BUGGY]    setResult(min,  1);  ret  =  min;  [BUGGY]  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	184	1	replace	    setResult(min,  1);  ret  =  min;		compilable	  [FE]  AssertionFailedError  testRootEndpoints	6	1	add
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [BUGGY]    setResult(min,  1);  [BUGGY]  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	184	1	add	    setResult(min,  1);		compilable	  [FE]  AssertionFailedError  testRootEndpoints	6	1
3	[BUG]  [BUGGY]    setResult(min,  1);  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [BUGGY]    setResult(min,  1);  [BUGGY]  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	184	1	replace	    setResult(min,  1);		compilable	  [FE]  AssertionFailedError  testRootEndpoints	6	1	add
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [BUGGY]    setResult(min,  1);  ret  =  max;  [BUGGY]  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	184	1	add	    setResult(min,  1);  ret  =  max;		compilable	  [FE]  AssertionFailedError  testRootEndpoints	6	1
4	[BUG]  [BUGGY]    setResult(min,  1);  ret  =  max;  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [BUGGY]    setResult(min,  1);  ret  =  max;  [BUGGY]  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	184	1	replace	    setResult(min,  1);  ret  =  max;		compilable	  [FE]  AssertionFailedError  testRootEndpoints	6	1	add
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [BUGGY]    setResult(min,  0);  [BUGGY]  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	184	1	add	    setResult(min,  0);		compilable	  [FE]  AssertionFailedError  testRootEndpoints	6	1
5	[BUG]  [BUGGY]    setResult(min,  0);  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [BUGGY]    setResult(min,  0);  [BUGGY]  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	184	1	replace	    setResult(min,  0);		compilable	  [FE]  AssertionFailedError  testRootEndpoints	6	1	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [BUGGY]    setResult(min,  0);  ret  =  min;  [BUGGY]  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	184	1	add	    setResult(min,  0);  ret  =  min;		compilable	  [FE]  AssertionFailedError  testRootEndpoints	6	1
6	[BUG]  [BUGGY]    setResult(min,  0);  ret  =  min;  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [BUGGY]    setResult(min,  0);  ret  =  min;  [BUGGY]  setResult(max,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	184	1	replace	    setResult(min,  0);  ret  =  min;		compilable	  [FE]  AssertionFailedError  testRootEndpoints	6	1	add
11	[BUG]  [BUGGY]    final  double  min  =  f.value(min);  initial  =  f.value(max);  [CE]  variable  min  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    final  double  min  =  f.value(min);  initial  =  f.value(max);  [BUGGY]  clearResult();  verifySequence(min,  initial,  max);  double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }    [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	102	102	1	replace	    final  double  min  =  f.value(min);  initial  =  f.value(max);		non-compiled	[CE]  variable  min  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)	14	None	add
12	[BUG]  [BUGGY]    final  double  min  =  f.value(min);  [CE]  variable  min  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    final  double  min  =  f.value(min);  [BUGGY]  clearResult();  verifySequence(min,  initial,  max);  double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }    [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	102	102	1	replace	    final  double  min  =  f.value(min);		non-compiled	[CE]  variable  min  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)	14	None	add
13	[BUG]  [BUGGY]    super.setValue(f.value(min),  max);  [CE]  cannot  find  symbol  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    super.setValue(f.value(min),  max);  [BUGGY]  clearResult();  verifySequence(min,  initial,  max);  double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }    [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	102	102	1	replace	    super.setValue(f.value(min),  max);		non-compiled	[CE]  cannot  find  symbol	14	None	add
14	[BUG]  [BUGGY]    super.setValue(f.value(min,  initial));  [CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]    super.setValue(f.value(min,  initial));  [BUGGY]  clearResult();  verifySequence(min,  initial,  max);  double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }    [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	102	102	1	replace	    super.setValue(f.value(min,  initial));		non-compiled	[CE]  method  value  in  interface  UnivariateRealFunction  cannot  be  applied  to  given  types;	14	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [BUGGY]  ret  =  min;  [BUGGY]  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	add	ret  =  min;	ret  =  max;  	compilable	  [FE]  AssertionFailedError  testRootEndpoints	7	1
23	[BUG]  [BUGGY]  ret  =  min;  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [BUGGY]  ret  =  min;  [BUGGY]  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  min;	ret  =  max;  	compilable	  [FE]  AssertionFailedError  testRootEndpoints	7	1	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [BUGGY]  ret  =  max  +  1;  [BUGGY]  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	add	ret  =  max  +  1;	ret  =  max;  	compilable	  [FE]  AssertionFailedError  testRootEndpoints	7	1
24	[BUG]  [BUGGY]  ret  =  max  +  1;  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [BUGGY]  ret  =  max  +  1;  [BUGGY]  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  max  +  1;	ret  =  max;  	compilable	  [FE]  AssertionFailedError  testRootEndpoints	7	1	replace
24	[BUG]  [BUGGY]  ret  =  max.length;  [CE]  double  cannot  be  dereferenced  [CONTEXT]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [BUGGY]  ret  =  max.length;  [BUGGY]  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  max.length;	ret  =  max;  	non-compiled	[CE]  double  cannot  be  dereferenced	7	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [BUGGY]    [BUGGY]  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	add	  	ret  =  max;  	compilable	  [FE]  AssertionFailedError  testRootEndpoints	7	1
26	[BUG]  [BUGGY]    [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]    double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);  [BUGGY]    [BUGGY]  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	  	ret  =  max;  	compilable	  [FE]  AssertionFailedError  testRootEndpoints	7	1	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [BUGGY]  setResult(max,  1);  [BUGGY]  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	184	1	add	setResult(max,  1);	setResult(max,  0);  	compilable	  [FE]  AssertionFailedError  testRootEndpoints	5	1
32	[BUG]  [BUGGY]  setResult(max,  1);  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  double  yMax  =  f.value(max);  double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [BUGGY]  setResult(max,  1);  [BUGGY]  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	184	184	1	replace	setResult(max,  1);	setResult(max,  0);  	compilable	  [FE]  AssertionFailedError  testRootEndpoints	5	1	replace
41	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(yMin,  0);  [BUGGY]    setResult(initial,  0);  [BUGGY]  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	116	116	1	add	    setResult(initial,  0);		compilable	  [FE]  AssertionFailedError  testRootEndpoints	4	1
42	[BUG]  [BUGGY]    setResult(initial,  0);  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(yMin,  0);  [BUGGY]    setResult(initial,  0);  [BUGGY]  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	116	116	1	replace	    setResult(initial,  0);		compilable	  [FE]  AssertionFailedError  testRootEndpoints	4	1	add
42	[BUG]  [BUGGY]    setResult(initial,  yMin);  [CE]  no  suitable  method  found  for  setResult(double,double)  [CONTEXT]  double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(yMin,  0);  [BUGGY]    setResult(initial,  yMin);  [BUGGY]  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	116	116	1	replace	    setResult(initial,  yMin);		non-compiled	[CE]  no  suitable  method  found  for  setResult(double,double)	4	None	add
43	[BUG]  [BUGGY]    setResult(initial,  max);  [CE]  no  suitable  method  found  for  setResult(double,double)  [CONTEXT]  double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(yMin,  0);  [BUGGY]    setResult(initial,  max);  [BUGGY]  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	116	116	1	replace	    setResult(initial,  max);		non-compiled	[CE]  no  suitable  method  found  for  setResult(double,double)	4	None	add
44	[BUG]  [BUGGY]    setResult(xInitial,  yMin);  [CE]  cannot  find  symbol  xInitial  [CONTEXT]  double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(yMin,  0);  [BUGGY]    setResult(xInitial,  yMin);  [BUGGY]  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	116	116	1	replace	    setResult(xInitial,  yMin);		non-compiled	[CE]  cannot  find  symbol  xInitial	4	None	add
45	[BUG]  [BUGGY]    SetResult(initial,  0);  [CE]  cannot  find  symbol  [CONTEXT]  double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(yMin,  0);  [BUGGY]    SetResult(initial,  0);  [BUGGY]  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	116	116	1	replace	    SetResult(initial,  0);		non-compiled	[CE]  cannot  find  symbol	4	None	add
51	[BUG]  [BUGGY]    double  yMax  =  f.value(max);  [CE]  variable  yMax  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  clearResult();  verifySequence(min,  initial,  max);  double  yInitial  =  f.value(initial);  [BUGGY]    double  yMax  =  f.value(max);  [BUGGY]  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(yMin,  0);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	107	107	1	replace	    double  yMax  =  f.value(max);		non-compiled	[CE]  variable  yMax  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)	20	None	add
52	[BUG]  [BUGGY]    double  functionValueAccuracy  =  Math.abs(yInitial)  <  functionValueAccuracy);  [CE]  ';'  expected  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  clearResult();  verifySequence(min,  initial,  max);  double  yInitial  =  f.value(initial);  [BUGGY]    double  functionValueAccuracy  =  Math.abs(yInitial)  <  functionValueAccuracy);  [BUGGY]  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(yMin,  0);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	107	107	1	replace	    double  functionValueAccuracy  =  Math.abs(yInitial)  <  functionValueAccuracy);		non-compiled	[CE]  ';'  expected	20	None	add
53	[BUG]  [BUGGY]    double  functionValueAccuracy  =  Math.abs(yInitial)  <=  functionValueAccuracy);  [CE]  ';'  expected  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  clearResult();  verifySequence(min,  initial,  max);  double  yInitial  =  f.value(initial);  [BUGGY]    double  functionValueAccuracy  =  Math.abs(yInitial)  <=  functionValueAccuracy);  [BUGGY]  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(yMin,  0);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	107	107	1	replace	    double  functionValueAccuracy  =  Math.abs(yInitial)  <=  functionValueAccuracy);		non-compiled	[CE]  ';'  expected	20	None	add
55	[BUG]  [BUGGY]    double  functionValueAccuracy  =  Math.abs(yInitial)  >=  functionValueAccuracy);  [CE]  ';'  expected  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  clearResult();  verifySequence(min,  initial,  max);  double  yInitial  =  f.value(initial);  [BUGGY]    double  functionValueAccuracy  =  Math.abs(yInitial)  >=  functionValueAccuracy);  [BUGGY]  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(yMin,  0);  return  result;  }  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	107	107	1	replace	    double  functionValueAccuracy  =  Math.abs(yInitial)  >=  functionValueAccuracy);		non-compiled	[CE]  ';'  expected	20	None	add
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  setResult(initial,  0);  [BUGGY]  verifySequence(min,  initial,  max);  double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }    [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	102	102	1	add	setResult(initial,  0);	clearResult();  	compilable	  [FE]  AssertionFailedError  testRootEndpoints	13	1
63	[BUG]  [BUGGY]  setResult(initial,  0);  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  setResult(initial,  0);  [BUGGY]  verifySequence(min,  initial,  max);  double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }    [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	102	102	1	replace	setResult(initial,  0);	clearResult();  	compilable	  [FE]  AssertionFailedError  testRootEndpoints	13	1	replace
63	[BUG]  [BUGGY]  setResult(min,  max);  [CE]  no  suitable  method  found  for  setResult(double,double)  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  setResult(min,  max);  [BUGGY]  verifySequence(min,  initial,  max);  double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }    [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	102	102	1	replace	setResult(min,  max);	clearResult();  	non-compiled	[CE]  no  suitable  method  found  for  setResult(double,double)	13	None	replace
64	[BUG]  [BUGGY]  checkResult();  [CE]  cannot  find  symbol  [CONTEXT]  throws  MaxIterationsExceededException,  FunctionEvaluationException  {  [BUGGY]  checkResult();  [BUGGY]  verifySequence(min,  initial,  max);  double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }    [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	102	102	1	replace	checkResult();	clearResult();  	non-compiled	[CE]  cannot  find  symbol	13	None	replace
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]    double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  [BUGGY]  setResult(initial,  0);  [BUGGY]  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	setResult(initial,  0);	setResult(yMin,  0);  	compilable	  [FE]  AssertionFailedError  testRootEndpoints	1	1
72	[BUG]  [BUGGY]  setResult(initial,  0);  [FE]  AssertionFailedError  testRootEndpoints  [CONTEXT]    double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  [BUGGY]  setResult(initial,  0);  [BUGGY]  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0);	setResult(yMin,  0);  	compilable	  [FE]  AssertionFailedError  testRootEndpoints	1	1	replace
73	[BUG]  [BUGGY]  setResult(xMin,  0);  [CE]  cannot  find  symbol  xMin  [CONTEXT]    double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  [BUGGY]  setResult(xMin,  0);  [BUGGY]  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(xMin,  0);	setResult(yMin,  0);  	non-compiled	[CE]  cannot  find  symbol  xMin	1	None	replace
