bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x2,  y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x2,  y1),  absoluteAccuracy);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x2,  y1),  absoluteAccuracy);	  result    =    Math.max(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  if(x1  ==  x2)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(x1  ==  x2)  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(x1  ==  x2)  {  return  result;  }	  if(x2    ==    x1)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
3	[BUG]  [BUGGY]  double  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  double  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	double  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);	  int    oldDelta    =    Math.max(relativeAccuracy    *    Math.abs(x2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
4	[BUG]  [BUGGY]  int  oldDelta  =  Math.min(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  int  oldDelta  =  Math.min(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	int  oldDelta  =  Math.min(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);	  int    oldDelta    =    Math.max(relativeAccuracy    *    Math.abs(x2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
5	[BUG]  [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x2,  i),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x2,  i),  absoluteAccuracy);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.min(relativeAccuracy  *  Math.abs(x2,  i),  absoluteAccuracy);	  result    =    Math.min(relativeAccuracy    *    Math.abs(x1,    i),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
6	[BUG]  [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);	  result    =    Math.min(relativeAccuracy    *    Math.abs(x1,    i),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
7	[BUG]  [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);	  result    =    Math.min(relativeAccuracy    *    Math.abs(x1,    i),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
8	[BUG]  [BUGGY]  double  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  double  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	double  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);	  int    oldDelta    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
9	[BUG]  [BUGGY]  int  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  int  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	int  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);	  int    oldDelta    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
10	[BUG]  [BUGGY]  result;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result;  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result;	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
11	[BUG]  [BUGGY]  Result  result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  Result  result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	Result  result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
12	[BUG]  [BUGGY]  return  result  /  2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  return  result  /  2;  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	return  result  /  2;	  return    result    /    1;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  if(x1  >=  x2)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(x1  >=  x2)  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(x1  >=  x2)  {  return  result;  }	  if(x1!=    x2)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
14	[BUG]  [BUGGY]  result  =  Math.max(result,  x2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.max(result,  x2);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.max(result,  x2);	  setResult(x2,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
15	[BUG]  [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x2,  y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x2,  y1),  absoluteAccuracy);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.min(relativeAccuracy  *  Math.abs(x2,  y1),  absoluteAccuracy);	  result    =    Math.min(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
16	[BUG]  [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);	  result    =    Math.min(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
17	[BUG]  [BUGGY]  if(x2  >=  x1)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(x2  >=  x1)  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(x2  >=  x1)  {  return  result;  }	  if(x2!=    x1)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
18	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);	  result    =    Math.max(relativeAccuracy    *    Math.abs(x1,    absoluteAccuracy),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
19	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));	  result    =    Math.max(relativeAccuracy    *    Math.abs(x),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
20	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
21	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y0)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
22	[BUG]  [BUGGY]  if(Math.abs(y1)  <  absoluteAccuracy)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y1)  <  absoluteAccuracy)  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y1)  <  absoluteAccuracy)  {  return  result;  }	  if(Math.abs(y1)    <    =    absoluteAccuracy)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
23	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  i);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  i);	  result    =    Math.max(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    i);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
24	[BUG]  [BUGGY]  setResult(x2,  i  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  setResult(x2,  i  +  1);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	setResult(x2,  i  +  1);	  setResult(x2,    i);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
25	[BUG]  [BUGGY]  setResult(x2,  y0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  setResult(x2,  y0);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	setResult(x2,  y0);	  setResult(x2,    i);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
26	[BUG]  [BUGGY]  return  x1  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  return  x1  -  1;  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	return  x1  -  1;	  return    i    -    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
27	[BUG]  [BUGGY]  return  x2  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  return  x2  -  1;  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	return  x2  -  1;	  return    i    -    1;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
28	[BUG]  [BUGGY]  setResult(x1,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  setResult(x1,  i  +  1);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	setResult(x1,  i  +  1);	  setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  setResult(x1,  y1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  setResult(x1,  y1);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	setResult(x1,  y1);	  setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  result  =  Math.max(result,  x1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.max(result,  x1);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.max(result,  x1);	  setResult(x1,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
31	[BUG]  [BUGGY]  return  x1  /  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  return  x1  /  1;  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	return  x1  /  1;	  return    x1    +    1;    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
32	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  tolerance);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  tolerance);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  tolerance);	  result    =    Math.max(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    tolerance);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
33	[BUG]  [BUGGY]  return  x2  /  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  return  x2  /  1;  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	return  x2  /  1;	  return    result    *    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
34	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x2,  i),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x2,  i),  absoluteAccuracy);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x2,  i),  absoluteAccuracy);	  result    =    Math.max(relativeAccuracy    *    Math.abs(x1,    i),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
35	[BUG]  [BUGGY]  if(Math.abs(y1)  <  functionValueAccuracy)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y1)  <  functionValueAccuracy)  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y1)  <  functionValueAccuracy)  {  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  if(x2  ==  x1)  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(x2  ==  x1)  {  setResult(x1,  i);  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(x2  ==  x1)  {  setResult(x1,  i);  }	  if(x2    ==    x1)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
37	[BUG]  [BUGGY]  if(x0  ==  x1)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(x0  ==  x1)  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(x0  ==  x1)  {  return  result;  }	  if(x2    ==    x1)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
38	[BUG]  [BUGGY]  if(x0!=  x1)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(x0!=  x1)  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(x0!=  x1)  {  return  result;  }	  if(x2!=    x1)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
39	[BUG]  [BUGGY]  (Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  (Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y0)    <    =    Math.abs(y2))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
40	[BUG]  [BUGGY]  if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y1)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
41	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  setResult(x1,  i);  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  setResult(x1,  i);  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    setResult(x1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
42	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x2,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x2,  i);  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x2,  i);  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    setResult(x1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
43	[BUG]  [BUGGY]  if(Math.abs(y2)  <  absoluteAccuracy)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  absoluteAccuracy)  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  absoluteAccuracy)  {  return  result;  }	  if(Math.abs(y1)    <    =    absoluteAccuracy)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
44	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  absoluteAccuracy)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  =  absoluteAccuracy)  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  =  absoluteAccuracy)  {  return  result;  }	  if(Math.abs(y1)    <    =    absoluteAccuracy)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
45	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
47	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x2,  i);  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x2,  i);  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x2,  i);  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  absoluteAccuracy)  {  setResult(x1,  i);  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y1)  <  =  absoluteAccuracy)  {  setResult(x1,  i);  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y1)  <  =  absoluteAccuracy)  {  setResult(x1,  i);  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  if(Math.abs(y0)  <  absoluteAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y0)  <  absoluteAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y0)  <  absoluteAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y1)    <    absoluteAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  return  result  *  2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  return  result  *  2;  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	return  result  *  2;	  return    result    *    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
51	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  return  result;  }	  if(Math.abs(y2)    <    =    Math.abs(y1))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
52	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y1)||  Math.abs(y0)  <  =  Math.abs(y2))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y1)||  Math.abs(y0)  <  =  Math.abs(y2))  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  =  Math.abs(y1)||  Math.abs(y0)  <  =  Math.abs(y2))  {  return  result;  }	  if(Math.abs(y2)    <    =    Math.abs(y1))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
53	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  return  result;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  return  result;  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  return  result;	  result    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
54	[BUG]  [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x2,  y2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x2,  y2),  absoluteAccuracy);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.min(relativeAccuracy  *  Math.abs(x2,  y2),  absoluteAccuracy);	  result    =    Math.min(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
55	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y2)||  Math.abs(y0)  <  =  Math.abs(y2))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y2)||  Math.abs(y0)  <  =  Math.abs(y2))  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y1)  <  =  Math.abs(y2)||  Math.abs(y0)  <  =  Math.abs(y2))  {  return  result;  }	  if(Math.abs(y1)    <    =    Math.abs(y2))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
56	[BUG]  [BUGGY]  if(Math.abs(y1)  <  Math.abs(y2))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y1)  <  Math.abs(y2))  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y1)  <  Math.abs(y2))  {  return  result;  }	  if(Math.abs(y1)    <    =    Math.abs(y2))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
57	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  else  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  else  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  else  {  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
58	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x2,  i);  return  result;  }  else  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x2,  i);  return  result;  }  else  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x2,  i);  return  result;  }  else  {  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
59	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  absoluteAccuracy)  {  setResult(x1,  i);  return  result;  }  else  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y1)  <  =  absoluteAccuracy)  {  setResult(x1,  i);  return  result;  }  else  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y1)  <  =  absoluteAccuracy)  {  setResult(x1,  i);  return  result;  }  else  {  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
60	[BUG]  [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x2,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x2,  i);  return  result;  }  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x2,  i);  return  result;  }	  if(Math.abs(y2)    <    =    functionValueAccuracy)    {    setResult(x2,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  absoluteAccuracy)  {  setResult(x2,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  =  absoluteAccuracy)  {  setResult(x2,  i);  return  result;  }  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  =  absoluteAccuracy)  {  setResult(x2,  i);  return  result;  }	  if(Math.abs(y2)    <    =    functionValueAccuracy)    {    setResult(x2,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
62	[BUG]  [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x1,  i);  }  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x1,  i);  }	  if(Math.abs(y2)    <    =    functionValueAccuracy)    {    setResult(x1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
63	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
64	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy)  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y0)  <  =  functionValueAccuracy)  {  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
65	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  =  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    =    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
66	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x2,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x2,  i);  return  result;  }  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x2,  i);  return  result;  }	  setResult(x2,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
67	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x2,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x2,  i);  return  result;  }  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x2,  i);  return  result;  }	  setResult(x2,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
68	[BUG]  [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y1)    <    functionValueAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
69	[BUG]  [BUGGY]  if(Math.abs(x2)  <  =  Math.abs(x1))  {  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(x2)  <  =  Math.abs(x1))  {  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(x2)  <  =  Math.abs(x1))  {  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
70	[BUG]  [BUGGY]  if(Math.abs(x1)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(x1)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(x1)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
71	[BUG]  [BUGGY]  if(Math.abs(x2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(x2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(x2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
72	[BUG]  [BUGGY]  setResult(x2,  i,  y1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  setResult(x2,  i,  y1);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	setResult(x2,  i,  y1);	  setResult(x2,    i);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
73	[BUG]  [BUGGY]  if(x0!=  x2)  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(x0!=  x2)  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(x0!=  x2)  {  return  result;  }	  if(x1!=    x2)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
74	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy),  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy),  i);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy),  i);	  result    =    Math.max(relativeAccuracy    *    Math.abs(x2,    absoluteAccuracy),    i);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
75	[BUG]  [BUGGY]  long  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  long  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	long  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);	  int    oldDelta    =    Math.max(relativeAccuracy    *    Math.abs(x2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
76	[BUG]  [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  i));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  i));  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	result  =  Math.min(relativeAccuracy  *  Math.abs(x1,  i));	  result    =    Math.min(relativeAccuracy    *    Math.abs(x1,    i),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
77	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  absoluteAccuracy)  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y1)  <  =  absoluteAccuracy)  {  setResult(x1,  i);  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y1)  <  =  absoluteAccuracy)  {  setResult(x1,  i);  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    setResult(x1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
78	[BUG]  [BUGGY]  setResult(x1,  i,  y1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  setResult(x1,  i,  y1);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	setResult(x1,  i,  y1);	  setResult(x1,    i);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
79	[BUG]  [BUGGY]  if(Math.abs(x2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(x2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(x2)  <  =  functionValueAccuracy)  {  return  result;  }  else  {  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    return    result;    }    else    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
80	[BUG]  [BUGGY]  if(Math.abs(x1)  <  =  Math.abs(x2))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(x1)  <  =  Math.abs(x2))  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(x1)  <  =  Math.abs(x2))  {  return  result;  }	  if(Math.abs(y2)    <    =    Math.abs(y1))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
81	[BUG]  [BUGGY]  if(Math.abs(x2)  <  =  Math.abs(x1))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(x2)  <  =  Math.abs(x1))  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(x2)  <  =  Math.abs(x1))  {  return  result;  }	  if(Math.abs(y2)    <    =    Math.abs(y1))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
82	[BUG]  [BUGGY]  if(x2  ==  x1)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(x2  ==  x1)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(x2  ==  x1)  {  setResult(x1,  i);  return  result;  }	  if(x2    ==    x1)    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
83	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y2)||  Math.abs(y1)  <  =  Math.abs(y2))  {  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y2)||  Math.abs(y1)  <  =  Math.abs(y2))  {  return  result;  }  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	if(Math.abs(y1)  <  =  Math.abs(y2)||  Math.abs(y1)  <  =  Math.abs(y2))  {  return  result;  }	  if(Math.abs(y1)    <    =    Math.abs(y2))    {    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
84	[BUG]  [BUGGY]  long  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);      [BUGGY]  long  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]      }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  (Math.abs(y0)  <=  Math.abs(y1)))  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	248	248	1	replace	long  oldDelta  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);	  int    oldDelta    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
