bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial),  yMin,  0);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(initial),  yMin,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial),  yMin,  0);	  setResult(initial,    0,    f.value(initial),    yMin);    	non-compiled	[CE]  ';'  expected	42	None	replace
2	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial),  yMax,  yMin);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(initial),  yMax,  yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial),  yMax,  yMin);	  setResult(initial,    0,    f.value(initial),    yMin);    	non-compiled	[CE]  ';'  expected	42	None	replace
3	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial),  yMin,  max);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(initial),  yMin,  max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial),  yMin,  max);	  setResult(initial,    0,    f.value(initial),    yMin);    	non-compiled	[CE]  ';'  expected	42	None	replace
4	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  yMax  =  f.value(max);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  yMax  =  f.value(max);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  yMax  =  f.value(max);  }	          result    =    f.value(initial);    double    yMax    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
5	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  yMax  =  f.value(max);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  yMax  =  f.value(max);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  yMax  =  f.value(max);  }	          result    =    f.value(initial);    double    yMax    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
6	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  double  yMax  =  f.value(max);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  double  yMax  =  f.value(max);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  double  yMax  =  f.value(max);  }	          result    =    f.value(initial);    double    yMax    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
7	[BUG]  [BUGGY]  setResult(initial,  0.0);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0.0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0.0);	          setResult(initial,    0);    setResult(initial,    0.0);    	non-compiled	[CE]  ';'  expected	32	None	replace
8	[BUG]  [BUGGY]  setResult(initial,  0,  0.0);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  0.0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  0.0);	          setResult(initial,    0);    setResult(initial,    0.0);    	non-compiled	[CE]  ';'  expected	32	None	replace
9	[BUG]  [BUGGY]  result  =  setResult(initial,  0.0);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  setResult(initial,  0.0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  setResult(initial,  0.0);	          setResult(initial,    0);    setResult(initial,    0.0);    	non-compiled	[CE]  ';'  expected	32	None	replace
10	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  0.0);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  0.0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  0.0);	          setResult(initial,    0);    setResult(initial,    0.0);    	non-compiled	[CE]  ';'  expected	32	None	replace
11	[BUG]  [BUGGY]  result  =  f.value(initial);  yMin  =  f.value(max);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(initial);  yMin  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(initial);  yMin  =  f.value(max);	          result    =    f.value(initial);    yMin    =    f.value(initial);    	non-compiled	[CE]  ';'  expected	36	None	replace
12	[BUG]  [BUGGY]  result  =  f.value(initial);  yMin  =  f.value(min);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(initial);  yMin  =  f.value(min);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(initial);  yMin  =  f.value(min);	          result    =    f.value(initial);    yMin    =    f.value(initial);    	non-compiled	[CE]  ';'  expected	36	None	replace
13	[BUG]  [BUGGY]  result  =  f.value(max);  yMin  =  f.value(initial);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(max);  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(max);  yMin  =  f.value(initial);	          result    =    f.value(initial);    yMin    =    f.value(initial);    	non-compiled	[CE]  ';'  expected	36	None	replace
14	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial)/  1);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(initial)/  1);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial)/  1);	  setResult(initial,    0,    f.value(initial)+    1);    	non-compiled	[CE]  ';'  expected	73	None	replace
15	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial)+  2);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(initial)+  2);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial)+  2);	  setResult(initial,    0,    f.value(initial)+    1);    	non-compiled	[CE]  ';'  expected	73	None	replace
16	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(yMin)+  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(yMin)+  1);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(yMin)+  1);	  setResult(initial,    0,    f.value(initial)+    1);    	non-compiled	[CE]  ';'  expected	73	None	replace
17	[BUG]  [BUGGY]  setResult(min,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(min,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(min,  0);	  setResult(max,    0);    	non-compiled	[CE]  ';'  expected	67	None	replace
18	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(yMin);  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(yMin);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(yMin);	  setResult(result,    0);    setResult(result,    0,    f.value(max);    	non-compiled	[CE]  ')'  expected	82	None	replace
19	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(result,  0,  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(result,  0,  f.value(initial);  }  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(result,  0,  f.value(initial);  }	  setResult(result,    0);    setResult(result,    0,    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
20	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(result,  0,  f.value(max);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(result,  0,  f.value(max);  }  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(result,  0,  f.value(max);  }	  setResult(result,    0);    setResult(result,    0,    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
21	[BUG]  [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  result  =  f.value(initial);  yMin  =  f.value(initial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  result  =  f.value(initial);  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        yMin    =    f.value(initial);    result  =  f.value(initial);  yMin  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	35	None	add
22	[BUG]  [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  double  yMin  =  f.value(initial);  yMin  =  f.value(initial);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  double  yMin  =  f.value(initial);  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        yMin    =    f.value(initial);    double  yMin  =  f.value(initial);  yMin  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	35	None	add
23	[BUG]  [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  Result  =  f.value(initial);  yMin  =  f.value(initial);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  Result  =  f.value(initial);  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        yMin    =    f.value(initial);    Result  =  f.value(initial);  yMin  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	35	None	add
24	[BUG]  [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  result  =  f.value(initial);  yMax  =  f.value(initial);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  result  =  f.value(initial);  yMax  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        yMin    =    f.value(initial);    result  =  f.value(initial);  yMax  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	35	None	add
25	[BUG]  [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  setResult(initial);  yMin  =  f.value(initial);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  setResult(initial);  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        yMin    =    f.value(initial);    setResult(initial);  yMin  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	35	None	add
26	[BUG]  [BUGGY]  if(initial  <  min)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(min);  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(initial  <  min)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(min);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(initial  <  min)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(min);  }	          yMin    =    f.value(initial);    yMin    =    f.value(initial).value(min);    	non-compiled	[CE]  ';'  expected	77	None	replace
27	[BUG]  [BUGGY]  setResult(initial,  0,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  0);	          setResult(initial,    0);    setResult(initial,    0,    0);    	non-compiled	[CE]  ';'  expected	29	None	replace
28	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  }  else  {  setResult(initial,  0,  0);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  }  else  {  setResult(initial,  0,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  }  else  {  setResult(initial,  0,  0);  }	          setResult(initial,    0);    setResult(initial,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
29	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  }	          setResult(initial,    0);    setResult(initial,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
30	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  0);  }	          setResult(initial,    0);    setResult(initial,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
31	[BUG]  [BUGGY]  double  yMax  =  f.value(x);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMax  =  f.value(x);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double  yMax  =  f.value(x);	  double    yMax    =    f.value(outitial);    	non-compiled	[CE]  ';'  expected	61	None	replace
32	[BUG]  [BUGGY]  result  =  f.value(initial,  yMin  +  1);  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(initial,  yMin  +  1);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(initial,  yMin  +  1);	  result    =    f.value(initial,    yMin);    	non-compiled	[CE]  ';'  expected	88	None	replace
33	[BUG]  [BUGGY]  result  =  f.value(initial,  yMax);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(initial,  yMax);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(initial,  yMax);	  result    =    f.value(initial,    yMin);    	non-compiled	[CE]  ';'  expected	88	None	replace
34	[BUG]  [BUGGY]          yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(initial);  yMin  =  f.value(initial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(initial);  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                yMin        =        f.value(initial);        yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	44	None	add
35	[BUG]  [BUGGY]          yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(min);  yMin  =  f.value(initial);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(min);  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                yMin        =        f.value(initial);        yMin    =    f.value(initial);    yMin  =  f.value(min);  yMin  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	44	None	add
36	[BUG]  [BUGGY]          yMin    =    f.value(initial);    yMin  =  f.value(initial);  double  yMin  =  f.value(initial);  yMin  =  f.value(initial);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          yMin    =    f.value(initial);    yMin  =  f.value(initial);  double  yMin  =  f.value(initial);  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                yMin        =        f.value(initial);        yMin    =    f.value(initial);    double  yMin  =  f.value(initial);  yMin  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	44	None	add
37	[BUG]  [BUGGY]          yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(itial);  yMin  =  f.value(initial);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(itial);  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                yMin        =        f.value(initial);        yMin    =    f.value(initial);    yMin  =  f.value(itial);  yMin  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	44	None	add
38	[BUG]  [BUGGY]          yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(initial);  yMax  =  f.value(initial);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(initial);  yMax  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                yMin        =        f.value(initial);        yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMax  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	44	None	add
39	[BUG]  [BUGGY]  yMin  =  f.value(initial);  yMin  =  f.value(max);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(initial);  yMin  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(initial);  yMin  =  f.value(max);	          yMin    =    f.value(initial);    yMin    =    f.value(min);    	non-compiled	[CE]  ';'  expected	78	None	replace
40	[BUG]  [BUGGY]  yMin  =  f.value(initial);  yMin  =  f.value(yMin);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(initial);  yMin  =  f.value(yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(initial);  yMin  =  f.value(yMin);	          yMin    =    f.value(initial);    yMin    =    f.value(min);    	non-compiled	[CE]  ';'  expected	78	None	replace
41	[BUG]  [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  result  =  f.value(initial);  result  =  f.value(initial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  result  =  f.value(initial);  result  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        result    =    f.value(initial);    result  =  f.value(initial);  result  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	33	None	add
42	[BUG]  [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  double  yMin  =  f.value(initial);  result  =  f.value(initial);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  double  yMin  =  f.value(initial);  result  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        result    =    f.value(initial);    double  yMin  =  f.value(initial);  result  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	33	None	add
43	[BUG]  [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  yMin  =  f.value(initial);  result  =  f.value(initial);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  yMin  =  f.value(initial);  result  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        result    =    f.value(initial);    yMin  =  f.value(initial);  result  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	33	None	add
44	[BUG]  [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  setResult(initial,  0);  result  =  f.value(initial);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  setResult(initial,  0);  result  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        result    =    f.value(initial);    setResult(initial,  0);  result  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	33	None	add
45	[BUG]  [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  setResult(initial,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        result    =    f.value(initial);    setResult(initial,  0);	  	non-compiled	[CE]  ';'  expected	33	None	add
46	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(result,  0);  }  else  {  setResult(result,  0,  f.value(initial));  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(result,  0);  }  else  {  setResult(result,  0,  f.value(initial));  }  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(result,  0);  }  else  {  setResult(result,  0,  f.value(initial));  }	  setResult(result,    0);    setResult(result,    0,    f.value(result));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
47	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(result,  0,  f.value(initial));  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(result,  0,  f.value(initial));  }  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(result,  0,  f.value(initial));  }	  setResult(result,    0);    setResult(result,    0,    f.value(result));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
48	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(initial));  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(initial));  }  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(initial));  }	  setResult(result,    0);    setResult(result,    0,    f.value(result));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
49	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(yMin));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(yMin));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(yMin));	  setResult(result,    0);    setResult(result,    0,    f.value(result));    	non-compiled	[CE]  ';'  expected	83	None	replace
50	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial,  0);  }	          yMin    =    f.value(initial);    yMin    =    f.value(initial,    0);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
51	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial,  0);  }  else  {  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial,  0);  }  else  {  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial,  0);  }  else  {  setResult(initial,  0);  }	          yMin    =    f.value(initial);    yMin    =    f.value(initial,    0);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
52	[BUG]  [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  result  =  f.value(initial);  setResult(initial,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  result  =  f.value(initial);  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        setResult(initial,    0);    result  =  f.value(initial);  setResult(initial,  0);	  	non-compiled	[CE]  ';'  expected	38	None	add
53	[BUG]  [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  setResult(initial);  setResult(initial,  0);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  setResult(initial);  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        setResult(initial,    0);    setResult(initial);  setResult(initial,  0);	  	non-compiled	[CE]  ';'  expected	38	None	add
54	[BUG]  [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  yMin  =  f.value(initial);  setResult(initial,  0);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  yMin  =  f.value(initial);  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        setResult(initial,    0);    yMin  =  f.value(initial);  setResult(initial,  0);	  	non-compiled	[CE]  ';'  expected	38	None	add
55	[BUG]  [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  double  yMin  =  f.value(initial);  setResult(initial,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  double  yMin  =  f.value(initial);  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        setResult(initial,    0);    double  yMin  =  f.value(initial);  setResult(initial,  0);	  	non-compiled	[CE]  ';'  expected	38	None	add
56	[BUG]  [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  result  =  f.value(initial);  setResult(initial,  0,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  result  =  f.value(initial);  setResult(initial,  0,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        setResult(initial,    0);    result  =  f.value(initial);  setResult(initial,  0,  0);	  	non-compiled	[CE]  ';'  expected	38	None	add
57	[BUG]  [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  setResult(initial,  0);  result  =  f.value(initial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  setResult(initial,  0);  result  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        result    =    f.value(initial);    setResult(initial,  0);  result  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	30	None	add
58	[BUG]  [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  SetResult(initial,  0);  result  =  f.value(initial);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  SetResult(initial,  0);  result  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        result    =    f.value(initial);    SetResult(initial,  0);  result  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	30	None	add
59	[BUG]  [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  setResult(initial,  0);  result  =  f.value(outitial);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  setResult(initial,  0);  result  =  f.value(outitial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        result    =    f.value(initial);    setResult(initial,  0);  result  =  f.value(outitial);	  	non-compiled	[CE]  ';'  expected	30	None	add
60	[BUG]  [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  setResult(initial,  0);  result  =  f.value(Initial);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  setResult(initial,  0);  result  =  f.value(Initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        result    =    f.value(initial);    setResult(initial,  0);  result  =  f.value(Initial);	  	non-compiled	[CE]  ';'  expected	30	None	add
61	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial);  }	          yMin    =    f.value(initial);    yMin    =    f.value(initial));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
62	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial);  }  else  {  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial);  }  else  {  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial);  }  else  {  setResult(initial,  0);  }	          yMin    =    f.value(initial);    yMin    =    f.value(initial));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
63	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(min);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(min);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(min);  }	          yMin    =    f.value(initial);    yMin    =    f.value(initial));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
64	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  yMax);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  yMax);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  yMax);	  setResult(initial,    0,    yMax,    yMin);    	non-compiled	[CE]  ';'  expected	63	None	replace
65	[BUG]  [BUGGY]  setResult(initial,  0,  max,  yMin);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  max,  yMin);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  max,  yMin);	  setResult(initial,    0,    yMax,    yMin);    	non-compiled	[CE]  ';'  expected	63	None	replace
66	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  yMin);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  yMin);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  yMin);	  setResult(initial,    0,    yMax,    yMin);    	non-compiled	[CE]  ';'  expected	63	None	replace
67	[BUG]  [BUGGY]  setResult(initial,  0,  yInitial,  yMin);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yInitial,  yMin);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yInitial,  yMin);	  setResult(initial,    0,    yMax,    yMin);    	non-compiled	[CE]  ';'  expected	63	None	replace
68	[BUG]  [BUGGY]  double  yMax  =  f.value(min);  double  yMax  =  f.value(min);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMax  =  f.value(min);  double  yMax  =  f.value(min);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double    yMax    =    f.value(min);    double  yMax  =  f.value(min);	  	non-compiled	[CE]  ';'  expected	59	None	add
69	[BUG]  [BUGGY]  double  yMax  =  f.value(min);  Double  yMax  =  f.value(min);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMax  =  f.value(min);  Double  yMax  =  f.value(min);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double    yMax    =    f.value(min);    Double  yMax  =  f.value(min);	  	non-compiled	[CE]  ';'  expected	59	None	add
70	[BUG]  [BUGGY]  double  yMax  =  f.value(min);  double  ymax  =  f.value(min);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMax  =  f.value(min);  double  ymax  =  f.value(min);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double    yMax    =    f.value(min);    double  ymax  =  f.value(min);	  	non-compiled	[CE]  ';'  expected	59	None	add
71	[BUG]  [BUGGY]  double  yMax  =  f.value(min);  double  yMin  =  f.value(min);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMax  =  f.value(min);  double  yMin  =  f.value(min);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double    yMax    =    f.value(min);    double  yMin  =  f.value(min);	  	non-compiled	[CE]  ';'  expected	59	None	add
72	[BUG]  [BUGGY]  result  =  f.value(yMin,  0);  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(yMin,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(yMin,  0);	  setResult(result,    0);    result    =    f.value(result,    0);    	non-compiled	[CE]  ';'  expected	95	None	replace
73	[BUG]  [BUGGY]  setResult(initial,  0);  result  =  f.value(yMin,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0);  result  =  f.value(yMin,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0);  result  =  f.value(yMin,  0);	  setResult(result,    0);    result    =    f.value(result,    0);    	non-compiled	[CE]  ';'  expected	95	None	replace
74	[BUG]  [BUGGY]  setResult(initial,  0);  result  =  f.value(result,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0);  result  =  f.value(result,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0);  result  =  f.value(result,  0);	  setResult(result,    0);    result    =    f.value(result,    0);    	non-compiled	[CE]  ';'  expected	95	None	replace
75	[BUG]  [BUGGY]  setResult(initial);  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial);	          result    =    f.value(initial);    setResult(initial);    	non-compiled	[CE]  ';'  expected	87	None	replace
76	[BUG]  [BUGGY]  result  =  f.value(initial);  setResult(yMin);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(initial);  setResult(yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(initial);  setResult(yMin);	          result    =    f.value(initial);    setResult(initial);    	non-compiled	[CE]  ';'  expected	87	None	replace
77	[BUG]  [BUGGY]  result  =  f.value(initial);  setResult(yInitial);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(initial);  setResult(yInitial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(initial);  setResult(yInitial);	          result    =    f.value(initial);    setResult(initial);    	non-compiled	[CE]  ';'  expected	87	None	replace
78	[BUG]  [BUGGY]  setResult(yInitial,  0);  setResult(yInitial,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(yInitial,  0);  setResult(yInitial,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(yInitial,    0);    setResult(yInitial,  0);	  	non-compiled	[CE]  ';'  expected	13	None	add
79	[BUG]  [BUGGY]  setResult(yInitial,  0);  setResult(yInitial,  0,  f.value(initial));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(yInitial,  0);  setResult(yInitial,  0,  f.value(initial));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(yInitial,    0);    setResult(yInitial,  0,  f.value(initial));	  	non-compiled	[CE]  ';'  expected	13	None	add
80	[BUG]  [BUGGY]  setResult(yInitial,  0);  setResult(yInitial,  0,  0);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(yInitial,  0);  setResult(yInitial,  0,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(yInitial,    0);    setResult(yInitial,  0,  0);	  	non-compiled	[CE]  ';'  expected	13	None	add
81	[BUG]  [BUGGY]  setResult(yInitial,  0);  setResult(yInitial,  0,  f.value(max);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(yInitial,  0);  setResult(yInitial,  0,  f.value(max);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(yInitial,    0);    setResult(yInitial,  0,  f.value(max);	  	non-compiled	[CE]  ')'  expected	13	None	add
82	[BUG]  [BUGGY]  result  =  f.value(max);  result  =  f.value(max);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(max);  result  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(max);    result  =  f.value(max);	  	non-compiled	[CE]  ')'  expected	49	None	add
83	[BUG]  [BUGGY]  result  =  f.value(max);  yMin  =  f.value(max);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(max);  yMin  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(max);    yMin  =  f.value(max);	  	non-compiled	[CE]  ';'  expected	49	None	add
84	[BUG]  [BUGGY]  result  =  f.value(max);  double  yMax  =  f.value(max);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(max);  double  yMax  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(max);    double  yMax  =  f.value(max);	  	non-compiled	[CE]  ';'  expected	49	None	add
85	[BUG]  [BUGGY]  result  =  f.value(max);  setResult(min,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(max);  setResult(min,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(max);    setResult(min,  0);	  	non-compiled	[CE]  ';'  expected	49	None	add
86	[BUG]  [BUGGY]  Double  yMin  =  f.value(min);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  Double  yMin  =  f.value(min);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	Double  yMin  =  f.value(min);	  Double    yMin    =    f.value(initial);    	non-compiled	[CE]  ';'  expected	98	None	replace
87	[BUG]  [BUGGY]  Double  yMin  =  f.value(max);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  Double  yMin  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	Double  yMin  =  f.value(max);	  Double    yMin    =    f.value(initial);    	non-compiled	[CE]  ';'  expected	98	None	replace
88	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  setResult(initial,  0);  setResult(initial,  0,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  setResult(initial,  0);  setResult(initial,  0,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0,    0);    setResult(initial,  0);  setResult(initial,  0,  0);	  	non-compiled	[CE]  ';'  expected	28	None	add
89	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  setResult(initial,  0,  0);  setResult(initial,  0,  0);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  setResult(initial,  0,  0);  setResult(initial,  0,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0,    0);    setResult(initial,  0,  0);  setResult(initial,  0,  0);	  	non-compiled	[CE]  ';'  expected	28	None	add
90	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  SetResult(initial,  0);  setResult(initial,  0,  0);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  SetResult(initial,  0);  setResult(initial,  0,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0,    0);    SetResult(initial,  0);  setResult(initial,  0,  0);	  	non-compiled	[CE]  ';'  expected	28	None	add
91	[BUG]  [BUGGY]  yMin  =  f.value(outitial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(outitial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(outitial);	  yMin    =    f.value(max);    	non-compiled	[CE]  ';'  expected	7	None	replace
92	[BUG]  [BUGGY]  result  =  setResult(initial,  0,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  setResult(initial,  0,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  setResult(initial,  0,  0);	  setResult(result,    0);    setResult(result,    0,    0);    	non-compiled	[CE]  ';'  expected	24	None	replace
93	[BUG]  [BUGGY]  setResult(yMin,  0,  0);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(yMin,  0,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(yMin,  0,  0);	  setResult(result,    0);    setResult(result,    0,    0);    	non-compiled	[CE]  ';'  expected	24	None	replace
94	[BUG]  [BUGGY]  result  =  f.value(itial);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(itial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(itial);	          result    =    f.value(initial);    result    =    f.value(itial);    	non-compiled	[CE]  ';'  expected	40	None	replace
95	[BUG]  [BUGGY]  result  =  f.value(yInitial);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(yInitial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(yInitial);	          result    =    f.value(initial);    result    =    f.value(itial);    	non-compiled	[CE]  ';'  expected	40	None	replace
96	[BUG]  [BUGGY]  result  =  f.value(result);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(result);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(result);	  result    =    f.value(yMin);    	non-compiled	[CE]  ';'  expected	53	None	replace
97	[BUG]  [BUGGY]  yMax  =  f.value(x);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMax  =  f.value(x);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMax  =  f.value(x);	  yMax    =    f.value(outitial);    	non-compiled	[CE]  ';'  expected	86	None	replace
98	[BUG]  [BUGGY]  setResult(initial,  0,  max);  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  max);	  setResult(initial,    0,    yMax);    	non-compiled	[CE]  ';'  expected	80	None	replace
99	[BUG]  [BUGGY]  setResult(initial,  0,  yMax,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMax,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMax,  0);	  setResult(initial,    0,    yMax);    	non-compiled	[CE]  ';'  expected	80	None	replace
100	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0,  0);  setResult(result,  0);  setResult(result,  0,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0,  0);  setResult(result,  0);  setResult(result,  0,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0,    0);    setResult(result,  0);  setResult(result,  0,  0);	  	non-compiled	[CE]  ';'  expected	23	None	add
101	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0,  0);  setResult(result,  0,  0);  setResult(result,  0,  0);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0,  0);  setResult(result,  0,  0);  setResult(result,  0,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0,    0);    setResult(result,  0,  0);  setResult(result,  0,  0);	  	non-compiled	[CE]  ';'  expected	23	None	add
102	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0,  0);  result  =  f.value(initial);  setResult(result,  0,  0);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0,  0);  result  =  f.value(initial);  setResult(result,  0,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0,    0);    result  =  f.value(initial);  setResult(result,  0,  0);	  	non-compiled	[CE]  ';'  expected	23	None	add
103	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0,  0);  setResult(initial,  0);  setResult(result,  0,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0,  0);  setResult(initial,  0);  setResult(result,  0,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0,    0);    setResult(initial,  0);  setResult(result,  0,  0);	  	non-compiled	[CE]  ';'  expected	23	None	add
104	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0,  0);  result  =  0;  setResult(result,  0,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0,  0);  result  =  0;  setResult(result,  0,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0,    0);    result  =  0;  setResult(result,  0,  0);	  	non-compiled	[CE]  ';'  expected	23	None	add
105	[BUG]  [BUGGY]  result  =  f.value(initial);  setResult(yMin,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(initial);  setResult(yMin,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(initial);  setResult(yMin,  0);	          result    =    f.value(initial);    setResult(initial,    0);    	non-compiled	[CE]  ';'  expected	39	None	replace
106	[BUG]  [BUGGY]  result  =  f.value(initial);  setResult(yInitial,  0);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(initial);  setResult(yInitial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(initial);  setResult(yInitial,  0);	          result    =    f.value(initial);    setResult(initial,    0);    	non-compiled	[CE]  ';'  expected	39	None	replace
107	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  f.value(initial);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  f.value(initial);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  f.value(initial);	  setResult(initial,    0,    yMin,    f.value(max);    	non-compiled	[CE]  ')'  expected	71	None	replace
108	[BUG]  [BUGGY]  setResult(initial,  0,  yMax,  f.value(max);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMax,  f.value(max);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMax,  f.value(max);	  setResult(initial,    0,    yMin,    f.value(max);    	non-compiled	[CE]  ')'  expected	71	None	replace
109	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  f.value(min);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  f.value(min);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  f.value(min);	  setResult(initial,    0,    yMin,    f.value(max);    	non-compiled	[CE]  ')'  expected	71	None	replace
110	[BUG]  [BUGGY]  result  =  Math.max(result,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.max(result,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  Math.max(result,  0);	  result    =    Math.abs(yMin);    	non-compiled	[CE]  ';'  expected	56	None	replace
111	[BUG]  [BUGGY]  result  =  Math.max(result,  yMin);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.max(result,  yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  Math.max(result,  yMin);	  result    =    Math.abs(yMin);    	non-compiled	[CE]  ';'  expected	56	None	replace
112	[BUG]  [BUGGY]  result  =  Math.min(result,  yMin);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.min(result,  yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  Math.min(result,  yMin);	  result    =    Math.abs(yMin);    	non-compiled	[CE]  ';'  expected	56	None	replace
113	[BUG]  [BUGGY]  result  =  Math.abs(max);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.abs(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  Math.abs(max);	  result    =    Math.abs(yMin);    	non-compiled	[CE]  ';'  expected	56	None	replace
114	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(max);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(max);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(max);  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
115	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  f.value(max);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  f.value(max);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  f.value(max);  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
116	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial);  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
117	[BUG]  [BUGGY]  yMin  =  f.value(min);  yMin  =  f.value(initial).value(max);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(min);  yMin  =  f.value(initial).value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(min);  yMin  =  f.value(initial).value(max);	          yMin    =    f.value(initial);    yMin    =    f.value(initial).value(max);    	non-compiled	[CE]  ';'  expected	79	None	replace
118	[BUG]  [BUGGY]  yMin  =  f.value(initial);  yMin  =  f.value(min).value(max);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(initial);  yMin  =  f.value(min).value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(initial);  yMin  =  f.value(min).value(max);	          yMin    =    f.value(initial);    yMin    =    f.value(initial).value(max);    	non-compiled	[CE]  ';'  expected	79	None	replace
119	[BUG]  [BUGGY]  result  =  0;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  0;  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  0;	  setResult(result,    0);    setResult(result,    0);    	non-compiled	[CE]  ';'  expected	21	None	replace
120	[BUG]  [BUGGY]  SetResult  initial  =  setResult(initial,  0);  return  result;  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  SetResult  initial  =  setResult(initial,  0);  return  result;  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	SetResult  initial  =  setResult(initial,  0);  return  result;	  if(initial    <    =    max)    {    setResult(initial,    0);    return    result;    }    	non-compiled	[CE]  ';'  expected	97	None	replace
121	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }	          setResult(initial,    0);    result    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
122	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          setResult(initial,    0);    result    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
123	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }	  setResult(yMin,    0);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
124	[BUG]  [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }	  setResult(yMin,    0);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
125	[BUG]  [BUGGY]  setResult(initial,  1);  setResult(initial,  1);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  1);  setResult(initial,  1);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,    1);    setResult(initial,  1);	  	non-compiled	[CE]  ';'  expected	9	None	add
126	[BUG]  [BUGGY]  setResult(initial,  1);  setResult(initial,  2);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  1);  setResult(initial,  2);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,    1);    setResult(initial,  2);	  	non-compiled	[CE]  ';'  expected	9	None	add
127	[BUG]  [BUGGY]  setResult(initial,  1);  SetResult(initial,  1);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  1);  SetResult(initial,  1);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,    1);    SetResult(initial,  1);	  	non-compiled	[CE]  ';'  expected	9	None	add
128	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0);  }	          setResult(initial,    0);    setResult(initial,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
129	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }	          setResult(initial,    0);    setResult(initial,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
130	[BUG]  [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0);  }	          setResult(initial,    0);    setResult(initial,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
131	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial)/  2,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(initial)/  2,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial)/  2,  0);	  setResult(initial,    0,    f.value(initial),    0);    	non-compiled	[CE]  ';'  expected	41	None	replace
132	[BUG]  [BUGGY]  result  =  Math.abs(yMin);  result  =  Math.abs(yMin);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.abs(yMin);  result  =  Math.abs(yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    Math.abs(yMin);    result  =  Math.abs(yMin);	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
133	[BUG]  [BUGGY]  result  =  Math.abs(yMin);  yMin  =  Math.abs(yMin);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.abs(yMin);  yMin  =  Math.abs(yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    Math.abs(yMin);    yMin  =  Math.abs(yMin);	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
134	[BUG]  [BUGGY]  result  =  Math.abs(yMin);  result  =  Math.abs(yMax);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.abs(yMin);  result  =  Math.abs(yMax);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    Math.abs(yMin);    result  =  Math.abs(yMax);	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
135	[BUG]  [BUGGY]  result  =  Math.abs(yMin);  setResult(yMin,  0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.abs(yMin);  setResult(yMin,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    Math.abs(yMin);    setResult(yMin,  0);	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
136	[BUG]  [BUGGY]  result  =  Math.abs(yMin);  result  =  Math.abs(ymin);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.abs(yMin);  result  =  Math.abs(ymin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    Math.abs(yMin);    result  =  Math.abs(ymin);	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
137	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  double  yMin  =  f.value(min);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  double  yMin  =  f.value(min);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  double  yMin  =  f.value(min);  }	          yMin    =    f.value(initial);    double    yMin    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
138	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  double  yMin  =  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  double  yMin  =  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  double  yMin  =  f.value(initial);  }	          yMin    =    f.value(initial);    double    yMin    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
139	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  max,  f);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  max,  f);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  max,  f);	  setResult(initial,    0,    yMin,    max);    	non-compiled	[CE]  ';'  expected	62	None	replace
140	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  initial,  max);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  initial,  max);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  initial,  max);	  setResult(initial,    0,    yMin,    max);    	non-compiled	[CE]  ';'  expected	62	None	replace
141	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  max,  min);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  max,  min);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  max,  min);	  setResult(initial,    0,    yMin,    max);    	non-compiled	[CE]  ';'  expected	62	None	replace
142	[BUG]  [BUGGY]  yMin  =  f.value(itial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(itial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(itial);	          yMin    =    f.value(initial);    yMin    =    f.value(initial);    	non-compiled	[CE]  ';'  expected	45	None	replace
143	[BUG]  [BUGGY]          double    yMax    =    f.value(max);    double  ymax  =  f.value(max);  double  yMax  =  f.value(max);  double  ymax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          double    yMax    =    f.value(max);    double  ymax  =  f.value(max);  double  yMax  =  f.value(max);  double  ymax  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                double        yMax        =        f.value(max);        double    ymax    =    f.value(max);    double  yMax  =  f.value(max);  double  ymax  =  f.value(max);	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
144	[BUG]  [BUGGY]          double    yMax    =    f.value(max);    double  ymax  =  f.value(max);  Double  yMax  =  f.value(max);  double  ymax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          double    yMax    =    f.value(max);    double  ymax  =  f.value(max);  Double  yMax  =  f.value(max);  double  ymax  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                double        yMax        =        f.value(max);        double    ymax    =    f.value(max);    Double  yMax  =  f.value(max);  double  ymax  =  f.value(max);	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
145	[BUG]  [BUGGY]          double    yMax    =    f.value(max);    double  ymax  =  f.value(max);  double  yMin  =  f.value(max);  double  ymax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          double    yMax    =    f.value(max);    double  ymax  =  f.value(max);  double  yMin  =  f.value(max);  double  ymax  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                double        yMax        =        f.value(max);        double    ymax    =    f.value(max);    double  yMin  =  f.value(max);  double  ymax  =  f.value(max);	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
146	[BUG]  [BUGGY]          double    yMax    =    f.value(max);    double  ymax  =  f.value(max);  double  ymax  =  f.value(max);  double  ymax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          double    yMax    =    f.value(max);    double  ymax  =  f.value(max);  double  ymax  =  f.value(max);  double  ymax  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                double        yMax        =        f.value(max);        double    ymax    =    f.value(max);    double  ymax  =  f.value(max);  double  ymax  =  f.value(max);	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
147	[BUG]  [BUGGY]  result  =  f.value(initial);  yMax  =  f.value(min);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(initial);  yMax  =  f.value(min);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(initial);  yMax  =  f.value(min);	          result    =    f.value(initial);    yMax    =    f.value(max);    	non-compiled	[CE]  ';'  expected	93	None	replace
148	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(initial);  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
149	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  f.value(initial);  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
150	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial));  }  else  {  setResult(initial,  0,  f.value(initial));  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial));  }  else  {  setResult(initial,  0,  f.value(initial));  }  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial));  }  else  {  setResult(initial,  0,  f.value(initial));  }	  setResult(result,    0);    setResult(result,    0,    f.value(initial));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
151	[BUG]  [BUGGY]  result  =  f.value(initial,  0,  yMin);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(initial,  0,  yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(initial,  0,  yMin);	  result    =    f.value(initial,    0);    	non-compiled	[CE]  ';'  expected	76	None	replace
152	[BUG]  [BUGGY]  result  =  f.value(initial,  1);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(initial,  1);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(initial,  1);	  result    =    f.value(initial,    0);    	non-compiled	[CE]  ';'  expected	76	None	replace
153	[BUG]  [BUGGY]  double  yMax  =  f.value(initial);  double  yMax  =  f.value(initial);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMax  =  f.value(initial);  double  yMax  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double    yMax    =    f.value(initial);    double  yMax  =  f.value(initial);	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
154	[BUG]  [BUGGY]  double  yMax  =  f.value(initial);  Double  yMax  =  f.value(initial);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMax  =  f.value(initial);  Double  yMax  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double    yMax    =    f.value(initial);    Double  yMax  =  f.value(initial);	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
155	[BUG]  [BUGGY]  double  yMax  =  f.value(initial);  double  ymax  =  f.value(initial);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMax  =  f.value(initial);  double  ymax  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double    yMax    =    f.value(initial);    double  ymax  =  f.value(initial);	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
156	[BUG]  [BUGGY]  double  yMax  =  f.value(initial);  double  yMin  =  f.value(initial);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMax  =  f.value(initial);  double  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double    yMax    =    f.value(initial);    double  yMin  =  f.value(initial);	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
157	[BUG]  [BUGGY]  double  yMax  =  f.value(initial);  double  yMax  =  f.value(initial));  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMax  =  f.value(initial);  double  yMax  =  f.value(initial));  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double    yMax    =    f.value(initial);    double  yMax  =  f.value(initial));	  	non-compiled	[CE]  ';'  expected	57	None	add
158	[BUG]  [BUGGY]  yMin  =  f.value(min);  yMin  =  f.value(min);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(min);  yMin  =  f.value(min);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin    =    f.value(min);    yMin  =  f.value(min);	  	non-compiled	[CE]  ';'  expected	4	None	add
159	[BUG]  [BUGGY]  yMin  =  f.value(min);  yMin  =  f.value(min;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(min);  yMin  =  f.value(min;  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin    =    f.value(min);    yMin  =  f.value(min;	  	non-compiled	[CE]  ')'  expected	4	None	add
160	[BUG]  [BUGGY]  yMin  =  f.value(min);  initial  =  f.value(min);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(min);  initial  =  f.value(min);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin    =    f.value(min);    initial  =  f.value(min);	  	non-compiled	[CE]  ')'  expected	4	None	add
161	[BUG]  [BUGGY]  yMin  =  f.value(min);  yMin  =  f.value(mine);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(min);  yMin  =  f.value(mine);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin    =    f.value(min);    yMin  =  f.value(mine);	  	non-compiled	[CE]  ')'  expected	4	None	add
162	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0);  setResult(initial,  0);  setResult(initial,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0);  setResult(initial,  0);  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0);    setResult(initial,  0);  setResult(initial,  0);	  	non-compiled	[CE]  ';'  expected	26	None	add
163	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0);  setResult(initial,  0,  yMin);  setResult(initial,  0);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0);  setResult(initial,  0,  yMin);  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0);    setResult(initial,  0,  yMin);  setResult(initial,  0);	  	non-compiled	[CE]  ';'  expected	26	None	add
164	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0);  setResult(initial,  0,  0);  setResult(initial,  0);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0);  setResult(initial,  0,  0);  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0);    setResult(initial,  0,  0);  setResult(initial,  0);	  	non-compiled	[CE]  ';'  expected	26	None	add
165	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0);  setResult(min,  0);  setResult(initial,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0);  setResult(min,  0);  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0);    setResult(min,  0);  setResult(initial,  0);	  	non-compiled	[CE]  ';'  expected	26	None	add
166	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0);  setResult(initial,  0);  setResult(initial,  0,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0);  setResult(initial,  0);  setResult(initial,  0,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0);    setResult(initial,  0);  setResult(initial,  0,  0);	  	non-compiled	[CE]  ';'  expected	26	None	add
167	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(max));  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(max));  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(max));  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(max));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
168	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(max));  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(max));  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(max));  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(max));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
169	[BUG]  [BUGGY]  setResult(initial,  0);  SetResult(result,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0);  SetResult(result,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0);  SetResult(result,  0);	  setResult(result,    0);    SetResult(result,    0);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
170	[BUG]  [BUGGY]  setResult(initial,  0);  SetResult(yMin,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0);  SetResult(yMin,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0);  SetResult(yMin,  0);	  setResult(result,    0);    SetResult(result,    0);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
171	[BUG]  [BUGGY]  result  =  setResult(initial,  0);  SetResult(result,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  setResult(initial,  0);  SetResult(result,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  setResult(initial,  0);  SetResult(result,  0);	  setResult(result,    0);    SetResult(result,    0);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
172	[BUG]  [BUGGY]  setResult(yMin,  0);  SetResult(result,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(yMin,  0);  SetResult(result,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(yMin,  0);  SetResult(result,  0);	  setResult(result,    0);    SetResult(result,    0);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
173	[BUG]  [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(initial));  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(initial));  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0,  f.value(initial));  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(initial));    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
174	[BUG]  [BUGGY]  yMin  =  f.value(Initial);  yMin  =  f.value(initial);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(Initial);  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(Initial);  yMin  =  f.value(initial);	          yMin    =    f.value(initial);    yMin    =    f.value(Initial);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
175	[BUG]  [BUGGY]  yMin  =  f.value(initial);  yMin  =  f.value(outitial);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(initial);  yMin  =  f.value(outitial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(initial);  yMin  =  f.value(outitial);	          yMin    =    f.value(initial);    yMin    =    f.value(Initial);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
176	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial),  max);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(initial),  max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial),  max);	  setResult(initial,    0,    f.value(initial),    yMax);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
177	[BUG]  [BUGGY]  setResult(yMin,  1);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(yMin,  1);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(yMin,  1);	  setResult(initial,    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
178	[BUG]  [BUGGY]  yMin  =  f.value(max);  yMin  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(max);  yMin  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin    =    f.value(max);    yMin  =  f.value(max);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
179	[BUG]  [BUGGY]  yMin  =  f.value(max);  yMin  =  f.value(min);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(max);  yMin  =  f.value(min);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin    =    f.value(max);    yMin  =  f.value(min);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
180	[BUG]  [BUGGY]  yMin  =  f.value(max);  yMin  =  f.value(max;  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(max);  yMin  =  f.value(max;  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin    =    f.value(max);    yMin  =  f.value(max;	  	non-compiled	[CE]  ')'  expected	6	None	add
181	[BUG]  [BUGGY]  yMin  =  f.value(max);  yMin  =  f.value(  maximum);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(max);  yMin  =  f.value(  maximum);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin    =    f.value(max);    yMin  =  f.value(  maximum);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
182	[BUG]  [BUGGY]  result  =  f.value(yMin);  result  =  f.value(yMin);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(yMin);  result  =  f.value(yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(yMin);    result  =  f.value(yMin);	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
183	[BUG]  [BUGGY]  result  =  f.value(yMin);  yMin  =  f.value(yMin);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(yMin);  yMin  =  f.value(yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(yMin);    yMin  =  f.value(yMin);	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
184	[BUG]  [BUGGY]  result  =  f.value(yMin);  double  yMin  =  f.value(yMin);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(yMin);  double  yMin  =  f.value(yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(yMin);    double  yMin  =  f.value(yMin);	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
185	[BUG]  [BUGGY]  result  =  f.value(yMin);  result  =  f.value(yMax);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(yMin);  result  =  f.value(yMax);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(yMin);    result  =  f.value(yMax);	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
186	[BUG]  [BUGGY]  result  =  f.value(yMin);  setResult(yMin,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(yMin);  setResult(yMin,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(yMin);    setResult(yMin,  0);	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
187	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  max);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMin  =  f.value(min,  max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double  yMin  =  f.value(min,  max);	  double    yMin    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
188	[BUG]  [BUGGY]  setResult(initial,  0);  createResult(yMin,  0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0);  createResult(yMin,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0);  createResult(yMin,  0);	  setResult(result,    0);    createResult(result,    0);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
189	[BUG]  [BUGGY]  result  =  createResult(yMin,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  createResult(yMin,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  createResult(yMin,  0);	  setResult(result,    0);    createResult(result,    0);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
190	[BUG]  [BUGGY]  result  =  createResult(initial,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  createResult(initial,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  createResult(initial,  0);	  setResult(result,    0);    createResult(result,    0);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
191	[BUG]  [BUGGY]  createResult(yMin,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  createResult(yMin,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	createResult(yMin,  0);	  setResult(result,    0);    createResult(result,    0);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
192	[BUG]  [BUGGY]  Double  yMax  =  f.value(initial);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  Double  yMax  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	Double  yMax  =  f.value(initial);	          double    yMax    =    f.value(max);    Double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
193	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial,  yMax));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(initial,  yMax));  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial,  yMax));	  setResult(initial,    0,    f.value(initial,    yMin));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
194	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial,  yMin),  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(initial,  yMin),  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial,  yMin),  0);	  setResult(initial,    0,    f.value(initial,    yMin));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
195	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial,  yMin  +  1));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(initial,  yMin  +  1));  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial,  yMin  +  1));	  setResult(initial,    0,    f.value(initial,    yMin));    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
196	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(result,  0);  setResult(result,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(result,  0);  setResult(result,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0);    setResult(result,  0);  setResult(result,  0);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
197	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(initial,  0);  setResult(initial,  0);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(initial,  0);  setResult(initial,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0);    setResult(initial,  0);  setResult(initial,  0);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
198	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(initial,  0);  setResult(result,  0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(initial,  0);  setResult(result,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0);    setResult(initial,  0);  setResult(result,  0);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
199	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(result,  0,  yMin);  setResult(result,  0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(result,  0,  yMin);  setResult(result,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0);    setResult(result,  0,  yMin);  setResult(result,  0);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
200	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0);  result  =  f.value(initial);  setResult(yMin,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0);  result  =  f.value(initial);  setResult(yMin,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0);    result  =  f.value(initial);  setResult(yMin,  0);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
201	[BUG]  [BUGGY]  setResult(f,  initial,  0,  yMin,  f.value(initial));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(f,  initial,  0,  yMin,  f.value(initial));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(f,  initial,  0,  yMin,  f.value(initial));	  setResult(initial,    0,    yMin,    f.value(initial));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
202	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  f.value(initial),  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  f.value(initial),  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  f.value(initial),  0);	  setResult(initial,    0,    yMin,    f.value(initial));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
203	[BUG]  [BUGGY]  setResult(f,  0,  yMin,  f.value(initial));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(f,  0,  yMin,  f.value(initial));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(f,  0,  yMin,  f.value(initial));	  setResult(initial,    0,    yMin,    f.value(initial));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
204	[BUG]  [BUGGY]  result  =  f.value(min);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(min);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(min);	  result    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
205	[BUG]  [BUGGY]  setResult(max,  0);  setResult(max,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(max,  0);  setResult(max,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(max,    0);    setResult(max,  0);	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
206	[BUG]  [BUGGY]  setResult(max,  0);  setResult(max,  0,  0);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(max,  0);  setResult(max,  0,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(max,    0);    setResult(max,  0,  0);	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
207	[BUG]  [BUGGY]  setResult(max,  0);  SetResult(max,  0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(max,  0);  SetResult(max,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(max,    0);    SetResult(max,  0);	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
208	[BUG]  [BUGGY]  double  yMin  =  f.value(initial,  min);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMin  =  f.value(initial,  min);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double  yMin  =  f.value(initial,  min);	  double    yMin    =    f.value(min,    initial);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
209	[BUG]  [BUGGY]  double  yMin  =  f.value(initial,  yInitial);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMin  =  f.value(initial,  yInitial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double  yMin  =  f.value(initial,  yInitial);	  double    yMin    =    f.value(min,    initial);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
210	[BUG]  [BUGGY]  setResult(f,  initial,  0,  yMin,  f.value(max));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(f,  initial,  0,  yMin,  f.value(max));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(f,  initial,  0,  yMin,  f.value(max));	  setResult(initial,    0,    yMin,    f.value(max));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
211	[BUG]  [BUGGY]  setResult(f,  0,  yMin,  f.value(max));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(f,  0,  yMin,  f.value(max));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(f,  0,  yMin,  f.value(max));	  setResult(initial,    0,    yMin,    f.value(max));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
212	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  f.value(min,  yMax));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  f.value(min,  yMax));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  f.value(min,  yMax));	  setResult(initial,    0,    yMin,    f.value(max));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
213	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  f.value(min),  f.value(max));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  f.value(min),  f.value(max));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  f.value(min),  f.value(max));	  setResult(initial,    0,    yMin,    f.value(max));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
214	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0);  setResult(initial,  0,  f.value(initial));  setResult(initial,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0);  setResult(initial,  0,  f.value(initial));  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0);    setResult(initial,  0,  f.value(initial));  setResult(initial,  0);	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
215	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0);  setResult(initial,  0,  yMax);  setResult(initial,  0);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0);  setResult(initial,  0,  yMax);  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0);    setResult(initial,  0,  yMax);  setResult(initial,  0);	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
216	[BUG]  [BUGGY]  yMin  =  f.value(min);  yMin  =  f.value(initial);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(min);  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(min);  yMin  =  f.value(initial);	          yMin    =    f.value(initial);    yMin    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
217	[BUG]  [BUGGY]  yMin  =  f.value(min);  yMin  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(min);  yMin  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(min);  yMin  =  f.value(max);	          yMin    =    f.value(initial);    yMin    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
218	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  initialAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(min);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  initialAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(min);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  initialAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(min);  }	          yMin    =    f.value(initial);    yMin    =    f.value(initial));    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
219	[BUG]  [BUGGY]  setResult(initial,  1);  createResult(initial,  1);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  1);  createResult(initial,  1);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,    1);    createResult(initial,  1);	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
220	[BUG]  [BUGGY]  Double  yMax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  Double  yMax  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	Double  yMax  =  f.value(max);	          double    yMax    =    f.value(max);    Double    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
221	[BUG]  [BUGGY]  setResult(max,  0);  setResult(max,  0,  f.value(initial));  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(max,  0);  setResult(max,  0,  f.value(initial));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(max,    0);    setResult(max,  0,  f.value(initial));	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
222	[BUG]  [BUGGY]  setResult(max,  0);  setResult(max,  0,  f.value(max));  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(max,  0);  setResult(max,  0,  f.value(max));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(max,    0);    setResult(max,  0,  f.value(max));	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
223	[BUG]  [BUGGY]  setResult(max,  0);  setResult(max,  0,  f.value(max);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(max,  0);  setResult(max,  0,  f.value(max);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(max,    0);    setResult(max,  0,  f.value(max);	  	non-compiled	[CE]  ')'  expected	66	None	add
224	[BUG]  [BUGGY]  setResult(max,  0);  setResult(max,  0,  f.value(max),  0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(max,  0);  setResult(max,  0,  f.value(max),  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(max,    0);    setResult(max,  0,  f.value(max),  0);	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
225	[BUG]  [BUGGY]  setResult(initial,  0,  yMin);  SetResult(result,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin);  SetResult(result,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin);  SetResult(result,  0);	  setResult(result,    0);    SetResult(result,    0);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
226	[BUG]  [BUGGY]  setResult(initial,  0,  0);  SetResult(result,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  0);  SetResult(result,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  0);  SetResult(result,  0);	  setResult(result,    0);    SetResult(result,    0);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
227	[BUG]  [BUGGY]  result  =  f.value(max);  setResult(initial,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(max);  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(max);    setResult(initial,  0);	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
228	[BUG]  [BUGGY]  result  =  f.value(max);  setResult(initial,  0);  return  result;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(max);  setResult(initial,  0);  return  result;  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(max);    setResult(initial,  0);  return  result;	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
229	[BUG]  [BUGGY]  if(initial  <  min)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(max);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(initial  <  min)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(max);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(initial  <  min)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(max);  }	          yMin    =    f.value(initial);    yMin    =    f.value(initial).value(max);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
230	[BUG]  [BUGGY]  createResult(initial,  0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  createResult(initial,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	createResult(initial,  0);	  setResult(result,    0);    createResult(result,    0);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
231	[BUG]  [BUGGY]  result  =  createResult(result,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  createResult(result,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  createResult(result,  0);	  setResult(result,    0);    createResult(result,    0);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
232	[BUG]  [BUGGY]  createResult(result,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  createResult(result,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	createResult(result,  0);	  setResult(result,    0);    createResult(result,    0);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
233	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial));  }  else  {  setResult(initial,  0,  f.value(initial));  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial));  }  else  {  setResult(initial,  0,  f.value(initial));  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial));  }  else  {  setResult(initial,  0,  f.value(initial));  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(max));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
234	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial));  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial));  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial));  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(max));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
235	[BUG]  [BUGGY]  setResult(result,  0,  f.value(initial));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,  0,  f.value(initial));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,  0,  f.value(initial));	  setResult(result,    0);    setResult(result,    0,    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
236	[BUG]  [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(initial);  yMin  =  f.value(initial);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(initial);  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(initial);	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
237	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial);  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(initial);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial);	  setResult(result,    0);    setResult(result,    0,    f.value(max);    	non-compiled	[CE]  ')'  expected	82	None	replace
238	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(max);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(max);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(max);	  setResult(result,    0);    setResult(result,    0,    f.value(max);    	non-compiled	[CE]  ')'  expected	82	None	replace
239	[BUG]  [BUGGY]  setResult(initial,  0,  yMax,  f.value(initial));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMax,  f.value(initial));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMax,  f.value(initial));	  setResult(initial,    0,    yMin,    f.value(initial));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
240	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial,  0);  }	          result    =    f.value(initial);    setResult(initial,    0);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
241	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  max,  f.value(initial));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  max,  f.value(initial));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  max,  f.value(initial));	  setResult(initial,    0,    yMin,    max);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
242	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  f.value(min));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  f.value(min));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  f.value(min));	  setResult(initial,    0,    yMin,    f.value(max));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
243	[BUG]  [BUGGY]  yMin  =  f.value(min);  double  yMin  =  f.value(min);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(min);  double  yMin  =  f.value(min);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin    =    f.value(min);    double  yMin  =  f.value(min);	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
244	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(result,  0,  f.value(initial));  setResult(result,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(result,  0,  f.value(initial));  setResult(result,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0);    setResult(result,  0,  f.value(initial));  setResult(result,  0);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
245	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(initial,  0,  yMin);  setResult(result,  0);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(initial,  0,  yMin);  setResult(result,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0);    setResult(initial,  0,  yMin);  setResult(result,  0);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
246	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial);  }  else  {  setResult(initial,  0,  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial);  }  else  {  setResult(initial,  0,  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial);  }  else  {  setResult(initial,  0,  f.value(initial);  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
247	[BUG]  [BUGGY]  setResult(result,  0,  f.value(yMin));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,  0,  f.value(yMin));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,  0,  f.value(yMin));	  setResult(result,    0);    setResult(result,    0,    f.value(result));    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
248	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial);  }  else  {  setResult(initial,  0,  f.value(initial));  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial);  }  else  {  setResult(initial,  0,  f.value(initial));  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial);  }  else  {  setResult(initial,  0,  f.value(initial));  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
249	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial),  yMin,  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(initial),  yMin,  1);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial),  yMin,  1);	  setResult(initial,    0,    f.value(initial),    yMin);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
250	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(min),  yMin);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(min),  yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(min),  yMin);	  setResult(initial,    0,    f.value(initial),    yMin);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
251	[BUG]  [BUGGY]  yMin  =  f.value(max);  double  yMin  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(max);  double  yMin  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin    =    f.value(max);    double  yMin  =  f.value(max);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
252	[BUG]  [BUGGY]          yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(min);  yMin  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(min);  yMin  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                yMin        =        f.value(initial);        yMin    =    f.value(initial);    yMin  =  f.value(min);  yMin  =  f.value(max);	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
253	[BUG]  [BUGGY]  Double  yMax  =  f.value(min);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  Double  yMax  =  f.value(min);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	Double  yMax  =  f.value(min);	          double    yMax    =    f.value(max);    double    yMin    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
254	[BUG]  [BUGGY]  result  =  Math.abs(yMin);  setResult(initial,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.abs(yMin);  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    Math.abs(yMin);    setResult(initial,  0);	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
255	[BUG]  [BUGGY]  result  =  Math.abs(yMin);  setResult(initial,  0);  return  result;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.abs(yMin);  setResult(initial,  0);  return  result;  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    Math.abs(yMin);    setResult(initial,  0);  return  result;	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
256	[BUG]  [BUGGY]  result  =  f.value(yMin);  setResult(initial,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(yMin);  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(yMin);    setResult(initial,  0);	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
257	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(yMax));  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(yMax));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(yMax));	  setResult(result,    0);    setResult(result,    0,    f.value(initial));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
258	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  }  else  {  setResult(initial,  0,  0);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  }  else  {  setResult(initial,  0,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  }  else  {  setResult(initial,  0,  0);  }	          setResult(initial,    0);    setResult(initial,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
259	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  max)  {  setResult(initial,  0);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  max)  {  setResult(initial,  0);  return  result;  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  max)  {  setResult(initial,  0);  return  result;  }	  setResult(yMin,    0);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
260	[BUG]  [BUGGY]  yMin  =  f.value(min);  yMin  =  f.value(itial);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(min);  yMin  =  f.value(itial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(min);  yMin  =  f.value(itial);	          yMin    =    f.value(initial);    yMin    =    f.value(itial);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
261	[BUG]  [BUGGY]  result  =  f.value(outitial,  yMin);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(outitial,  yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(outitial,  yMin);	  result    =    f.value(outitial);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
262	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0,  0);  setResult(initial,  0,  0);  setResult(result,  0,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0,  0);  setResult(initial,  0,  0);  setResult(result,  0,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0,    0);    setResult(initial,  0,  0);  setResult(result,  0,  0);	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
263	[BUG]  [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  if(result  ==  0)  {  result  =  f.value(initial);  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  if(result  ==  0)  {  result  =  f.value(initial);  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        setResult(initial,    0);    if(result  ==  0)  {  result  =  f.value(initial);  setResult(initial,  0);  }	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
264	[BUG]  [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  setResult(initial,  0,  f.value(initial);  result  =  f.value(initial);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  setResult(initial,  0,  f.value(initial);  result  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        result    =    f.value(initial);    setResult(initial,  0,  f.value(initial);  result  =  f.value(initial);	  	non-compiled	[CE]  ')'  expected	30	None	add
265	[BUG]  [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  setResult(initial,  0,  f.value(initial));  result  =  f.value(initial);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  setResult(initial,  0,  f.value(initial));  result  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        result    =    f.value(initial);    setResult(initial,  0,  f.value(initial));  result  =  f.value(initial);	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
266	[BUG]  [BUGGY]  result  =  Math.abs(yMax);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.abs(yMax);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  Math.abs(yMax);	  result    =    Math.abs(yMin);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
267	[BUG]  [BUGGY]  result  =  Math.max(result,  initial);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.max(result,  initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  Math.max(result,  initial);	  result    =    Math.abs(yMin);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
268	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  setResult(initial,  0.0);  setResult(initial,  0,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  setResult(initial,  0.0);  setResult(initial,  0,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0,    0);    setResult(initial,  0.0);  setResult(initial,  0,  0);	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
269	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  setResult(initial,  0);  setResult(initial,  1,  0);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  setResult(initial,  0);  setResult(initial,  1,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0,    0);    setResult(initial,  0);  setResult(initial,  1,  0);	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
270	[BUG]  [BUGGY]  result  =  f.value(min);  yMax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(min);  yMax  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(min);  yMax  =  f.value(max);	          result    =    f.value(initial);    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
271	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(yMin),  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(yMin),  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(yMin),  0);	  setResult(initial,    0,    f.value(initial),    0);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
272	[BUG]  [BUGGY]  setResult(initial,  f.value(initial));  result  =  f.value(initial);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  f.value(initial));  result  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  f.value(initial));  result  =  f.value(initial);	          result    =    f.value(initial);    result    =    f.value(itial);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
273	[BUG]  [BUGGY]  setResult(initial,  f.value(initial));  result  =  f.value(itial);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  f.value(initial));  result  =  f.value(itial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  f.value(initial));  result  =  f.value(itial);	          result    =    f.value(initial);    result    =    f.value(itial);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
274	[BUG]  [BUGGY]  setResult(initial,  f.value(initial);  result  =  f.value(initial);  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  f.value(initial);  result  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  f.value(initial);  result  =  f.value(initial);	          result    =    f.value(initial);    result    =    f.value(itial);    	non-compiled	[CE]  ')'  expected	40	None	replace
275	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0);  }	          setResult(initial,    0);    setResult(initial,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
276	[BUG]  [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        result    =    f.value(initial);    if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
277	[BUG]  [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  return  result;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  return  result;  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        result    =    f.value(initial);    if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  return  result;  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
278	[BUG]  [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        result    =    f.value(initial);    if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
279	[BUG]  [BUGGY]  setResult(initial,  0,  yMax  -  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMax  -  1);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMax  -  1);	  setResult(initial,    0,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
280	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  result  =  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  result  =  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  result  =  f.value(initial);  }	          setResult(initial,    0);    result    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
281	[BUG]  [BUGGY]  setResult(yInitial,  0);  setResult(yInitial,  0,  f.value(initial);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(yInitial,  0);  setResult(yInitial,  0,  f.value(initial);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(yInitial,    0);    setResult(yInitial,  0,  f.value(initial);	  	non-compiled	[CE]  ')'  expected	13	None	add
282	[BUG]  [BUGGY]  setResult(yInitial,  0);  setResult(yInitial,  0,  f);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(yInitial,  0);  setResult(yInitial,  0,  f);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(yInitial,    0);    setResult(yInitial,  0,  f);	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
283	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(yMin),  yMax);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(yMin),  yMax);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(yMin),  yMax);	  setResult(initial,    0,    f.value(initial),    yMax);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
284	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  max,  f.value(max));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  max,  f.value(max));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  max,  f.value(max));	  setResult(initial,    0,    yMin,    max);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
285	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  return  result;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  return  result;  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  return  result;  }	          result    =    f.value(initial);    result    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
286	[BUG]  [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  return  result;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  return  result;  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  return  result;  }	          result    =    f.value(initial);    result    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
287	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  }	          result    =    f.value(initial);    result    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
288	[BUG]  [BUGGY]  double  yMin  =  f.value(initial,  yMin);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMin  =  f.value(initial,  yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double  yMin  =  f.value(initial,  yMin);	  double    yMin    =    f.value(min,    initial);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
289	[BUG]  [BUGGY]  double  yMax  =  f.value(initial);  double  yMax  =  f.value(initial).value(max);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMax  =  f.value(initial);  double  yMax  =  f.value(initial).value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double    yMax    =    f.value(initial);    double  yMax  =  f.value(initial).value(max);	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
290	[BUG]  [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        setResult(initial,    0);    if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial,  0);  }	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
291	[BUG]  [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        setResult(initial,    0);    if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial,  0);  }	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
292	[BUG]  [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    setResult(initial,  0);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        setResult(initial,    0);    if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  else  {  setResult(initial,  0);  }	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
293	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial);  }  else  {  setResult(initial,  0,  f.value(max);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial);  }  else  {  setResult(initial,  0,  f.value(max);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(initial);  }  else  {  setResult(initial,  0,  f.value(max);  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
294	[BUG]  [BUGGY]          yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(max);  yMin  =  f.value(initial);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(max);  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                yMin        =        f.value(initial);        yMin    =    f.value(initial);    yMin  =  f.value(max);  yMin  =  f.value(initial);	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
295	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(max));  }  else  {  setResult(initial,  0,  f.value(initial));  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(max));  }  else  {  setResult(initial,  0,  f.value(initial));  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(max));  }  else  {  setResult(initial,  0,  f.value(initial));  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(max));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
296	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(max));  }  else  {  setResult(initial,  0,  f.value(initial));  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(max));  }  else  {  setResult(initial,  0,  f.value(initial));  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  f.value(max));  }  else  {  setResult(initial,  0,  f.value(initial));  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(max));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
297	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  f.value(max));  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  f.value(max));  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  f.value(max));  }	          setResult(initial,    0);    setResult(initial,    0,    f.value(max));    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
298	[BUG]  [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        result    =    f.value(initial);    if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
299	[BUG]  [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        result    =    f.value(initial);    if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
300	[BUG]  [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    result  =  f.value(initial);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        result    =    f.value(initial);    if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
301	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(initial,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(initial,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0);    setResult(initial,  0);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
302	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(initial,  0);  setResult(yMin,  0);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(initial,  0);  setResult(yMin,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0);    setResult(initial,  0);  setResult(yMin,  0);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
303	[BUG]  [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(initial,  0);  setResult(outitial,  0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,    0);    setResult(result,  0);  setResult(initial,  0);  setResult(outitial,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,        0);        setResult(result,    0);    setResult(initial,  0);  setResult(outitial,  0);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
304	[BUG]  [BUGGY]  yMin  =  f.value(min);  setResult(initial,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  yMin  =  f.value(min);  setResult(initial,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin    =    f.value(min);    setResult(initial,  0);	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
305	[BUG]  [BUGGY]  result  =  Math.max(result,  max);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.max(result,  max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  Math.max(result,  max);	  result    =    Math.abs(yMin);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
306	[BUG]  [BUGGY]  result  =  Math.abs(yMin);  yMax  =  Math.abs(yMin);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  Math.abs(yMin);  yMax  =  Math.abs(yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    Math.abs(yMin);    yMax  =  Math.abs(yMin);	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
307	[BUG]  [BUGGY]  setResult(initial,  0,  yMax,  f.value(max));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMax,  f.value(max));  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMax,  f.value(max));	  setResult(initial,    0,    yMin,    f.value(max));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
308	[BUG]  [BUGGY]  setResult(result,  0,  0);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,  0,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,  0,  0);	  setResult(result,    0);    setResult(result,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
309	[BUG]  [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }	          setResult(initial,    0);    result    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
310	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial)/  2,  yMin);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(initial)/  2,  yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial)/  2,  yMin);	  setResult(initial,    0,    f.value(initial),    yMin);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
311	[BUG]  [BUGGY]  result  =  f.value(yMin);  yMax  =  f.value(yMin);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(yMin);  yMax  =  f.value(yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(yMin);    yMax  =  f.value(yMin);	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
312	[BUG]  [BUGGY]  result  =  f.value(yMin);  double  result  =  f.value(yMin);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(yMin);  double  result  =  f.value(yMin);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(yMin);    double  result  =  f.value(yMin);	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
313	[BUG]  [BUGGY]  setResult(result,  0,  f.value(initial);  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(result,  0,  f.value(initial);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,  0,  f.value(initial);	  setResult(result,    0);    setResult(result,    0,    f.value(max);    	non-compiled	[CE]  ')'  expected	82	None	replace
314	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial,  0);  }  else  {  setResult(initial,  0);  return  result;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial,  0);  }  else  {  setResult(initial,  0);  return  result;  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial,  0);  }  else  {  setResult(initial,  0);  return  result;  }	          yMin    =    f.value(initial);    yMin    =    f.value(initial,    0);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
315	[BUG]  [BUGGY]  result  =  f.value(initial,  yMin,  0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(initial,  yMin,  0);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(initial,  yMin,  0);	  result    =    f.value(initial,    yMin);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
316	[BUG]  [BUGGY]  if(initial  <  =  0.0)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(max);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(initial  <  =  0.0)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(max);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(initial  <  =  0.0)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(max);  }	          yMin    =    f.value(initial);    yMin    =    f.value(initial).value(max);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
317	[BUG]  [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial);  }	          result    =    f.value(initial);    setResult(initial);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
318	[BUG]  [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  setResult(initial,  0);  }	          result    =    f.value(initial);    setResult(initial);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
319	[BUG]  [BUGGY]  setResult(initial,  0);  yMax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0);  yMax  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0);  yMax  =  f.value(max);	          result    =    f.value(initial);    yMax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
320	[BUG]  [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        result    =    f.value(initial);    if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
321	[BUG]  [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        result    =    f.value(initial);    if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
322	[BUG]  [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  result  =  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  result  =  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        result    =    f.value(initial);    if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  result  =  f.value(initial);  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
323	[BUG]  [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  result  =  f.value(max);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    result  =  f.value(initial);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  result  =  f.value(max);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        result    =    f.value(initial);    if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  result  =  f.value(initial);  }  else  {  setResult(initial,  0);  result  =  f.value(max);  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
324	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  0);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0,    0);    if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  0);  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
325	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  setResult(initial,  0,  0);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  setResult(initial,  0,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0,    0);    if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0,  0);  setResult(initial,  0,  0);  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
326	[BUG]  [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          setResult(initial,    0);    setResult(initial,  0,  0);  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                setResult(initial,        0);        setResult(initial,    0,    0);    if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  setResult(initial,  0,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
327	[BUG]  [BUGGY]  double  yMin  =  f.value(mini);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  yMin  =  f.value(mini);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double  yMin  =  f.value(mini);	  double    yMin    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
328	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  yInitial);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  yInitial);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  yInitial);	  setResult(initial,    0,    yMax,    yMin);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
329	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  f.value(initial),  f.max);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  yMin,  f.value(initial),  f.max);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  f.value(initial),  f.max);	  setResult(initial,    0,    yMin,    f.value(initial));    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
330	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  if  (Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  if  (Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  if  (Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(initial,  0);  }	          yMin    =    f.value(initial);    double    yMin    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
331	[BUG]  [BUGGY]  setResult(initial,  1);  setResult(initial,  1));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  1);  setResult(initial,  1));  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,    1);    setResult(initial,  1));	  	non-compiled	[CE]  ';'  expected	9	None	add
332	[BUG]  [BUGGY]  setResult(outitial,  0);  SetResult(outitial,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(outitial,  0);  SetResult(outitial,  0);  [BUGGY]      return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(outitial,  0);  SetResult(outitial,  0);	  setResult(result,    0);    SetResult(result,    0);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
333	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  double  yMax  =  f.value(max);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  double  yMax  =  f.value(max);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMax)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  double  yMax  =  f.value(max);  }	          result    =    f.value(initial);    double    yMax    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
334	[BUG]  [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  double  yMax  =  f.value(max);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  double  yMax  =  f.value(max);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yInitial)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  double  yMax  =  f.value(max);  }	          result    =    f.value(initial);    double    yMax    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
335	[BUG]  [BUGGY]  setResult(initial,  f.value(yInitial));  result  =  f.value(initial);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  f.value(yInitial));  result  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  f.value(yInitial));  result  =  f.value(initial);	          result    =    f.value(initial);    result    =    f.value(itial);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
336	[BUG]  [BUGGY]  if(initial  <  =  max)  {  setResult(initial,  0,  yMin);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(initial  <  =  max)  {  setResult(initial,  0,  yMin);  return  result;  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(initial  <  =  max)  {  setResult(initial,  0,  yMin);  return  result;  }	  if(initial    <    =    max)    {    setResult(initial,    0);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
337	[BUG]  [BUGGY]  if(initial  <  max)  {  setResult(initial,  0);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(initial  <  max)  {  setResult(initial,  0);  return  result;  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(initial  <  max)  {  setResult(initial,  0);  return  result;  }	  if(initial    <    =    max)    {    setResult(initial,    0);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
338	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  yMin  =  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  yMin  =  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  yMin  =  f.value(initial);  }	          result    =    f.value(initial);    double    yMin    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
339	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  double  yMin  =  f.value(initial);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  double  yMin  =  f.value(initial);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  result  =  f.value(initial);  double  yMin  =  f.value(initial);  }	          result    =    f.value(initial);    double    yMin    =    f.value(initial);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
340	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial)-  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  setResult(initial,  0,  f.value(initial)-  1);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial)-  1);	  setResult(initial,    0,    f.value(initial)+    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
341	[BUG]  [BUGGY]  double  ymax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  double  ymax  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double  ymax  =  f.value(max);	          double    yMax    =    f.value(max);    double    ymax    =    f.value(max);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
342	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(min);  }  else  {  setResult(initial,  0);  return  result;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(min);  }  else  {  setResult(initial,  0);  return  result;  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(min);  }  else  {  setResult(initial,  0);  return  result;  }	          yMin    =    f.value(initial);    yMin    =    f.value(min);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
343	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  baseValueAccuracy)  {  setResult(initial,  0);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  baseValueAccuracy)  {  setResult(initial,  0);  return  result;  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  baseValueAccuracy)  {  setResult(initial,  0);  return  result;  }	  setResult(yMin,    0);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
344	[BUG]  [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  setResult(initial,  0);  yMin  =  f.value(initial);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  setResult(initial,  0);  yMin  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        yMin    =    f.value(initial);    setResult(initial,  0);  yMin  =  f.value(initial);	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
345	[BUG]  [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(initial);  yMax  =  f.value(initial);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]          result    =    f.value(initial);    yMin  =  f.value(initial);  yMin  =  f.value(initial);  yMax  =  f.value(initial);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	                result        =        f.value(initial);        yMin    =    f.value(initial);    yMin  =  f.value(initial);  yMax  =  f.value(initial);	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
346	[BUG]  [BUGGY]  result  =  f.value(max);  yMax  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(max);  yMax  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(max);    yMax  =  f.value(max);	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
347	[BUG]  [BUGGY]  result  =  f.value(max);  double  result  =  f.value(max);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  result  =  f.value(max);  double  result  =  f.value(max);  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result    =    f.value(max);    double  result  =  f.value(max);	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
348	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(min);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(min);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(min);  }	          yMin    =    f.value(initial);    yMin    =    f.value(initial).value(min);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
349	[BUG]  [BUGGY]  if(initial  <  =  max)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(min);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {      [BUGGY]  if(initial  <  =  max)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(min);  }  [BUGGY]      setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(initial  <  =  max)  {  yMin  =  f.value(initial);  yMin  =  f.value(initial).value(min);  }	          yMin    =    f.value(initial);    yMin    =    f.value(initial).value(min);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
