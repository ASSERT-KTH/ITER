bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  yMin  =  f.value(min);  [CE]  variable  yMin  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  double  yMin  =  f.value(min);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double  yMin  =  f.value(min);	      double    yMin    =    f.value(initial);    	non-compiled	[CE]  variable  yMin  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)	3	None	replace
2	[BUG]  [BUGGY]  double  yMin  =  f.value(max);  [CE]  variable  yMin  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)  [FE]            AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  double  yMin  =  f.value(max);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double  yMin  =  f.value(max);	      double    yMin    =    f.value(initial);    	non-compiled	[CE]  variable  yMin  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)	3	None	replace
3	[BUG]  [BUGGY]  double  yMin  =  f.value(Initial);  [CE]  variable  yMin  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)  [FE]              AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  double  yMin  =  f.value(Initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double  yMin  =  f.value(Initial);	      double    yMin    =    f.value(initial);    	non-compiled	[CE]  variable  yMin  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)	3	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  yMin  =  f.value(min);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	yMin  =  f.value(min);	      yMin    =    f.value(initial);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
5	[BUG]  [BUGGY]  yMin  =  f.value(min);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  yMin  =  f.value(min);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(min);	      yMin    =    f.value(initial);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  yMin  =  f.value(max);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	yMin  =  f.value(max);	      yMin    =    f.value(initial);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
7	[BUG]  [BUGGY]  yMin  =  f.value(max);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  yMin  =  f.value(max);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(max);	      yMin    =    f.value(initial);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
8	[BUG]  [BUGGY]  yMin  =  f.value(i);  [CE]  cannot  find  symbol  i  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  yMin  =  f.value(i);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(i);	      yMin    =    f.value(initial);    	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(initial,  1);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	setResult(initial,  1);	      setResult(initial,    0);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
10	[BUG]  [BUGGY]  setResult(initial,  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(initial,  1);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  1);	      setResult(initial,    0);    	compilable	  [FE]  AssertionFailedError  	2	2	replace
11	[BUG]  [BUGGY]  yMax  =  f.value(initial);  [CE]  cannot  find  symbol  yMax  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  yMax  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMax  =  f.value(initial);	      yMax    =    f.value(max);    	non-compiled	[CE]  cannot  find  symbol  yMax	15	None	replace
12	[BUG]  [BUGGY]  yMax  =  f.value(min);  [CE]  cannot  find  symbol  yMax  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  yMax  =  f.value(min);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMax  =  f.value(min);	      yMax    =    f.value(max);    	non-compiled	[CE]  cannot  find  symbol  yMax	15	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(yInitial,  0);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	setResult(yInitial,  0);	  setResult(outitial,    0);    	compilable	  [FE]  AssertionFailedError  	12	2	replace
14	[BUG]  [BUGGY]  setResult(yInitial,  0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(yInitial,  0);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(yInitial,  0);	  setResult(outitial,    0);    	compilable	  [FE]  AssertionFailedError  	12	2	replace
15	[BUG]  [BUGGY]      double  yMax  =  f.value(max);  double  yMax  =  f.value(max);  [CE]  variable  yMax  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      double  yMax  =  f.value(max);  double  yMax  =  f.value(max);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        double    yMax    =    f.value(max);    double  yMax  =  f.value(max);	  	non-compiled	[CE]  variable  yMax  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)	16	None	add
16	[BUG]  [BUGGY]      double  yMax  =  f.value(max);  Double  yMax  =  f.value(max);  [CE]  variable  yMax  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      double  yMax  =  f.value(max);  Double  yMax  =  f.value(max);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        double    yMax    =    f.value(max);    Double  yMax  =  f.value(max);	  	non-compiled	[CE]  variable  yMax  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)	16	None	add
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      double  yMax  =  f.value(max);  double  ymax  =  f.value(max);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	        double    yMax    =    f.value(max);    double  ymax  =  f.value(max);	  	compilable	  [FE]  AssertionFailedError  	16	2	add
18	[BUG]  [BUGGY]      double  yMax  =  f.value(max);  double  ymax  =  f.value(max);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      double  yMax  =  f.value(max);  double  ymax  =  f.value(max);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        double    yMax    =    f.value(max);    double  ymax  =  f.value(max);	  	compilable	  [FE]  AssertionFailedError  	16	2	add
19	[BUG]  [BUGGY]      double  yMax  =  f.value(max);  double  yMin  =  f.value(max);  [CE]  variable  yMin  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      double  yMax  =  f.value(max);  double  yMin  =  f.value(max);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        double    yMax    =    f.value(max);    double  yMin  =  f.value(max);	  	non-compiled	[CE]  variable  yMin  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)	16	None	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(result,  0);  setResult(result,  0);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	setResult(result,    0);    setResult(result,  0);	  	compilable	  [FE]  AssertionFailedError  	13	2	add
21	[BUG]  [BUGGY]  setResult(result,  0);  setResult(result,  0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(result,  0);  setResult(result,  0);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,    0);    setResult(result,  0);	  	compilable	  [FE]  AssertionFailedError  	13	2	add
22	[BUG]  [BUGGY]  setResult(result,  0);  createResult(result,  0);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(result,  0);  createResult(result,  0);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,    0);    createResult(result,  0);	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(result,  0);  setResult(result,  0,  0);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	setResult(result,    0);    setResult(result,  0,  0);	  	compilable	  [FE]  AssertionFailedError  	13	2	add
24	[BUG]  [BUGGY]  setResult(result,  0);  setResult(result,  0,  0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(result,  0);  setResult(result,  0,  0);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,    0);    setResult(result,  0,  0);	  	compilable	  [FE]  AssertionFailedError  	13	2	add
25	[BUG]  [BUGGY]  setResult(result,  0);  SetResult(result,  0);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(result,  0);  SetResult(result,  0);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,    0);    SetResult(result,  0);	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      setResult(initial,  0);  setResult(initial,  0);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	        setResult(initial,    0);    setResult(initial,  0);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
27	[BUG]  [BUGGY]      setResult(initial,  0);  setResult(initial,  0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      setResult(initial,  0);  setResult(initial,  0);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        setResult(initial,    0);    setResult(initial,  0);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      setResult(initial,  0);  setResult(initial,  0,  0);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	        setResult(initial,    0);    setResult(initial,  0,  0);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
29	[BUG]  [BUGGY]      setResult(initial,  0);  setResult(initial,  0,  0);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      setResult(initial,  0);  setResult(initial,  0,  0);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        setResult(initial,    0);    setResult(initial,  0,  0);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      setResult(initial,  0);  result  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	        setResult(initial,    0);    result  =  f.value(initial);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
31	[BUG]  [BUGGY]      setResult(initial,  0);  result  =  f.value(initial);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      setResult(initial,  0);  result  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        setResult(initial,    0);    result  =  f.value(initial);	  	compilable	  [FE]  AssertionFailedError  	1	2	add
32	[BUG]  [BUGGY]      setResult(initial,  0);  setResult(initial,  0.0);  [CE]  no  suitable  method  found  for  setResult(double,double)  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      setResult(initial,  0);  setResult(initial,  0.0);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        setResult(initial,    0);    setResult(initial,  0.0);	  	non-compiled	[CE]  no  suitable  method  found  for  setResult(double,double)	1	None	add
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      result  =  f.value(initial);  result  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	        result    =    f.value(initial);    result  =  f.value(initial);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
34	[BUG]  [BUGGY]      result  =  f.value(initial);  result  =  f.value(initial);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      result  =  f.value(initial);  result  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        result    =    f.value(initial);    result  =  f.value(initial);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      result  =  f.value(initial);  yMin  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	        result    =    f.value(initial);    yMin  =  f.value(initial);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
36	[BUG]  [BUGGY]      result  =  f.value(initial);  yMin  =  f.value(initial);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      result  =  f.value(initial);  yMin  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        result    =    f.value(initial);    yMin  =  f.value(initial);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
37	[BUG]  [BUGGY]      result  =  f.value(initial);  double  yMin  =  f.value(initial);  [CE]  variable  yMin  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      result  =  f.value(initial);  double  yMin  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        result    =    f.value(initial);    double  yMin  =  f.value(initial);	  	non-compiled	[CE]  variable  yMin  is  already  defined  in  method  solve(UnivariateRealFunction,double,double,double)	6	None	add
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      result  =  f.value(initial);  setResult(initial,  0);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	        result    =    f.value(initial);    setResult(initial,  0);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
39	[BUG]  [BUGGY]      result  =  f.value(initial);  setResult(initial,  0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      result  =  f.value(initial);  setResult(initial,  0);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        result    =    f.value(initial);    setResult(initial,  0);	  	compilable	  [FE]  AssertionFailedError  	6	2	add
40	[BUG]  [BUGGY]      result  =  f.value(initial);  result  =  f.value(itial);  [CE]  cannot  find  symbol  itial  [FE]            AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      result  =  f.value(initial);  result  =  f.value(itial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        result    =    f.value(initial);    result  =  f.value(itial);	  	non-compiled	[CE]  cannot  find  symbol  itial	6	None	add
41	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial),  0);  [CE]  no  suitable  method  found  for  setResult(double,int,double,int)  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(initial,  0,  f.value(initial),  0);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial),  0);	      setResult(initial,    0,    f.value(initial));    	non-compiled	[CE]  no  suitable  method  found  for  setResult(double,int,double,int)	10	None	replace
42	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial),  yMin);  [CE]  no  suitable  method  found  for  setResult(double,int,double,double)  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(initial,  0,  f.value(initial),  yMin);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial),  yMin);	      setResult(initial,    0,    f.value(initial));    	non-compiled	[CE]  no  suitable  method  found  for  setResult(double,int,double,double)	10	None	replace
43	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial),  yMax);  [CE]  cannot  find  symbol  yMax  [FE]            AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(initial,  0,  f.value(initial),  yMax);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial),  yMax);	      setResult(initial,    0,    f.value(initial));    	non-compiled	[CE]  cannot  find  symbol  yMax	10	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	        yMin    =    f.value(initial);    yMin  =  f.value(initial);	  	compilable	  [FE]  AssertionFailedError  	4	2	add
45	[BUG]  [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(initial);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        yMin    =    f.value(initial);    yMin  =  f.value(initial);	  	compilable	  [FE]  AssertionFailedError  	4	2	add
46	[BUG]  [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(Initial);  [CE]  cannot  find  symbol  Initial  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(Initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        yMin    =    f.value(initial);    yMin  =  f.value(Initial);	  	non-compiled	[CE]  cannot  find  symbol  Initial	4	None	add
47	[BUG]  [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(itial);  [CE]  cannot  find  symbol  itial  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(itial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        yMin    =    f.value(initial);    yMin  =  f.value(itial);	  	non-compiled	[CE]  cannot  find  symbol  itial	4	None	add
48	[BUG]  [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(initial));  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(initial));  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        yMin    =    f.value(initial);    yMin  =  f.value(initial));	  	non-compiled	[CE]  ';'  expected	4	None	add
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  result  =  f.value(max);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	result  =  f.value(max);	      result    =    f.value(initial);    	compilable	  [FE]  AssertionFailedError  	7	2	replace
50	[BUG]  [BUGGY]  result  =  f.value(max);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  result  =  f.value(max);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(max);	      result    =    f.value(initial);    	compilable	  [FE]  AssertionFailedError  	7	2	replace
51	[BUG]  [BUGGY]  result  =  f.value(out);  [CE]  cannot  find  symbol  out  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  result  =  f.value(out);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(out);	      result    =    f.value(initial);    	non-compiled	[CE]  cannot  find  symbol  out	7	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  result  =  f.value(yMin);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	result  =  f.value(yMin);	      result    =    f.value(initial);    	compilable	  [FE]  AssertionFailedError  	7	2	replace
53	[BUG]  [BUGGY]  result  =  f.value(yMin);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  result  =  f.value(yMin);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(yMin);	      result    =    f.value(initial);    	compilable	  [FE]  AssertionFailedError  	7	2	replace
54	[BUG]  [BUGGY]  setResult(yMin,  0);  return  result;  [CE]  unreachable  statement  [FE]                AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(yMin,  0);  return  result;  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(yMin,  0);  return  result;	      setResult(initial,    0);    return    result;    	non-compiled	[CE]  unreachable  statement	8	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  result  =  Math.abs(yMin);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	result  =  Math.abs(yMin);	      setResult(initial,    0);    return    result;    	compilable	  [FE]  AssertionFailedError  	8	2	replace
56	[BUG]  [BUGGY]  result  =  Math.abs(yMin);  [FE]  AssertionFailedError  [FE]                  AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  result  =  Math.abs(yMin);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  Math.abs(yMin);	      setResult(initial,    0);    return    result;    	compilable	  [FE]  AssertionFailedError  	8	2	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  double  yMax  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	double  yMax  =  f.value(initial);	      double    yMax    =    f.value(max);    	compilable	  [FE]  AssertionFailedError  	17	2	replace
58	[BUG]  [BUGGY]  double  yMax  =  f.value(initial);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  double  yMax  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double  yMax  =  f.value(initial);	      double    yMax    =    f.value(max);    	compilable	  [FE]  AssertionFailedError  	17	2	replace
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  double  yMax  =  f.value(min);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	double  yMax  =  f.value(min);	      double    yMax    =    f.value(max);    	compilable	  [FE]  AssertionFailedError  	17	2	replace
60	[BUG]  [BUGGY]  double  yMax  =  f.value(min);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  double  yMax  =  f.value(min);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double  yMax  =  f.value(min);	      double    yMax    =    f.value(max);    	compilable	  [FE]  AssertionFailedError  	17	2	replace
61	[BUG]  [BUGGY]  double  yMax  =  f.value(outitial);  [CE]  cannot  find  symbol  outitial  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  double  yMax  =  f.value(outitial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double  yMax  =  f.value(outitial);	      double    yMax    =    f.value(max);    	non-compiled	[CE]  cannot  find  symbol  outitial	17	None	replace
62	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  max);  [CE]  no  suitable  method  found  for  setResult(double,int,double,double)  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(initial,  0,  yMin,  max);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  max);	  setResult(initial,    0,    yMin);    	non-compiled	[CE]  no  suitable  method  found  for  setResult(double,int,double,double)	11	None	replace
63	[BUG]  [BUGGY]  setResult(initial,  0,  yMax,  yMin);  [CE]  cannot  find  symbol  yMax  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(initial,  0,  yMax,  yMin);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMax,  yMin);	  setResult(initial,    0,    yMin);    	non-compiled	[CE]  cannot  find  symbol  yMax	11	None	replace
64	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  f.value(max));  [CE]  no  suitable  method  found  for  setResult(double,int,double,double)  [FE]            AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(initial,  0,  yMin,  f.value(max));  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  f.value(max));	  setResult(initial,    0,    yMin);    	non-compiled	[CE]  no  suitable  method  found  for  setResult(double,int,double,double)	11	None	replace
65	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  f.value(initial));  [CE]  no  suitable  method  found  for  setResult(double,int,double,double)  [FE]              AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(initial,  0,  yMin,  f.value(initial));  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  f.value(initial));	  setResult(initial,    0,    yMin);    	non-compiled	[CE]  no  suitable  method  found  for  setResult(double,int,double,double)	11	None	replace
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(max,  0);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	add	setResult(max,  0);	  setResult(out,    0);    	compilable	  [FE]  AssertionFailedError  	9	2	replace
67	[BUG]  [BUGGY]  setResult(max,  0);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(max,  0);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(max,  0);	  setResult(out,    0);    	compilable	  [FE]  AssertionFailedError  	9	2	replace
68	[BUG]  [BUGGY]      setResult(initial,  0);  setResult(initial,  0,  f.value(initial));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      setResult(initial,  0);  setResult(initial,  0,  f.value(initial));  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        setResult(initial,    0);    setResult(initial,  0,  f.value(initial));	  	non-compiled	[CE]  ';'  expected	1	None	add
69	[BUG]  [BUGGY]      setResult(initial,  0);  setResult(initial,  0,  f.value(initial);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      setResult(initial,  0);  setResult(initial,  0,  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        setResult(initial,    0);    setResult(initial,  0,  f.value(initial);	  	non-compiled	[CE]  ')'  expected	1	None	add
70	[BUG]  [BUGGY]      setResult(initial,  0);  setResult(initial,  0,  f.value(max);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      setResult(initial,  0);  setResult(initial,  0,  f.value(max);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        setResult(initial,    0);    setResult(initial,  0,  f.value(max);	  	non-compiled	[CE]  ')'  expected	1	None	add
71	[BUG]  [BUGGY]  setResult(initial,  0,  yMin,  f.value(max);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(initial,  0,  yMin,  f.value(max);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMin,  f.value(max);	  setResult(initial,    0,    yMin);    	non-compiled	[CE]  ')'  expected	11	None	replace
72	[BUG]  [BUGGY]  setResult(null,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(null,  0);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(null,  0);	  setResult(outitial,    0);    	non-compiled	[CE]  ';'  expected	12	None	replace
73	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial)+  1);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(initial,  0,  f.value(initial)+  1);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial)+  1);	      setResult(initial,    0,    f.value(initial));    	non-compiled	[CE]  ';'  expected	10	None	replace
74	[BUG]  [BUGGY]  double  yMin  =  f.value(min,  initial);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  double  yMin  =  f.value(min,  initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	double  yMin  =  f.value(min,  initial);	      double    yMin    =    f.value(initial);    	non-compiled	[CE]  ';'  expected	3	None	replace
75	[BUG]  [BUGGY]  result  =  f.value(outitial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  result  =  f.value(outitial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(outitial);	      result    =    f.value(initial);    	non-compiled	[CE]  ';'  expected	7	None	replace
76	[BUG]  [BUGGY]  result  =  f.value(initial,  0);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  result  =  f.value(initial,  0);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(initial,  0);	      result    =    f.value(initial);    	non-compiled	[CE]  ';'  expected	7	None	replace
77	[BUG]  [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(initial).value(min);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(initial).value(min);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        yMin    =    f.value(initial);    yMin  =  f.value(initial).value(min);	  	non-compiled	[CE]  ';'  expected	4	None	add
78	[BUG]  [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(min);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(min);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        yMin    =    f.value(initial);    yMin  =  f.value(min);	  	non-compiled	[CE]  ';'  expected	4	None	add
79	[BUG]  [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(initial).value(max);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(initial).value(max);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        yMin    =    f.value(initial);    yMin  =  f.value(initial).value(max);	  	non-compiled	[CE]  ';'  expected	4	None	add
80	[BUG]  [BUGGY]  setResult(initial,  0,  yMax);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(initial,  0,  yMax);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  yMax);	      setResult(initial,    0);    	non-compiled	[CE]  ';'  expected	2	None	replace
81	[BUG]  [BUGGY]  setResult(result,  0);  setResult(result,  0,  f.value(initial));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(result,  0);  setResult(result,  0,  f.value(initial));  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,    0);    setResult(result,  0,  f.value(initial));	  	non-compiled	[CE]  ';'  expected	13	None	add
82	[BUG]  [BUGGY]  setResult(result,  0);  setResult(result,  0,  f.value(max);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(result,  0);  setResult(result,  0,  f.value(max);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,    0);    setResult(result,  0,  f.value(max);	  	non-compiled	[CE]  ')'  expected	13	None	add
83	[BUG]  [BUGGY]  setResult(result,  0);  setResult(result,  0,  f.value(result));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(result,  0);  setResult(result,  0,  f.value(result));  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,    0);    setResult(result,  0,  f.value(result));	  	non-compiled	[CE]  ';'  expected	13	None	add
84	[BUG]  [BUGGY]  setResult(result,  0);  setResult(result,  0,  f.value(initial);  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(result,  0);  setResult(result,  0,  f.value(initial);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,    0);    setResult(result,  0,  f.value(initial);	  	non-compiled	[CE]  ')'  expected	13	None	add
85	[BUG]  [BUGGY]  yMin  =  f.value(mini);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  yMin  =  f.value(mini);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMin  =  f.value(mini);	      yMin    =    f.value(initial);    	non-compiled	[CE]  ';'  expected	5	None	replace
86	[BUG]  [BUGGY]  yMax  =  f.value(outitial);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  yMax  =  f.value(outitial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	yMax  =  f.value(outitial);	      yMax    =    f.value(max);    	non-compiled	[CE]  ';'  expected	15	None	replace
87	[BUG]  [BUGGY]      result  =  f.value(initial);  setResult(initial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      result  =  f.value(initial);  setResult(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        result    =    f.value(initial);    setResult(initial);	  	non-compiled	[CE]  ';'  expected	6	None	add
88	[BUG]  [BUGGY]  result  =  f.value(initial,  yMin);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  result  =  f.value(initial,  yMin);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	result  =  f.value(initial,  yMin);	      result    =    f.value(initial);    	non-compiled	[CE]  ';'  expected	7	None	replace
89	[BUG]  [BUGGY]  setResult(initial,  0,  f.value(initial,  yMin));  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(initial,  0,  f.value(initial,  yMin));  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(initial,  0,  f.value(initial,  yMin));	      setResult(initial,    0,    f.value(initial));    	non-compiled	[CE]  ';'  expected	10	None	replace
90	[BUG]  [BUGGY]      yMin  =  f.value(initial);  double  yMin  =  f.value(initial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      yMin  =  f.value(initial);  double  yMin  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        yMin    =    f.value(initial);    double  yMin  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	4	None	add
91	[BUG]  [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(initial,  0);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      yMin  =  f.value(initial);  yMin  =  f.value(initial,  0);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        yMin    =    f.value(initial);    yMin  =  f.value(initial,  0);	  	non-compiled	[CE]  ';'  expected	4	None	add
92	[BUG]  [BUGGY]      result  =  f.value(initial);  double  yMax  =  f.value(initial);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      result  =  f.value(initial);  double  yMax  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        result    =    f.value(initial);    double  yMax  =  f.value(initial);	  	non-compiled	[CE]  ';'  expected	6	None	add
93	[BUG]  [BUGGY]      result  =  f.value(initial);  yMax  =  f.value(max);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      result  =  f.value(initial);  yMax  =  f.value(max);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        result    =    f.value(initial);    yMax  =  f.value(max);	  	non-compiled	[CE]  ';'  expected	6	None	add
94	[BUG]  [BUGGY]      setResult(initial,  0);  setResult(initial,  0,  f.value(max));  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]      setResult(initial,  0);  setResult(initial,  0,  f.value(max));  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	        setResult(initial,    0);    setResult(initial,  0,  f.value(max));	  	non-compiled	[CE]  ';'  expected	1	None	add
95	[BUG]  [BUGGY]  setResult(result,  0);  result  =  f.value(result,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(result,  0);  result  =  f.value(result,  0);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(result,    0);    result  =  f.value(result,  0);	  	non-compiled	[CE]  ';'  expected	13	None	add
96	[BUG]  [BUGGY]  setResult(xMin,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  setResult(xMin,  0);  [BUGGY]    return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	setResult(xMin,  0);	  setResult(outitial,    0);    	non-compiled	[CE]  ';'  expected	12	None	replace
97	[BUG]  [BUGGY]  if(initial  <  =  max)  {  setResult(initial,  0);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  if(initial  <  =  max)  {  setResult(initial,  0);  return  result;  }  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	if(initial  <  =  max)  {  setResult(initial,  0);  return  result;  }	      setResult(initial,    0);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
98	[BUG]  [BUGGY]  Double  yMin  =  f.value(initial);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      double  yInitial  =  f.value(initial);  if  (Math.abs(yInitial)  <=  functionValueAccuracy)  {  setResult(initial,  0);  return  result;  }  double  yMin  =  f.value(min);  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {    [BUGGY]  Double  yMin  =  f.value(initial);  [BUGGY]    setResult(yMin,  0);  return  result;  }  if  (yInitial  *  yMin  <  0)  {  return  solve(f,  min,  yMin,  initial,  yInitial,  min,  yMin);  }  double  yMax  =  f.value(max);  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  final  double  initial  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  initial  max  min  yInitial  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	115	115	1	replace	Double  yMin  =  f.value(initial);	      double    yMin    =    f.value(initial);    	non-compiled	[CE]  ';'  expected	3	None	replace
