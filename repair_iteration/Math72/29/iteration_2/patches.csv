bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  y2  =  oldDelta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y2  =  oldDelta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y2  =  oldDelta;	  y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2	[BUG]  [BUGGY]  y2  =  y0  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y2  =  y0  +  1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y2  =  y0  +  1;	  y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
3	[BUG]  [BUGGY]  double  y2  =  y0  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  double  y2  =  y0  +  1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	double  y2  =  y0  +  1;	  double    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  if(Math.abs(y0)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y0)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y0)  <  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    Math.abs(y2))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
5	[BUG]  [BUGGY]  y1  =  y0  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y0  -  1;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y0  -  1;	  y1    =    y2    -    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
6	[BUG]  [BUGGY]  y1  =  oldDelta  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  oldDelta  -  1;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  oldDelta  -  1;	  y1    =    y2    -    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
7	[BUG]  [BUGGY]  y1  =  y2  -  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y2  -  2;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y2  -  2;	  y1    =    y2    -    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
8	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y0)    <    =    tolerance)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
9	[BUG]  [BUGGY]  if(Math.abs(y0)  <  tolerance)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y0)  <  tolerance)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y0)  <  tolerance)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y0)    <    =    tolerance)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
10	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y0)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y0)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y0)    <    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
11	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y1)  <  =  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y1)    <    Math.abs(y2))    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
12	[BUG]  [BUGGY]  if(Math.abs(y0)  <  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y0)  <  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y0)  <  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y1)    <    Math.abs(y2))    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
13	[BUG]  [BUGGY]  Double  y1  =  y0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  Double  y1  =  y0;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	Double  y1  =  y0;	  Double    y1    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
14	[BUG]  [BUGGY]  Double  y1  =  oldDelta  +  delta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  Double  y1  =  oldDelta  +  delta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	Double  y1  =  oldDelta  +  delta;	  Double    y1    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
15	[BUG]  [BUGGY]  y1  =  y0  +  x0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y0  +  x0;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y0  +  x0;	  y1    =    y2    +    x0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
16	[BUG]  [BUGGY]  y1  =  y2  +  y0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y2  +  y0;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y2  +  y0;	  y1    =    y2    +    x0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
17	[BUG]  [BUGGY]  y1  =  y1  +  x0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y1  +  x0;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y1  +  x0;	  y1    =    y2    +    x0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
18	[BUG]  [BUGGY]  if(Math.abs(y1)  <  Math.abs(y1))  {  setResult(x0,  x1);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y1)  <  Math.abs(y1))  {  setResult(x0,  x1);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y1)  <  Math.abs(y1))  {  setResult(x0,  x1);  return  result;  }	  if(Math.abs(y0)    <    Math.abs(y1))    {    setResult(x0,    x1);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  if(Math.abs(y1)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y1)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y1)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y2)  <  =  Math.abs(y1))  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y2)    <    Math.abs(y1))    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
21	[BUG]  [BUGGY]  double  y2  =  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  double  y2  =  oldDelta.doubleValue();  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	double  y2  =  oldDelta.doubleValue();	  double    y2    =    y1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
22	[BUG]  [BUGGY]  double  y2  =  y0.doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  double  y2  =  y0.doubleValue();  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	double  y2  =  y0.doubleValue();	  double    y2    =    y1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
23	[BUG]  [BUGGY]  double  y2  =  y2.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  double  y2  =  y2.doubleValue();  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	double  y2  =  y2.doubleValue();	  double    y2    =    y1.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
24	[BUG]  [BUGGY]  double  y2  =  delta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  double  y2  =  delta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	double  y2  =  delta;	  double    y2    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  double  y2  =  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  double  y2  =  oldDelta  +  1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	double  y2  =  oldDelta  +  1;	  double    y2    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  y1  =  y0  +  oldDelta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y0  +  oldDelta;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y0  +  oldDelta;	  y1    =    y2    +    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
27	[BUG]  [BUGGY]  y1  =  oldDelta  +  y2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  oldDelta  +  y2;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  oldDelta  +  y2;	  y1    =    y2    +    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
28	[BUG]  [BUGGY]  y1  =  y1  +  oldDelta;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y1  +  oldDelta;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y1  +  oldDelta;	  y1    =    y2    +    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
29	[BUG]  [BUGGY]  y1  =  y0  +  i;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y0  +  i;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y0  +  i;	  y1    =    y2    +    i;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y2)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y2)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
31	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y1)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y1)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
32	[BUG]  [BUGGY]  if(Math.abs(y0)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y0)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y0)  <  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
33	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y0)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y0)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
34	[BUG]  [BUGGY]  y1  =  oldDelta  +  2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  oldDelta  +  2;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  oldDelta  +  2;	  y1    =    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y2)    <    =    functionValueAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
36	[BUG]  [BUGGY]  if(Math.abs(y1)  <  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y1)  <  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y1)  <  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    Math.abs(y0))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
37	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y2)  <  =  Math.abs(y0))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    Math.abs(y0))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
38	[BUG]  [BUGGY]  if(Math.abs(y1)  <  tolerance)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y1)  <  tolerance)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y1)  <  tolerance)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y2)    <    tolerance)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
39	[BUG]  [BUGGY]  if(i  <  maximalIterationCount)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(i  <  maximalIterationCount)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(i  <  maximalIterationCount)  {  setResult(x0,  i);  return  result;  }	  setResult(x0,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
40	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(oldDelta)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(oldDelta)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(oldDelta)    <    =    functionValueAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
41	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y2)  <  =  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y2)  <  =  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
42	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y1)  <  =  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y1)  <  =  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
43	[BUG]  [BUGGY]  if(Math.abs(y1)  <  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y1)  <  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y1)  <  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
44	[BUG]  [BUGGY]  if(Math.abs(y0)  <  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y0)  <  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y0)  <  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
45	[BUG]  [BUGGY]  if(Math.abs(y0)  <  Math.abs(y2))  {  setResult(x0,  x1);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y0)  <  Math.abs(y2))  {  setResult(x0,  x1);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y0)  <  Math.abs(y2))  {  setResult(x0,  x1);  return  result;  }	  if(Math.abs(y1)    <    =    Math.abs(y2))    {    setResult(x0,    x1);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
46	[BUG]  [BUGGY]  double  y1  =  oldDelta  +  delta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  double  y1  =  oldDelta  +  delta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	double  y1  =  oldDelta  +  delta;	  double    y1    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
47	[BUG]  [BUGGY]  double  y1  =  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  double  y1  =  oldDelta  +  1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	double  y1  =  oldDelta  +  1;	  double    y1    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  if(Math.abs(y3)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y3)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y3)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y3)    <    =    tolerance)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
49	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y0)    <    =    tolerance)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  y1  =  oldDelta  +  i;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  oldDelta  +  i;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  oldDelta  +  i;	  y1    =    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
51	[BUG]  [BUGGY]  if(i  <  maximalIterationCount)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(i  <  maximalIterationCount)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(i  <  maximalIterationCount)  {  setResult(x1,  i);  return  result;  }	  setResult(x1,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
52	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y0)  <  =  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y0)  <  =  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
53	[BUG]  [BUGGY]  y1  =  x0  +  y2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  x0  +  y2;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  x0  +  y2;	  y1    =    y2    +    x0;    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
54	[BUG]  [BUGGY]  setResult(x0,  i  +  1);  return  result;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  setResult(x0,  i  +  1);  return  result;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	setResult(x0,  i  +  1);  return  result;	  setResult(x0,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
55	[BUG]  [BUGGY]  setResult(x0,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  setResult(x0,  i);  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	setResult(x0,  i);	  setResult(x0,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
56	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y1)    <    =    tolerance)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
57	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y0))  {  setResult(x0,  x1);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y0))  {  setResult(x0,  x1);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y2)  <  Math.abs(y0))  {  setResult(x0,  x1);  return  result;  }	  if(Math.abs(y1)    <    =    Math.abs(y2))    {    setResult(x0,    x1);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
58	[BUG]  [BUGGY]  y1  =  delta  +  oldDelta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  delta  +  oldDelta;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  delta  +  oldDelta;	  y1    =    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
59	[BUG]  [BUGGY]  Double  y1  =  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  Double  y1  =  oldDelta  +  1;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	Double  y1  =  oldDelta  +  1;	  Double    y1    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
60	[BUG]  [BUGGY]  if(Math.abs(y3)  <  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y3)  <  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y3)  <  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y3)    <    =    tolerance)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
61	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y0))  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y0))  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y2)  <  Math.abs(y0))  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y1)    <    Math.abs(y2))    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
62	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  x1)return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  x1)return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x0,  x1)return  result;  }	  if(Math.abs(y1)    <    Math.abs(y2))    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
63	[BUG]  [BUGGY]  double  y2  =  oldDelta  +  delta;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  double  y2  =  oldDelta  +  delta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	double  y2  =  oldDelta  +  delta;	  double    y2    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
64	[BUG]  [BUGGY]  if(Math.abs(y0)  <  tolerance)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y0)  <  tolerance)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y0)  <  tolerance)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y2)    <    tolerance)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
65	[BUG]  [BUGGY]  y1  =  y2  +  i  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y2  +  i  +  1;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y2  +  i  +  1;	  y1    =    y2    +    i;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
66	[BUG]  [BUGGY]  if(Math.abs(y1)  <  Math.abs(y0))  {  setResult(x0,  x1);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y1)  <  Math.abs(y0))  {  setResult(x0,  x1);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y1)  <  Math.abs(y0))  {  setResult(x0,  x1);  return  result;  }	  if(Math.abs(y0)    <    Math.abs(y1))    {    setResult(x0,    x1);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
67	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x1,  x1);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x1,  x1);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y2)  <  Math.abs(y1))  {  setResult(x1,  x1);  return  result;  }	  if(Math.abs(y0)    <    Math.abs(y1))    {    setResult(x0,    x1);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
68	[BUG]  [BUGGY]  y1  =  y3  +  oldDelta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y3  +  oldDelta;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y3  +  oldDelta;	  y1    =    y2    +    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
69	[BUG]  [BUGGY]  y1  =  y0  +  delta2;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y0  +  delta2;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y0  +  delta2;	  y1    =    y0    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
70	[BUG]  [BUGGY]  if(i  >  oldDelta)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(i  >  oldDelta)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(i  >  oldDelta)  {  setResult(x1,  i);  return  result;  }	  setResult(x1,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
71	[BUG]  [BUGGY]  y1  =  oldDelta  *  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  oldDelta  *  1;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  oldDelta  *  1;	  y1    =    oldDelta    +    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
72	[BUG]  [BUGGY]  y1  =  y2  -  1  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y2  -  1  +  1;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y2  -  1  +  1;	  y1    =    y2    -    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
73	[BUG]  [BUGGY]  double  y1  =  delta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  double  y1  =  delta;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	double  y1  =  delta;	  double    y1    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y1)  <  =  Math.abs(y1))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y0)    <    Math.abs(y1))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
75	[BUG]  [BUGGY]  y1  =  y2  /  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y2  /  1;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y2  /  1;	  y1    =    y2    -    1;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
76	[BUG]  [BUGGY]  if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x0,  x1);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x0,  x1);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y2)  <  Math.abs(y2))  {  setResult(x0,  x1);  return  result;  }	  if(Math.abs(y1)    <    =    Math.abs(y2))    {    setResult(x0,    x1);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
77	[BUG]  [BUGGY]  if(i  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(i  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(i  <  =  tolerance)  {  setResult(x0,  i);  return  result;  }	  setResult(x0,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
78	[BUG]  [BUGGY]  y2  =  y3;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y2  =  y3;  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y2  =  y3;	  y2    =    y1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
79	[BUG]  [BUGGY]  if(Math.abs(y3)  <  =  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y3)  <  =  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y3)  <  =  toleranceAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
80	[BUG]  [BUGGY]  Double  y1  =  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  Double  y1  =  oldDelta.doubleValue();  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	Double  y1  =  oldDelta.doubleValue();	  Double    y1    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
81	[BUG]  [BUGGY]  if(Math.abs(y3)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y3)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y3)  <  =  toleranceAccuracy)  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    toleranceAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
82	[BUG]  [BUGGY]  double  y1  =  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  double  y1  =  oldDelta.doubleValue();  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	double  y1  =  oldDelta.doubleValue();	  double    y1    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
83	[BUG]  [BUGGY]  if(i  <  =  tolerance)  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(i  <  =  tolerance)  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(i  <  =  tolerance)  {  setResult(x1,  i);  return  result;  }	  setResult(x1,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
84	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y1))  {  setResult(x0,  x1);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y1))  {  setResult(x0,  x1);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y1)  <  =  Math.abs(y1))  {  setResult(x0,  x1);  return  result;  }	  if(Math.abs(y0)    <    Math.abs(y1))    {    setResult(x0,    x1);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
85	[BUG]  [BUGGY]  y1  =  y2  /  oldDelta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y2  /  oldDelta;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y2  /  oldDelta;	  y1    =    y2    +    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
86	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  if(Math.abs(y2)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }  [BUGGY]      y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	if(Math.abs(y2)  <  =  Math.abs(y2))  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y2)    <    Math.abs(y2))    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
87	[BUG]  [BUGGY]  y1  =  y2.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y2.doubleValue()  +  1;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y2.doubleValue()  +  1;	  y1    =    y0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
88	[BUG]  [BUGGY]  y1  =  y2,  i  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {  if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;      [BUGGY]  y1  =  y2,  i  +  1;  [BUGGY]      y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {    setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	240	240	1	replace	y1  =  y2,  i  +  1;	  y1    =    y0    +    1;    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
