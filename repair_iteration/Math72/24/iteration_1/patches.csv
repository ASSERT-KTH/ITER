bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  y2  =  oldDelta  -  delta;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  y2  =  oldDelta  -  delta;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  y2  =  oldDelta  -  delta;	      int    y2    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  int  y2  =  oldDelta  -  i;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  -  i;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  -  i;	      int    y2    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  int  y2  =  delta  -  oldDelta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  delta  -  oldDelta;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  delta  -  oldDelta;	      int    y2    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  int  y2  =  oldDelta  /  delta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  /  delta;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  /  delta;	      int    y2    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  double  y2  =  oldDelta;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  y2  =  oldDelta;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  y2  =  oldDelta;	      int    y2    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  int  y2  =  i;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  i;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  i;	      int    y2    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  float  y2  =  oldDelta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  float  y2  =  oldDelta;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	float  y2  =  oldDelta;	      int    y2    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  int  y2  =  oldDelta  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  +  1;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  +  1;	      int    y2    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  double  y2  =  oldDelta.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  y2  =  oldDelta.doubleValue()  +  1;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  y2  =  oldDelta.doubleValue()  +  1;	      double    y2    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
10	[BUG]  [BUGGY]  double  y2  =  delta.doubleValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  y2  =  delta.doubleValue();  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  y2  =  delta.doubleValue();	      double    y2    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
11	[BUG]  [BUGGY]  double  y2  =  oldDelta.doubleValue()  +  delta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  y2  =  oldDelta.doubleValue()  +  delta;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  y2  =  oldDelta.doubleValue()  +  delta;	      double    y2    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
12	[BUG]  [BUGGY]  int  y2  =  oldDelta.doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta.doubleValue()  +  1;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta.doubleValue()  +  1;	      int    y2    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  float  y2  =  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  float  y2  =  oldDelta.doubleValue();  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	float  y2  =  oldDelta.doubleValue();	      int    y2    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  if  (Math.abs(y0)  <  =  Math.abs(y1))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if  (Math.abs(y0)  <  =  Math.abs(y1))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if  (Math.abs(y0)  <  =  Math.abs(y1))  {	  if    (Math.abs(y0)    <    Math.abs(y1))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  if  (Math.abs(y1)  <  Math.abs(y0))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if  (Math.abs(y1)  <  Math.abs(y0))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if  (Math.abs(y1)  <  Math.abs(y0))  {	  if    (Math.abs(y0)    <    Math.abs(y1))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  if  (Math.abs(y0)  <  Math.abs(y1)||  Math.abs(y1  +  delta)  <  =  functionValueAccuracy)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if  (Math.abs(y0)  <  Math.abs(y1)||  Math.abs(y1  +  delta)  <  =  functionValueAccuracy)  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if  (Math.abs(y0)  <  Math.abs(y1)||  Math.abs(y1  +  delta)  <  =  functionValueAccuracy)  {	  if    (Math.abs(y0)    <    Math.abs(y1))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  delta);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  delta);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(relativeAccuracy,  delta);	      int    tolerance    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta,  i);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta,  i);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(relativeAccuracy,  oldDelta,  i);	      int    tolerance    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
19	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta,  maximalIterationCount);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta,  maximalIterationCount);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(relativeAccuracy,  oldDelta,  maximalIterationCount);	      int    tolerance    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  tolerance  =  Math.min(relativeAccuracy,  oldDelta);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  tolerance  =  Math.min(relativeAccuracy,  oldDelta);	      int    tolerance    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  if  (Math.abs(oldDelta)  <  =  Math.abs(y1))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if  (Math.abs(oldDelta)  <  =  Math.abs(y1))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if  (Math.abs(oldDelta)  <  =  Math.abs(y1))  {	  if    (Math.abs(oldDelta)    <    Math.abs(y1))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
22	[BUG]  [BUGGY]  if  (Math.abs(oldDelta)  <  Math.abs(y0))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if  (Math.abs(oldDelta)  <  Math.abs(y0))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if  (Math.abs(oldDelta)  <  Math.abs(y0))  {	  if    (Math.abs(oldDelta)    <    Math.abs(y1))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
23	[BUG]  [BUGGY]  double  y2  =  oldDelta  *  Math.floor(x2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  y2  =  oldDelta  *  Math.floor(x2);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  y2  =  oldDelta  *  Math.floor(x2);	      int    y2    =    oldDelta    *    Math.floor(x2);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
24	[BUG]  [BUGGY]  int  y2  =  oldDelta  *  Math.floor(y1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  *  Math.floor(y1);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  *  Math.floor(y1);	      int    y2    =    oldDelta    *    Math.floor(x2);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
25	[BUG]  [BUGGY]  int  y2  =  oldDelta  *  Math.floor(i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  *  Math.floor(i);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  *  Math.floor(i);	      int    y2    =    oldDelta    *    Math.floor(x2);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  int  y2  =  oldDelta  *  Math.log(i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  *  Math.log(i);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  *  Math.log(i);	      int    y2    =    oldDelta    *    Math.floor(x2);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  y2  =  y0;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	y2  =  y0;	      y2    =    x0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
28	[BUG]  [BUGGY]  y2  =  y1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  y2  =  y1;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	y2  =  y1;	      y2    =    x0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
29	[BUG]  [BUGGY]  y2  =  oldDelta;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  y2  =  oldDelta;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	y2  =  oldDelta;	      y2    =    x0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  y2  =  i;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  y2  =  i;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	y2  =  i;	      y2    =    x0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
31	[BUG]  [BUGGY]  int  tolerance  =  Math.min(oldDelta,  x1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(oldDelta,  x1);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(oldDelta,  x1);	      int    tolerance    =    Math.min(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  int  tolerance  =  Math.min(x1,  oldDelta,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(x1,  oldDelta,  i);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(x1,  oldDelta,  i);	      int    tolerance    =    Math.min(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  double  tolerance  =  Math.min(x1,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  tolerance  =  Math.min(x1,  oldDelta);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  tolerance  =  Math.min(x1,  oldDelta);	      int    tolerance    =    Math.min(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  int  tolerance  =  Math.min(tolerance,  oldDelta);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(tolerance,  oldDelta);  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(tolerance,  oldDelta);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta);  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance);  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  tolerance);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  int  tolerance  =  Math.min(oldDelta,  x0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(oldDelta,  x0);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(oldDelta,  x0);	      int    tolerance    =    Math.min(x0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  int  tolerance  =  Math.min(x0,  oldDelta,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(x0,  oldDelta,  i);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(x0,  oldDelta,  i);	      int    tolerance    =    Math.min(x0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  double  tolerance  =  Math.min(x0,  oldDelta);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  tolerance  =  Math.min(x0,  oldDelta);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  tolerance  =  Math.min(x0,  oldDelta);	      int    tolerance    =    Math.min(x0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  if  (Math.abs(y1)  <  =  Math.abs(y2))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if  (Math.abs(y1)  <  =  Math.abs(y2))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if  (Math.abs(y1)  <  =  Math.abs(y2))  {	  if    (Math.abs(y1)    <    Math.abs(y2))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
41	[BUG]  [BUGGY]  if  (Math.abs(y0)  <  Math.abs(y2))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if  (Math.abs(y0)  <  Math.abs(y2))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if  (Math.abs(y0)  <  Math.abs(y2))  {	  if    (Math.abs(y1)    <    Math.abs(y2))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  if  (Math.abs(y2)  <  =  Math.abs(y0))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if  (Math.abs(y2)  <  =  Math.abs(y0))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if  (Math.abs(y2)  <  =  Math.abs(y0))  {	  if    (Math.abs(y2)    <    =    Math.abs(y1))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  double  y2  =  oldDelta  *(x0  +  i);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  y2  =  oldDelta  *(x0  +  i);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  y2  =  oldDelta  *(x0  +  i);	      int    y2    =    oldDelta    *(x0    +    i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
44	[BUG]  [BUGGY]  int  y2  =  oldDelta  *(x1  +  i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  *(x1  +  i);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  *(x1  +  i);	      int    y2    =    oldDelta    *(x0    +    i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
45	[BUG]  [BUGGY]  int  y2  =  i  *(oldDelta  +  oldDelta);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  i  *(oldDelta  +  oldDelta);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  i  *(oldDelta  +  oldDelta);	      int    y2    =    oldDelta    *(x0    +    i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
46	[BUG]  [BUGGY]  int  y2  =  oldDelta  *(x0  +  delta);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  *(x0  +  delta);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  *(x0  +  delta);	      int    y2    =    oldDelta    *(x0    +    i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
47	[BUG]  [BUGGY]  double  y2  =  oldDelta  +  delta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  y2  =  oldDelta  +  delta;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  y2  =  oldDelta  +  delta;	      int    y2    =    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
48	[BUG]  [BUGGY]  int  y2  =  oldDelta  +  i;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  +  i;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  +  i;	      int    y2    =    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
49	[BUG]  [BUGGY]  int  y2  =  delta  +  oldDelta;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  delta  +  oldDelta;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  delta  +  oldDelta;	      int    y2    =    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
50	[BUG]  [BUGGY]  int  y2  =  oldDelta  *  delta;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  *  delta;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  *  delta;	      int    y2    =    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
51	[BUG]  [BUGGY]  int  tolerance  =  Math.min(delta,  oldDelta  -  x0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(delta,  oldDelta  -  x0);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(delta,  oldDelta  -  x0);	      int    tolerance    =    Math.min(x0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  int  tolerance  =  Math.min(x0,  oldDelta  -  i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(x0,  oldDelta  -  i);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(x0,  oldDelta  -  i);	      int    tolerance    =    Math.min(x0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
53	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeIterationCount,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(relativeIterationCount,  oldDelta  -  delta);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(relativeIterationCount,  oldDelta  -  delta);	      int    tolerance    =    Math.min(x0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
54	[BUG]  [BUGGY]  int  tolerance  =  Math.min(tolerance,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(tolerance,  oldDelta  -  delta);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(tolerance,  oldDelta  -  delta);	      int    tolerance    =    Math.min(x0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
55	[BUG]  [BUGGY]  if  (Math.abs(oldDelta)  <  =  Math.abs(x1))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if  (Math.abs(oldDelta)  <  =  Math.abs(x1))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if  (Math.abs(oldDelta)  <  =  Math.abs(x1))  {	  if    (Math.abs(oldDelta)    <    Math.abs(x1))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
56	[BUG]  [BUGGY]  if  (Math.abs(x1)  <  Math.abs(oldDelta))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if  (Math.abs(x1)  <  Math.abs(oldDelta))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if  (Math.abs(x1)  <  Math.abs(oldDelta))  {	  if    (Math.abs(oldDelta)    <    Math.abs(x1))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
57	[BUG]  [BUGGY]  if  (Math.abs(oldDelta)  <  Math.abs(x1)||  Math.abs(x1  <  =  oldDelta))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if  (Math.abs(oldDelta)  <  Math.abs(x1)||  Math.abs(x1  <  =  oldDelta))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if  (Math.abs(oldDelta)  <  Math.abs(x1)||  Math.abs(x1  <  =  oldDelta))  {	  if    (Math.abs(oldDelta)    <    Math.abs(x1))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
58	[BUG]  [BUGGY]  int  y2  =  oldDelta  *(delta  +  i);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  *(delta  +  i);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  *(delta  +  i);	      int    y2    =    oldDelta    *(x0    +    i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
59	[BUG]  [BUGGY]  int  y2  =  i  *(oldDelta  +  x0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  i  *(oldDelta  +  x0);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  i  *(oldDelta  +  x0);	      int    y2    =    oldDelta    *(x0    +    i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
60	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  oldDelta);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  oldDelta);  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  oldDelta);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  i);  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  i);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  -  delta);  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta  -  delta);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
63	[BUG]  [BUGGY]  int  tolerance  =  Math.min(y0,  oldDelta);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(y0,  oldDelta);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(y0,  oldDelta);	      int    tolerance    =    Math.min(x0,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
64	[BUG]  [BUGGY]  if  (Math.abs(oldDelta)  <  Math.abs(y2))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if  (Math.abs(oldDelta)  <  Math.abs(y2))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if  (Math.abs(oldDelta)  <  Math.abs(y2))  {	  if    (Math.abs(y1)    <    Math.abs(y2))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
65	[BUG]  [BUGGY]  int  tolerance  =  Math.min(x1,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(x1,  oldDelta  -  delta);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(x1,  oldDelta  -  delta);	      int    tolerance    =    Math.min(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  -  delta);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  -  delta);	      int    tolerance    =    Math.min(x0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
67	[BUG]  [BUGGY]  int  tolerance  =  Math.min(oldDelta,  x0  -  delta);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(oldDelta,  x0  -  delta);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(oldDelta,  x0  -  delta);	      int    tolerance    =    Math.min(x0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
68	[BUG]  [BUGGY]  int  tolerance  =  Math.min(delta,  oldDelta  -  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(delta,  oldDelta  -  i);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(delta,  oldDelta  -  i);	      int    tolerance    =    Math.min(x0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
69	[BUG]  [BUGGY]  int  y2  =  oldDelta  *  Math.floor(y2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  *  Math.floor(y2);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  *  Math.floor(y2);	      int    y2    =    oldDelta    *    Math.floor(x2);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
70	[BUG]  [BUGGY]  int  y2  =  oldDelta  *  Math.log(x2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  *  Math.log(x2);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  *  Math.log(x2);	      int    y2    =    oldDelta    *    Math.floor(x2);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
71	[BUG]  [BUGGY]  if  (Math.abs(oldDelta)  <  Math.abs(x0))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if  (Math.abs(oldDelta)  <  Math.abs(x0))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if  (Math.abs(oldDelta)  <  Math.abs(x0))  {	  if    (Math.abs(oldDelta)    <    Math.abs(x1))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
72	[BUG]  [BUGGY]  if  (Math.abs(oldDelta)  <  Math.abs(x1)||  Math.abs(y0)  <  =  Math.abs(y2))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if  (Math.abs(oldDelta)  <  Math.abs(x1)||  Math.abs(y0)  <  =  Math.abs(y2))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if  (Math.abs(oldDelta)  <  Math.abs(x1)||  Math.abs(y0)  <  =  Math.abs(y2))  {	  if    (Math.abs(oldDelta)    <    Math.abs(x1))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
73	[BUG]  [BUGGY]  y2  =  delta;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  y2  =  delta;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	y2  =  delta;	      y2    =    x0;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
74	[BUG]  [BUGGY]  int  y2  =  oldDelta  -  delta  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  -  delta  +  1;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  -  delta  +  1;	      int    y2    =    oldDelta    -    delta;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
75	[BUG]  [BUGGY]  double  y1  =  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  y1  =  oldDelta.doubleValue();  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  y1  =  oldDelta.doubleValue();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
76	[BUG]  [BUGGY]  float  y2  =  oldDelta  +  delta;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  float  y2  =  oldDelta  +  delta;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	float  y2  =  oldDelta  +  delta;	      int    y2    =    oldDelta    +    delta;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
77	[BUG]  [BUGGY]  double  tolerance  =  Math.min(oldDelta,  x1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  tolerance  =  Math.min(oldDelta,  x1);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  tolerance  =  Math.min(oldDelta,  x1);	      int    tolerance    =    Math.min(x1,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
78	[BUG]  [BUGGY]  int  y2  =  oldDelta  *  Math.floor(x1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  y2  =  oldDelta  *  Math.floor(x1);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  y2  =  oldDelta  *  Math.floor(x1);	      int    y2    =    oldDelta    *    Math.floor(x2);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
79	[BUG]  [BUGGY]  double  y2  =  oldDelta  *  Math.log(x2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  y2  =  oldDelta  *  Math.log(x2);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  y2  =  oldDelta  *  Math.log(x2);	      int    y2    =    oldDelta    *    Math.floor(x2);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
80	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  i  -  delta);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  i  -  delta);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(relativeAccuracy  *  oldDelta,  i  -  delta);	      int    tolerance    =    Math.min(x0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
81	[BUG]  [BUGGY]  double  tolerance  =  Math.min(x0,  oldDelta  -  delta);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  double  tolerance  =  Math.min(x0,  oldDelta  -  delta);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	double  tolerance  =  Math.min(x0,  oldDelta  -  delta);	      int    tolerance    =    Math.min(x0,    oldDelta    -    delta);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
82	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(y1)||  Math.abs(y1  -  oldDelta)  <  =  Math.abs(y2))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(y1)||  Math.abs(y1  -  oldDelta)  <  =  Math.abs(y2))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if(Math.abs(oldDelta)  <  Math.abs(y1)||  Math.abs(y1  -  oldDelta)  <  =  Math.abs(y2))  {	  if    (Math.abs(oldDelta)    <    Math.abs(y1))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
83	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(x1)||  Math.abs(y1  -  oldDelta)  <  =  Math.abs(x2))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(x1)||  Math.abs(y1  -  oldDelta)  <  =  Math.abs(x2))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if(Math.abs(oldDelta)  <  Math.abs(x1)||  Math.abs(y1  -  oldDelta)  <  =  Math.abs(x2))  {	  if    (Math.abs(oldDelta)    <    Math.abs(x1))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
84	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(x1)||  Math.abs(y0)  <  =  Math.abs(x2))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(x1)||  Math.abs(y0)  <  =  Math.abs(x2))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if(Math.abs(oldDelta)  <  Math.abs(x1)||  Math.abs(y0)  <  =  Math.abs(x2))  {	  if    (Math.abs(oldDelta)    <    Math.abs(x1))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
85	[BUG]  [BUGGY]  Double  y2  =  oldDelta;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  Double  y2  =  oldDelta;  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	Double  y2  =  oldDelta;	      int    y2    =    oldDelta;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
86	[BUG]  [BUGGY]  float  y2  =  oldDelta  *(x0  +  i);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  float  y2  =  oldDelta  *(x0  +  i);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	float  y2  =  oldDelta  *(x0  +  i);	      int    y2    =    oldDelta    *(x0    +    i);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
87	[BUG]  [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(y1)||  Math.abs(y0)  <  =  Math.abs(y1))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  if(Math.abs(oldDelta)  <  Math.abs(y1)||  Math.abs(y0)  <  =  Math.abs(y1))  {  [BUGGY]      x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	if(Math.abs(oldDelta)  <  Math.abs(y1)||  Math.abs(y0)  <  =  Math.abs(y1))  {	  if    (Math.abs(y0)    <    Math.abs(y1))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
88	[BUG]  [BUGGY]  Double  y2  =  oldDelta.doubleValue();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  Double  y2  =  oldDelta.doubleValue();  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	Double  y2  =  oldDelta.doubleValue();	      int    y2    =    oldDelta.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
89	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  +  i);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  +  i);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  +  i);	      int    tolerance    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
90	[BUG]  [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  -  i);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    throws  MaxIterationsExceededException,  FunctionEvaluationException  {  double  delta  =  x1  -  x0;  double  oldDelta  =  delta;  int  i  =  0;  while  (i  <  maximalIterationCount)  {    [BUGGY]  int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  -  i);  [BUGGY]    if  (Math.abs(y2)  <  Math.abs(y1))  {  x0  =  x1;  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.4472135954999579	234	234	1	replace	int  tolerance  =  Math.min(relativeAccuracy,  oldDelta  -  i);	      int    tolerance    =    Math.min(relativeAccuracy,    oldDelta);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
