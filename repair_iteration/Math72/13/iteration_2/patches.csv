bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y3  =  y0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y3  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y3  =  y0;	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
2	[BUG]  [BUGGY]  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
3	[BUG]  [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y2)  <  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y2)    <    =    functionValueAccuracy)    {    setResult(x0,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
4	[BUG]  [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	double  i  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy);	  int    i    =    Math.max(relativeAccuracy    *    Math.abs(x2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
5	[BUG]  [BUGGY]  ||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  ||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
6	[BUG]  [BUGGY]  ||  Math.abs(y1)  <  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  ||  Math.abs(y1)  <  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	||  Math.abs(y1)  <  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
7	[BUG]  [BUGGY]  ||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  ||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
8	[BUG]  [BUGGY]  setResult(x1,  i,  x2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x1,  i,  x2);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x1,  i,  x2);	  setResult(x1,    i,    y2);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	double  i  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy);	  double    i    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
10	[BUG]  [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	double  i  =  Math.max(relativeAccuracy  *  Math.abs(y2),  absoluteAccuracy);	  double    i    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
11	[BUG]  [BUGGY]  ||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  ||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    y0    =    x1;    y1    =    y2;    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
12	[BUG]  [BUGGY]  ||  Math.abs(y1)  <  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  ||  Math.abs(y1)  <  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	||  Math.abs(y1)  <  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    y0    =    x1;    y1    =    y2;    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
13	[BUG]  [BUGGY]  x1  =  x0;  y0  =  x1;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  y0  =  x1;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  y0  =  x1;  y1  =  y2;	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    y0    =    x1;    y1    =    y2;    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
14	[BUG]  [BUGGY]  x1  =  x2;  x1  =  x1;  y1  =  y1;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x2;  x1  =  x1;  y1  =  y1;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x2;  x1  =  x1;  y1  =  y1;  y2  =  y0;	  x1    =    x0;    x1    =    x1;    y1    =    y1;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  x1  =  x0;  x1  =  x2;  y1  =  y1;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x1  =  x2;  y1  =  y1;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x1  =  x2;  y1  =  y1;  y2  =  y0;	  x1    =    x0;    x1    =    x1;    y1    =    y1;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  x1  =  x1;  x1  =  x0;  y1  =  y1;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x1;  x1  =  x0;  y1  =  y1;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x1;  x1  =  x0;  y1  =  y1;  y2  =  y0;	  x1    =    x0;    x1    =    x1;    y1    =    y1;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  x1    =    x2;    x2    =    x1;    y0    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
18	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  x1    =    x2;    x2    =    x1;    y0    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
19	[BUG]  [BUGGY]  setResult(x0,  y0  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x0,  y0  +  1);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x0,  y0  +  1);	  setResult(x1,    y0    +    1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
20	[BUG]  [BUGGY]  x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;	  x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  double  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	double  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;	  x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
22	[BUG]  [BUGGY]  double  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	double  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;	  double    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
23	[BUG]  [BUGGY]  x1  =  x0;  x1  =  x1;  y1  =  y0;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x1  =  x1;  y1  =  y0;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x1  =  x1;  y1  =  y0;  y1  =  y2;	  x1    =    x0;    x1    =    x1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
24	[BUG]  [BUGGY]  x1  =  x2;  x1  =  x1;  y1  =  y0;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x2;  x1  =  x1;  y1  =  y0;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x2;  x1  =  x1;  y1  =  y0;  y1  =  y2;	  x1    =    x0;    x1    =    x1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
25	[BUG]  [BUGGY]  x1  =  x2;  x1  =  x1;  y1  =  y1;  y1  =  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x2;  x1  =  x1;  y1  =  y1;  y1  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x2;  x1  =  x1;  y1  =  y1;  y1  =  y0;	  x1    =    x0;    x1    =    x1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
26	[BUG]  [BUGGY]  double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    double    x0    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
27	[BUG]  [BUGGY]  Double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  Double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	Double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    double    x0    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
28	[BUG]  [BUGGY]  if(Math.abs(x1)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(x1)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(x1)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    double    x0    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
29	[BUG]  [BUGGY]  setResult(x2,  i);  return  result;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x2,  i);  return  result;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x2,  i);  return  result;	  setResult(x1,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
30	[BUG]  [BUGGY]  setResult(x1,  y1);  return  result;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x1,  y1);  return  result;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x1,  y1);  return  result;	  setResult(x1,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
31	[BUG]  [BUGGY]  setResult(x1,  y0);  return  result;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x1,  y0);  return  result;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x1,  y0);  return  result;	  setResult(x1,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
32	[BUG]  [BUGGY]  x1  =  x2;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x2;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x2;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y0;	  x1    =    x0;    x2    =    x1;    y0    =    y0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
33	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y2  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y2  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y2  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
34	[BUG]  [BUGGY]  double  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	double  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;	  x1    =    x2;    y0    =    x1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
35	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x2,  y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x2,  y1),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x2,  y1),  absoluteAccuracy);	  result    =    Math.max(relativeAccuracy    *    Math.abs(x1,    y1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
36	[BUG]  [BUGGY]  x1  =  x0;  x2  =  x0;  y0  =  y0;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x2  =  x0;  y0  =  y0;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x2  =  x0;  y0  =  y0;  y1  =  y2;	  x1    =    x2;    x2    =    x0;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
37	[BUG]  [BUGGY]  x1  =  x0;  x2  =  x0;  y0  =  y1,  y1;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x2  =  x0;  y0  =  y1,  y1;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x2  =  x0;  y0  =  y1,  y1;  y1  =  y2;	  x1    =    x2;    x2    =    x0;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
38	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  i),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  i),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  i),  absoluteAccuracy);	  result    =    Math.max(relativeAccuracy    *    Math.abs(x1,    absoluteAccuracy),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
39	[BUG]  [BUGGY]  setResult(x0,  i,  y1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x0,  i,  y1);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x0,  i,  y1);	  setResult(x1,    i,    y0);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
41	[BUG]  [BUGGY]  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y3  =  y0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y3  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y3  =  y0;	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
42	[BUG]  [BUGGY]  x1  =  x2;  y0  =  x1;  y1  =  y1;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x2;  y0  =  x1;  y1  =  y1;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x2;  y0  =  x1;  y1  =  y1;  y2  =  y0;	  x1    =    x0;    y0    =    x1;    y1    =    y1;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  x1  =  x2;  x0  =  x1;  y1  =  y1;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x2;  x0  =  x1;  y1  =  y1;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x2;  x0  =  x1;  y1  =  y1;  y2  =  y0;	  x1    =    x0;    y0    =    x1;    y1    =    y1;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  x1  =  x1;  y0  =  x1;  y1  =  y1;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x1;  y0  =  x1;  y1  =  y1;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x1;  y0  =  x1;  y1  =  y1;  y2  =  y0;	  x1    =    x0;    y0    =    x1;    y1    =    y1;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x1;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x1;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x1;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  x1    =    x1;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
46	[BUG]  [BUGGY]  x1  =  x0;  x2  =  x0;  y0  =  y0;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x2  =  x0;  y0  =  y0;  y1  =  y2;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x2  =  x0;  y0  =  y0;  y1  =  y2;  y2  =  y0;	  x1    =    x1;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  setResult(x2,  i  +  1,  dx);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x2,  i  +  1,  dx);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x2,  i  +  1,  dx);	  setResult(x2,    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
48	[BUG]  [BUGGY]  setResult(x2,  i  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x2,  i  +  2);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x2,  i  +  2);	  setResult(x2,    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
49	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y1  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y1  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y1  =  y0;  }	  x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
50	[BUG]  [BUGGY]  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y1  =  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y1  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y1  =  y0;	  x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
51	[BUG]  [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y1  =  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y1  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y1  =  y0;	  x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
52	[BUG]  [BUGGY]  Double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  Double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	Double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    double    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
53	[BUG]  [BUGGY]  double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    double    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
54	[BUG]  [BUGGY]  setResult(x1,  i,  dx,  y1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x1,  i,  dx,  y1);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x1,  i,  dx,  y1);	  setResult(x1,    i,    dx);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
55	[BUG]  [BUGGY]  setResult(x2,  i,  dx);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x2,  i,  dx);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x2,  i,  dx);	  setResult(x2,    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
56	[BUG]  [BUGGY]  setResult(x2,  i,  y1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x2,  i,  y1);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x2,  i,  y1);	  setResult(x2,    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  x1  =  x2;  x1  =  x0;  y1  =  y1;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x2;  x1  =  x0;  y1  =  y1;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x2;  x1  =  x0;  y1  =  y1;  y1  =  y2;	  x1    =    x2;    y0    =    x1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
58	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x1;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x1;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x1;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  x1    =    x1;    x2    =    x1;    y0    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
59	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy  +  1);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x2),  absoluteAccuracy  +  1);	  result    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
60	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  2);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  +  2);	  result    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
61	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy  +  1);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(y1),  absoluteAccuracy  +  1);	  result    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
62	[BUG]  [BUGGY]  result  =  Math.max(result,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.max(result,  i);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	result  =  Math.max(result,  i);	  setResult(x0,    i);    return    result;    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
63	[BUG]  [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	result  =  Math.min(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);	  if(Math.abs(y1)    <    functionValueAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
64	[BUG]  [BUGGY]  ||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  ||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
65	[BUG]  [BUGGY]  ||  Math.abs(y1)  <  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  ||  Math.abs(y1)  <  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	||  Math.abs(y1)  <  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
66	[BUG]  [BUGGY]  ||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  ||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	||  Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
67	[BUG]  [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y0;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x2;  x2  =  x0;  y0  =  y0;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x2;  x2  =  x0;  y0  =  y0;  y1  =  y2;	  x1    =    x1;    x2    =    x0;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
68	[BUG]  [BUGGY]  x1  =  x1;  x2  =  x0;  y0  =  y0;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x1;  x2  =  x0;  y0  =  y0;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x1;  x2  =  x0;  y0  =  y0;  y1  =  y2;	  x1    =    x1;    x2    =    x0;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
69	[BUG]  [BUGGY]  x1  =  x0;  x1  =  x1;  y1  =  y0;  y2  =  y1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x1  =  x1;  y1  =  y0;  y2  =  y1;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x1  =  x1;  y1  =  y0;  y2  =  y1;	  x1    =    x0;    x1    =    x1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
70	[BUG]  [BUGGY]  x1  =  x0;  x1  =  x1;  y1  =  y0;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x1  =  x1;  y1  =  y0;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x1  =  x1;  y1  =  y0;  y2  =  y0;	  x1    =    x0;    x1    =    x1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
71	[BUG]  [BUGGY]  ||  Math.abs(y1)  <  =  functionValueAccuracy)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  ||  Math.abs(y1)  <  =  functionValueAccuracy)  {  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	||  Math.abs(y1)  <  =  functionValueAccuracy)  {	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    y0    =    x1;    y1    =    y2;    y1    =    y0;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
72	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  double    x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
73	[BUG]  [BUGGY]  double  x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	double  x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y0;	  double    x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
74	[BUG]  [BUGGY]  int  i  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  int  i  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	int  i  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);	  int    i    =    Math.max(relativeAccuracy    *    Math.abs(y1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
75	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
76	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
77	[BUG]  [BUGGY]  if(Math.abs(y1)  <  functionValueAccuracy)  {  setResult(x0,  i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  functionValueAccuracy)  {  setResult(x0,  i);  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  functionValueAccuracy)  {  setResult(x0,  i);  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
78	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }	  double    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
79	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }	  double    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
80	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }	  x1    =    x2;    y0    =    x1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
81	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  x1    =    x2;    y0    =    x1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
82	[BUG]  [BUGGY]  x1  =  x0;  x0  =  x1;  y1  =  y2;  y1  =  y0;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x0  =  x1;  y1  =  y2;  y1  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x0  =  x1;  y1  =  y2;  y1  =  y0;	  x1    =    x2;    y0    =    x1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
83	[BUG]  [BUGGY]  x1  =  x2;  x1  =  x1;  y1  =  y2;  y1  =  y0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x2;  x1  =  x1;  y1  =  y2;  y1  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x2;  x1  =  x1;  y1  =  y2;  y1  =  y0;	  x1    =    x0;    x1    =    x1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
84	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x1  =  x1;  y1  =  y2;  y1  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x1  =  x1;  y1  =  y2;  y1  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x1  =  x1;  y1  =  y2;  y1  =  y0;  }	  x1    =    x0;    x1    =    x1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
85	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x1  =  x1;  y1  =  y2;  y1  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x1  =  x1;  y1  =  y2;  y1  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x1  =  x1;  y1  =  y2;  y1  =  y0;  }  else  {  setResult(x1,  i);  return  result;  }	  x1    =    x0;    x1    =    x1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
86	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x1  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x1  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x1  =  x1;  y1  =  y2;  y2  =  y0;  }	  x1    =    x0;    x1    =    x1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
87	[BUG]  [BUGGY]  x1  =  x2;  x1  =  x1;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x2;  x1  =  x1;  y1  =  y2;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x2;  x1  =  x1;  y1  =  y2;  y2  =  y0;	  x1    =    x0;    x1    =    x1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
88	[BUG]  [BUGGY]  setResult(x0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x0,  i  +  1);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x0,  i  +  1);	  setResult(x0,    i);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
89	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x1;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x1;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x1;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }	  x1    =    x1;    x2    =    x0;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
90	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }	  x1    =    x1;    x2    =    x0;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
91	[BUG]  [BUGGY]  setResult(x2,  y0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x2,  y0);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x2,  y0);	  setResult(x2,    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
92	[BUG]  [BUGGY]  setResult(x2,  i,  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x2,  i,  absoluteAccuracy);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x2,  i,  absoluteAccuracy);	  setResult(x2,    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
93	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  }	  x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
94	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }	  x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
95	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x1  =  x1;  y1  =  y1;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x1  =  x1;  y1  =  y1;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x1  =  x1;  y1  =  y1;  y2  =  y0;  }	  x1    =    x0;    x1    =    x1;    y1    =    y1;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
96	[BUG]  [BUGGY]  x1  =  x3;  x1  =  x1;  y1  =  y1;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x3;  x1  =  x1;  y1  =  y1;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x3;  x1  =  x1;  y1  =  y1;  y2  =  y0;	  x1    =    x0;    x1    =    x1;    y1    =    y1;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
97	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y1;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y1;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y1;  y2  =  y0;  }	  x1    =    x0;    y0    =    x1;    y1    =    y1;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
98	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  double    x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
99	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }	  x1    =    x2;    y0    =    x1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
100	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y1))  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y1))  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  Math.abs(y1))  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }	  x1    =    x2;    y0    =    x1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
101	[BUG]  [BUGGY]  x1  =  x0;  x0  =  x1;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x0  =  x1;  y1  =  y2;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x0  =  x1;  y1  =  y2;  y2  =  y0;	  x1    =    x2;    y0    =    x1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
102	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x2  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x2  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x2  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  x1    =    x2;    x2    =    x1;    y0    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
103	[BUG]  [BUGGY]  if(Math.abs(y1)  <  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    double    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
104	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y3  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y3  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y3  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    double    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
105	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x2  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x2  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x2  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  x1    =    x2;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
106	[BUG]  [BUGGY]  if(Math.abs(y1)  <  functionValueAccuracy)  {  double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  functionValueAccuracy)  {  double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  functionValueAccuracy)  {  double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    double    x0    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
107	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x1  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x1  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x1  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    double    x0    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
108	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y0;  }	  x1    =    x0;    x2    =    x1;    y0    =    y0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
109	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y1))  {  x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  Math.abs(y1))  {  x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  Math.abs(y1))  {  x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y0;  }	  x1    =    x0;    x2    =    x1;    y0    =    y0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
110	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y1;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y1;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y0;  y1  =  y2;  y2  =  y1;  }	  x1    =    x0;    x2    =    x1;    y0    =    y0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
111	[BUG]  [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	double  i  =  Math.max(relativeAccuracy  *  Math.abs(x),  absoluteAccuracy);	  double    i    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
112	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  /  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  /  1);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy  /  1);	  result    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy    +    1);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
113	[BUG]  [BUGGY]  int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy),  absoluteAccuracy);	  int    i    =    Math.max(relativeAccuracy    *    Math.abs(x2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
114	[BUG]  [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y0)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    else    {    setResult(x1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
115	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    else    {    setResult(x1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
116	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  x1  =  x0;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  x1  =  x0;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  x1  =  x0;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    y0    =    x1;    y1    =    y2;    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
117	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  x1  =  x1;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  x1  =  x1;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  x1  =  x1;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    y0    =    x1;    y1    =    y2;    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
118	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(x0,  i,  NON_BRACKETING_MESSAGE);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(x0,  i,  NON_BRACKETING_MESSAGE);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(x0,  i,  NON_BRACKETING_MESSAGE);	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    y0    =    x1;    y1    =    y2;    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
119	[BUG]  [BUGGY]  MutableMath.abs(y2)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  MutableMath.abs(y2)  {  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	MutableMath.abs(y2)  {	  if(Math.abs(y2)    <    =    functionValueAccuracy)    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
120	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x2  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x2  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x2  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }	  x1    =    x2;    x2    =    x0;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
121	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  else  {  setResult(x1,  i);  return  result;  }	  x1    =    x2;    x2    =    x0;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
122	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y2  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    y0    =    x1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
123	[BUG]  [BUGGY]  x1  =  x0;  y0  =  y1;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  y0  =  y1;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  y0  =  y1;  y1  =  y2;	  x1    =    x1;    x2    =    x0;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
124	[BUG]  [BUGGY]  setResult(x2,  i  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x2,  i  -  1);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x2,  i  -  1);	  setResult(x2,    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
125	[BUG]  [BUGGY]  if(Math.abs(x1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(x1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(x1)  <  =  functionValueAccuracy)  {  setResult(x0,  i);  return  result;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    y0    =    x1;    y1    =    y2;    y1    =    y0;    }    else    {    setResult(x1,    i);    return    result;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
126	[BUG]  [BUGGY]  x1  =  x0;  x1  =  x1;  y1  =  y1;  y1  =  y0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x1  =  x1;  y1  =  y1;  y1  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x1  =  x1;  y1  =  y1;  y1  =  y0;	  x1    =    x0;    x1    =    x1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
127	[BUG]  [BUGGY]  x1  =  x1;  x2  =  x0;  y0  =  y0;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x1;  x2  =  x0;  y0  =  y0;  y1  =  y2;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x1;  x2  =  x0;  y0  =  y0;  y1  =  y2;  y2  =  y0;	  x1    =    x0;    x2    =    x1;    y0    =    y0;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
128	[BUG]  [BUGGY]  x2  =  x0;  y0  =  y1;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x2  =  x0;  y0  =  y1;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x2  =  x0;  y0  =  y1;  y1  =  y2;	  x1    =    x2;    x2    =    x0;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
129	[BUG]  [BUGGY]  setResult(x2,  i  +  1,  y1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x2,  i  +  1,  y1);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x2,  i  +  1,  y1);	  setResult(x2,    i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
130	[BUG]  [BUGGY]  double  x1  =  x0;  x1  =  x1;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  x1  =  x0;  x1  =  x1;  y1  =  y2;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	double  x1  =  x0;  x1  =  x1;  y1  =  y2;  y2  =  y0;	  x1    =    x0;    x1    =    x1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
131	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    else    {    setResult(x1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
132	[BUG]  [BUGGY]  if(Math.abs(x1)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(x1)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(x1)  <  =  functionValueAccuracy)  {  setResult(x1,  i);  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    else    {    setResult(x1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
133	[BUG]  [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	result  =  Math.max(relativeAccuracy  *  Math.abs(x1,  absoluteAccuracy));	  result    =    Math.max(relativeAccuracy    *    Math.abs(x),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
134	[BUG]  [BUGGY]  if(x1!=  x2)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(x1!=  x2)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(x1!=  x2)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  x1    =    x1;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
135	[BUG]  [BUGGY]  int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);	  int    i    =    Math.max(relativeAccuracy    *    Math.abs(x2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
136	[BUG]  [BUGGY]  x1  =  x0;  x2  =  x0;  y0  =  y1;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x0;  x2  =  x0;  y0  =  y1;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x0;  x2  =  x0;  y0  =  y1;  y2  =  y0;	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
137	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
138	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x0;  y0  =  y1;  y2  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
139	[BUG]  [BUGGY]  int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	int  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y2),  absoluteAccuracy);	  int    i    =    Math.max(relativeAccuracy    *    Math.abs(y2),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
140	[BUG]  [BUGGY]  x1  =  x1;  y0  =  x1;  y1  =  y2;  y2  =  y0;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x1;  y0  =  x1;  y1  =  y2;  y2  =  y0;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x1;  y0  =  x1;  y1  =  y2;  y2  =  y0;	  x1    =    x2;    y0    =    x1;    y1    =    y2;    y2    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
141	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    y0    =    x1;    y1    =    y2;    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
142	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  x1);  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  x1);  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  setResult(x0,  x1);  y0  =  x1;  y1  =  y2;  y1  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    y0    =    x1;    y1    =    y2;    y1    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
143	[BUG]  [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x1  =  x0;  y0  =  y1;  y1  =  y2;  y0  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x1  =  x0;  y0  =  y1;  y1  =  y2;  y0  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y1)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x1  =  x0;  y0  =  y1;  y1  =  y2;  y0  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    double    x0    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
144	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  double  x0  =  x0;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    double    x0    =    x0;    x2    =    x0;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
145	[BUG]  [BUGGY]  if(x1!=  x2)  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(x1!=  x2)  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(x1!=  x2)  {  x1  =  x2;  y0  =  x1;  y1  =  y2;  y1  =  y0;  }	  x1    =    x2;    y0    =    x1;    y1    =    y2;    y1    =    y0;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
146	[BUG]  [BUGGY]  setResult(x1,  i  *  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  setResult(x1,  i  *  2);  [BUGGY]      return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	setResult(x1,  i  *  2);	  setResult(x1,    i    +    2);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
147	[BUG]  [BUGGY]  x1  =  x2;  x2  =  x1;  y0  =  y1;  y1  =  y2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  x1  =  x2;  x2  =  x1;  y0  =  y1;  y1  =  y2;  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	x1  =  x2;  x2  =  x1;  y0  =  y1;  y1  =  y2;	  x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
148	[BUG]  [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  double  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	double  i  =  Math.max(relativeAccuracy  *  Math.abs(x1,  y1),  absoluteAccuracy);	  double    i    =    Math.max(relativeAccuracy    *    Math.abs(x1),    absoluteAccuracy);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
149	[BUG]  [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      x1  =  x2;  x2  =  x0;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  if  (Math.abs(y1)  <=  functionValueAccuracy)  {          [BUGGY]  if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }  [BUGGY]      setResult(x1,  i);  return  result;  }  double  dx  =  x2  -  x1;  double  tolerance  =  Math.max(relativeAccuracy  *  Math.abs(x1),  absoluteAccuracy);  if  (Math.abs(dx)  <=  tolerance)  {  setResult(x1,  i);  return  result;  }  if  ((Math.abs(oldDelta)  <  tolerance)  ||  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  double  x0  double  y0  double  x1  double  y1  double  x2  double  y2  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  delta  dx  oldDelta  p  p1  r1  r2  r3  tolerance  x0  x1  x2  y0  y1  y2  int  i  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	0.5773502691896258	247	247	1	replace	if(Math.abs(y2)  <  =  functionValueAccuracy)  {  x1  =  x0;  x2  =  x1;  y0  =  y1;  y1  =  y2;  y2  =  y0;  }	  if(Math.abs(y1)    <    =    functionValueAccuracy)    {    x1    =    x0;    x2    =    x1;    y0    =    y1;    y1    =    y2;    y2    =    y0;    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
