bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    max;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    max;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
3	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    max;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
4	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);  ret  =  max;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);  ret  =  max;  }  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);  ret  =  max;  }	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    max;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
5	[BUG]  [BUGGY]  if(Math.abs(sign)  <  =  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,  max  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(sign)  <  =  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,  max  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(sign)  <  =  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,  max	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    min;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    max    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  if(Math.abs(sign)  <  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,  max  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(sign)  <  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,  max  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(sign)  <  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,  max	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    min;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    max    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,  max  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,  max  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,  max	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    min;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    max    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  ret  =  solve(f,  min,  max,  yMin,  sign);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  max,  yMin,  sign);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  max,  yMin,  sign);	      ret    =    solve(f,    min,    max,    yMin,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  ret  =  solve(f,  sign,  max,  yMin,  yMax);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  sign,  max,  yMin,  yMax);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  sign,  max,  yMin,  yMax);	      ret    =    solve(f,    min,    max,    yMin,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  ret  =  solve(f,  min,  max,  yMax,  sign);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  max,  yMax,  sign);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  max,  yMax,  sign);	      ret    =    solve(f,    min,    max,    yMin,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  ret  =  solve(f,  min,  yMin,  max,  yMax,  sign,  yMin);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  yMin,  max,  yMax,  sign,  yMin);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  yMin,  max,  yMax,  sign,  yMin);	      ret    =    solve(f,    min,    yMin,    max,    yMax,    min,    yMin);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  ret  =  solve(f,  sign,  yMin,  max,  yMax,  min,  yMin);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  sign,  yMin,  max,  yMax,  min,  yMin);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  sign,  yMin,  max,  yMax,  min,  yMin);	      ret    =    solve(f,    min,    yMin,    max,    yMax,    min,    yMin);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
13	[BUG]  [BUGGY]  ret  =  solve(f,  sign,  yMin,  max,  yMax);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  sign,  yMin,  max,  yMax);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  sign,  yMin,  max,  yMax);	      ret    =    solve(f,    min,    yMin,    max,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  ret  =  solve(f,  min,  yMin,  max,  sign,  yMax);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  yMin,  max,  sign,  yMax);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  yMin,  max,  sign,  yMax);	      ret    =    solve(f,    min,    yMin,    max,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  ret  =  solve(f,  min,  yMax,  max,  yMin);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  yMax,  max,  yMin);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  yMax,  max,  yMin);	      ret    =    solve(f,    min,    yMin,    max,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  if(Math.abs(sign)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(sign)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(sign)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    max;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    max,    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
17	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);  ret  =  min;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);  ret  =  min;  }  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);  ret  =  min;  }	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    min;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
18	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMin)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    min;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
19	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    min;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
20	[BUG]  [BUGGY]  if(Math.abs(min)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(min)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(min)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    min;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
21	[BUG]  [BUGGY]  ret  =  sign  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  sign  +  1;  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  sign  +  1;	  ret    =    sign;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  ret  =  sign  *  yMax;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  sign  *  yMax;  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  sign  *  yMax;	  ret    =    sign;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  ret  =  min  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  min  +  1;  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  min  +  1;	  ret    =    min;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    max;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    max;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    max;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
27	[BUG]  [BUGGY]  ret  =  solve(f,  min,  yMin,  max,  sign);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  yMin,  max,  sign);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  yMin,  max,  sign);	      ret    =    solve(f,    min,    yMin,    max);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  ret  =  solve(f,  sign,  yMin,  max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  sign,  yMin,  max);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  sign,  yMin,  max);	      ret    =    solve(f,    min,    yMin,    max);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  ret  =  solve(f,  min,  yMax,  yMin);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  yMax,  yMin);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  yMax,  yMin);	      ret    =    solve(f,    min,    yMin,    max);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  ret  =  solve(f,  min,  max,  yMin);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  max,  yMin);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  max,  yMin);	      ret    =    solve(f,    min,    yMin,    max);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  ret  =  solve(f,  min,  yMin,  max,  sign,  0,  yMax);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  yMin,  max,  sign,  0,  yMax);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  yMin,  max,  sign,  0,  yMax);	      ret    =    solve(f,    min,    yMin,    max,    0,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  ret  =  solve(f,  sign,  yMin,  max,  0,  yMax);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  sign,  yMin,  max,  0,  yMax);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  sign,  yMin,  max,  0,  yMax);	      ret    =    solve(f,    min,    yMin,    max,    0,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  ret  =  solve(f,  min,  max,  yMin,  0,  yMax);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  max,  yMin,  0,  yMax);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  max,  yMin,  0,  yMax);	      ret    =    solve(f,    min,    yMin,    max,    0,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  ret  =  solve(f,  min,  yMin,  max,  0,  sign);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  yMin,  max,  0,  sign);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  yMin,  max,  0,  sign);	      ret    =    solve(f,    min,    yMin,    max,    0,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  ret  =  Sign.NaN;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  Sign.NaN;  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  Sign.NaN;	  ret    =    Sign;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  ret  =  solve(f,  sign,  yMin,  min,  yMax);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  sign,  yMin,  min,  yMax);  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  sign,  yMin,  min,  yMax);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  if(Math.abs(sign)  <  =  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(sign)  <  =  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(sign)  <  =  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    min;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    max,    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  if(Math.abs(sign)  <  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(sign)  <  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(sign)  <  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    min;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    max,    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    min;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    max,    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    min;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
41	[BUG]  [BUGGY]  if(Math.abs(yMin)  <  =  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMin)  <  =  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMin)  <  =  Math.abs(yMax))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    min;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  ret  =  solve(f,  min,  max,  yMax,  min,  yMin);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  max,  yMax,  min,  yMin);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  max,  yMax,  min,  yMin);	      ret    =    solve(f,    min,    max,    yMin,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  ret  =  solve(f,  min,  max,  sign,  yMin,  yMax);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  max,  sign,  yMin,  yMax);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  max,  sign,  yMin,  yMax);	      ret    =    solve(f,    min,    max,    yMin,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  MutableMath.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  MutableMath.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	MutableMath.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  max;  }	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    max;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
45	[BUG]  [BUGGY]  setResult(min,  0);  ret  =  max;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  setResult(min,  0);  ret  =  max;  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	setResult(min,  0);  ret  =  max;	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    max;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
46	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    min;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
47	[BUG]  [BUGGY]  ret  =  solve(f,  min,  yMin,  max,  yMax,  sign);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  yMin,  max,  yMax,  sign);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  yMin,  max,  yMax,  sign);	      ret    =    solve(f,    min,    yMin,    max,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    max;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    max,    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
49	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  sign)  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    max;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
50	[BUG]  [BUGGY]  MutableMath.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  MutableMath.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	MutableMath.abs(yMax)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    min;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
51	[BUG]  [BUGGY]  setResult(min,  0);  ret  =  min;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  setResult(min,  0);  ret  =  min;  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	setResult(min,  0);  ret  =  min;	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    min;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
52	[BUG]  [BUGGY]  ret  =  solve(f,  min,  yMax,  yMin,  yMin);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  yMax,  yMin,  yMin);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  yMax,  yMin,  yMin);	      ret    =    solve(f,    min,    yMin,    max);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
53	[BUG]  [BUGGY]  ret  =  solve(f,  min,  yMax,  yMin,  max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  yMax,  yMin,  max);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  yMax,  yMin,  max);	      ret    =    solve(f,    min,    yMin,    max);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
54	[BUG]  [BUGGY]  ret  =  solve(f,  min,  yMax,  max,  yMin,  yMin);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  yMax,  max,  yMin,  yMin);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  yMax,  max,  yMin,  yMin);	      ret    =    solve(f,    min,    yMin,    max,    yMax,    min,    yMin);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    min;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    max,    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
56	[BUG]  [BUGGY]  ret  =  sign  +(int)Math.abs(yMax)/(int)Math.abs(yMin)*(int)Math.abs(yMax)*(int)Math.abs(yMin)*(int)Math.abs(  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  sign  +(int)Math.abs(yMax)/(int)Math.abs(yMin)*(int)Math.abs(yMax)*(int)Math.abs(yMin)*(int)Math.abs(  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  sign  +(int)Math.abs(yMax)/(int)Math.abs(yMin)*(int)Math.abs(yMax)*(int)Math.abs(yMin)*(int)Math.abs(	  ret    =    Sign;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
57	[BUG]  [BUGGY]  ret  =  sign  +(int)Math.abs(yMin)/(int)Math.abs(yMax));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  sign  +(int)Math.abs(yMin)/(int)Math.abs(yMax));  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  sign  +(int)Math.abs(yMin)/(int)Math.abs(yMax));	  ret    =    Sign;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
58	[BUG]  [BUGGY]  ret  =  sign  +(int)Math.abs(yMax)/(int)Math.abs(yMin));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  sign  +(int)Math.abs(yMax)/(int)Math.abs(yMin));  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  sign  +(int)Math.abs(yMax)/(int)Math.abs(yMin));	  ret    =    Sign;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
59	[BUG]  [BUGGY]  ret  =  solve(f,  min,  yMax,  yMin,  0,  yMax);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  yMax,  yMin,  0,  yMax);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  yMax,  yMin,  0,  yMax);	      ret    =    solve(f,    min,    yMin,    max,    0,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
60	[BUG]  [BUGGY]  ret  =  solve(f,  min,  yMax,  max,  0,  yMin);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  yMax,  max,  0,  yMin);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  yMax,  max,  0,  yMin);	      ret    =    solve(f,    min,    yMin,    max,    0,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
61	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  max;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  max;  }  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  max;  }	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    max;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
62	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    max;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
63	[BUG]  [BUGGY]  if(Math.abs(ret)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(ret)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(ret)  <  =  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }	      if(Math.abs(yMax)    <    =    functionValueAccuracy)    {    setResult(min,    0);    ret    =    min;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
64	[BUG]  [BUGGY]  ret  =  solve(f,  min,  yMax,  max,  yMin,  yMax);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  yMax,  max,  yMin,  yMax);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  yMax,  max,  yMin,  yMax);	      ret    =    solve(f,    min,    yMin,    max,    yMax,    min,    yMin);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
65	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    min;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    max    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
66	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  Math.abs(yMin))  {  setResult(min,  0);  ret  =  min;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(NON_BRACKETING_MESSAGE,  sign,	      if(Math.abs(yMin)    <    =    Math.abs(yMax))    {    setResult(min,    0);    ret    =    min;    }    else    {    throw    MathRuntimeException.createIllegalArgumentException(    NON_BRACKETING_MESSAGE,    min,    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMax))  {  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMax))  {  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  Math.abs(yMax))  {  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
68	[BUG]  [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMax))  {  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  if(Math.abs(yMax)  <  =  Math.abs(yMax))  {  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	if(Math.abs(yMax)  <  =  Math.abs(yMax))  {  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
69	[BUG]  [BUGGY]  ret  =  Sign.createInstance(f,  sign,  yMin,  yMax);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  Sign.createInstance(f,  sign,  yMin,  yMax);  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  Sign.createInstance(f,  sign,  yMin,  yMax);	  ret    =    Sign;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
70	[BUG]  [BUGGY]  ret  =  Sign.createInstance(f,  sign,  yMin,  max);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  Sign.createInstance(f,  sign,  yMin,  max);  [BUGGY]    }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  Sign.createInstance(f,  sign,  yMin,  max);	  ret    =    Sign;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  ret  =  solve(f,  min,  max,  yMax,  yMin,  yMax);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      double  sign  =  yMin  *  yMax;  if  (sign  >  0)  {  if  (Math.abs(yMin)  <=  functionValueAccuracy)  {  setResult(min,  0);  ret  =  min;  }  else  if  (Math.abs(yMax)  <=  functionValueAccuracy)  {  setResult(max,  0);    [BUGGY]  ret  =  solve(f,  min,  max,  yMax,  yMin,  yMax);  [BUGGY]    ret  =  max;  }  else  {  throw  MathRuntimeException.createIllegalArgumentException(  NON_BRACKETING_MESSAGE,  min,  max,  yMin,  yMax);  }  }  else  if  (sign  <  0){  ret  =  solve(f,  min,  yMin,  max,  yMax,  min,  yMin);  }  else  {  [CLASS]  BrentSolver  [METHOD]  solve  [RETURN_TYPE]  double  UnivariateRealFunction  f  final  double  min  final  double  max  [VARIABLES]  UnivariateRealFunction  f  String  NON_BRACKETING_MESSAGE  boolean  long  serialVersionUID  double  max  min  ret  sign  yMax  yMin  	projects/Math72/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	1.0	185	185	1	replace	ret  =  solve(f,  min,  max,  yMax,  yMin,  yMax);	      ret    =    solve(f,    min,    max,    yMin,    yMax);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
