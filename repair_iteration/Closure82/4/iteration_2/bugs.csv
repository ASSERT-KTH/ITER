bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	add
2	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  if(autoboxObjType  ==  null  &&  autoboxObjType.isUnknownType())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  if(autoboxObjType  ==  null  &&  autoboxObjType.isUnknownType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    if(autoboxObjType  ==  null  &&  autoboxObjType.isUnknownType())  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	add
3	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  if(autoboxObjType  >=  null  &&  autoboxObjType.isUnknownType())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  if(autoboxObjType  >=  null  &&  autoboxObjType.isUnknownType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    if(autoboxObjType  >=  null  &&  autoboxObjType.isUnknownType())  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	add
4	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  if(autoboxObjType  >>  null  &&  autoboxObjType.isUnknownType())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  if(autoboxObjType  >>  null  &&  autoboxObjType.isUnknownType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    if(autoboxObjType  >>  null  &&  autoboxObjType.isUnknownType())  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	add
5	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  If(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  If(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    If(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {	  timeout    	non-compiled	[CE]  ';'  expected	13	None	add
6	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  if(AutoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  if(AutoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    if(AutoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	add
7	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName(propertyName)||  autoboxObjType.hasPropertyName(propertyName))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName(propertyName)||  autoboxObjType.hasPropertyName(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName(propertyName)||  autoboxObjType.hasPropertyName(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName(propertyName))    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
8	[BUG]  [BUGGY]  if(propertyName!=  null  &&  autoboxObjType.hasPropertyName(propertyName))  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(propertyName!=  null  &&  autoboxObjType.hasPropertyName(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(propertyName!=  null  &&  autoboxObjType.hasPropertyName(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName(propertyName))    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
9	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.hasPropertyName(propertyName))  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.hasPropertyName(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  &&  autoboxObjType.hasPropertyName(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName(propertyName))    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
10	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName(propertyName)||  autoboxObjType.hasPropertyType(propertyName))  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName(propertyName)||  autoboxObjType.hasPropertyType(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName(propertyName)||  autoboxObjType.hasPropertyType(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName(propertyName))    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
11	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  propertyName.hasPropertyName(autoboxObjType))  {  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  propertyName.hasPropertyName(autoboxObjType))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  propertyName.hasPropertyName(autoboxObjType))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName(propertyName))    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
12	[BUG]  [BUGGY]  if(autoboxObjType  ==  null)  {  if(autoboxObjType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null)  {  if(autoboxObjType  ==  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType    ==    null)    {    if(autoboxObjType  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
13	[BUG]  [BUGGY]  if(autoboxObjType  ==  null)  {  if(autoboxObjType!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null)  {  if(autoboxObjType!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType    ==    null)    {    if(autoboxObjType!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
14	[BUG]  [BUGGY]  if(autoboxObjType  ==  null)  {  if(autoboxObjType  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null)  {  if(autoboxObjType  >=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType    ==    null)    {    if(autoboxObjType  >=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
15	[BUG]  [BUGGY]  if(autoboxObjType  ==  null)  {  if(AutoboxObjType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null)  {  if(AutoboxObjType  ==  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType    ==    null)    {    if(AutoboxObjType  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
16	[BUG]  [BUGGY]  if(autoboxObjType  ==  null)  {  If(autoboxObjType  ==  null)  {  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null)  {  If(autoboxObjType  ==  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType    ==    null)    {    If(autoboxObjType  ==  null)  {	  timeout    	non-compiled	[CE]  ';'  expected	1	None	add
17	[BUG]  [BUGGY]  if(autoboxObjType  ==  null)  {  if(autoboxObjType  >>  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null)  {  if(autoboxObjType  >>  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType    ==    null)    {    if(autoboxObjType  >>  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
18	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isPropertyType()  ||  autoboxObjType.isPropertyType())  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isPropertyType()  ||  autoboxObjType.isPropertyType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.isPropertyType()  ||  autoboxObjType.isPropertyType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isPropertyType())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
19	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.isPropertyType())  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.isPropertyType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  &&  autoboxObjType.isPropertyType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isPropertyType())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
20	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyType(propertyName))  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyType(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyType(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isPropertyType())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
21	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType().isPropertyType())  {  [CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType().isPropertyType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType().isPropertyType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isPropertyType())    {    	non-compiled	[CE]  method  getPropertyType  in  class  ObjectType  cannot  be  applied  to  given  types;	4	None	replace
22	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.equals(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType!=  null  &&  autoboxObjType.equals(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isPropertyType())    {    	compilable	timeout	4	1	replace
23	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.equals(propertyName))  {  timeout  [FE]                    AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.equals(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.equals(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isPropertyType())    {    	compilable	timeout	4	1	replace
24	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.hasPropertyName(propertyName))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.hasPropertyName(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  ||  autoboxObjType.hasPropertyName(propertyName))  {	  if(autoboxObjType    ==    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
25	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyName().equals(propertyName))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyName().equals(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyName().equals(propertyName))  {	  if(autoboxObjType    ==    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
26	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.isPropertyType())  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.isPropertyType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  ||  autoboxObjType.isPropertyType())  {	  if(autoboxObjType    ==    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
27	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.getPropertyType(propertyName)!=    null)    {    if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	15	None	add
28	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType  ==  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType  ==  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.getPropertyType(propertyName)!=    null)    {    if(autoboxObjType  ==  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	15	None	add
29	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)  ==  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.getPropertyType(propertyName)!=    null)    {    if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	15	None	add
30	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType  >=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType  >=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.getPropertyType(propertyName)!=    null)    {    if(autoboxObjType  >=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	15	None	add
31	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)  >=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.getPropertyType(propertyName)!=    null)    {    if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)  >=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	15	None	add
32	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)  ==  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)  ==  null)  {	  if(autoboxObjType!=    null    &&    autoboxObjType.getPropertyType(propertyName)!=    null)    {    timeout    	compilable	timeout	16	1	replace
33	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)  ==  null)  {  timeout  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)  ==  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)  ==  null)  {	  if(autoboxObjType!=    null    &&    autoboxObjType.getPropertyType(propertyName)!=    null)    {    timeout    	compilable	timeout	16	1	replace
34	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType  ==  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {	  if(autoboxObjType!=    null    &&    autoboxObjType.getPropertyType(propertyName)!=    null)    {    timeout    	compilable	timeout	16	1	replace
35	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  timeout  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {	  if(autoboxObjType!=    null    &&    autoboxObjType.getPropertyType(propertyName)!=    null)    {    timeout    	compilable	timeout	16	1	replace
36	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.findPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType!=  null  &&  autoboxObjType.findPropertyType(propertyName)!=  null)  {	  if(autoboxObjType!=    null    &&    autoboxObjType.getPropertyType(propertyName)!=    null)    {    timeout    	compilable	timeout	16	1	replace
37	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.findPropertyType(propertyName)!=  null)  {  timeout  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.findPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.findPropertyType(propertyName)!=  null)  {	  if(autoboxObjType!=    null    &&    autoboxObjType.getPropertyType(propertyName)!=    null)    {    timeout    	compilable	timeout	16	1	replace
38	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)  >=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyType(propertyName)  >=  null)  {	  if(autoboxObjType!=    null    &&    autoboxObjType.getPropertyType(propertyName)!=    null)    {    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	16	None	replace
39	[BUG]  [BUGGY]  JSType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  JSType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	JSType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
40	[BUG]  [BUGGY]  JSType  autoboxObjType  =  autoboxObjType.findPropertyType(propertyName);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  JSType  autoboxObjType  =  autoboxObjType.findPropertyType(propertyName);  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	JSType  autoboxObjType  =  autoboxObjType.findPropertyType(propertyName);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
41	[BUG]  [BUGGY]  JSType  autoboxObjType  =  autoboxObjType.getPropertyType(propertyName);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  JSType  autoboxObjType  =  autoboxObjType.getPropertyType(propertyName);  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	JSType  autoboxObjType  =  autoboxObjType.getPropertyType(propertyName);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.findPropertyType(propertyName);  if(autoboxObjType!=  null)  {  return  autoboxObjType;  }  [CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)  [FE]                        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.findPropertyType(propertyName);  if(autoboxObjType!=  null)  {  return  autoboxObjType;  }  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.findPropertyType(propertyName);  if(autoboxObjType!=  null)  {  return  autoboxObjType;  }	      	non-compiled	[CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)	7	None	replace
43	[BUG]  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.findPropertyType(propertyName);  if(autoboxObjType!=  null)  {  return  null;  }  [CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)  [FE]                            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.findPropertyType(propertyName);  if(autoboxObjType!=  null)  {  return  null;  }  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.findPropertyType(propertyName);  if(autoboxObjType!=  null)  {  return  null;  }	      	non-compiled	[CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)	7	None	replace
45	[BUG]  [BUGGY]  if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.findPropertyType(propertyName);  if(autoboxObjType  ==  null)  {  return  null;  }  [CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)  [FE]                              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.findPropertyType(propertyName);  if(autoboxObjType  ==  null)  {  return  null;  }  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.findPropertyType(propertyName);  if(autoboxObjType  ==  null)  {  return  null;  }	      	non-compiled	[CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)	7	None	replace
46	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.hasPropertyType(propertyName))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.hasPropertyType(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  &&  autoboxObjType.hasPropertyType(propertyName))  {	  if(autoboxObjType!=    null    ||    autoboxObjType.hasPropertyType(propertyName))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
47	[BUG]  [BUGGY]  if(propertyName!=  null  ||  autoboxObjType.hasPropertyType(propertyName))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(propertyName!=  null  ||  autoboxObjType.hasPropertyType(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(propertyName!=  null  ||  autoboxObjType.hasPropertyType(propertyName))  {	  if(autoboxObjType!=    null    ||    autoboxObjType.hasPropertyType(propertyName))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
48	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.hasPropertyType(propertyName))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.hasPropertyType(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  ||  autoboxObjType.hasPropertyType(propertyName))  {	  if(autoboxObjType!=    null    ||    autoboxObjType.hasPropertyType(propertyName))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
49	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.hasPropertyType(propertyName)&&  autoboxObjType.hasPropertyType(propertyName))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.hasPropertyType(propertyName)&&  autoboxObjType.hasPropertyType(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  ||  autoboxObjType.hasPropertyType(propertyName)&&  autoboxObjType.hasPropertyType(propertyName))  {	  if(autoboxObjType!=    null    ||    autoboxObjType.hasPropertyType(propertyName))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
50	[BUG]  [BUGGY]  if(propertyName!=  null  ||  autoboxObjType.isPropertyType())  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(propertyName!=  null  ||  autoboxObjType.isPropertyType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(propertyName!=  null  ||  autoboxObjType.isPropertyType())  {	  if(autoboxObjType!=    null    ||    autoboxObjType.isPropertyType())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
51	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName)||  autoboxObjType.hasPropertyType(propertyName))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName)||  autoboxObjType.hasPropertyType(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName)||  autoboxObjType.hasPropertyType(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    timeout    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
52	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.hasProperty(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType!=  null  ||  autoboxObjType.hasProperty(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    timeout    	compilable	timeout	12	1	replace
53	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.hasProperty(propertyName))  {  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.hasProperty(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  ||  autoboxObjType.hasProperty(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    timeout    	compilable	timeout	12	1	replace
54	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.hasPropertyName())  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.hasPropertyName())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  &&  autoboxObjType.hasPropertyName())  {	  if(autoboxObjType!=    null    ||    autoboxObjType.hasPropertyName())    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
55	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.hasPropertyName())  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.hasPropertyName())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  ||  autoboxObjType.hasPropertyName())  {	  if(autoboxObjType!=    null    ||    autoboxObjType.hasPropertyName())    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
56	[BUG]  [BUGGY]  if(propertyName!=  null  ||  autoboxObjType.hasPropertyName())  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(propertyName!=  null  ||  autoboxObjType.hasPropertyName())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(propertyName!=  null  ||  autoboxObjType.hasPropertyName())  {	  if(autoboxObjType!=    null    ||    autoboxObjType.hasPropertyName())    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
57	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.isPropertyName())  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.isPropertyName())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  ||  autoboxObjType.isPropertyName())  {	  if(autoboxObjType!=    null    ||    autoboxObjType.hasPropertyName())    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
58	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.isContainerType())  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.isContainerType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  &&  autoboxObjType.isContainerType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isContainerType())    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
59	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isConstructorType())  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isConstructorType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.isConstructorType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isContainerType())    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
60	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.isContainerType())  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.isContainerType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  ||  autoboxObjType.isContainerType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isContainerType())    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
61	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  ||  autoboxObjType.hasPropertyName())  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  ||  autoboxObjType.hasPropertyName())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  ||  autoboxObjType.hasPropertyName())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName())    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
62	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  ||  propertyName.equals(autoboxObjType.propertyName))  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  ||  propertyName.equals(autoboxObjType.propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  ||  propertyName.equals(autoboxObjType.propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName())    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
63	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  &&  propertyName.equals(autoboxObjType.propertyName))  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  &&  propertyName.equals(autoboxObjType.propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  &&  propertyName.equals(autoboxObjType.propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName())    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
64	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyName().equals(propertyName))  {  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyName().equals(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyName().equals(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName())    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
65	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  &&  propertyName.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  &&  propertyName.length()  >  0)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  &&  propertyName.length()  >  0)  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName())    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
66	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType  ==  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {	  if(autoboxObjType!=    null    ||    autoboxObjType.getPropertyType(propertyName)!=    null)    {    timeout    	compilable	timeout	10	1	replace
67	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {	  if(autoboxObjType!=    null    ||    autoboxObjType.getPropertyType(propertyName)!=    null)    {    timeout    	compilable	timeout	10	1	replace
68	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)  ==  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)  ==  null)  {	  if(autoboxObjType!=    null    ||    autoboxObjType.getPropertyType(propertyName)!=    null)    {    timeout    	compilable	timeout	10	1	replace
69	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)  ==  null)  {  timeout  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)  ==  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)  ==  null)  {	  if(autoboxObjType!=    null    ||    autoboxObjType.getPropertyType(propertyName)!=    null)    {    timeout    	compilable	timeout	10	1	replace
70	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.isUnknownType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType!=  null  ||  autoboxObjType.isUnknownType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	compilable	timeout	14	1	replace
71	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.isUnknownType())  {  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.isUnknownType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  ||  autoboxObjType.isUnknownType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	compilable	timeout	14	1	replace
72	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.isUnknownType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType  ==  null  &&  autoboxObjType.isUnknownType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	compilable	timeout	14	1	replace
73	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.isUnknownType())  {  timeout  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.isUnknownType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  &&  autoboxObjType.isUnknownType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	compilable	timeout	14	1	replace
74	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isInterface())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType!=  null  &&  autoboxObjType.isInterface())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	compilable	timeout	14	1	replace
75	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isInterface())  {  timeout  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isInterface())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.isInterface())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	compilable	timeout	14	1	replace
76	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isConstructor())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType!=  null  &&  autoboxObjType.isConstructor())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	compilable	timeout	14	1	replace
77	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isConstructor())  {  timeout  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isConstructor())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.isConstructor())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	compilable	timeout	14	1	replace
78	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType()  ||  autoboxObjType.isPropertyType())  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType()  ||  autoboxObjType.isPropertyType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType()  ||  autoboxObjType.isPropertyType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
79	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    ||    autoboxObjType.getPropertyType(propertyName)!=    null)    {    if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
80	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType  ==  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType  ==  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    ||    autoboxObjType.getPropertyType(propertyName)!=    null)    {    if(autoboxObjType  ==  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
81	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)  ==  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    ||    autoboxObjType.getPropertyType(propertyName)!=    null)    {    if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
82	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType  >=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType  >=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    ||    autoboxObjType.getPropertyType(propertyName)!=    null)    {    if(autoboxObjType  >=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
83	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)  >=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    ||    autoboxObjType.getPropertyType(propertyName)!=    null)    {    if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)  >=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
84	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType  >>  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(autoboxObjType  >>  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    ||    autoboxObjType.getPropertyType(propertyName)!=    null)    {    if(autoboxObjType  >>  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
85	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	11	None	add
86	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  if(autoboxObjType  ==  null  &&  autoboxObjType.hasProperty(propertyName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  if(autoboxObjType  ==  null  &&  autoboxObjType.hasProperty(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    if(autoboxObjType  ==  null  &&  autoboxObjType.hasProperty(propertyName))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	11	None	add
87	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  if(autoboxObjType  >=  null  &&  autoboxObjType.hasProperty(propertyName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  if(autoboxObjType  >=  null  &&  autoboxObjType.hasProperty(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    if(autoboxObjType  >=  null  &&  autoboxObjType.hasProperty(propertyName))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	11	None	add
88	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  If(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  If(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    If(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {	  timeout    	non-compiled	[CE]  ';'  expected	11	None	add
89	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  if(autoboxObjType  >>  null  &&  autoboxObjType.hasProperty(propertyName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  if(autoboxObjType  >>  null  &&  autoboxObjType.hasProperty(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    if(autoboxObjType  >>  null  &&  autoboxObjType.hasProperty(propertyName))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	11	None	add
90	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyType())  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isPropertyType())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
91	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.canPropertyType())  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.canPropertyType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.canPropertyType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isPropertyType())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
92	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.equals(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType!=  null  ||  autoboxObjType.equals(propertyName))  {	  if(autoboxObjType!=    null    ||    autoboxObjType.isPropertyType())    {    	compilable	timeout	3	1	replace
93	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.equals(propertyName))  {  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.equals(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  ||  autoboxObjType.equals(propertyName))  {	  if(autoboxObjType!=    null    ||    autoboxObjType.isPropertyType())    {    	compilable	timeout	3	1	replace
94	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.hasPropertyType())  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.hasPropertyType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  ||  autoboxObjType.hasPropertyType())  {	  if(autoboxObjType!=    null    ||    autoboxObjType.isPropertyType())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
95	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getRequiredPropertyType(propertyName)!=  null)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getRequiredPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.getRequiredPropertyType(propertyName)!=  null)  {	  if(autoboxObjType!=    null    &&    autoboxObjType.getPropertyType(propertyName)!=    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
96	[BUG]  [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(AutoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  if(AutoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    ||    autoboxObjType.getPropertyType(propertyName)!=    null)    {    if(AutoboxObjType!=  null  ||  autoboxObjType.getPropertyType(propertyName)!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
97	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  AutoboxObjType.hasPropertyName(propertyName))  {  [CE]  cannot  find  symbol  AutoboxObjType  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  AutoboxObjType.hasPropertyName(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  AutoboxObjType.hasPropertyName(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName(propertyName))    {    	non-compiled	[CE]  cannot  find  symbol  AutoboxObjType	17	None	replace
98	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName(propertyName))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName))  {  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName(propertyName))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	11	None	add
99	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  if(autoboxObjType!=  null  &&  autoboxObjType.hasUnknownType())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType())  {  if(autoboxObjType!=  null  &&  autoboxObjType.hasUnknownType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    if(autoboxObjType!=  null  &&  autoboxObjType.hasUnknownType())  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	add
100	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.hasProperty(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType  ==  null  &&  autoboxObjType.hasProperty(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    timeout    	compilable	timeout	12	1	replace
101	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.hasProperty(propertyName))  {  timeout  [FE]        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  &&  autoboxObjType.hasProperty(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  &&  autoboxObjType.hasProperty(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    timeout    	compilable	timeout	12	1	replace
102	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyType(propertyName)||  autoboxObjType.hasPropertyType(propertyName))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyType(propertyName)||  autoboxObjType.hasPropertyType(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyType(propertyName)||  autoboxObjType.hasPropertyType(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    timeout    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
103	[BUG]  [BUGGY]  if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());  if(autoboxObjType!=  null)  {  return  autoboxObjType;  }  [CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());  if(autoboxObjType!=  null)  {  return  autoboxObjType;  }  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());  if(autoboxObjType!=  null)  {  return  autoboxObjType;  }	      	non-compiled	[CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)	7	None	replace
104	[BUG]  [BUGGY]  if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.getPropertyType(propertyName);  if(autoboxObjType!=  null)  {  return  autoboxObjType;  }  [CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)  [FE]                    AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.getPropertyType(propertyName);  if(autoboxObjType!=  null)  {  return  autoboxObjType;  }  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.getPropertyType(propertyName);  if(autoboxObjType!=  null)  {  return  autoboxObjType;  }	      	non-compiled	[CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)	7	None	replace
105	[BUG]  [BUGGY]  if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());  if(autoboxObjType  ==  null)  {  return  autoboxObjType;  }  [CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)  [FE]                      AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());  if(autoboxObjType  ==  null)  {  return  autoboxObjType;  }  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null)  {  JSType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());  if(autoboxObjType  ==  null)  {  return  autoboxObjType;  }	      	non-compiled	[CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)	7	None	replace
106	[BUG]  [BUGGY]  if(propertyName!=  null  &&  autoboxObjType.hasPropertyName())  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(propertyName!=  null  &&  autoboxObjType.hasPropertyName())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(propertyName!=  null  &&  autoboxObjType.hasPropertyName())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName())    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
107	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  ||  propertyName.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  ||  propertyName.length()  ==  0)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.hasPropertyName()  ||  propertyName.length()  ==  0)  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName())    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
108	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyName().endsWith(propertyName))  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyName().endsWith(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyName().endsWith(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName())    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
109	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyName().length()  >  0)  {  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyName().length()  >  0)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.getPropertyName().length()  >  0)  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName())    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
110	[BUG]  [BUGGY]  if(autoboxObjType!=  null)  {  ObjectType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());  if(autoboxObjType!=  null)  {  return  autoboxObjType;  }  [CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)  [FE]                  AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null)  {  ObjectType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());  if(autoboxObjType!=  null)  {  return  autoboxObjType;  }  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null)  {  ObjectType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());  if(autoboxObjType!=  null)  {  return  autoboxObjType;  }	      	non-compiled	[CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)	7	None	replace
111	[BUG]  [BUGGY]  timeout  [FE]                    AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null)  {  if(autoboxObjType.hasProperty(propertyName))  {  return  autoboxObjType.findPropertyType(propertyName);  }  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType!=  null)  {  if(autoboxObjType.hasProperty(propertyName))  {  return  autoboxObjType.findPropertyType(propertyName);  }	      	compilable	timeout	7	1	replace
112	[BUG]  [BUGGY]  if(autoboxObjType!=  null)  {  if(autoboxObjType.hasProperty(propertyName))  {  return  autoboxObjType.findPropertyType(propertyName);  }  timeout  [FE]                    AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null)  {  if(autoboxObjType.hasProperty(propertyName))  {  return  autoboxObjType.findPropertyType(propertyName);  }  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null)  {  if(autoboxObjType.hasProperty(propertyName))  {  return  autoboxObjType.findPropertyType(propertyName);  }	      	compilable	timeout	7	1	replace
113	[BUG]  [BUGGY]  if(autoboxObjType!=  null)  {  ObjectType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());  if(autoboxObjType!=  null)  {  return  super.findPropertyType(propertyName);  }  [CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)  [FE]                      AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null)  {  ObjectType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());  if(autoboxObjType!=  null)  {  return  super.findPropertyType(propertyName);  }  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null)  {  ObjectType  autoboxObjType  =  autoboxObjType.cast(autoboxesTo());  if(autoboxObjType!=  null)  {  return  super.findPropertyType(propertyName);  }	      	non-compiled	[CE]  variable  autoboxObjType  is  already  defined  in  method  findPropertyType(String)	7	None	replace
114	[BUG]  [BUGGY]  if(autoboxObjType!=  null)  {  if(autoboxObjType.isUnknownType())  {  autoboxObjType.setPropertyName(propertyName);  }  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null)  {  if(autoboxObjType.isUnknownType())  {  autoboxObjType.setPropertyName(propertyName);  }  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null)  {  if(autoboxObjType.isUnknownType())  {  autoboxObjType.setPropertyName(propertyName);  }	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
115	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(propertyName!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(propertyName!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {	  if(autoboxObjType!=    null    ||    autoboxObjType.getPropertyType(propertyName)!=    null)    {    timeout    	compilable	timeout	10	1	replace
116	[BUG]  [BUGGY]  if(propertyName!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(propertyName!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(propertyName!=  null  &&  autoboxObjType.getPropertyType(propertyName)!=  null)  {	  if(autoboxObjType!=    null    ||    autoboxObjType.getPropertyType(propertyName)!=    null)    {    timeout    	compilable	timeout	10	1	replace
117	[BUG]  [BUGGY]  if(autoboxObjType  ==  null)  {  if(autoboxObjType  {  null)  {  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null)  {  if(autoboxObjType  {  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType    ==    null)    {    if(autoboxObjType  {  null)  {	  timeout    	non-compiled	[CE]  ')'  expected	1	None	add
118	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName)||  autoboxObjType.hasProperty(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName)||  autoboxObjType.hasProperty(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    timeout    	compilable	timeout	12	1	replace
119	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName)||  autoboxObjType.hasProperty(propertyName))  {  timeout  [FE]        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName)||  autoboxObjType.hasProperty(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName)||  autoboxObjType.hasProperty(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    timeout    	compilable	timeout	12	1	replace
120	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName)&&  autoboxObjType.hasPropertyType(propertyName))  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName)&&  autoboxObjType.hasPropertyType(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName)&&  autoboxObjType.hasPropertyType(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    timeout    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
121	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName)||  super.findPropertyType(propertyName))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName)||  super.findPropertyType(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.hasProperty(propertyName)||  super.findPropertyType(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasProperty(propertyName))    {    timeout    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
122	[BUG]  [BUGGY]  if(this.autoboxObjType!=  null  ||  autoboxObjType.isPropertyType())  {  [CE]  cannot  find  symbol  autoboxObjType  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(this.autoboxObjType!=  null  ||  autoboxObjType.isPropertyType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(this.autoboxObjType!=  null  ||  autoboxObjType.isPropertyType())  {	  if(autoboxObjType!=    null    ||    autoboxObjType.isPropertyType())    {    	non-compiled	[CE]  cannot  find  symbol  autoboxObjType	3	None	replace
123	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType()  ||  autoboxObjType.isInterface())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType()  ||  autoboxObjType.isInterface())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	compilable	timeout	14	1	replace
124	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType()  ||  autoboxObjType.isInterface())  {  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType()  ||  autoboxObjType.isInterface())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType()  ||  autoboxObjType.isInterface())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	compilable	timeout	14	1	replace
125	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType()  &&  propertyName.equals( "prototype "))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType()  &&  propertyName.equals( "prototype "))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	compilable	timeout	14	1	replace
126	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType()  &&  propertyName.equals( "prototype "))  {  timeout  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType()  &&  propertyName.equals( "prototype "))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.isUnknownType()  &&  propertyName.equals( "prototype "))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	compilable	timeout	14	1	replace
127	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isAllType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType!=  null  &&  autoboxObjType.isAllType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	compilable	timeout	14	1	replace
128	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isAllType())  {  timeout  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isAllType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.isAllType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isUnknownType())    {    timeout    	compilable	timeout	14	1	replace
129	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  this.autoboxObjType.isContainerType())  {  [CE]  cannot  find  symbol  autoboxObjType  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  this.autoboxObjType.isContainerType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  this.autoboxObjType.isContainerType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isContainerType())    {    	non-compiled	[CE]  cannot  find  symbol  autoboxObjType	18	None	replace
130	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  this.autoboxObjType.isPropertyType())  {  [CE]  cannot  find  symbol  autoboxObjType  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  this.autoboxObjType.isPropertyType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  this.autoboxObjType.isPropertyType())  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isPropertyType())    {    	non-compiled	[CE]  cannot  find  symbol  autoboxObjType	4	None	replace
131	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isPropertyType()  ||  propertyName.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isPropertyType()  ||  propertyName.length()  ==  0)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.isPropertyType()  ||  propertyName.length()  ==  0)  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isPropertyType())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
132	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isPropertyType()  ||  propertyName.equals( "property "))  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.isPropertyType()  ||  propertyName.equals( "property "))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.isPropertyType()  ||  propertyName.equals( "property "))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.isPropertyType())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
133	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  AUTOBOXObjType.hasPropertyType(propertyName))  {  [CE]  cannot  find  symbol  AUTOBOXObjType  [FE]        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  AUTOBOXObjType.hasPropertyType(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  AUTOBOXObjType.hasPropertyType(propertyName))  {	  if(autoboxObjType!=    null    ||    autoboxObjType.hasPropertyType(propertyName))    {    	non-compiled	[CE]  cannot  find  symbol  AUTOBOXObjType	8	None	replace
134	[BUG]  [BUGGY]  if(this.autoboxObjType!=  null  ||  autoboxObjType.hasPropertyType(propertyName))  {  [CE]  cannot  find  symbol  autoboxObjType  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(this.autoboxObjType!=  null  ||  autoboxObjType.hasPropertyType(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(this.autoboxObjType!=  null  ||  autoboxObjType.hasPropertyType(propertyName))  {	  if(autoboxObjType!=    null    ||    autoboxObjType.hasPropertyType(propertyName))    {    	non-compiled	[CE]  cannot  find  symbol  autoboxObjType	8	None	replace
135	[BUG]  [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.findPropertyType(propertyName))  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType!=  null  &&  autoboxObjType.findPropertyType(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType!=  null  &&  autoboxObjType.findPropertyType(propertyName))  {	  if(autoboxObjType!=    null    &&    autoboxObjType.hasPropertyName(propertyName))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	17	None	replace
136	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.hasProperty(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType  ==  null  ||  autoboxObjType.hasProperty(propertyName))  {	  if(autoboxObjType    ==    null)    {    timeout    	compilable	timeout	2	1	replace
137	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.hasProperty(propertyName))  {  timeout  [FE]        AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.hasProperty(propertyName))  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  ||  autoboxObjType.hasProperty(propertyName))  {	  if(autoboxObjType    ==    null)    {    timeout    	compilable	timeout	2	1	replace
138	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.isUnknownType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType  ==  null  ||  autoboxObjType.isUnknownType())  {	  if(autoboxObjType    ==    null)    {    timeout    	compilable	timeout	2	1	replace
139	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.isUnknownType())  {  timeout  [FE]          AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.isUnknownType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  ||  autoboxObjType.isUnknownType())  {	  if(autoboxObjType    ==    null)    {    timeout    	compilable	timeout	2	1	replace
140	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.isContainerType())  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType.isContainerType())  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  ||  autoboxObjType.isContainerType())  {	  if(autoboxObjType    ==    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
141	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	add	if(autoboxObjType  ==  null  ||  autoboxObjType!=  null)  {	  if(autoboxObjType    ==    null)    {    timeout    	compilable	timeout	2	1	replace
142	[BUG]  [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType!=  null)  {  timeout  [FE]              AssertionFailedError    [CONTEXT]    public  JSType  findPropertyType(String  propertyName)  {  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());    [BUGGY]  if(autoboxObjType  ==  null  ||  autoboxObjType!=  null)  {  [BUGGY]    return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	417	417	2	replace	if(autoboxObjType  ==  null  ||  autoboxObjType!=  null)  {	  if(autoboxObjType    ==    null)    {    timeout    	compilable	timeout	2	1	replace
