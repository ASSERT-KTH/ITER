bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(propertyName);  [CE]  method  cast  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(propertyName);  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	replace	ObjectType  autoboxObjType  =  ObjectType.cast(propertyName);	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	non-compiled	[CE]  method  cast  in  class  ObjectType  cannot  be  applied  to  given  types;	5	None	replace
2	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(this.autoboxesTo());  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	add	ObjectType  autoboxObjType  =  ObjectType.cast(this.autoboxesTo());	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	compilable	timeout	5	1	replace
3	[BUG]  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(this.autoboxesTo());  timeout  [FE]      AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(this.autoboxesTo());  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	replace	ObjectType  autoboxObjType  =  ObjectType.cast(this.autoboxesTo());	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	compilable	timeout	5	1	replace
4	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(findPropertyType(propertyName));  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	add	ObjectType  autoboxObjType  =  ObjectType.cast(findPropertyType(propertyName));	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	compilable	timeout	5	1	replace
5	[BUG]  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(findPropertyType(propertyName));  timeout  [FE]        AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(findPropertyType(propertyName));  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	replace	ObjectType  autoboxObjType  =  ObjectType.cast(findPropertyType(propertyName));	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	compilable	timeout	5	1	replace
6	[BUG]  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(super.findPropertyType(propertyName));  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(super.findPropertyType(propertyName));  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	replace	ObjectType  autoboxObjType  =  ObjectType.cast(super.findPropertyType(propertyName));	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
7	[BUG]  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(getPropertyName());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(getPropertyName());  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	replace	ObjectType  autoboxObjType  =  ObjectType.cast(getPropertyName());	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
8	[BUG]  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(this.autoboxTo());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(this.autoboxTo());  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	replace	ObjectType  autoboxObjType  =  ObjectType.cast(this.autoboxTo());	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
9	[BUG]  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo(),  propertyName);  [CE]  method  cast  in  class  ObjectType  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo(),  propertyName);  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	replace	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo(),  propertyName);	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	non-compiled	[CE]  method  cast  in  class  ObjectType  cannot  be  applied  to  given  types;	5	None	replace
10	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  autoboxObjType  [FE]                  AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]    [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	replace	  	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	non-compiled	[CE]  cannot  find  symbol  autoboxObjType	5	None	replace
11	[BUG]  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxTo(propertyName));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxTo(propertyName));  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	replace	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxTo(propertyName));	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
12	[BUG]  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxTo());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxTo());  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	replace	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxTo());	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
13	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  JSType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	add	JSType  autoboxObjType  =  ObjectType.cast(autoboxesTo());	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	compilable	timeout	5	1	replace
14	[BUG]  [BUGGY]  JSType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  timeout  [FE]        AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  JSType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	replace	JSType  autoboxObjType  =  ObjectType.cast(autoboxesTo());	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	compilable	timeout	5	1	replace
15	[BUG]  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(getPropertyType(propertyName));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(getPropertyType(propertyName));  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	replace	ObjectType  autoboxObjType  =  ObjectType.cast(getPropertyType(propertyName));	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
16	[BUG]  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxToProperty());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  JSType  findPropertyType(String  propertyName)  {  [BUGGY]  ObjectType  autoboxObjType  =  ObjectType.cast(autoboxToProperty());  [BUGGY]  if  (autoboxObjType  !=  null)  {  return  autoboxObjType.findPropertyType(propertyName);  }  return  null;  }  [CLASS]  JSType  1  TypePair  [METHOD]  findPropertyType  [RETURN_TYPE]  JSType  String  propertyName  [VARIABLES]  ObjectType  autoboxObjType  JSTypeRegistry  registry  boolean  resolved  JSType  jsType  resolveResult  t1  t2  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.18257418583505536	416	416	2	replace	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxToProperty());	ObjectType  autoboxObjType  =  ObjectType.cast(autoboxesTo());  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
