bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thisType.isUnionType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	add	}  else  if(thisType.isUnionType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
2	[BUG]  [BUGGY]  }  else  if(thisType.isUnionType())  {  timeout  [FE]    AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thisType.isUnionType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	}  else  if(thisType.isUnionType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
3	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isUnknownType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	add	}  else  if(thatType.isUnknownType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
4	[BUG]  [BUGGY]  }  else  if(thatType.isUnknownType())  {  timeout  [FE]      AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isUnknownType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	}  else  if(thatType.isUnknownType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
5	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thisType.isEquivalentTo(thatType))  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	add	}  else  if(thisType.isEquivalentTo(thatType))  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
6	[BUG]  [BUGGY]  }  else  if(thisType.isEquivalentTo(thatType))  {  timeout  [FE]        AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thisType.isEquivalentTo(thatType))  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	}  else  if(thisType.isEquivalentTo(thatType))  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
7	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thisType.isUnknownType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	add	}  else  if(thisType.isUnknownType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
8	[BUG]  [BUGGY]  }  else  if(thisType.isUnknownType())  {  timeout  [FE]          AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thisType.isUnknownType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	}  else  if(thisType.isUnknownType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
9	[BUG]  [BUGGY]  }  else  if(thatType.isEmpty())  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isEmpty())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	}  else  if(thatType.isEmpty())  {	}  else  if  (thatType.isUnionType())  {  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
10	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isUnknownType()  ||  thatType.isUnknownType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	add	}  else  if(thatType.isUnknownType()  ||  thatType.isUnknownType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
11	[BUG]  [BUGGY]  }  else  if(thatType.isUnknownType()  ||  thatType.isUnknownType())  {  timeout  [FE]              AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isUnknownType()  ||  thatType.isUnknownType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	}  else  if(thatType.isUnknownType()  ||  thatType.isUnknownType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
12	[BUG]  [BUGGY]  }  else  if(thisType.isUnion())  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thisType.isUnion())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	}  else  if(thisType.isUnion())  {	}  else  if  (thatType.isUnionType())  {  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
13	[BUG]  [BUGGY]    [CE]  unreachable  statement  [FE]                  AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]    [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	  	}  else  if  (thatType.isUnionType())  {  	non-compiled	[CE]  unreachable  statement	11	None	replace
14	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isEquivalentTo(thisType))  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	add	}  else  if(thatType.isEquivalentTo(thisType))  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
15	[BUG]  [BUGGY]  }  else  if(thatType.isEquivalentTo(thisType))  {  timeout  [FE]    AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isEquivalentTo(thisType))  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	}  else  if(thatType.isEquivalentTo(thisType))  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
16	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isEmptyType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	add	}  else  if(thatType.isEmptyType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
17	[BUG]  [BUGGY]  }  else  if(thatType.isEmptyType())  {  timeout  [FE]      AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isEmptyType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	}  else  if(thatType.isEmptyType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
18	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isObject())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	add	}  else  if(thatType.isObject())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
19	[BUG]  [BUGGY]  }  else  if(thatType.isObject())  {  timeout  [FE]        AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isObject())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	}  else  if(thatType.isObject())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
20	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isUnionType()  ||  thatType.isUnknownType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	add	}  else  if(thatType.isUnionType()  ||  thatType.isUnknownType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
21	[BUG]  [BUGGY]  }  else  if(thatType.isUnionType()  ||  thatType.isUnknownType())  {  timeout  [FE]    AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isUnionType()  ||  thatType.isUnknownType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	}  else  if(thatType.isUnionType()  ||  thatType.isUnknownType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
22	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isUnionType()  &&  thatType.isUnknownType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	add	}  else  if(thatType.isUnionType()  &&  thatType.isUnknownType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
23	[BUG]  [BUGGY]  }  else  if(thatType.isUnionType()  &&  thatType.isUnknownType())  {  timeout  [FE]      AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isUnionType()  &&  thatType.isUnknownType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	}  else  if(thatType.isUnionType()  &&  thatType.isUnknownType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
24	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isUnionType()  &&  thatType.isUnionType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	add	}  else  if(thatType.isUnionType()  &&  thatType.isUnionType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
25	[BUG]  [BUGGY]  }  else  if(thatType.isUnionType()  &&  thatType.isUnionType())  {  timeout  [FE]        AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isUnionType()  &&  thatType.isUnionType())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	}  else  if(thatType.isUnionType()  &&  thatType.isUnionType())  {	}  else  if  (thatType.isUnionType())  {  	compilable	timeout	11	1	replace
26	[BUG]  [BUGGY]  }  else  if(thatType.isUnionType()  &&  thatType.isEmpty())  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]    return  thisType.isEquivalentTo(thatType)  ?  thisType  :  thisType.getNativeType(JSTypeNative.UNKNOWN_TYPE);  }  else  if  (thisType.isSubtype(thatType))  {  return  filterNoResolvedType(thisType);  }  else  if  (thatType.isSubtype(thisType))  {  return  filterNoResolvedType(thatType);  }  else  if  (thisType.isUnionType())  {  return  ((UnionType)  thisType).meet(thatType);  [BUGGY]  }  else  if(thatType.isUnionType()  &&  thatType.isEmpty())  {  [BUGGY]  return  ((UnionType)  thatType).meet(thisType);  }  else  if  (thisType.isObject()  &&  thatType.isObject())  {  return  thisType.getNativeType(JSTypeNative.NO_OBJECT_TYPE);  }  return  thisType.getNativeType(JSTypeNative.NO_TYPE);  }  [CLASS]  JSType  1  TypePair  [METHOD]  getGreatestSubtype  [RETURN_TYPE]  JSType  JSType  thisType  JSType  thatType  [VARIABLES]  JSTypeRegistry  registry  boolean  aIsEmpty  areEquivalent  bIsEmpty  resolved  JSType  aType  autobox  bType  jsType  meet  otherType  resolveResult  restricted  t1  t2  that  thatType  thisType  typeA  typeB  String  EMPTY_TYPE_COMPONENT  NOT_A_CLASS  NOT_A_TYPE  UNKNOWN_NAME  displayName  propertyName  long  serialVersionUID  int  ENUMDECL  NOT_ENUMDECL  Comparator  ALPHA  	projects/Closure82/src/com/google/javascript/rhino/jstype/JSType.java	0.1543033499620919	643	643	2	replace	}  else  if(thatType.isUnionType()  &&  thatType.isEmpty())  {	}  else  if  (thatType.isUnionType())  {  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
