bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
24	[BUG] [BUGGY] double xA= x[signChangeIndex - 1]; [FE] TooManyEvaluationsException [CONTEXT] } else { throw new NoBracketingException(x[0], x[2], y[0], y[2]); } }  final double[] tmpX = new double[x.length];  [BUGGY] double xA= x[signChangeIndex - 1]; [BUGGY] double yA= y[signChangeIndex - 1]; double absYA = FastMath.abs(yA); int agingA = 0; double xB= x[signChangeIndex]; double yB= y[signChangeIndex]; double absYB = FastMath.abs(yB); int agingB = 0;  while (true) { [CLASS] BracketingNthOrderBrentSolver [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed boolean double[] tmpX x y double DEFAULT_ABSOLUTE_ACCURACY REDUCTION_FACTOR absYA absYB absoluteAccuracy functionValueAccuracy nextX nextY relativeAccuracy targetY xA xB xTol yA yB int DEFAULT_MAXIMAL_ORDER MAXIMAL_AGING agingA agingB end maximalOrder nbPoints signChangeIndex start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	198	198	1	replace	
25	[BUG] [BUGGY] [FE] TooManyEvaluationsException [CONTEXT] } else { throw new NoBracketingException(x[0], x[2], y[0], y[2]); } }  final double[] tmpX = new double[x.length];  [BUGGY] [BUGGY] double xA= x[signChangeIndex - 1]; double yA= y[signChangeIndex - 1]; double absYA = FastMath.abs(yA); int agingA = 0; double xB= x[signChangeIndex]; double yB= y[signChangeIndex]; double absYB = FastMath.abs(yB); int agingB = 0;  while (true) { [CLASS] BracketingNthOrderBrentSolver [METHOD] doSolve [RETURN_TYPE] double  [VARIABLES] AllowedSolution allowed boolean double[] tmpX x y double DEFAULT_ABSOLUTE_ACCURACY REDUCTION_FACTOR absYA absYB absoluteAccuracy functionValueAccuracy nextX nextY relativeAccuracy targetY xA xB xTol yA yB int DEFAULT_MAXIMAL_ORDER MAXIMAL_AGING agingA agingB end maximalOrder nbPoints signChangeIndex start  	projects/Math40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java	0.3333333333333333	198	198	1	add	
