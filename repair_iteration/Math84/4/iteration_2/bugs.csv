bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(1.0f);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.id  =  Double.doubleToLongBits(1.0f);  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(1.0f);	      this.id    =    Double.doubleToLongBits(1.0);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(this.id  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.id  =  Double.parseDouble(this.id  +  1);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(this.id  +  1);	  this.id    =    Double.parseDouble(this.id);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(this.id  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.id  =  Double.parseDouble(this.id  -  1);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(this.id  -  1);	  this.id    =    Double.parseDouble(this.id);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  this.khi  =  0.5;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.khi  =  0.5;  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  0.5;	      this.khi    =    2.0;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  this.khi  =  0.0;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.khi  =  0.0;  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  0.0;	      this.khi    =    2.0;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;	      this.khi    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;	      this.khi    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	      this.base    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;	      this.base    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
10	[BUG]  [BUGGY]  this.khi  =  Double.NEGATIVE;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.khi  =  Double.NEGATIVE;  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.NEGATIVE;	      this.khi    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  this.khi  =  Double.MIN_VALUE;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.khi  =  Double.MIN_VALUE;  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.MIN_VALUE;	      this.khi    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(this.khi,  0,  this.gamma,  0,  1.0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  System.arraycopy(this.khi,  0,  this.gamma,  0,  1.0);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.khi,  0,  this.gamma,  0,  1.0);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  System.arraycopy(this.khi,  0,  this.gamma,  0,  0.0);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  System.arraycopy(this.khi,  0,  this.gamma,  0,  0.0);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.khi,  0,  this.gamma,  0,  0.0);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(this.gamma,  0,  this.khi,  0,  0.5);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  System.arraycopy(this.gamma,  0,  this.khi,  0,  0.5);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gamma,  0,  this.khi,  0,  0.5);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  +  1);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(this.id  +  1);	  this.id    =    Double.doubleToLongBits(this.id);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
16	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  -  1);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(this.id  -  1);	  this.id    =    Double.doubleToLongBits(this.id);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(this.khi,  0,  this.gamma,  0,  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  System.arraycopy(this.khi,  0,  this.gamma,  0,  1);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.khi,  0,  this.gamma,  0,  1);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(this.gamma,  0,  this.khi,  0,  0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  System.arraycopy(this.gamma,  0,  this.khi,  0,  0);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gamma,  0,  this.khi,  0,  0);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(2.0f);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.id  =  Double.doubleToLongBits(2.0f);  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(2.0f);	      this.id    =    Double.doubleToLongBits(2.0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(this.global,  0,  this.gamma,  0,  0.5);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  System.arraycopy(this.global,  0,  this.gamma,  0,  0.5);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.global,  0,  this.gamma,  0,  0.5);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(this.id)+  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.id  =  Double.parseDouble(this.id)+  1;  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(this.id)+  1;	  this.id    =    Double.parseDouble(this.id);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id)+  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.id  =  Double.doubleToLongBits(this.id)+  1;  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(this.id)+  1;	  this.id    =    Double.doubleToLongBits(this.id);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
23	[BUG]  [BUGGY]  this.id  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.id  =  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.POSITIVE_INFINITY;	      super();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(0.00);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.id  =  Double.doubleToLongBits(0.00);  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(0.00);	      this.id    =    Double.doubleToLongBits(0.0);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
25	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  +  1;	      this.base    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
26	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  -  1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  -  1;	      this.base    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
27	[BUG]  [BUGGY]  System.arraycopy(this.gamma,  0,  this.gamma,  0,  0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  System.arraycopy(this.gamma,  0,  this.gamma,  0,  0);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gamma,  0,  this.gamma,  0,  0);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  System.arraycopy(this.g2,  0,  this.gamma,  0,  0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  System.arraycopy(this.g2,  0,  this.gamma,  0,  0);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.g2,  0,  this.gamma,  0,  0);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(this.gamma,  0,  this.gamma,  0,  0.5);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  System.arraycopy(this.gamma,  0,  this.gamma,  0,  0.5);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gamma,  0,  this.gamma,  0,  0.5);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(this.g2,  0,  this.gamma,  0,  0.5);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  System.arraycopy(this.g2,  0,  this.gamma,  0,  0.5);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.g2,  0,  this.gamma,  0,  0.5);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INT  :  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INT  :  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INT  :  Double.POSITIVE_INFINITY;	      this.base    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
32	[BUG]  [BUGGY]  this.khi  =  Double.NEGATIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.khi  =  Double.NEGATIVE_INFINITY;  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.NEGATIVE_INFINITY;	      this.khi    =    Double.NaN;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(doubleValue());  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.id  =  Double.parseDouble(doubleValue());  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(doubleValue());	  this.id    =    Double.parseDouble(this.id);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  /  2.0);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  /  2.0);  [BUGGY]      [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(this.id  /  2.0);	  this.id    =    Double.doubleToLongBits(this.id);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
35	[BUG]  [BUGGY]  this.id  =  double.doubleValue();  [CE]  class  expected  [FE]                AssertionError    [CONTEXT]    public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;    [BUGGY]  this.id  =  double.doubleValue();  [BUGGY]    }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  double.doubleValue();	      super();    	non-compiled	[CE]  class  expected	5	None	replace
