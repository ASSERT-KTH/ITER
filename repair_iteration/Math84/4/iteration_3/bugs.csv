bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(this.id)/  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.parseDouble(this.id)/  1;  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(this.id)/  1;	  this.id    =    Double.parseDouble(this.id)+    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
2	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(this.id)+  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.parseDouble(this.id)+  2;  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(this.id)+  2;	  this.id    =    Double.parseDouble(this.id)+    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
3	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(this.id)+  0.5;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.parseDouble(this.id)+  0.5;  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(this.id)+  0.5;	  this.id    =    Double.parseDouble(this.id)+    1;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
4	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  &  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  &  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.POSITIVE_INFINITY  &  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    |    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    |    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(this.global,  0,  this.gamma,  0,  1.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.global,  0,  this.gamma,  0,  1.0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.global,  0,  this.gamma,  0,  1.0);	  System.arraycopy(this.global,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
7	[BUG]  [BUGGY]  System.arraycopy(this.global,  0,  this.global,  0,  0.5);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.global,  0,  this.global,  0,  0.5);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.global,  0,  this.global,  0,  0.5);	  System.arraycopy(this.global,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(this.global,  0,  this.khi,  0,  0.5);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.global,  0,  this.khi,  0,  0.5);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.global,  0,  this.khi,  0,  0.5);	  System.arraycopy(this.global,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
9	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(doubleValue()  /  2.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.parseDouble(doubleValue()  /  2.0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(doubleValue()  /  2.0);	  this.id    =    Double.parseDouble(doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
10	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(doubleValue()  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.parseDouble(doubleValue()  -  1);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(doubleValue()  -  1);	  this.id    =    Double.parseDouble(doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
11	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(doubleValue()  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.parseDouble(doubleValue()  +  1);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(doubleValue()  +  1);	  this.id    =    Double.parseDouble(doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
12	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  /  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  /  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  /  1;	  this.base    =    Double.POSITIVE_INFINITY    +    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
13	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  +  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  +  2;	  this.base    =    Double.POSITIVE_INFINITY    +    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
14	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(this.id  /  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.parseDouble(this.id  /  1);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(this.id  /  1);	  this.id    =    Double.parseDouble(this.id    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(this.id  +  0.5);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.parseDouble(this.id  +  0.5);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(this.id  +  0.5);	  this.id    =    Double.parseDouble(this.id    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(this.id  +  2);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.parseDouble(this.id  +  2);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(this.id  +  2);	  this.id    =    Double.parseDouble(this.id    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(this.gamma,  0,  this.gamma,  0,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.gamma,  0,  this.gamma,  0,  1);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gamma,  0,  this.gamma,  0,  1);	  System.arraycopy(this.gamma,    0,    this.gamma,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
20	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id)/  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(this.id)/  1;  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(this.id)/  1;	  this.id    =    Double.doubleToLongBits(this.id)+    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
21	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id)+  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(this.id)+  2;  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(this.id)+  2;	  this.id    =    Double.doubleToLongBits(this.id)+    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
22	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id)+  0.5;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(this.id)+  0.5;  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(this.id)+  0.5;	  this.id    =    Double.doubleToLongBits(this.id)+    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
23	[BUG]  [BUGGY]  this.id  =  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.POSITIVE_INFINITY  +  1;	  this.id    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
24	[BUG]  [BUGGY]  this.id  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;	  this.id    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
25	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(0.5);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(0.5);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(0.5);	  this.id    =    Double.doubleToLongBits(0.00);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
26	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(0.0f);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(0.0f);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(0.0f);	  this.id    =    Double.doubleToLongBits(2.0f);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
27	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(double.doubleValue());  [CE]  class  expected  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.parseDouble(double.doubleValue());  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(double.doubleValue());	  this.id    =    double.doubleValue();    	non-compiled	[CE]  class  expected	35	None	replace
28	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(double);  [CE]  '.class'  expected  [FE]                      AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.parseDouble(double);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(double);	  this.id    =    double.doubleValue();    	non-compiled	[CE]  '.class'  expected	35	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(this.gamma,  0,  this.gamma,  0,  1.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.gamma,  0,  this.gamma,  0,  1.0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gamma,  0,  this.gamma,  0,  1.0);	  System.arraycopy(this.gamma,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
30	[BUG]  [BUGGY]  this.khi  =  Double.MAX_VALUE;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.khi  =  Double.MAX_VALUE;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.MAX_VALUE;	  this.khi    =    Double.MIN_VALUE;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  -  2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  -  2;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  -  2;	  this.base    =    Double.POSITIVE_INFINITY    -    1;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
32	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(1.0e);  [CE]  malformed  floating  point  literal  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(1.0e);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(1.0e);	  this.id    =    Double.doubleToLongBits(1.0f);    	non-compiled	[CE]  malformed  floating  point  literal	1	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(this.gamma,  0,  this.khi,  0,  1.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.gamma,  0,  this.khi,  0,  1.0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gamma,  0,  this.khi,  0,  1.0);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    1.0);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
34	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.khi  =  Double.POSITIVE;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.POSITIVE;	  this.khi    =    Double.NEGATIVE;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(this.g2,  0,  this.khi,  0,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.g2,  0,  this.khi,  0,  0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.g2,  0,  this.khi,  0,  0);	  System.arraycopy(this.g2,    0,    this.gamma,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(this.g2,  0,  this.gamma,  0,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.g2,  0,  this.gamma,  0,  1);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.g2,  0,  this.gamma,  0,  1);	  System.arraycopy(this.g2,    0,    this.gamma,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(this.khi,  0,  this.gimma,  0,  0.5);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.khi,  0,  this.gimma,  0,  0.5);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.khi,  0,  this.gimma,  0,  0.5);	  System.arraycopy(this.gamma,    0,    this.khi,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(this.kid,  0,  this.khi,  0,  0.5);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.kid,  0,  this.khi,  0,  0.5);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.kid,  0,  this.khi,  0,  0.5);	  System.arraycopy(this.gamma,    0,    this.khi,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(this.g2,  0,  this.khi,  0,  0.5);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.g2,  0,  this.khi,  0,  0.5);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.g2,  0,  this.khi,  0,  0.5);	  System.arraycopy(this.g2,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(this.g2,  0,  this.gamma,  0,  1.0);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.g2,  0,  this.gamma,  0,  1.0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.g2,  0,  this.gamma,  0,  1.0);	  System.arraycopy(this.g2,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
41	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;	  this.base    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  this.base  =  double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [CE]  class  expected  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;	  this.base    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  class  expected	9	None	replace
43	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	  this.base    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  ';'  expected	8	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(this.kid,  0,  this.khi,  0,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.kid,  0,  this.khi,  0,  0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.kid,  0,  this.khi,  0,  0);	  System.arraycopy(this.gamma,    0,    this.khi,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(this.khi,  0,  this.gimma,  0,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.khi,  0,  this.gimma,  0,  0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.khi,  0,  this.gimma,  0,  0);	  System.arraycopy(this.gamma,    0,    this.khi,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(this.gamma,  0,  this.khi,  0,  0.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.gamma,  0,  this.khi,  0,  0.0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gamma,  0,  this.khi,  0,  0.0);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    0.0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
47	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  *  2.0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  *  2.0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(this.id  *  2.0);	  this.id    =    Double.doubleToLongBits(this.id    /    2.0);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
48	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  +  2.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  +  2.0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(this.id  +  2.0);	  this.id    =    Double.doubleToLongBits(this.id    /    2.0);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
49	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  /  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  /  1);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(this.id  /  1);	  this.id    =    Double.doubleToLongBits(this.id    -    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
50	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  -  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  -  2);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(this.id  -  2);	  this.id    =    Double.doubleToLongBits(this.id    -    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
51	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  +  2);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  +  2);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(this.id  +  2);	  this.id    =    Double.doubleToLongBits(this.id    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
52	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  +  0.5);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  +  0.5);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(this.id  +  0.5);	  this.id    =    Double.doubleToLongBits(this.id    +    1);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INT  :  Double.POSITIVE_INFINITY;  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INT  :  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INT  :  Double.POSITIVE_INFINITY;	  this.base    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INT    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  ';'  expected	31	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(this.g2,  0,  this.gamma,  0,  0.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.g2,  0,  this.gamma,  0,  0.0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.g2,  0,  this.gamma,  0,  0.0);	  System.arraycopy(this.g2,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
55	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY  +  1;	  this.base    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.MAXIMUM_INFINITY;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.MAXIMUM_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.MAXIMUM_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
57	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  +  0.5;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  +  0.5;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  +  0.5;	  this.base    =    Double.POSITIVE_INFINITY    +    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
58	[BUG]  [BUGGY]  System.arraycopy(this.global,  0,  this.gamma,  0,  0.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.global,  0,  this.gamma,  0,  0.0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.global,  0,  this.gamma,  0,  0.0);	  System.arraycopy(this.global,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
59	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;	  this.base    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
60	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  /  Double.MAXIMUM_INFINITY;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  /  Double.MAXIMUM_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  /  Double.MAXIMUM_INFINITY;	  this.base    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
61	[BUG]  [BUGGY]  this.id  =  Double.doubleValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleValue();  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleValue();	  this.id    =    double.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
62	[BUG]  [BUGGY]  this.id  =  double.doubleValue()  +  1;  [CE]  class  expected  [FE]                      AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  double.doubleValue()  +  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  double.doubleValue()  +  1;	  this.id    =    double.doubleValue();    	non-compiled	[CE]  class  expected	35	None	replace
63	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INTEGER  :  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INTEGER  :  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INTEGER  :  Double.POSITIVE_INFINITY;	  this.base    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INT    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
64	[BUG]  [BUGGY]  this.khi  =  Double.NEGATIVE_INFINITY  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.khi  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.NEGATIVE_INFINITY  +  1;	  this.khi    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(this.global,  0,  this.global,  0,  0);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.global,  0,  this.global,  0,  0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.global,  0,  this.global,  0,  0);	  System.arraycopy(this.gamma,    0,    this.khi,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(this.gimma,  0,  this.khi,  0,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.gimma,  0,  this.khi,  0,  0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gimma,  0,  this.khi,  0,  0);	  System.arraycopy(this.gamma,    0,    this.khi,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
67	[BUG]  [BUGGY]  System.arraycopy(this.gap,  0,  this.gamma,  0,  1.0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.gap,  0,  this.gamma,  0,  1.0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gap,  0,  this.gamma,  0,  1.0);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    1.0);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
68	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(this.doubleValue());  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.parseDouble(this.doubleValue());  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(this.doubleValue());	  this.id    =    Double.parseDouble(doubleValue());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
69	[BUG]  [BUGGY]  this.id  =  Double.POSITIVE_INFINITY  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.POSITIVE_INFINITY  -  1;	  this.id    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
70	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  -  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  -  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.POSITIVE_INFINITY  -  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    |    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
71	[BUG]  [BUGGY]  System.arraycopy(this.gamma,  0,  this.khi,  0,  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.gamma,  0,  this.khi,  0,  1);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gamma,  0,  this.khi,  0,  1);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
72	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(doubleValue());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(doubleValue());  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(doubleValue());	  this.id    =    double.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
73	[BUG]  [BUGGY]  this.id  =  Double.NaN;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.NaN;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.NaN;	  this.id    =    double.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(this.gamma,  0,  this.gamma,  0,  0.0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.gamma,  0,  this.gamma,  0,  0.0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gamma,  0,  this.gamma,  0,  0.0);	  System.arraycopy(this.khi,    0,    this.gamma,    0,    0.0);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
75	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  *  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(this.id  *  1);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(this.id  *  1);	  this.id    =    Double.doubleToLongBits(this.id    -    1);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(this.gamma,  0,  this.gamma,  0,  b);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.gamma,  0,  this.gamma,  0,  b);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gamma,  0,  this.gamma,  0,  b);	  System.arraycopy(this.gamma,    0,    this.gamma,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
77	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(1.0d);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(1.0d);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(1.0d);	  this.id    =    Double.doubleToLongBits(1.0f);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
78	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;	  this.base    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  /  Double.PER_SIZE;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  /  Double.PER_SIZE;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  /  Double.PER_SIZE;	  this.base    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
80	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  /  Double.MAXIMUM_INT;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY  /  Double.MAXIMUM_INT;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY  /  Double.MAXIMUM_INT;	  this.base    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
81	[BUG]  [BUGGY]  this.id  =  Double.parseDouble(this.id  *  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.parseDouble(this.id  *  1);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.parseDouble(this.id  *  1);	  this.id    =    Double.parseDouble(this.id    -    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
82	[BUG]  [BUGGY]  System.arraycopy(this.gamma,  0,  this.g2,  0,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.gamma,  0,  this.g2,  0,  0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gamma,  0,  this.g2,  0,  0);	  System.arraycopy(this.g2,    0,    this.gamma,    0,    0);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
83	[BUG]  [BUGGY]  System.arraycopy(this.global,  0,  this.gamma,  0,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.global,  0,  this.gamma,  0,  0);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.global,  0,  this.gamma,  0,  0);	  System.arraycopy(this.global,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
84	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
85	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.NaN;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.NaN;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.NaN;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
86	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(2.0  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.id  =  Double.doubleToLongBits(2.0  -  1);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.id  =  Double.doubleToLongBits(2.0  -  1);	  this.id    =    Double.doubleToLongBits(2.0f);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
87	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INT;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INT;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INT;	  this.base    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
88	[BUG]  [BUGGY]  this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INSFINITY;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INSFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	this.base  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INSFINITY;	  this.base    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
89	[BUG]  [BUGGY]  System.arraycopy(this.gamma,  0,  this.g2,  0,  0.5);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;  this.gamma  =  0.5;      [BUGGY]  System.arraycopy(this.gamma,  0,  this.g2,  0,  0.5);  [BUGGY]        [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	48	48	2	replace	System.arraycopy(this.gamma,  0,  this.g2,  0,  0.5);	  System.arraycopy(this.g2,    0,    this.gamma,    0,    0.5);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
