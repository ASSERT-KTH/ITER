projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45publicMultiDirectional(){
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45this.khi=2.0;
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45this.khi=2.0;this.gamma=0.5;
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45publicMultiDirectional(doublegamma){
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45this.khi=Double.POSITIVE_INFINITY;
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45this.khi=Double.NaN;
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45super();
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45this.khi=Double.parseDouble(1.0);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45this.khi=Double.parseDouble("0.0");
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45publicMultiDirectional(doublex,doubley){
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45publicMultiDirectional(doublenum){
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45this(1.0,1.0);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45this(0.0,1.0);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45this(null,null);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45this(null);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45publicMultiDirectional(doublex,doubley){this.khi=1.0;
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45this.id=Double.doubleToLongBits(1.0);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45this.id=Double.doubleToLongBits(2.0);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45Math.sqrt(getMask());
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java45Math.sqrt(Math.random());
