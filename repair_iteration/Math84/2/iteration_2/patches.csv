bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	add	this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	41	3	replace
2	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	41	3	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	add	this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	41	3	replace
4	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	41	3	replace
5	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.PER_INFINITY;  [CE]  cannot  find  symbol  PER_INFINITY  [FE]        AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.PER_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.PER_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  PER_INFINITY	41	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	add	this.khi  =  0;	  this.khi    =    1;    	compilable	  [FE]  AssertionError  	21	3	replace
7	[BUG]  [BUGGY]  this.khi  =  0;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  0;	  this.khi    =    1;    	compilable	  [FE]  AssertionError  	21	3	replace
8	[BUG]  [BUGGY]  super( "MultiDirectional ");  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super( "MultiDirectional ");  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super( "MultiDirectional ");	  super(   "multiDirectional   ");    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	66	None	replace
9	[BUG]  [BUGGY]  super( "MultiDirectional   ",  Double.POSITIVE_INFINITY);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super( "MultiDirectional   ",  Double.POSITIVE_INFINITY);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super( "MultiDirectional   ",  Double.POSITIVE_INFINITY);	  super(   "multiDirectional   ");    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	66	None	replace
10	[BUG]  [BUGGY]  super( "MultiDirectional   ",  Double.NaN);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super( "MultiDirectional   ",  Double.NaN);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super( "MultiDirectional   ",  Double.NaN);	  super(   "multiDirectional   ");    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	66	None	replace
11	[BUG]  [BUGGY]  This.khi  =  0.5;  [CE]  cannot  find  symbol  This  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  This.khi  =  0.5;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	This.khi  =  0.5;	  this.khi    =    0.5;    This.khi    =    0.5;    	non-compiled	[CE]  cannot  find  symbol  This	36	None	replace
12	[BUG]  [BUGGY]  this.khi  =  0.7;  this.khi  =  0.7;  [CE]  variable  khi  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.7;  this.khi  =  0.7;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    0.7;    this.khi  =  0.7;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	43	None	add
13	[BUG]  [BUGGY]  this.khi  =  0.7;  This.khi  =  0.7;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.7;  This.khi  =  0.7;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    0.7;    This.khi  =  0.7;	  	non-compiled	[CE]  cannot  find  symbol  This	43	None	add
14	[BUG]  [BUGGY]  this.khi  =  0.7;  this.khi  =  0.8;  [CE]  variable  khi  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.7;  this.khi  =  0.8;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    0.7;    this.khi  =  0.8;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	43	None	add
15	[BUG]  [BUGGY]  this.khi  =  0.7;  this.khi  =  0.;  [CE]  variable  khi  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.7;  this.khi  =  0.;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    0.7;    this.khi  =  0.;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	43	None	add
16	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(0.0);  [CE]  cannot  find  symbol  id  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.id  =  Double.doubleToLongBits(0.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.id  =  Double.doubleToLongBits(0.0);	          super();    this.id    =    Double.doubleToLongBits(0.0);    	non-compiled	[CE]  cannot  find  symbol  id	57	None	replace
17	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(1.0);  [CE]  cannot  find  symbol  id  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.id  =  Double.doubleToLongBits(1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.id  =  Double.doubleToLongBits(1.0);	          super();    this.id    =    Double.doubleToLongBits(0.0);    	non-compiled	[CE]  cannot  find  symbol  id	57	None	replace
18	[BUG]  [BUGGY]  this(1.0,  1.0,  1.0,  Double.POSITIVE_INFINITY);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double,double)  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  1.0,  1.0,  Double.POSITIVE_INFINITY);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  1.0,  1.0,  Double.POSITIVE_INFINITY);	  this(1.0,    1.0,    1.0);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double,double)	8	None	replace
19	[BUG]  [BUGGY]  this(1.0,  1.0,  1.0,  2.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double,double)  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  1.0,  1.0,  2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  1.0,  1.0,  2.0);	  this(1.0,    1.0,    1.0);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double,double)	8	None	replace
20	[BUG]  [BUGGY]  this(1.0,  1.0,  1.0,  Double.NaN);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double,double)  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  1.0,  1.0,  Double.NaN);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  1.0,  1.0,  Double.NaN);	  this(1.0,    1.0,    1.0);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double,double)	8	None	replace
21	[BUG]  [BUGGY]  this(1.0,  1.0,  1.0,  1.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double,double)  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  1.0,  1.0,  1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  1.0,  1.0,  1.0);	  this(1.0,    1.0,    1.0);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double,double)	8	None	replace
22	[BUG]  [BUGGY]  This.khi  =  0.0;  [CE]  cannot  find  symbol  This  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  This.khi  =  0.0;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	This.khi  =  0.0;	  this.khi    =    0.0;    this.khi    =    0.0;this.khi    =    0.0;    	non-compiled	[CE]  cannot  find  symbol  This	31	None	replace
23	[BUG]  [BUGGY]  this(null,  null,  null);  [CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,<null>,<null>)  [FE]                        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(null,  null,  null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(null,  null,  null);	  this(null,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,<null>,<null>)	28	None	replace
24	[BUG]  [BUGGY]  this(null,  null,  false);  [CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,<null>,boolean)  [FE]                          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(null,  null,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(null,  null,  false);	  this(null,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,<null>,boolean)	28	None	replace
25	[BUG]  [BUGGY]  this(null,  null,  true);  [CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,<null>,boolean)  [FE]                            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(null,  null,  true);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(null,  null,  true);	  this(null,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,<null>,boolean)	28	None	replace
26	[BUG]  [BUGGY]  this(true);  [CE]  no  suitable  constructor  found  for  MultiDirectional(boolean)  [FE]                      AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(true);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(true);	  this(false);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(boolean)	27	None	replace
27	[BUG]  [BUGGY]  this(false,  true);  [CE]  no  suitable  constructor  found  for  MultiDirectional(boolean,boolean)  [FE]                        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(false,  true);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(false,  true);	  this(false);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(boolean,boolean)	27	None	replace
28	[BUG]  [BUGGY]  this(false,  false);  [CE]  no  suitable  constructor  found  for  MultiDirectional(boolean,boolean)  [FE]                          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(false,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(false,  false);	  this(false);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(boolean,boolean)	27	None	replace
29	[BUG]  [BUGGY]  this(false,  null);  [CE]  no  suitable  constructor  found  for  MultiDirectional(boolean,<null>)  [FE]                            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(false,  null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(false,  null);	  this(false);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(boolean,<null>)	27	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.khi  =  0.0;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	add	super();  this.khi  =  0.0;	  this.khi    =    0.0;    super();    this.khi    =    0.0;    	compilable	  [FE]  AssertionError  	58	3	replace
31	[BUG]  [BUGGY]  super();  this.khi  =  0.0;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.khi  =  0.0;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  this.khi  =  0.0;	  this.khi    =    0.0;    super();    this.khi    =    0.0;    	compilable	  [FE]  AssertionError  	58	3	replace
32	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.4;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	add	this.khi  =  0.4;	  this.khi    =    0.2;    this.khi    =    0.4;    	compilable	  [FE]  AssertionError  	2	3	replace
33	[BUG]  [BUGGY]  this.khi  =  0.4;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.4;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  0.4;	  this.khi    =    0.2;    this.khi    =    0.4;    	compilable	  [FE]  AssertionError  	2	3	replace
34	[BUG]  [BUGGY]  this.khi  =  1;  this.khi  =  1;  [CE]  variable  khi  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  1;  this.khi  =  1;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    1;    this.khi  =  1;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	20	None	add
35	[BUG]  [BUGGY]  this.khi  =  1;  This.khi  =  1;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  1;  This.khi  =  1;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    1;    This.khi  =  1;	  	non-compiled	[CE]  cannot  find  symbol  This	20	None	add
36	[BUG]  [BUGGY]  this.khi  =  1;  this.khi  =  2;  [CE]  variable  khi  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  1;  this.khi  =  2;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    1;    this.khi  =  2;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	20	None	add
37	[BUG]  [BUGGY]  this.khi  =  1;  khi  =  1;  [CE]  variable  khi  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  1;  khi  =  1;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    1;    khi  =  1;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	20	None	add
38	[BUG]  [BUGGY]  this.id  =  Double.NaN;  [CE]  cannot  find  symbol  id  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.id  =  Double.NaN;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.id  =  Double.NaN;	          super();    this.id    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  id	16	None	replace
39	[BUG]  [BUGGY]  this.symbol  =  Double.NaN;  [CE]  cannot  find  symbol  symbol  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.symbol  =  Double.NaN;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.symbol  =  Double.NaN;	          super();    this.id    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  symbol	16	None	replace
40	[BUG]  [BUGGY]  this(1.0,  0.5);  [CE]  variable  gamma  might  already  have  been  assigned  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  0.5);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  0.5);	  this(1.0,    2.0);    	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	11	None	replace
41	[BUG]  [BUGGY]  this(2.0,  2.0);  [CE]  variable  gamma  might  already  have  been  assigned  [FE]                      AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(2.0,  2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(2.0,  2.0);	  this(1.0,    2.0);    	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	11	None	replace
42	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.00;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	add	this.khi  =  0.00;	  this.khi    =    0.0;    this.khi    =    0.00;    	compilable	  [FE]  AssertionError  	64	3	replace
43	[BUG]  [BUGGY]  this.khi  =  0.00;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.00;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  0.00;	  this.khi    =    0.0;    this.khi    =    0.00;    	compilable	  [FE]  AssertionError  	64	3	replace
44	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY  :  Double.NEGATIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  ';'  expected	61	None	replace
45	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.NaN;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.NaN;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.NaN;	  this.khi    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INFINITY    :    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  incompatible  types	61	None	replace
46	[BUG]  [BUGGY]  this(1.0,  Double.NaN,  2.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  Double.NaN,  2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  Double.NaN,  2.0);	  this(1.0,    Double.NaN);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	10	None	replace
47	[BUG]  [BUGGY]  this(1.0,  Double.NaN,  1.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  Double.NaN,  1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  Double.NaN,  1.0);	  this(1.0,    Double.NaN);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	10	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.3;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	add	this.khi  =  0.3;	  this.khi    =    0.5;    this.khi    =    0.3;    	compilable	  [FE]  AssertionError  	47	3	replace
49	[BUG]  [BUGGY]  this.khi  =  0.3;  [FE]  AssertionError  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.3;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  0.3;	  this.khi    =    0.5;    this.khi    =    0.3;    	compilable	  [FE]  AssertionError  	47	3	replace
50	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.6;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	add	this.khi  =  0.6;	  this.khi    =    0.5;    this.khi    =    0.6;    	compilable	  [FE]  AssertionError  	59	3	replace
51	[BUG]  [BUGGY]  this.khi  =  0.6;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.6;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  0.6;	  this.khi    =    0.5;    this.khi    =    0.6;    	compilable	  [FE]  AssertionError  	59	3	replace
52	[BUG]  [BUGGY]  this(0.0,  5.0);  [CE]  variable  gamma  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(0.0,  5.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(0.0,  5.0);	  this(0.0,    0.5);    	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	51	None	replace
53	[BUG]  [BUGGY]  this.gamma  =  0.5;  [CE]  variable  gamma  might  already  have  been  assigned  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.gamma  =  0.5;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.gamma  =  0.5;	  this.khi    =    0.0;    this.khi    =    0.0;this.gamma    =    0.5;    	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	30	None	replace
54	[BUG]  [BUGGY]  This.gamma  =  0.5;  [CE]  cannot  find  symbol  This  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  This.gamma  =  0.5;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	This.gamma  =  0.5;	  this.khi    =    0.0;    this.khi    =    0.0;this.gamma    =    0.5;    	non-compiled	[CE]  cannot  find  symbol  This	30	None	replace
55	[BUG]  [BUGGY]  this.khi  =  new  double(0.0);  [CE]  '['  expected  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  new  double(0.0);  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  new  double(0.0);	  this.khi    =    0.0;    this.khi    =    0.0;    	non-compiled	[CE]  '['  expected	29	None	replace
56	[BUG]  [BUGGY]  This.khi  =  0.2;  [CE]  cannot  find  symbol  This  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  This.khi  =  0.2;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	This.khi  =  0.2;	  this.khi    =    0.2;    This.khi    =    0.2;    	non-compiled	[CE]  cannot  find  symbol  This	5	None	replace
57	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(this.id);  [CE]  cannot  find  symbol  id  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.id  =  Double.doubleToLongBits(this.id);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.id  =  Double.doubleToLongBits(this.id);	          super();    this.id    =    Double.doubleToLongBits(this.id);    	non-compiled	[CE]  cannot  find  symbol  id	14	None	replace
58	[BUG]  [BUGGY]  if(this.id!=  null)  {  super();  this.id  =  Double.doubleToLongBits(this.id);  }  else  {  this.id  =  Double.doubleToLongBits(this.id);  }  [CE]  cannot  find  symbol  id  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  if(this.id!=  null)  {  super();  this.id  =  Double.doubleToLongBits(this.id);  }  else  {  this.id  =  Double.doubleToLongBits(this.id);  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	if(this.id!=  null)  {  super();  this.id  =  Double.doubleToLongBits(this.id);  }  else  {  this.id  =  Double.doubleToLongBits(this.id);  }	          super();    this.id    =    Double.doubleToLongBits(this.id);    	non-compiled	[CE]  cannot  find  symbol  id	14	None	replace
59	[BUG]  [BUGGY]  if(this.id!=  null)  {  super();  this.id  =  Double.doubleToLongBits(this.id);  }  [CE]  cannot  find  symbol  id  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  if(this.id!=  null)  {  super();  this.id  =  Double.doubleToLongBits(this.id);  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	if(this.id!=  null)  {  super();  this.id  =  Double.doubleToLongBits(this.id);  }	          super();    this.id    =    Double.doubleToLongBits(this.id);    	non-compiled	[CE]  cannot  find  symbol  id	14	None	replace
60	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE;  [CE]  cannot  find  symbol  POSITIVE  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.POSITIVE;	  this.khi    =    Double.NEGATIVE;    	non-compiled	[CE]  cannot  find  symbol  POSITIVE	17	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	add	this.khi  =  0.;	  this.khi    =    0.2;    this.khi    =    0.;    	compilable	  [FE]  AssertionError  	62	3	replace
62	[BUG]  [BUGGY]  this.khi  =  0.;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  0.;	  this.khi    =    0.2;    this.khi    =    0.;    	compilable	  [FE]  AssertionError  	62	3	replace
63	[BUG]  [BUGGY]  this.id  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  id  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.id  =  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.id  =  Double.POSITIVE_INFINITY;	          super();    this.id    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  id	13	None	replace
64	[BUG]  [BUGGY]  super();  this.symbol  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  symbol  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.symbol  =  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  this.symbol  =  Double.POSITIVE_INFINITY;	          super();    this.id    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  symbol	13	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	add	this.khi  =  Double.POSITIVE_INFINITY  +  2;	  this.khi    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	50	3	replace
66	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  2;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.POSITIVE_INFINITY  +  2;	  this.khi    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	50	3	replace
67	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  1;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	add	this.khi  =  Double.POSITIVE_INFINITY  /  1;	  this.khi    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	50	3	replace
68	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  1;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  1;	  this.khi    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	50	3	replace
69	[BUG]  [BUGGY]  this.data  =  new  HashMultiDirectional();  [CE]  cannot  find  symbol  data  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.data  =  new  HashMultiDirectional();  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.data  =  new  HashMultiDirectional();	          super();    this.data    =    new    HashMultiDirectional();    	non-compiled	[CE]  cannot  find  symbol  data	55	None	replace
70	[BUG]  [BUGGY]  this.khi  =  new  double[Math.PI  /  2.0];  [CE]  possible  loss  of  precision  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  new  double[Math.PI  /  2.0];  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  new  double[Math.PI  /  2.0];	  this.khi    =    0.5;    this.khi    =    0.5;    	non-compiled	[CE]  possible  loss  of  precision	33	None	replace
71	[BUG]  [BUGGY]  this(null,  false);  [CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,boolean)  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(null,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(null,  false);	  this(null);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,boolean)	26	None	replace
72	[BUG]  [BUGGY]  this(null,  null,  null,  null);  [CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,<null>,<null>,<null>)  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(null,  null,  null,  null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(null,  null,  null,  null);	          super();    super();    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,<null>,<null>,<null>)	12	None	replace
73	[BUG]  [BUGGY]  this(null,  null,  null,  null,  null);  [CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,<null>,<null>,<null>,<null>)  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(null,  null,  null,  null,  null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(null,  null,  null,  null,  null);	          super();    super();    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,<null>,<null>,<null>,<null>)	12	None	replace
74	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(1);  [CE]  cannot  find  symbol  id  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.id  =  Double.doubleToLongBits(1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.id  =  Double.doubleToLongBits(1);	          super();    this.id    =    Double.doubleToLongBits(1.0);    	non-compiled	[CE]  cannot  find  symbol  id	15	None	replace
75	[BUG]  [BUGGY]  this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY,  1.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY,  1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY,  1.0);	  this(Double.POSITIVE_INFINITY,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	42	None	replace
76	[BUG]  [BUGGY]  this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY,  0.5);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY,  0.5);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY,  0.5);	  this(Double.POSITIVE_INFINITY,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	42	None	replace
77	[BUG]  [BUGGY]  this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY,  false);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,boolean)  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY,  false);	  this(Double.POSITIVE_INFINITY,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,boolean)	42	None	replace
78	[BUG]  [BUGGY]  this(1.0,  Double.POSITIVE_INFINITY,  2.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  Double.POSITIVE_INFINITY,  2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  Double.POSITIVE_INFINITY,  2.0);	  this(1.0,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	9	None	replace
79	[BUG]  [BUGGY]  this(1.0,  Double.POSITIVE_INFINITY,  0.5);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  Double.POSITIVE_INFINITY,  0.5);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  Double.POSITIVE_INFINITY,  0.5);	  this(1.0,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	9	None	replace
80	[BUG]  [BUGGY]  this(1.0,  Double.POSITIVE_INFINITY,  1.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  Double.POSITIVE_INFINITY,  1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  Double.POSITIVE_INFINITY,  1.0);	  this(1.0,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	9	None	replace
81	[BUG]  [BUGGY]  this(0.0,  0.0);  [CE]  variable  gamma  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(0.0,  0.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(0.0,  0.0);	  this(1.0,    0.0);    	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	6	None	replace
82	[BUG]  [BUGGY]  this(2.0,  0.0);  [CE]  variable  gamma  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(2.0,  0.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(2.0,  0.0);	  this(1.0,    0.0);    	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	6	None	replace
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.NEGATIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	add	this.khi  =  Double.NEGATIVE_INFINITY;	  this.khi    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	19	3	replace
84	[BUG]  [BUGGY]  this.khi  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.NEGATIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.NEGATIVE_INFINITY;	  this.khi    =    Double.MIN_VALUE;    	compilable	  [FE]  AssertionError  	19	3	replace
85	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [CE]  variable  khi  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	40	None	add
86	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  This.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  This.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    This.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  This	40	None	add
87	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [CE]  variable  khi  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	40	None	add
88	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [CE]  variable  khi  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	40	None	add
89	[BUG]  [BUGGY]  super(false,  false);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super(false,  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super(false,  false);	  super(true);    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	54	None	replace
90	[BUG]  [BUGGY]  super(false);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super(false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super(false);	  super(true);    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	54	None	replace
91	[BUG]  [BUGGY]  super(false,  true);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super(false,  true);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super(false,  true);	  super(true);    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	54	None	replace
92	[BUG]  [BUGGY]  super(false,  null);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super(false,  null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super(false,  null);	  super(true);    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	54	None	replace
93	[BUG]  [BUGGY]  this.khi  =  0.5;  this.khi  =  1.0;  [CE]  variable  khi  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.5;  this.khi  =  1.0;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  0.5;  this.khi  =  1.0;	  this.khi    =    1.0;    khi    =    1.0;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	25	None	replace
94	[BUG]  [BUGGY]  this.khi  =  0.5;  khi  =  0.5;  [CE]  variable  khi  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.5;  khi  =  0.5;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  0.5;  khi  =  0.5;	  this.khi    =    1.0;    khi    =    1.0;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	25	None	replace
95	[BUG]  [BUGGY]  This.khi  =  1.0;  [CE]  cannot  find  symbol  This  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  This.khi  =  1.0;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	This.khi  =  1.0;	  this.khi    =    1.0;    This.khi    =    1.0;    	non-compiled	[CE]  cannot  find  symbol  This	23	None	replace
96	[BUG]  [BUGGY]  this.khi  =  Double.MIN_VALUE;  this.khi  =  Double.MIN_VALUE;  [CE]  variable  khi  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.MIN_VALUE;  this.khi  =  Double.MIN_VALUE;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.MIN_VALUE;    this.khi  =  Double.MIN_VALUE;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	18	None	add
97	[BUG]  [BUGGY]  this.khi  =  Double.MIN_VALUE;  this.khi  =  Double.MIN_VALUE;this.khi  =  Double.MIN_VALUE;  [CE]  variable  khi  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.MIN_VALUE;  this.khi  =  Double.MIN_VALUE;this.khi  =  Double.MIN_VALUE;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.MIN_VALUE;    this.khi  =  Double.MIN_VALUE;this.khi  =  Double.MIN_VALUE;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	18	None	add
98	[BUG]  [BUGGY]  this.khi  =  Double.MIN_VALUE;  This.khi  =  Double.MIN_VALUE;  [CE]  cannot  find  symbol  This  [FE]        AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.MIN_VALUE;  This.khi  =  Double.MIN_VALUE;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.MIN_VALUE;    This.khi  =  Double.MIN_VALUE;	  	non-compiled	[CE]  cannot  find  symbol  This	18	None	add
99	[BUG]  [BUGGY]  this.khi  =  Double.MIN_VALUE;  super();  this.khi  =  Double.MIN_VALUE;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.MIN_VALUE;  super();  this.khi  =  Double.MIN_VALUE;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.MIN_VALUE;    super();  this.khi  =  Double.MIN_VALUE;	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	18	None	add
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.khi  =  1.0;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	add	super();  this.khi  =  1.0;	  this.khi    =    1.0;    super();    this.khi    =    1.0;    	compilable	  [FE]  AssertionError  	45	3	replace
101	[BUG]  [BUGGY]  super();  this.khi  =  1.0;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.khi  =  1.0;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  this.khi  =  1.0;	  this.khi    =    1.0;    super();    this.khi    =    1.0;    	compilable	  [FE]  AssertionError  	45	3	replace
102	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(getId());  [CE]  cannot  find  symbol  id  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.id  =  Double.doubleToLongBits(getId());  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.id  =  Double.doubleToLongBits(getId());	          super();    this.id    =    Double.doubleToLongBits(getId());    	non-compiled	[CE]  cannot  find  symbol  id	65	None	replace
103	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(getId()  -  1);  [CE]  cannot  find  symbol  id  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.id  =  Double.doubleToLongBits(getId()  -  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.id  =  Double.doubleToLongBits(getId()  -  1);	          super();    this.id    =    Double.doubleToLongBits(getId());    	non-compiled	[CE]  cannot  find  symbol  id	65	None	replace
104	[BUG]  [BUGGY]  this(0.0,  Double.NEGATIVE_INFINITY,  2.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(0.0,  Double.NEGATIVE_INFINITY,  2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(0.0,  Double.NEGATIVE_INFINITY,  2.0);	  this(0.0,    Double.NEGATIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	39	None	replace
105	[BUG]  [BUGGY]  this(0.0,  Double.NEGATIVE_INFINITY,  1.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(0.0,  Double.NEGATIVE_INFINITY,  1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(0.0,  Double.NEGATIVE_INFINITY,  1.0);	  this(0.0,    Double.NEGATIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	39	None	replace
106	[BUG]  [BUGGY]  this(0.0,  Double.NEGATIVE_INFINITY,  0.5);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                      AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(0.0,  Double.NEGATIVE_INFINITY,  0.5);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(0.0,  Double.NEGATIVE_INFINITY,  0.5);	  this(0.0,    Double.NEGATIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	39	None	replace
107	[BUG]  [BUGGY]  this(0.0,  Double.NEGATIVE_INFINITY,  1);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,int)  [FE]                        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(0.0,  Double.NEGATIVE_INFINITY,  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(0.0,  Double.NEGATIVE_INFINITY,  1);	  this(0.0,    Double.NEGATIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,int)	39	None	replace
108	[BUG]  [BUGGY]  super( "MultiDirectional()   ",  Double.POSITIVE_INFINITY);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super( "MultiDirectional()   ",  Double.POSITIVE_INFINITY);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super( "MultiDirectional()   ",  Double.POSITIVE_INFINITY);	  super(   "multiDirectional()   ");    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	52	None	replace
109	[BUG]  [BUGGY]  super( "MultiDirectional()   ",  Double.NaN);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super( "MultiDirectional()   ",  Double.NaN);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super( "MultiDirectional()   ",  Double.NaN);	  super(   "multiDirectional()   ");    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	52	None	replace
110	[BUG]  [BUGGY]  this(0.0,  Double.POSITIVE_INFINITY,  0.5);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(0.0,  Double.POSITIVE_INFINITY,  0.5);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(0.0,  Double.POSITIVE_INFINITY,  0.5);	  this(0.0,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	37	None	replace
111	[BUG]  [BUGGY]  this(0.0,  Double.POSITIVE_INFINITY,  1.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(0.0,  Double.POSITIVE_INFINITY,  1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(0.0,  Double.POSITIVE_INFINITY,  1.0);	  this(0.0,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	37	None	replace
112	[BUG]  [BUGGY]  this(0.0,  Double.POSITIVE_INFINITY,  2.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(0.0,  Double.POSITIVE_INFINITY,  2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(0.0,  Double.POSITIVE_INFINITY,  2.0);	  this(0.0,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	37	None	replace
113	[BUG]  [BUGGY]  this.setDirection(null);  [CE]  cannot  find  symbol  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.setDirection(null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.setDirection(null);	          super();    this.setDirection(null);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
114	[BUG]  [BUGGY]  super();  setDirection(null);  [CE]  cannot  find  symbol  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  setDirection(null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  setDirection(null);	          super();    this.setDirection(null);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
115	[BUG]  [BUGGY]  super();  this.setDirection(new  Double(null));  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.setDirection(new  Double(null));  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  this.setDirection(new  Double(null));	          super();    this.setDirection(null);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
116	[BUG]  [BUGGY]  super( "MultiDirectional()   ",  false);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super( "MultiDirectional()   ",  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super( "MultiDirectional()   ",  false);	  super(   "MultiDirectional()   ");    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	53	None	replace
117	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  ';'  expected	60	None	replace
118	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  ';'  expected	60	None	replace
119	[BUG]  [BUGGY]  this(1.0,  Double.NEGATIVE_INFINITY,  2.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  Double.NEGATIVE_INFINITY,  2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  Double.NEGATIVE_INFINITY,  2.0);	  this(1.0,    Double.NEGATIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	48	None	replace
120	[BUG]  [BUGGY]  this(1.0,  Double.NEGATIVE_INFINITY,  0.5);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  Double.NEGATIVE_INFINITY,  0.5);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  Double.NEGATIVE_INFINITY,  0.5);	  this(1.0,    Double.NEGATIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	48	None	replace
121	[BUG]  [BUGGY]  this(1.0,  Double.NEGATIVE_INFINITY,  1);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,int)  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  Double.NEGATIVE_INFINITY,  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  Double.NEGATIVE_INFINITY,  1);	  this(1.0,    Double.NEGATIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,int)	48	None	replace
122	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  1;  this.khi  =  Double.POSITIVE_INFINITY  +  1;  [CE]  variable  khi  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  1;  this.khi  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.POSITIVE_INFINITY    +    1;    this.khi  =  Double.POSITIVE_INFINITY  +  1;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	49	None	add
123	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  1;  This.khi  =  Double.POSITIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  This  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  1;  This.khi  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.POSITIVE_INFINITY    +    1;    This.khi  =  Double.POSITIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  This	49	None	add
124	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  1;  khi  =  Double.POSITIVE_INFINITY  +  1;  [CE]  variable  khi  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  1;  khi  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.POSITIVE_INFINITY    +    1;    khi  =  Double.POSITIVE_INFINITY  +  1;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	49	None	add
125	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  1;  this.khi  =  Double.POSITIVE_INFINITY  +  2;  [CE]  variable  khi  might  already  have  been  assigned  [FE]          AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  1;  this.khi  =  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.POSITIVE_INFINITY    +    1;    this.khi  =  Double.POSITIVE_INFINITY  +  2;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	49	None	add
126	[BUG]  [BUGGY]  this(0.0,  Double.NaN,  2.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(0.0,  Double.NaN,  2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(0.0,  Double.NaN,  2.0);	  this(0.0,    Double.NaN);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	38	None	replace
127	[BUG]  [BUGGY]  this(0.0,  Double.NaN,  1.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(0.0,  Double.NaN,  1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(0.0,  Double.NaN,  1.0);	  this(0.0,    Double.NaN);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	38	None	replace
128	[BUG]  [BUGGY]  this(0.0,  Double.NaN,  0.5);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(0.0,  Double.NaN,  0.5);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(0.0,  Double.NaN,  0.5);	  this(0.0,    Double.NaN);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	38	None	replace
129	[BUG]  [BUGGY]  this(1.0,  1.0,  1.0,  Double.NEGATIVE_INFINITY);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double,double)  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  1.0,  1.0,  Double.NEGATIVE_INFINITY);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  1.0,  1.0,  Double.NEGATIVE_INFINITY);	  this(1.0,    1.0,    1.0);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double,double)	8	None	replace
130	[BUG]  [BUGGY]  super();  this.id  =  Double.doubleToLongBits(getId()  -  1);  [CE]  cannot  find  symbol  id  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.id  =  Double.doubleToLongBits(getId()  -  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  this.id  =  Double.doubleToLongBits(getId()  -  1);	          super();    this.id    =    Double.doubleToLongBits(getId());    	non-compiled	[CE]  cannot  find  symbol  id	65	None	replace
131	[BUG]  [BUGGY]  super();  this.id  =  Double.doubleToLongBits(getId())+  1;  [CE]  cannot  find  symbol  id  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.id  =  Double.doubleToLongBits(getId())+  1;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  this.id  =  Double.doubleToLongBits(getId())+  1;	          super();    this.id    =    Double.doubleToLongBits(getId());    	non-compiled	[CE]  cannot  find  symbol  id	65	None	replace
132	[BUG]  [BUGGY]  this(null,  1.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,double)  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(null,  1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(null,  1.0);	  this(null);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,double)	26	None	replace
133	[BUG]  [BUGGY]  this(null,  null,  0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,<null>,int)  [FE]                        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(null,  null,  0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(null,  null,  0);	  this(null,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,<null>,int)	28	None	replace
134	[BUG]  [BUGGY]  super();  this.symbol  =  Double.NaN;  [CE]  cannot  find  symbol  symbol  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.symbol  =  Double.NaN;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  this.symbol  =  Double.NaN;	          super();    this.id    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  symbol	16	None	replace
135	[BUG]  [BUGGY]  super();  this.id  =  Double.NEGATIVE;  [CE]  cannot  find  symbol  id  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.id  =  Double.NEGATIVE;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  this.id  =  Double.NEGATIVE;	          super();    this.id    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  id	16	None	replace
136	[BUG]  [BUGGY]  super( "MultiDirectional()   ",  true);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super( "MultiDirectional()   ",  true);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super( "MultiDirectional()   ",  true);	  super(   "MultiDirectional()   ");    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	53	None	replace
137	[BUG]  [BUGGY]  this.khi  =  0.5;  khi  =  1.0;  [CE]  variable  khi  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.5;  khi  =  1.0;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  0.5;  khi  =  1.0;	  this.khi    =    1.0;    khi    =    1.0;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	25	None	replace
138	[BUG]  [BUGGY]  super();  this.base  =  new  HashMultiDirectional();  [CE]  cannot  find  symbol  base  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.base  =  new  HashMultiDirectional();  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  this.base  =  new  HashMultiDirectional();	          super();    this.data    =    new    HashMultiDirectional();    	non-compiled	[CE]  cannot  find  symbol  base	55	None	replace
139	[BUG]  [BUGGY]  this(1.0,  Double.NEGATIVE_INFINITY,  0.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  Double.NEGATIVE_INFINITY,  0.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  Double.NEGATIVE_INFINITY,  0.0);	  this(1.0,    Double.NEGATIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	48	None	replace
140	[BUG]  [BUGGY]  this(1.0,  Double.NEGATIVE_INFINITY,  1.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  Double.NEGATIVE_INFINITY,  1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  Double.NEGATIVE_INFINITY,  1.0);	  this(1.0,    Double.NEGATIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	48	None	replace
141	[BUG]  [BUGGY]  super();  this.id  =  Double.doubleToLongBits(Double.toString(this.id));  [CE]  cannot  find  symbol  id  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.id  =  Double.doubleToLongBits(Double.toString(this.id));  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  this.id  =  Double.doubleToLongBits(Double.toString(this.id));	          super();    this.id    =    Double.doubleToLongBits(this.id);    	non-compiled	[CE]  cannot  find  symbol  id	14	None	replace
142	[BUG]  [BUGGY]  super();  this.id  =  Double.doubleToLongBits(this.id  +  1);  [CE]  cannot  find  symbol  id  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.id  =  Double.doubleToLongBits(this.id  +  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  this.id  =  Double.doubleToLongBits(this.id  +  1);	          super();    this.id    =    Double.doubleToLongBits(this.id);    	non-compiled	[CE]  cannot  find  symbol  id	14	None	replace
143	[BUG]  [BUGGY]  this(0.0,  0.5  +  1);  [CE]  variable  gamma  might  already  have  been  assigned  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(0.0,  0.5  +  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(0.0,  0.5  +  1);	  this(0.0,    0.5);    	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	51	None	replace
144	[BUG]  [BUGGY]  this(Double.NaN,  Double.POSITIVE_INFINITY);  [CE]  variable  gamma  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(Double.NaN,  Double.POSITIVE_INFINITY);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(Double.NaN,  Double.POSITIVE_INFINITY);	  this(Double.POSITIVE_INFINITY,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	42	None	replace
145	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  1;  super();  this.khi  =  Double.POSITIVE_INFINITY  +  1;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  1;  super();  this.khi  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.POSITIVE_INFINITY    +    1;    super();  this.khi  =  Double.POSITIVE_INFINITY  +  1;	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	49	None	add
146	[BUG]  [BUGGY]  super();  this.id  =  Integer.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  id  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.id  =  Integer.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  this.id  =  Integer.POSITIVE_INFINITY;	          super();    this.id    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  id	13	None	replace
147	[BUG]  [BUGGY]  this.khi  =  1;  Acest.khi  =  1;  [CE]  cannot  find  symbol  Acest  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  1;  Acest.khi  =  1;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    1;    Acest.khi  =  1;	  	non-compiled	[CE]  cannot  find  symbol  Acest	20	None	add
148	[BUG]  [BUGGY]  super( "MultiDirectional ",  false);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super( "MultiDirectional ",  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super( "MultiDirectional ",  false);	  super(   "multiDirectional   ");    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	66	None	replace
149	[BUG]  [BUGGY]  super( "multiDirectional ",  false);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super( "multiDirectional ",  false);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super( "multiDirectional ",  false);	  super(   "multiDirectional   ");    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	66	None	replace
150	[BUG]  [BUGGY]  this(0.0,  Double.NEGATIVE);  [CE]  cannot  find  symbol  NEGATIVE  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(0.0,  Double.NEGATIVE);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(0.0,  Double.NEGATIVE);	  this(0.0,    Double.NaN);    	non-compiled	[CE]  cannot  find  symbol  NEGATIVE	38	None	replace
151	[BUG]  [BUGGY]  this(1.0,  Double.NEGATIVE);  [CE]  cannot  find  symbol  NEGATIVE  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  Double.NEGATIVE);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  Double.NEGATIVE);	  this(1.0,    Double.NaN);    	non-compiled	[CE]  cannot  find  symbol  NEGATIVE	10	None	replace
152	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  this.ki  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  ki  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  this.ki  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    this.ki  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  ki	40	None	add
153	[BUG]  [BUGGY]  super();  this.id  =  Double.doubleToLongBits(2.0);  [CE]  cannot  find  symbol  id  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.id  =  Double.doubleToLongBits(2.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  this.id  =  Double.doubleToLongBits(2.0);	          super();    this.id    =    Double.doubleToLongBits(0.0);    	non-compiled	[CE]  cannot  find  symbol  id	57	None	replace
154	[BUG]  [BUGGY]  this.khi  =  Double.MIN_VALUE;  if(this.khi  ==  Double.MIN_VALUE)  {  this.khi  =  Double.MIN_VALUE;  }  else  {  this.khi  =  Double.MIN_VALUE;  }  [CE]  variable  khi  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.MIN_VALUE;  if(this.khi  ==  Double.MIN_VALUE)  {  this.khi  =  Double.MIN_VALUE;  }  else  {  this.khi  =  Double.MIN_VALUE;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.MIN_VALUE;    if(this.khi  ==  Double.MIN_VALUE)  {  this.khi  =  Double.MIN_VALUE;  }  else  {  this.khi  =  Double.MIN_VALUE;  }	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	18	None	add
155	[BUG]  [BUGGY]  this.khi  =  Double.MIN_VALUE;  if(this.khi  ==  Double.MIN_VALUE)  {  this.khi  =  Double.MIN_VALUE;  }  else  {  this.kip  =  Double.MIN_VALUE;  }  [CE]  cannot  find  symbol  kip  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.MIN_VALUE;  if(this.khi  ==  Double.MIN_VALUE)  {  this.khi  =  Double.MIN_VALUE;  }  else  {  this.kip  =  Double.MIN_VALUE;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.MIN_VALUE;    if(this.khi  ==  Double.MIN_VALUE)  {  this.khi  =  Double.MIN_VALUE;  }  else  {  this.kip  =  Double.MIN_VALUE;  }	  	non-compiled	[CE]  cannot  find  symbol  kip	18	None	add
156	[BUG]  [BUGGY]  this.khi  =  Double.MIN_VALUE;  if(this.khi  ==  Double.MIN_VALUE)  {  this.khi  =  Double.MIN_VALUE;  }  [CE]  variable  khi  might  already  have  been  assigned  [FE]        AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.MIN_VALUE;  if(this.khi  ==  Double.MIN_VALUE)  {  this.khi  =  Double.MIN_VALUE;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.MIN_VALUE;    if(this.khi  ==  Double.MIN_VALUE)  {  this.khi  =  Double.MIN_VALUE;  }	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	18	None	add
157	[BUG]  [BUGGY]  this.khi  =  Double.MIN_VALUE;  if(this.khi  ==  Double.MIN_VALUE)  {  this.khi  =  Double.MIN_VALUE;  }  else  {  this.k  =  Double.MIN_VALUE;  }  [CE]  cannot  find  symbol  k  [FE]          AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.MIN_VALUE;  if(this.khi  ==  Double.MIN_VALUE)  {  this.khi  =  Double.MIN_VALUE;  }  else  {  this.k  =  Double.MIN_VALUE;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    Double.MIN_VALUE;    if(this.khi  ==  Double.MIN_VALUE)  {  this.khi  =  Double.MIN_VALUE;  }  else  {  this.k  =  Double.MIN_VALUE;  }	  	non-compiled	[CE]  cannot  find  symbol  k	18	None	add
158	[BUG]  [BUGGY]  super( "multiDirectional()   ",  Double.POSITIVE_INFINITY);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super( "multiDirectional()   ",  Double.POSITIVE_INFINITY);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super( "multiDirectional()   ",  Double.POSITIVE_INFINITY);	  super(   "multiDirectional()   ");    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	52	None	replace
159	[BUG]  [BUGGY]  this(1.0,  Double.POSITIVE_INFINITY,  1);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,int)  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(1.0,  Double.POSITIVE_INFINITY,  1);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(1.0,  Double.POSITIVE_INFINITY,  1);	  this(1.0,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,int)	9	None	replace
160	[BUG]  [BUGGY]  if(this.data!=  null)  {  super();  this.data  =  new  HashMultiDirectional();  }  else  {  this.data  =  new  HashMultiDirectional();  }  [CE]  cannot  find  symbol  data  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  if(this.data!=  null)  {  super();  this.data  =  new  HashMultiDirectional();  }  else  {  this.data  =  new  HashMultiDirectional();  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	if(this.data!=  null)  {  super();  this.data  =  new  HashMultiDirectional();  }  else  {  this.data  =  new  HashMultiDirectional();  }	          super();    this.data    =    new    HashMultiDirectional();    	non-compiled	[CE]  cannot  find  symbol  data	55	None	replace
161	[BUG]  [BUGGY]  if(this.data!=  null)  {  super();  this.data  =  new  HashMultiDirectional();  }  [CE]  cannot  find  symbol  data  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  if(this.data!=  null)  {  super();  this.data  =  new  HashMultiDirectional();  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	if(this.data!=  null)  {  super();  this.data  =  new  HashMultiDirectional();  }	          super();    this.data    =    new    HashMultiDirectional();    	non-compiled	[CE]  cannot  find  symbol  data	55	None	replace
162	[BUG]  [BUGGY]  super(null);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super(null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super(null);	          super();    super();    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	12	None	replace
163	[BUG]  [BUGGY]  super(null,  null);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super(null,  null);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super(null,  null);	          super();    super();    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	12	None	replace
164	[BUG]  [BUGGY]  this.symbol  =  Double.doubleToLongBits(getId());  [CE]  cannot  find  symbol  symbol  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.symbol  =  Double.doubleToLongBits(getId());  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.symbol  =  Double.doubleToLongBits(getId());	          super();    this.id    =    Double.doubleToLongBits(getId());    	non-compiled	[CE]  cannot  find  symbol  symbol	65	None	replace
165	[BUG]  [BUGGY]  super( "MultiDirectional   ",  Double.NEGATIVE_INFINITY);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super( "MultiDirectional   ",  Double.NEGATIVE_INFINITY);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super( "MultiDirectional   ",  Double.NEGATIVE_INFINITY);	  super(   "multiDirectional   ");    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	66	None	replace
166	[BUG]  [BUGGY]  this.id  =  Double.doubleToLongBits(Double.toString(this.id));  [CE]  cannot  find  symbol  id  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.id  =  Double.doubleToLongBits(Double.toString(this.id));  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.id  =  Double.doubleToLongBits(Double.toString(this.id));	          super();    this.id    =    Double.doubleToLongBits(this.id);    	non-compiled	[CE]  cannot  find  symbol  id	14	None	replace
167	[BUG]  [BUGGY]  super();  this.id  =  Double.doubleToLongBits(this.id).doubleValue();  [CE]  cannot  find  symbol  id  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super();  this.id  =  Double.doubleToLongBits(this.id).doubleValue();  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super();  this.id  =  Double.doubleToLongBits(this.id).doubleValue();	          super();    this.id    =    Double.doubleToLongBits(this.id);    	non-compiled	[CE]  cannot  find  symbol  id	14	None	replace
168	[BUG]  [BUGGY]  this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY,  0.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY,  0.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(Double.POSITIVE_INFINITY,  Double.POSITIVE_INFINITY,  0.0);	  this(Double.POSITIVE_INFINITY,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	42	None	replace
169	[BUG]  [BUGGY]  super( "MultiDirectional()   ",  Double.NEGATIVE_INFINITY);  [CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  super( "MultiDirectional()   ",  Double.NEGATIVE_INFINITY);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	super( "MultiDirectional()   ",  Double.NEGATIVE_INFINITY);	  super(   "MultiDirectional()   ");    	non-compiled	[CE]  constructor  DirectSearchOptimizer  in  class  DirectSearchOptimizer  cannot  be  applied  to  given  types;	53	None	replace
170	[BUG]  [BUGGY]  this.khi  =  1;  this.khi  =  0;  [CE]  variable  khi  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  1;  this.khi  =  0;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi    =    1;    this.khi  =  0;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	20	None	add
171	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;  [CE]  cannot  find  symbol  DEFAULT  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	41	None	replace
172	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT_INFINITY;  [CE]  cannot  find  symbol  DEFAULT_INFINITY  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INFINITY	41	None	replace
173	[BUG]  [BUGGY]  this(2.0,  0.5);  [CE]  variable  gamma  might  already  have  been  assigned  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(2.0,  0.5);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(2.0,  0.5);	  this(2.0,    1.0);    	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	7	None	replace
174	[BUG]  [BUGGY]  this(null,  null,  1.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,<null>,double)  [FE]                        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(null,  null,  1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(null,  null,  1.0);	  this(null,    null);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(<null>,<null>,double)	28	None	replace
175	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	60	None	replace
176	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INT;  [CE]  incompatible  types  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INT;  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INT;	  this.khi    =    Double.POSITIVE_INFINITY?    Double.POSITIVE_INFINITY    :    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  incompatible  types	60	None	replace
177	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.1;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	add	this.khi  =  0.1;	  this.khi    =    0.0;    this.khi    =    0.0;    	compilable	  [FE]  AssertionError  	29	3	replace
178	[BUG]  [BUGGY]  this.khi  =  0.1;  [FE]  AssertionError  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.khi  =  0.1;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.khi  =  0.1;	  this.khi    =    0.0;    this.khi    =    0.0;    	compilable	  [FE]  AssertionError  	29	3	replace
179	[BUG]  [BUGGY]  if(Double.isNaN(this.id))  {  super();  this.id  =  Double.POSITIVE_INFINITY;  }  else  {  this.id  =  Double.POSITIVE_INFINITY;  }  [CE]  cannot  find  symbol  id  [FE]          AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  if(Double.isNaN(this.id))  {  super();  this.id  =  Double.POSITIVE_INFINITY;  }  else  {  this.id  =  Double.POSITIVE_INFINITY;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	if(Double.isNaN(this.id))  {  super();  this.id  =  Double.POSITIVE_INFINITY;  }  else  {  this.id  =  Double.POSITIVE_INFINITY;  }	          super();    this.id    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  id	13	None	replace
180	[BUG]  [BUGGY]  if(Double.isNaN(this.id))  {  super();  this.id  =  Double.POSITIVE_INFINITY;  }  [CE]  cannot  find  symbol  id  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  if(Double.isNaN(this.id))  {  super();  this.id  =  Double.POSITIVE_INFINITY;  }  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	if(Double.isNaN(this.id))  {  super();  this.id  =  Double.POSITIVE_INFINITY;  }	          super();    this.id    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  id	13	None	replace
181	[BUG]  [BUGGY]  this(2.0,  1.0,  1.0);  [CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)  [FE]        AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this(2.0,  1.0,  1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this(2.0,  1.0,  1.0);	  this(1.0,    1.0,    1.0);    	non-compiled	[CE]  no  suitable  constructor  found  for  MultiDirectional(double,double,double)	8	None	replace
182	[BUG]  [BUGGY]  this.symbol  =  Double.doubleToLongBits(1.0);  [CE]  cannot  find  symbol  symbol  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {      [BUGGY]  this.symbol  =  Double.doubleToLongBits(1.0);  [BUGGY]      this.khi  =  2.0;  this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	46	46	2	replace	this.symbol  =  Double.doubleToLongBits(1.0);	          super();    this.id    =    Double.doubleToLongBits(1.0);    	non-compiled	[CE]  cannot  find  symbol  symbol	15	None	replace
