bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(1.0);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.doubleToLongBits(1.0);	  this.gamma    =    Double.doubleToLongBits(2.0);    	compilable	  [FE]  OptimizationException  	32	4	replace
2	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(1.0);  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(1.0);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.doubleToLongBits(1.0);	  this.gamma    =    Double.doubleToLongBits(2.0);    	compilable	  [FE]  OptimizationException  	32	4	replace
3	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(0.0);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.doubleToLongBits(0.0);	  this.gamma    =    Double.doubleToLongBits(2.0);    	compilable	  [FE]  OptimizationException  	32	4	replace
4	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(0.0);  [FE]  OptimizationException  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(0.0);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.doubleToLongBits(0.0);	  this.gamma    =    Double.doubleToLongBits(2.0);    	compilable	  [FE]  OptimizationException  	32	4	replace
5	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(2);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.doubleToLongBits(2);	  this.gamma    =    Double.doubleToLongBits(2.0);    	compilable	  [FE]  OptimizationException  	32	4	replace
6	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(2);  [FE]  OptimizationException  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(2);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.doubleToLongBits(2);	  this.gamma    =    Double.doubleToLongBits(2.0);    	compilable	  [FE]  OptimizationException  	32	4	replace
7	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE;  [CE]  cannot  find  symbol  POSITIVE  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.POSITIVE;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.POSITIVE;	  this.khi    =    Double.NEGATIVE;    	non-compiled	[CE]  cannot  find  symbol  POSITIVE	6	None	replace
8	[BUG]  [BUGGY]  this.gamma  =  1.0;  this.khi  =  0.0;  [CE]  variable  khi  might  already  have  been  assigned  [FE]          OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  1.0;  this.khi  =  0.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  1.0;  this.khi  =  0.0;	  this.gamma    =    0.0;    this.khi    =    0.0;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	13	None	replace
9	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI);  this.gamma  =  Double.doubleToLongBits(Math.PI);  [CE]  variable  gamma  might  already  have  been  assigned  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI);  this.gamma  =  Double.doubleToLongBits(Math.PI);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.PI);    this.gamma  =  Double.doubleToLongBits(Math.PI);	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	37	None	add
10	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI);  this.khi  =  Double.doubleToLongBits(Math.PI);  [CE]  variable  khi  might  already  have  been  assigned  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI);  this.khi  =  Double.doubleToLongBits(Math.PI);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.PI);    this.khi  =  Double.doubleToLongBits(Math.PI);	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	37	None	add
11	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI);  this.gi  =  Double.doubleToLongBits(Math.PI);  [CE]  cannot  find  symbol  gi  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI);  this.gi  =  Double.doubleToLongBits(Math.PI);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.PI);    this.gi  =  Double.doubleToLongBits(Math.PI);	  	non-compiled	[CE]  cannot  find  symbol  gi	37	None	add
12	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI);  super();  this.gamma  =  Double.doubleToLongBits(Math.PI);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI);  super();  this.gamma  =  Double.doubleToLongBits(Math.PI);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.PI);    super();  this.gamma  =  Double.doubleToLongBits(Math.PI);	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	37	None	add
13	[BUG]  [BUGGY]  This.gamma  =  1.0;  [CE]  cannot  find  symbol  This  [FE]            OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  This.gamma  =  1.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	This.gamma  =  1.0;	  this.gamma    =    1.0;    This.gamma    =    1.0;    	non-compiled	[CE]  cannot  find  symbol  This	10	None	replace
14	[BUG]  [BUGGY]  this.gamma  =  1;  this.gamma  =  1;  [CE]  variable  gamma  might  already  have  been  assigned  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  1;  this.gamma  =  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    1;    this.gamma  =  1;	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	2	None	add
15	[BUG]  [BUGGY]  this.gamma  =  1;  this.gamma  =  2;  [CE]  variable  gamma  might  already  have  been  assigned  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  1;  this.gamma  =  2;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    1;    this.gamma  =  2;	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	2	None	add
16	[BUG]  [BUGGY]  this.gamma  =  1;  this.gamma  =  0;  [CE]  variable  gamma  might  already  have  been  assigned  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  1;  this.gamma  =  0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    1;    this.gamma  =  0;	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	2	None	add
17	[BUG]  [BUGGY]  this.gamma  =  1;  this.gamma  =  3;  [CE]  variable  gamma  might  already  have  been  assigned  [FE]          OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  1;  this.gamma  =  3;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    1;    this.gamma  =  3;	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	2	None	add
18	[BUG]  [BUGGY]  this.khi  =  Double.NEGATIVE_INFINITY;  [CE]  variable  khi  might  already  have  been  assigned  [FE]                      AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.NEGATIVE_INFINITY;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.NEGATIVE_INFINITY;	  this.khi    =    Double.MIN_VALUE;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	7	None	replace
19	[BUG]  [BUGGY]  this.khi  =  Double.MAX_VALUE;  [CE]  variable  khi  might  already  have  been  assigned  [FE]                        AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.MAX_VALUE;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.MAX_VALUE;	  this.khi    =    Double.MIN_VALUE;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	7	None	replace
20	[BUG]  [BUGGY]  this.gamma  =  2.0;  this.gi  =  1.0;  [CE]  cannot  find  symbol  gi  [FE]              OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  2.0;  this.gi  =  1.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  2.0;  this.gi  =  1.0;	  this.gamma    =    1.0;    this.gi    =    1.0;    	non-compiled	[CE]  cannot  find  symbol  gi	11	None	replace
21	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]        OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  4.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  4.0;	  this.gamma    =    2.0;    this.gamma    =    2.0;    	compilable	  [FE]  OptimizationException  	16	4	replace
22	[BUG]  [BUGGY]  this.gamma  =  4.0;  [FE]  OptimizationException  [FE]        OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  4.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  4.0;	  this.gamma    =    2.0;    this.gamma    =    2.0;    	compilable	  [FE]  OptimizationException  	16	4	replace
23	[BUG]  [BUGGY]  this.gamma  =  Double.NaN;  this.gamma  =  Double.NaN;  [CE]  variable  gamma  might  already  have  been  assigned  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.NaN;  this.gamma  =  Double.NaN;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.NaN;    this.gamma  =  Double.NaN;	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	29	None	add
24	[BUG]  [BUGGY]  this.gamma  =  Double.NaN;  this.khi  =  Double.NaN;  [CE]  variable  khi  might  already  have  been  assigned  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.NaN;  this.khi  =  Double.NaN;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.NaN;    this.khi  =  Double.NaN;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	29	None	add
25	[BUG]  [BUGGY]  this.gamma  =  Double.NaN;  this.gi  =  Double.NaN;  [CE]  cannot  find  symbol  gi  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.NaN;  this.gi  =  Double.NaN;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.NaN;    this.gi  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  gi	29	None	add
26	[BUG]  [BUGGY]  this.gamma  =  Double.NaN;  this.gh  =  Double.NaN;  [CE]  cannot  find  symbol  gh  [FE]          OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.NaN;  this.gh  =  Double.NaN;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.NaN;    this.gh  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  gh	29	None	add
27	[BUG]  [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  this.gamma  =  Double.POSITIVE_INFINITY;  [CE]  variable  gamma  might  already  have  been  assigned  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  this.gamma  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.POSITIVE_INFINITY;    this.gamma  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	27	None	add
28	[BUG]  [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  This.gamma  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  This  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  This.gamma  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.POSITIVE_INFINITY;    This.gamma  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  This	27	None	add
29	[BUG]  [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  this.khi  =  Double.POSITIVE_INFINITY;  [CE]  variable  khi  might  already  have  been  assigned  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  this.khi  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.POSITIVE_INFINITY;    this.khi  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	27	None	add
30	[BUG]  [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  super();  this.gamma  =  Double.POSITIVE_INFINITY;  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  super();  this.gamma  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.POSITIVE_INFINITY;    super();  this.gamma  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	27	None	add
31	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  2;  [CE]  variable  khi  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.POSITIVE_INFINITY  +  2;	  this.khi    =    Double.POSITIVE_INFINITY    +    1;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	26	None	replace
32	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  1;  [CE]  variable  khi  might  already  have  been  assigned  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  1;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  1;	  this.khi    =    Double.POSITIVE_INFINITY    +    1;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	26	None	replace
33	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]            OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  10.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  10.0;	  this.gamma    =    0.0;    this.gamma    =    1.0;    	compilable	  [FE]  OptimizationException  	14	4	replace
34	[BUG]  [BUGGY]  this.gamma  =  10.0;  [FE]  OptimizationException  [FE]            OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  10.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  10.0;	  this.gamma    =    0.0;    this.gamma    =    1.0;    	compilable	  [FE]  OptimizationException  	14	4	replace
35	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  this.gamma  =  Double.doubleToLongBits(Math.log(this.gamma));  [CE]  variable  gamma  might  already  have  been  assigned  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  this.gamma  =  Double.doubleToLongBits(Math.log(this.gamma));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    this.gamma  =  Double.doubleToLongBits(Math.log(this.gamma));	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	35	None	add
36	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  [CE]  variable  gamma  might  already  have  been  assigned  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	35	None	add
37	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  This.gamma  =  Double.doubleToLongBits(Math.log(this.gamma));  [CE]  cannot  find  symbol  This  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  This.gamma  =  Double.doubleToLongBits(Math.log(this.gamma));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    This.gamma  =  Double.doubleToLongBits(Math.log(this.gamma));	  	non-compiled	[CE]  cannot  find  symbol  This	35	None	add
38	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  this.gamma  =  Double.doubleToLongBits(Math.log(this.cha));  [CE]  cannot  find  symbol  cha  [FE]          OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  this.gamma  =  Double.doubleToLongBits(Math.log(this.cha));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    this.gamma  =  Double.doubleToLongBits(Math.log(this.cha));	  	non-compiled	[CE]  cannot  find  symbol  cha	35	None	add
39	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  this.gamma  =  Double.doubleToLongBits(Math.log(this.ghma));  [CE]  cannot  find  symbol  ghma  [FE]            OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  this.gamma  =  Double.doubleToLongBits(Math.log(this.ghma));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    this.gamma  =  Double.doubleToLongBits(Math.log(this.ghma));	  	non-compiled	[CE]  cannot  find  symbol  ghma	35	None	add
40	[BUG]  [BUGGY]  this.gamma  =  2.0;  this.grid  =  1.0;  [CE]  cannot  find  symbol  grid  [FE]          OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  2.0;  this.grid  =  1.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  2.0;  this.grid  =  1.0;	  this.gamma    =    1.0;    this.grid    =    1.0;    	non-compiled	[CE]  cannot  find  symbol  grid	34	None	replace
41	[BUG]  [BUGGY]  this.gamma  =  0.0;  this.grid  =  1.0;  [CE]  cannot  find  symbol  grid  [FE]            OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  0.0;  this.grid  =  1.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  0.0;  this.grid  =  1.0;	  this.gamma    =    1.0;    this.grid    =    1.0;    	non-compiled	[CE]  cannot  find  symbol  grid	34	None	replace
42	[BUG]  [BUGGY]  this.gamma  =  Double.NEGATIVE;  [CE]  cannot  find  symbol  NEGATIVE  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.NEGATIVE;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.NEGATIVE;	  this.gamma    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  NEGATIVE	30	None	replace
43	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  new  Double(Double.POSITIVE_INFINITY);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  new  Double(Double.POSITIVE_INFINITY);	  this.gamma    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  OptimizationException  	28	4	replace
44	[BUG]  [BUGGY]  this.gamma  =  new  Double(Double.POSITIVE_INFINITY);  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  new  Double(Double.POSITIVE_INFINITY);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  new  Double(Double.POSITIVE_INFINITY);	  this.gamma    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  OptimizationException  	28	4	replace
45	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.POSITIVE_INFINITY  +  1;	  this.gamma    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  OptimizationException  	28	4	replace
46	[BUG]  [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY  +  1;  [FE]  OptimizationException  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.POSITIVE_INFINITY  +  1;	  this.gamma    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  OptimizationException  	28	4	replace
47	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]          OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  0.01;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  0.01;	  this.gamma    =    0.0;    this.gamma    =    0.01;    	compilable	  [FE]  AssertionError  	25	4	replace
48	[BUG]  [BUGGY]  this.gamma  =  0.01;  [FE]  AssertionError  [FE]          OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  0.01;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  0.01;	  this.gamma    =    0.0;    this.gamma    =    0.01;    	compilable	  [FE]  AssertionError  	25	4	replace
49	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  &  Double.POSITIVE_INFINITY;  [CE]  bad  operand  types  for  binary  operator  '&'  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  &  Double.POSITIVE_INFINITY;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.POSITIVE_INFINITY  &  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    |    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&'	4	None	replace
50	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [CE]  incompatible  types  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.POSITIVE_INFINITY?  Double.POSITIVE_INFINITY  :  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    |    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  incompatible  types	4	None	replace
51	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  0;	  this.gamma    =    1;    	compilable	  [FE]  OptimizationException  	3	4	replace
52	[BUG]  [BUGGY]  this.gamma  =  0;  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  0;	  this.gamma    =    1;    	compilable	  [FE]  OptimizationException  	3	4	replace
53	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.random());  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.doubleToLongBits(Math.random());	  this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	36	4	replace
54	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.random());  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.random());  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.doubleToLongBits(Math.random());	  this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	36	4	replace
55	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.rint(this.khi));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.doubleToLongBits(Math.rint(this.khi));	  this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	36	4	replace
56	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.rint(this.khi));  [FE]  OptimizationException  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.rint(this.khi));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.doubleToLongBits(Math.rint(this.khi));	  this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	36	4	replace
57	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.exp(this.khi));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.doubleToLongBits(Math.exp(this.khi));	  this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	36	4	replace
58	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.exp(this.khi));  [FE]  OptimizationException  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.exp(this.khi));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.doubleToLongBits(Math.exp(this.khi));	  this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	36	4	replace
59	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI  /  Math.PI);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.doubleToLongBits(Math.PI  /  Math.PI);	  this.gamma    =    Double.doubleToLongBits(Math.PI);    	compilable	  [FE]  OptimizationException  	38	4	replace
60	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI  /  Math.PI);  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI  /  Math.PI);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.doubleToLongBits(Math.PI  /  Math.PI);	  this.gamma    =    Double.doubleToLongBits(Math.PI);    	compilable	  [FE]  OptimizationException  	38	4	replace
61	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI  /  2);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.doubleToLongBits(Math.PI  /  2);	  this.gamma    =    Double.doubleToLongBits(Math.PI);    	compilable	  [FE]  OptimizationException  	38	4	replace
62	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI  /  2);  [FE]  OptimizationException  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI  /  2);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.doubleToLongBits(Math.PI  /  2);	  this.gamma    =    Double.doubleToLongBits(Math.PI);    	compilable	  [FE]  OptimizationException  	38	4	replace
63	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI  /  2.0);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.doubleToLongBits(Math.PI  /  2.0);	  this.gamma    =    Double.doubleToLongBits(Math.PI);    	compilable	  [FE]  OptimizationException  	38	4	replace
64	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI  /  2.0);  [FE]  OptimizationException  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI  /  2.0);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.doubleToLongBits(Math.PI  /  2.0);	  this.gamma    =    Double.doubleToLongBits(Math.PI);    	compilable	  [FE]  OptimizationException  	38	4	replace
65	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  -  2;  [CE]  variable  khi  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  -  2;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.POSITIVE_INFINITY  -  2;	  this.khi    =    Double.POSITIVE_INFINITY    -    1;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	42	None	replace
66	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi)+  1);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Math.sqrt(Math.log(this.khi)+  1);	  this.gamma    =    Math.sqrt(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	40	4	replace
67	[BUG]  [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi)+  1);  [FE]  OptimizationException  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi)+  1);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Math.sqrt(Math.log(this.khi)+  1);	  this.gamma    =    Math.sqrt(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	40	4	replace
68	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.log(Math.log(this.khi));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Math.log(Math.log(this.khi));	  this.gamma    =    Math.sqrt(Math.log(this.khi));    	compilable	  [FE]  AssertionError  	40	4	replace
69	[BUG]  [BUGGY]  this.gamma  =  Math.log(Math.log(this.khi));  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.log(Math.log(this.khi));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Math.log(Math.log(this.khi));	  this.gamma    =    Math.sqrt(Math.log(this.khi));    	compilable	  [FE]  AssertionError  	40	4	replace
70	[BUG]  [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  this.gamma  =  Math.sqrt(Math.log(this.khi));  [CE]  variable  gamma  might  already  have  been  assigned  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  this.gamma  =  Math.sqrt(Math.log(this.khi));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Math.sqrt(Math.log(this.khi));    this.gamma  =  Math.sqrt(Math.log(this.khi));	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	39	None	add
71	[BUG]  [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  this.gamma  =  Math.sqrt(Math.log(this.gamma));  [CE]  variable  gamma  might  already  have  been  assigned  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  this.gamma  =  Math.sqrt(Math.log(this.gamma));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Math.sqrt(Math.log(this.khi));    this.gamma  =  Math.sqrt(Math.log(this.gamma));	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	39	None	add
72	[BUG]  [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  this.gamma  =  Math.sqrt(Math.log(this.g));  [CE]  cannot  find  symbol  g  [FE]        AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  this.gamma  =  Math.sqrt(Math.log(this.g));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Math.sqrt(Math.log(this.khi));    this.gamma  =  Math.sqrt(Math.log(this.g));	  	non-compiled	[CE]  cannot  find  symbol  g	39	None	add
73	[BUG]  [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  this.gamma  =  Math.sqrt(Math.log(this.cha));  [CE]  cannot  find  symbol  cha  [FE]          AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  this.gamma  =  Math.sqrt(Math.log(this.cha));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Math.sqrt(Math.log(this.khi));    this.gamma  =  Math.sqrt(Math.log(this.cha));	  	non-compiled	[CE]  cannot  find  symbol  cha	39	None	add
74	[BUG]  [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  this.gamma  =  Math.sqrt(Math.log(this.k));  [CE]  cannot  find  symbol  k  [FE]            AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  this.gamma  =  Math.sqrt(Math.log(this.k));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Math.sqrt(Math.log(this.khi));    this.gamma  =  Math.sqrt(Math.log(this.k));	  	non-compiled	[CE]  cannot  find  symbol  k	39	None	add
75	[BUG]  [BUGGY]  this.gamma  =  2.0;  this.gi  =  0.0;  [CE]  cannot  find  symbol  gi  [FE]              OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  2.0;  this.gi  =  0.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  2.0;  this.gi  =  0.0;	  this.gamma    =    0.0;    this.gi    =    0.0;    	non-compiled	[CE]  cannot  find  symbol  gi	15	None	replace
76	[BUG]  [BUGGY]  this.gamma  =  0.01;  this.gi  =  0.0;  [CE]  cannot  find  symbol  gi  [FE]                OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  0.01;  this.gi  =  0.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  0.01;  this.gi  =  0.0;	  this.gamma    =    0.0;    this.gi    =    0.0;    	non-compiled	[CE]  cannot  find  symbol  gi	15	None	replace
77	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [CE]  variable  khi  might  already  have  been  assigned  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.POSITIVE_INFINITY  *  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	5	None	replace
78	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.PER_INFINITY;  [CE]  cannot  find  symbol  PER_INFINITY  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.PER_INFINITY;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.PER_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  PER_INFINITY	5	None	replace
79	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;  [CE]  variable  khi  might  already  have  been  assigned  [FE]                      AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.POSITIVE_INFINITY  +  1;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	5	None	replace
80	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(this.gamma);  [CE]  method  parseDouble  in  class  Double  cannot  be  applied  to  given  types;  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.parseDouble(this.gamma);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.parseDouble(this.gamma);	  this.khi    =    Double.parseDouble(this.khi);    	non-compiled	[CE]  method  parseDouble  in  class  Double  cannot  be  applied  to  given  types;	20	None	replace
81	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(this.gamma,  this.khi);  [CE]  method  parseDouble  in  class  Double  cannot  be  applied  to  given  types;  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.parseDouble(this.gamma,  this.khi);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.parseDouble(this.gamma,  this.khi);	  this.khi    =    Double.parseDouble(this.khi);    	non-compiled	[CE]  method  parseDouble  in  class  Double  cannot  be  applied  to  given  types;	20	None	replace
82	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(this.global);  [CE]  cannot  find  symbol  global  [FE]                      AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.parseDouble(this.global);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.parseDouble(this.global);	  this.khi    =    Double.parseDouble(this.khi);    	non-compiled	[CE]  cannot  find  symbol  global	20	None	replace
83	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(this.gramma);  [CE]  cannot  find  symbol  gramma  [FE]                        AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.parseDouble(this.gramma);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.parseDouble(this.gramma);	  this.khi    =    Double.parseDouble(this.khi);    	non-compiled	[CE]  cannot  find  symbol  gramma	20	None	replace
84	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(2.0);  this.gamma  =  Double.doubleToLongBits(2.0);  [CE]  variable  gamma  might  already  have  been  assigned  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(2.0);  this.gamma  =  Double.doubleToLongBits(2.0);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(2.0);    this.gamma  =  Double.doubleToLongBits(2.0);	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	31	None	add
85	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(2.0);  this.gamma  =  Double.doubleToLongBits(1.0);  [CE]  variable  gamma  might  already  have  been  assigned  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(2.0);  this.gamma  =  Double.doubleToLongBits(1.0);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(2.0);    this.gamma  =  Double.doubleToLongBits(1.0);	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	31	None	add
86	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(2.0);  this.gamma  =  Double.doubleToLongBits(0.0);  [CE]  variable  gamma  might  already  have  been  assigned  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(2.0);  this.gamma  =  Double.doubleToLongBits(0.0);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(2.0);    this.gamma  =  Double.doubleToLongBits(0.0);	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	31	None	add
87	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(2.0);  this.gamma  =  Double.doubleToLongBits(4.0);  [CE]  variable  gamma  might  already  have  been  assigned  [FE]          OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(2.0);  this.gamma  =  Double.doubleToLongBits(4.0);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(2.0);    this.gamma  =  Double.doubleToLongBits(4.0);	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	31	None	add
88	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  -  Double.POSITIVE_INFINITY;  [CE]  variable  khi  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  -  Double.POSITIVE_INFINITY;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.POSITIVE_INFINITY  -  Double.POSITIVE_INFINITY;	  this.khi    =    Double.POSITIVE_INFINITY    |    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	4	None	replace
89	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI)+  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.doubleToLongBits(Math.PI)+  1;	  this.gamma    =    Double.doubleToLongBits(Math.PI);    	compilable	  [FE]  OptimizationException  	38	4	replace
90	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI)+  1;  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI)+  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.doubleToLongBits(Math.PI)+  1;	  this.gamma    =    Double.doubleToLongBits(Math.PI);    	compilable	  [FE]  OptimizationException  	38	4	replace
91	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  0.5;  [CE]  variable  khi  might  already  have  been  assigned  [FE]                AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  +  0.5;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.POSITIVE_INFINITY  +  0.5;	  this.khi    =    Double.POSITIVE_INFINITY    +    1;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	26	None	replace
92	[BUG]  [BUGGY]  this.gamma  =  1;  this.gamma  =  1.0;  [CE]  variable  gamma  might  already  have  been  assigned  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  1;  this.gamma  =  1.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    1;    this.gamma  =  1.0;	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	2	None	add
93	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.NEGATIVE_INFINITY;	  this.gamma    =    Double.NaN;    	compilable	  [FE]  OptimizationException  	30	4	replace
94	[BUG]  [BUGGY]  this.gamma  =  Double.NEGATIVE_INFINITY;  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.NEGATIVE_INFINITY;	  this.gamma    =    Double.NaN;    	compilable	  [FE]  OptimizationException  	30	4	replace
95	[BUG]  [BUGGY]  this.gamma  =  Double.NaN;  this.grid  =  Double.NaN;  [CE]  cannot  find  symbol  grid  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.NaN;  this.grid  =  Double.NaN;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.NaN;    this.grid  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  grid	29	None	add
96	[BUG]  [BUGGY]  this.gamma  =  Double.NaN;  this.id  =  Double.NaN;  [CE]  cannot  find  symbol  id  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.NaN;  this.id  =  Double.NaN;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.NaN;    this.id  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  id	29	None	add
97	[BUG]  [BUGGY]  this.gamma  =  Double.NaN;  this.naN  =  Double.NaN;  [CE]  cannot  find  symbol  naN  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.NaN;  this.naN  =  Double.NaN;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.NaN;    this.naN  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  naN	29	None	add
98	[BUG]  [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  this.gi  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  gi  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  this.gi  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.POSITIVE_INFINITY;    this.gi  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  gi	27	None	add
99	[BUG]  [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  this.id  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  id  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  this.id  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.POSITIVE_INFINITY;    this.id  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  id	27	None	add
100	[BUG]  [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  this.gt  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  gt  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  this.gt  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.POSITIVE_INFINITY;    this.gt  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  gt	27	None	add
101	[BUG]  [BUGGY]  this.gamma  =  0.0;  this.khi  =  1.0;  [CE]  variable  khi  might  already  have  been  assigned  [FE]        OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  0.0;  this.khi  =  1.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  0.0;  this.khi  =  1.0;	  this.gamma    =    1.0;    this.khi    =    1.0;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	33	None	replace
102	[BUG]  [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;  [CE]  bad  operand  types  for  binary  operator  '|'  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.POSITIVE_INFINITY  |  Double.POSITIVE_INFINITY;	  this.gamma    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '|'	28	None	replace
103	[BUG]  [BUGGY]  this.gamma  =  2.0;  this.khi  =  0.0;  [CE]  variable  khi  might  already  have  been  assigned  [FE]          OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  2.0;  this.khi  =  0.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  2.0;  this.khi  =  0.0;	  this.gamma    =    0.0;    this.khi    =    0.0;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	13	None	replace
104	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  gamma  =  Double.doubleToLongBits(Math.log(this.gamma));  [CE]  variable  gamma  might  already  have  been  assigned  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  gamma  =  Double.doubleToLongBits(Math.log(this.gamma));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    gamma  =  Double.doubleToLongBits(Math.log(this.gamma));	  	non-compiled	[CE]  variable  gamma  might  already  have  been  assigned	35	None	add
105	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  this.gamma  =  Double.doubleToLongBits(Math.log(this.g));  [CE]  cannot  find  symbol  g  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  this.gamma  =  Double.doubleToLongBits(Math.log(this.g));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    this.gamma  =  Double.doubleToLongBits(Math.log(this.g));	  	non-compiled	[CE]  cannot  find  symbol  g	35	None	add
106	[BUG]  [BUGGY]  this.gamma  =  1.0;  this.gi  =  0.0;  [CE]  cannot  find  symbol  gi  [FE]              OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  1.0;  this.gi  =  0.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  1.0;  this.gi  =  0.0;	  this.gamma    =    0.0;    this.gi    =    0.0;    	non-compiled	[CE]  cannot  find  symbol  gi	15	None	replace
107	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.random());  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Math.sqrt(Math.random());	  this.gamma    =    Math.sqrt(Math.log(this.khi));    	compilable	  [FE]  AssertionError  	40	4	replace
108	[BUG]  [BUGGY]  this.gamma  =  Math.sqrt(Math.random());  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.random());  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Math.sqrt(Math.random());	  this.gamma    =    Math.sqrt(Math.log(this.khi));    	compilable	  [FE]  AssertionError  	40	4	replace
109	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.gamma));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Math.sqrt(Math.log(this.gamma));	  this.gamma    =    Math.sqrt(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	40	4	replace
110	[BUG]  [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.gamma));  [FE]  OptimizationException  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.gamma));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Math.sqrt(Math.log(this.gamma));	  this.gamma    =    Math.sqrt(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	40	4	replace
111	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.abs(this.khi));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.doubleToLongBits(Math.abs(this.khi));	  this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	36	4	replace
112	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.abs(this.khi));  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.abs(this.khi));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.doubleToLongBits(Math.abs(this.khi));	  this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	36	4	replace
113	[BUG]  [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  This.gamma  =  Math.sqrt(Math.log(this.gamma));  [CE]  cannot  find  symbol  This  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  This.gamma  =  Math.sqrt(Math.log(this.gamma));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Math.sqrt(Math.log(this.khi));    This.gamma  =  Math.sqrt(Math.log(this.gamma));	  	non-compiled	[CE]  cannot  find  symbol  This	39	None	add
114	[BUG]  [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  this.gamma  =  Math.log(this.gamma));  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  this.gamma  =  Math.log(this.gamma));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Math.sqrt(Math.log(this.khi));    this.gamma  =  Math.log(this.gamma));	  	non-compiled	[CE]  ';'  expected	39	None	add
115	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI);  this.grid  =  Double.doubleToLongBits(Math.PI);  [CE]  cannot  find  symbol  grid  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI);  this.grid  =  Double.doubleToLongBits(Math.PI);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.PI);    this.grid  =  Double.doubleToLongBits(Math.PI);	  	non-compiled	[CE]  cannot  find  symbol  grid	37	None	add
116	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI);  this.id  =  Double.doubleToLongBits(Math.PI);  [CE]  cannot  find  symbol  id  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI);  this.id  =  Double.doubleToLongBits(Math.PI);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.PI);    this.id  =  Double.doubleToLongBits(Math.PI);	  	non-compiled	[CE]  cannot  find  symbol  id	37	None	add
117	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI);  this.kip  =  Double.doubleToLongBits(Math.PI);  [CE]  cannot  find  symbol  kip  [FE]        OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI);  this.kip  =  Double.doubleToLongBits(Math.PI);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.PI);    this.kip  =  Double.doubleToLongBits(Math.PI);	  	non-compiled	[CE]  cannot  find  symbol  kip	37	None	add
118	[BUG]  [BUGGY]  this.gamma  =  0.0;  this.gi  =  1.0;  [CE]  cannot  find  symbol  gi  [FE]              OptimizationException      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  0.0;  this.gi  =  1.0;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  0.0;  this.gi  =  1.0;	  this.gamma    =    1.0;    this.gi    =    1.0;    	non-compiled	[CE]  cannot  find  symbol  gi	11	None	replace
119	[BUG]  [BUGGY]  this.grid  =  0.5  +  1;  [CE]  cannot  find  symbol  grid  [FE]            AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.grid  =  0.5  +  1;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.grid  =  0.5  +  1;	  this.grid    =    0.5;    	non-compiled	[CE]  cannot  find  symbol  grid	21	None	replace
120	[BUG]  [BUGGY]  this.grid  =  0.5  +  Math.PI;  [CE]  cannot  find  symbol  grid  [FE]              AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.grid  =  0.5  +  Math.PI;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.grid  =  0.5  +  Math.PI;	  this.grid    =    0.5;    	non-compiled	[CE]  cannot  find  symbol  grid	21	None	replace
121	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(2.0f);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.doubleToLongBits(2.0f);	  this.gamma    =    Double.doubleToLongBits(2.0);    	compilable	  [FE]  OptimizationException  	32	4	replace
122	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(2.0f);  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(2.0f);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.doubleToLongBits(2.0f);	  this.gamma    =    Double.doubleToLongBits(2.0);    	compilable	  [FE]  OptimizationException  	32	4	replace
123	[BUG]  [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  this.gamma  =  Math.sqrt(Math.log(this.gam));  [CE]  cannot  find  symbol  gam  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.log(this.khi));  this.gamma  =  Math.sqrt(Math.log(this.gam));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Math.sqrt(Math.log(this.khi));    this.gamma  =  Math.sqrt(Math.log(this.gam));	  	non-compiled	[CE]  cannot  find  symbol  gam	39	None	add
124	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.random()  *  Math.log(this.gamma));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Math.sqrt(Math.random()  *  Math.log(this.gamma));	  this.gamma    =    Math.sqrt(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	40	4	replace
125	[BUG]  [BUGGY]  this.gamma  =  Math.sqrt(Math.random()  *  Math.log(this.gamma));  [FE]  OptimizationException  [FE]    AssertionError    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Math.sqrt(Math.random()  *  Math.log(this.gamma));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Math.sqrt(Math.random()  *  Math.log(this.gamma));	  this.gamma    =    Math.sqrt(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	40	4	replace
126	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.gamma));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.doubleToLongBits(Math.log(this.gamma));	  this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	36	4	replace
127	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.gamma));  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.gamma));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.doubleToLongBits(Math.log(this.gamma));	  this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    	compilable	  [FE]  OptimizationException  	36	4	replace
128	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;  [CE]  cannot  find  symbol  DEFAULT  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.DEFAULT;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT	5	None	replace
129	[BUG]  [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.NaN;  [CE]  variable  khi  might  already  have  been  assigned  [FE]                    AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.POSITIVE_INFINITY  /  Double.NaN;  [BUGGY]      this.gamma  =  0.5;  }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.POSITIVE_INFINITY  /  Double.NaN;	  this.khi    =    Double.POSITIVE_INFINITY    /    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  variable  khi  might  already  have  been  assigned	5	None	replace
130	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  super();  this.gamma  =  Double.doubleToLongBits(Math.log(this.gamma));  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  super();  this.gamma  =  Double.doubleToLongBits(Math.log(this.gamma));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    super();  this.gamma  =  Double.doubleToLongBits(Math.log(this.gamma));	  	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	35	None	add
131	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  this.gamma  =  Double.doubleToLongBits(Math.log(this.gam));  [CE]  cannot  find  symbol  gam  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.log(this.khi));  this.gamma  =  Double.doubleToLongBits(Math.log(this.gam));  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.doubleToLongBits(Math.log(this.khi));    this.gamma  =  Double.doubleToLongBits(Math.log(this.gam));	  	non-compiled	[CE]  cannot  find  symbol  gam	35	None	add
132	[BUG]  [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  this.gamma  =  Double.POSITIVE_DECEMBER;  [CE]  cannot  find  symbol  POSITIVE_DECEMBER  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  this.gamma  =  Double.POSITIVE_DECEMBER;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.POSITIVE_INFINITY;    this.gamma  =  Double.POSITIVE_DECEMBER;	  	non-compiled	[CE]  cannot  find  symbol  POSITIVE_DECEMBER	27	None	add
133	[BUG]  [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  this.gamma  =  Double.POSITIVE_NON_INFINITY;  [CE]  cannot  find  symbol  POSITIVE_NON_INFINITY  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY;  this.gamma  =  Double.POSITIVE_NON_INFINITY;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.POSITIVE_INFINITY;    this.gamma  =  Double.POSITIVE_NON_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  POSITIVE_NON_INFINITY	27	None	add
134	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.POSITIVE_INFINITY  -  1;	  this.gamma    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  OptimizationException  	28	4	replace
135	[BUG]  [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY  -  1;  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.POSITIVE_INFINITY  -  1;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.POSITIVE_INFINITY  -  1;	  this.gamma    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  OptimizationException  	28	4	replace
136	[BUG]  [BUGGY]  this.gamma  =  Double.NaN;  this.number  =  Double.NaN;  [CE]  cannot  find  symbol  number  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.NaN;  this.number  =  Double.NaN;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.NaN;    this.number  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  number	29	None	add
137	[BUG]  [BUGGY]  this.gamma  =  Double.NaN;  this.gt  =  Double.NaN;  [CE]  cannot  find  symbol  gt  [FE]      OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.NaN;  this.gt  =  Double.NaN;  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma    =    Double.NaN;    this.gt  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  gt	29	None	add
138	[BUG]  [BUGGY]  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI  -  1);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	add	this.gamma  =  Double.doubleToLongBits(Math.PI  -  1);	  this.gamma    =    Double.doubleToLongBits(Math.PI);    	compilable	  [FE]  OptimizationException  	38	4	replace
139	[BUG]  [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI  -  1);  [FE]  OptimizationException  [FE]    OptimizationException    [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.gamma  =  Double.doubleToLongBits(Math.PI  -  1);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.gamma  =  Double.doubleToLongBits(Math.PI  -  1);	  this.gamma    =    Double.doubleToLongBits(Math.PI);    	compilable	  [FE]  OptimizationException  	38	4	replace
140	[BUG]  [BUGGY]  this.khi  =  Double.parseDouble(this.g2,  this.khi);  [CE]  cannot  find  symbol  g2  [FE]                  AssertionError      [CONTEXT]      public  MultiDirectional()  {  this.khi  =  2.0;      [BUGGY]  this.khi  =  Double.parseDouble(this.g2,  this.khi);  [BUGGY]      }  [CLASS]  MultiDirectional  [METHOD]  <init>  [RETURN_TYPE]  MultiDirectional()  [VARIABLES]  double  gamma  khi  boolean  	projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java	0.7071067811865475	47	47	2	replace	this.khi  =  Double.parseDouble(this.g2,  this.khi);	  this.khi    =    Double.parseDouble(this.khi);    	non-compiled	[CE]  cannot  find  symbol  g2	20	None	replace
