projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73finalRealPointValuePair[]reflectedSimplex=newRealPointValuePair[1];
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73finalRealPointValuePair[]reflectedSimplex=newRealPointValuePair[0];
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73finalRealPointValuePair[]reflectedSimplex=newRealPointValuePair[simplex.length];
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73Comparator<RealPointValuePair>comparator=comparator.get(original);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73Comparator<RealPointValuePair>comparator=comparator.iterate();
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73finalRealPointValuePairreflected=evaluateNewSimplex(original,1.0,comparator);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73finalRealPointValuePairreflected=evaluateNewSimplex(original,1.0,best);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73finalRealPointValuePairreflected=evaluateNewSimplex(original,4.0,comparator);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73finalRealPointValuePairreflected=evaluateNewSimplex(original,0.0,comparator);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73finalRealPointValuePairreflected=evaluateNewSimplex(original,1.0,comparator,gamma);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73Comparator<RealPointValuePair>comparator=iterateSimplex(original);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73finalRealPointValuePair[]reflectedSimplex=simplex;
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73finalRealPointValuePairreflected=evaluateNewSimplex(original,0.5,comparator);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73finalRealPointValuePairreflected=evaluateNewSimplex(original,7.0,comparator);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73Comparatorcomparator=comparator.get(original);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73Comparator<RealPointValuePair>comparator=comparator.compare(simplex,best);
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73Comparator<RealPointValuePair>comparator=comparator.create();
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java73Comparator<?>comparator=comparator.get(original);
