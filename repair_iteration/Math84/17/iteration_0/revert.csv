projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java122
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java122finaldouble[]coeff=original[i].getPointRef();
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java122double[]coeff=original[i].getPointRef();
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java122finaldouble[]coeff=original[i].getCoeff();
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java122double[]coeff=original[i].getCoeff();
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java122Double[]coeff=original[i].getPointRef();
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java122finaldouble[]xOriginal=original[i].getPointRef();
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java122finaldouble[]xOriginal=original[0].getPointRef();
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java122finaldouble[]xOriginal=original[1].getPointRef();
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java122Double[]coeff=original[i].getCoeff();
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java122finaldouble[]xOriginal=original[i].getPointOriginal();
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java122double[]coeff=original[i].getPointRef();for(intj=0;j<n;++j){xSmallest[j]+coeff*(xSmallest[j]-xSmallest[
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java122double[]coeff=original[i].getPointRef();for(intj=0;j<n;++j){xSmallest[j]+=coeff*(xSmallest[j]-xSmallest[
projects/Math84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java122double[]coeff=original[i].getPointRef();for(intj=0;j<n;++j){xSmallest[j]+=coeff*(xSmallest[j]-xSmall
