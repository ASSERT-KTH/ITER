bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
2	[BUG] [BUGGY] private static final long[] FACTORIALS = new long[] { [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] private static final long[] FACTORIALS = new long[] { [BUGGY] 1l,1l, 2l, 6l, 24l, 120l, 720l, 5040l, 40320l, 362880l,3628800l,39916800l, 479001600l, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l, 355687428096000l, 6402373705728000l, 121645100408832000l, 2432902008176640000l }; [CLASS] MathUtils  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	69	69	1	replace	
3	[BUG] [BUGGY] [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] [BUGGY] private static final long[] FACTORIALS = new long[] { 1l,1l, 2l, 6l, 24l, 120l, 720l, 5040l, 40320l, 362880l,3628800l,39916800l, 479001600l, 6227020800l, 87178291200l, 1307674368000l, 20922789888000l, 355687428096000l, 6402373705728000l, 121645100408832000l, 2432902008176640000l }; [CLASS] MathUtils  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	69	69	1	add	
4	[BUG] [BUGGY] int sum = 0; [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] int sum = 0; [BUGGY] for (int i = 0; i < p1.length; i++) { final int dp = p1[i] - p2[i]; sum += dp * dp; } return Math.sqrt(sum); } [CLASS] MathUtils [METHOD] distance [RETURN_TYPE] double  int[] p1 int[] p2 	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1624	1624	1	replace	
5	[BUG] [BUGGY] [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] [BUGGY] int sum = 0; for (int i = 0; i < p1.length; i++) { final int dp = p1[i] - p2[i]; sum += dp * dp; } return Math.sqrt(sum); } [CLASS] MathUtils [METHOD] distance [RETURN_TYPE] double  int[] p1 int[] p2 	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1624	1624	1	add	
6	[BUG] [BUGGY] for (int i = 0; i < p1.length; i++) { [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] for (int i = 0; i < p1.length; i++) { [BUGGY] final int dp = p1[i] - p2[i]; sum += dp * dp; } return Math.sqrt(sum); } [CLASS] MathUtils [METHOD] distance [RETURN_TYPE] double  int[] p1 int[] p2 	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1625	1625	1	replace	
7	[BUG] [BUGGY] [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] [BUGGY] for (int i = 0; i < p1.length; i++) { final int dp = p1[i] - p2[i]; sum += dp * dp; } return Math.sqrt(sum); } [CLASS] MathUtils [METHOD] distance [RETURN_TYPE] double  int[] p1 int[] p2 	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1625	1625	1	add	
8	[BUG] [BUGGY] final int dp = p1[i] - p2[i]; [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] final int dp = p1[i] - p2[i]; [BUGGY] sum += dp * dp; } return Math.sqrt(sum); } [CLASS] MathUtils [METHOD] distance [RETURN_TYPE] double  int[] p1 int[] p2 	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1626	1626	1	replace	
9	[BUG] [BUGGY] [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] [BUGGY] final int dp = p1[i] - p2[i]; sum += dp * dp; } return Math.sqrt(sum); } [CLASS] MathUtils [METHOD] distance [RETURN_TYPE] double  int[] p1 int[] p2 	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1626	1626	1	add	
10	[BUG] [BUGGY] sum += dp * dp; [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] sum += dp * dp; [BUGGY] } return Math.sqrt(sum); } [CLASS] MathUtils [METHOD] distance [RETURN_TYPE] double  int[] p1 int[] p2 	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	
11	[BUG] [BUGGY] [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] [BUGGY] sum += dp * dp; } return Math.sqrt(sum); } [CLASS] MathUtils [METHOD] distance [RETURN_TYPE] double  int[] p1 int[] p2 	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	add	
12	[BUG] [BUGGY] return Math.sqrt(sum); [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] return Math.sqrt(sum); [BUGGY] } [CLASS] MathUtils [METHOD] distance [RETURN_TYPE] double  int[] p1 int[] p2 	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1629	1629	1	replace	
13	[BUG] [BUGGY] [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] [BUGGY] return Math.sqrt(sum); } [CLASS] MathUtils [METHOD] distance [RETURN_TYPE] double  int[] p1 int[] p2 	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1629	1629	1	add	
14	[BUG] [BUGGY] super(); [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] super(); [BUGGY] } [CLASS] MathUtils [METHOD] <init> [RETURN_TYPE] MathUtils()  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	82	82	1	replace	
15	[BUG] [BUGGY] [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] [BUGGY] super(); } [CLASS] MathUtils [METHOD] <init> [RETURN_TYPE] MathUtils()  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	82	82	1	add	
16	[BUG] [BUGGY] } [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] } [BUGGY]  [CLASS] MathUtils [METHOD] <init> [RETURN_TYPE] MathUtils()  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	83	83	1	replace	
17	[BUG] [BUGGY] [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] [BUGGY] } [CLASS] MathUtils [METHOD] <init> [RETURN_TYPE] MathUtils()  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	83	83	1	add	
18	[BUG] [BUGGY] long s = (long)x + (long)y; [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] long s = (long)x + (long)y; [BUGGY] if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) { throw new ArithmeticException("overflow: add"); } return (int)s; } [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] int  int x int y 	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	96	96	1	replace	
19	[BUG] [BUGGY] [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] [BUGGY] long s = (long)x + (long)y; if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) { throw new ArithmeticException("overflow: add"); } return (int)s; } [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] int  int x int y 	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	96	96	1	add	
20	[BUG] [BUGGY] if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) { [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) { [BUGGY] throw new ArithmeticException("overflow: add"); } return (int)s; } [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] int  int x int y 	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	97	97	1	replace	
21	[BUG] [BUGGY] [FE] NullPointerException testPerformClusterAnalysisDegenerate [CONTEXT] [BUGGY] [BUGGY] if (s < Integer.MIN_VALUE || s > Integer.MAX_VALUE) { throw new ArithmeticException("overflow: add"); } return (int)s; } [CLASS] MathUtils [METHOD] addAndCheck [RETURN_TYPE] int  int x int y 	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.0	97	97	1	add	
