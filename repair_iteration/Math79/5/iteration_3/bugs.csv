bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Math.sqrt(dp,  declaration);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(dp,  declaration);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(dp,  declaration);	  Math.sqrt(declaration,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
2	[BUG]  [BUGGY]  Math.sqrt(sum,  declaration,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum,  declaration,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum,  declaration,  dp);	  Math.sqrt(declaration,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
3	[BUG]  [BUGGY]  Math.sqrt(declaration,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(declaration,  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(declaration,  sum);	  Math.sqrt(declaration,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
4	[BUG]  [BUGGY]  Math.sqrt(type,  declaration,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(type,  declaration,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(type,  declaration,  dp);	  Math.sqrt(declaration,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
5	[BUG]  [BUGGY]  sum  +=  Math.max(0,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(0,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(0,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE;	  sum    +=    Math.max(1,    dp)*    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
6	[BUG]  [BUGGY]  sum  +=  Math.max(1,  dp)/  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(1,  dp)/  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  dp)/  DateTimeConstants.MILLIS_PER_MINUTE;	  sum    +=    Math.max(1,    dp)*    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
7	[BUG]  [BUGGY]  sum  +=  Math.max(2,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(2,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(2,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE;	  sum    +=    Math.max(1,    dp)*    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
8	[BUG]  [BUGGY]  sum  +=  Math.max(10,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(10,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(10,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE;	  sum    +=    Math.max(1,    dp)*    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
9	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type,  dp)/  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type,  dp)/  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type,  dp)/  2;	  sum    +=    Math.sqrt(dp)/    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
10	[BUG]  [BUGGY]  sum  +=  Math.sqrt(sum)/  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(sum)/  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(sum)/  2;	  sum    +=    Math.sqrt(dp)/    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
11	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)/  2  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp)/  2  -  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)/  2  -  1;	  sum    +=    Math.sqrt(dp)/    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
12	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    DateTimeConstants.MILLIS_PER_SECOND    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
13	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND  /  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND  /  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SECOND  /  2;	  sum    +=    DateTimeConstants.MILLIS_PER_SECOND    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
14	[BUG]  [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_SECOND  /  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_SECOND  /  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dateTimeConstants.MILLIS_PER_SECOND  /  2;	  sum    +=    DateTimeConstants.MILLIS_PER_SECOND    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
15	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type  /  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type  /  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type  /  dp);	  sum    +=    Math.sqrt(type    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
16	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  *  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp  *  type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  *  type);	  sum    +=    Math.sqrt(type    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
17	[BUG]  [BUGGY]  sum  +=  Math.sqrt(declaration  *  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(declaration  *  type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(declaration  *  type);	  sum    +=    Math.sqrt(type    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
18	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  *  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  *  1)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp  *  1)];	  int[]    p2    =    new    int[Math.abs(dp    +    1)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
19	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  *  1  +  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  *  1  +  1)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp  *  1  +  1)];	  int[]    p2    =    new    int[Math.abs(dp    +    1)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
20	[BUG]  [BUGGY]  int[]  p2  =  new  int[size()  *  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[size()  *  1];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[size()  *  1];	  int[]    p2    =    new    int[size()    +    1];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
21	[BUG]  [BUGGY]  int[]  p2  =  new  int[size()  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[size()  1];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[size()  1];	  int[]    p2    =    new    int[size()    +    1];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	41	None	replace
22	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)+  Math.abs(sum));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)+  Math.abs(sum));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)+  Math.abs(sum));	  Math.sqrt(Math.abs(dp)+    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
23	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum)+  Math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum)+  Math.abs(dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum)+  Math.abs(dp));	  Math.sqrt(Math.abs(dp)+    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
24	[BUG]  [BUGGY]  Math.sqrt(sum,  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum,  dp  *  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum,  dp  *  dp);	  Math.sqrt(dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
25	[BUG]  [BUGGY]  Math.sqrt(sum  +  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum  +  dp  *  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum  +  dp  *  dp);	  Math.sqrt(dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
26	[BUG]  [BUGGY]  Math.sqrt(sum  /  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum  /  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum  /  dp);	  Math.sqrt(dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
27	[BUG]  [BUGGY]  Math.sqrt(dp  /  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(dp  /  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(dp  /  dp);	  Math.sqrt(dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
28	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(mapping,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(mapping,  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(mapping,  sum);	  int[]    p2    =(int[])Math.rint(mapping,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
29	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(mapping,  dp,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(mapping,  dp,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(mapping,  dp,  dp);	  int[]    p2    =(int[])Math.rint(mapping,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
30	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(mapping,  dp,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(mapping,  dp,  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(mapping,  dp,  sum);	  int[]    p2    =(int[])Math.rint(mapping,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
31	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(mapping,  dp,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(mapping,  dp,  0);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(mapping,  dp,  0);	  int[]    p2    =(int[])Math.rint(mapping,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
32	[BUG]  [BUGGY]  sum  +=  Math.pow(10,  dp  /  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.pow(10,  dp  /  2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.pow(10,  dp  /  2);	  sum    +=    Math.pow(10,    dp    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
33	[BUG]  [BUGGY]  sum  +=  Math.pow(10,  dp  *  2  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.pow(10,  dp  *  2  -  1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.pow(10,  dp  *  2  -  1);	  sum    +=    Math.pow(10,    dp    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
34	[BUG]  [BUGGY]  sum  +=  Math.pow(10,  dp  -  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.pow(10,  dp  -  2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.pow(10,  dp  -  2);	  sum    +=    Math.pow(10,    dp    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
35	[BUG]  [BUGGY]  sum  +=  Math.pow(10,  Math.pow(10,  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.pow(10,  Math.pow(10,  dp));  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.pow(10,  Math.pow(10,  dp));	  sum    +=    Math.pow(10,    dp    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
36	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum,  type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.sqrt(sum,  type);	  int[]    p2    =    new    int[Math.sqrt(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
37	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(type)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(type)];  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(type)];	  int[]    p2    =    new    int[Math.sqrt(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
38	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(type));  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(type));  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(type));	  int[]    p2    =    new    int[Math.sqrt(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
39	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  2;	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
40	[BUG]  [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_DAY  /  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_DAY  /  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dateTimeConstants.MILLIS_PER_DAY  /  2;	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
41	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DAY;	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
42	[BUG]  [BUGGY]  sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_SECOND  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_SECOND  -  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_SECOND  -  1;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
43	[BUG]  [BUGGY]  sum  +=  Math.abs(dp)/  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp)/  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp)/  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
44	[BUG]  [BUGGY]  sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_SECOND  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_SECOND  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_SECOND  +  1;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
45	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(sum  /  dp)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(sum  /  dp)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(sum  /  dp)];	  int[]    p2    =    new    int[Math.abs(dp    /    dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	116	None	replace
46	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(sum  *  dp)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(sum  *  dp)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(sum  *  dp)];	  int[]    p2    =    new    int[Math.abs(dp    /    dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	116	None	replace
47	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  +  dp)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  +  dp)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp  +  dp)];	  int[]    p2    =    new    int[Math.abs(dp    /    dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	116	None	replace
48	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum,  dp  *  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(sum,  dp  *  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum,  dp  *  dp));	  Math.sqrt(Math.log(sum,    dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
49	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum,  dp  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(sum,  dp  +  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum,  dp  +  1));	  Math.sqrt(Math.log(sum,    dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
50	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp),  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp),  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp),  sum);	  Math.sqrt(Math.abs(sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
51	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  -  sum));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  -  sum));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  -  sum));	  Math.sqrt(Math.abs(sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
52	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum  -  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum  -  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum  -  dp));	  Math.sqrt(Math.abs(sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
53	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  DateTimeConstants.MILLIS_PER_HOUR;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  DateTimeConstants.MILLIS_PER_HOUR;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  DateTimeConstants.MILLIS_PER_HOUR;	  sum    +=    DateTimeConstants.MILLIS_PER_HOUR    /    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	114	None	replace
54	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR)/  DateTimeConstants.MILLIS_PER_HOUR;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR)/  DateTimeConstants.MILLIS_PER_HOUR;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR)/  DateTimeConstants.MILLIS_PER_HOUR;	  sum    +=    DateTimeConstants.MILLIS_PER_HOUR    /    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	114	None	replace
55	[BUG]  [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_HOUR  *  DateTimeConstants.MILLIS_PER_HOUR;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_HOUR  *  DateTimeConstants.MILLIS_PER_HOUR;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dateTimeConstants.MILLIS_PER_HOUR  *  DateTimeConstants.MILLIS_PER_HOUR;	  sum    +=    DateTimeConstants.MILLIS_PER_HOUR    /    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	114	None	replace
56	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(random()  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(random()  *  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(random()  *  dp);	  int[]    p2    =(int[])Math.rint(random()    -    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
57	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(random()  /  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(random()  /  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(random()  /  dp);	  int[]    p2    =(int[])Math.rint(random()    -    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
58	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(random()  +  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(random()  +  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(random()  +  dp);	  int[]    p2    =(int[])Math.rint(random()    -    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
59	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(random()  -  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(random()  -  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(random()  -  sum);	  int[]    p2    =(int[])Math.rint(random()    -    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	93	None	replace
60	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  dp,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  dp,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.floor(sum,  dp,  dp);	  int[]    p2    =(int[])Math.floor(sum,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
61	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  dp  *  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.floor(sum,  dp  *  dp);	  int[]    p2    =(int[])Math.floor(sum,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
62	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  dp  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  dp  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.floor(sum,  dp  +  1);	  int[]    p2    =(int[])Math.floor(sum,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
63	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  dp  *  dp,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  dp  *  dp,  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  dp  *  dp,  sum);	  Math.sqrt(Math.abs(dp)/    dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
64	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  dp  *  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  dp  *  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  dp  *  sum);	  Math.sqrt(Math.abs(dp)/    dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
65	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  sum,  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  sum,  dp  *  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  sum,  dp  *  dp);	  Math.sqrt(Math.abs(dp)/    dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
66	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum)/  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum)/  dp  *  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum)/  dp  *  dp);	  Math.sqrt(Math.abs(dp)/    dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	31	None	replace
67	[BUG]  [BUGGY]  sum  +=  Math.sqrt(sum,  p  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(sum,  p  *  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(sum,  p  *  dp);	  sum    +=    Math.sqrt(sum,    dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
68	[BUG]  [BUGGY]  sum  +=  Math.sqrt(declaration,  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(declaration,  dp  *  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(declaration,  dp  *  dp);	  sum    +=    Math.sqrt(sum,    dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
69	[BUG]  [BUGGY]  sum  +=  Math.sqrt(definition,  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(definition,  dp  *  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(definition,  dp  *  dp);	  sum    +=    Math.sqrt(sum,    dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
70	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp,  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp,  dp  *  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp,  dp  *  dp);	  sum    +=    Math.sqrt(sum,    dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
71	[BUG]  [BUGGY]  Math.sqrt(Math.log(dp  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(dp  -  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(dp  -  1));	  Math.sqrt(Math.log(sum    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
72	[BUG]  [BUGGY]  Math.sqrt(Math.log(dp,  sum  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(dp,  sum  -  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(dp,  sum  -  1));	  Math.sqrt(Math.log(sum    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
73	[BUG]  [BUGGY]  Math.sqrt(Math.log(dp  *  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(dp  *  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(dp  *  dp));	  Math.sqrt(Math.log(sum    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
74	[BUG]  [BUGGY]  sum  +=  dp  /  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  dp  /  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dp  /  DateTimeConstants.MILLIS_PER_MINUTE;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    /    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
75	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE  /  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE  /  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE  /  dp);	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    /    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	79	None	replace
76	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  2;	  sum    +=    DateTimeConstants.MILLIS_PER_HOUR    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
77	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_HOUR;	  sum    +=    DateTimeConstants.MILLIS_PER_HOUR    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
78	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  4;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  4;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  4;	  sum    +=    DateTimeConstants.MILLIS_PER_HOUR    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
79	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)/  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)/  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)/  DateTimeConstants.MILLIS_PER_WEEK;	  sum    +=    DateTimeConstants.MILLIS_PER_WEEK    /    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
80	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_WEEK  *  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_WEEK  *  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_WEEK  *  DateTimeConstants.MILLIS_PER_WEEK;	  sum    +=    DateTimeConstants.MILLIS_PER_WEEK    /    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
81	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_WEEK)/  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_WEEK)/  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_WEEK)/  DateTimeConstants.MILLIS_PER_WEEK;	  sum    +=    DateTimeConstants.MILLIS_PER_WEEK    /    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
82	[BUG]  [BUGGY]  Math.sqrt(sum  +  1,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum  +  1,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum  +  1,  dp);	  Math.sqrt(sum    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
83	[BUG]  [BUGGY]  Math.sqrt(sum,  dp  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum,  dp  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum,  dp  +  1);	  Math.sqrt(sum    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
84	[BUG]  [BUGGY]  Math.sqrt(sum,  sum  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum,  sum  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum,  sum  +  1);	  Math.sqrt(sum    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
85	[BUG]  [BUGGY]  sum  +=  Math.max(0,  dp  /  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(0,  dp  /  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(0,  dp  /  DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    Math.max(0,    dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
86	[BUG]  [BUGGY]  sum  +=  Math.max(0,  Math.min(dp,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(0,  Math.min(dp,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE));  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(0,  Math.min(dp,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE));	  sum    +=    Math.max(0,    dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
87	[BUG]  [BUGGY]  sum  +=  Math.max(0,  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(0,  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE));  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(0,  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE));	  sum    +=    Math.max(0,    dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
88	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_DAY;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_DAY;	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    /    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
89	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  DateTimeConstants.MILLIS_PER_DAY  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  DateTimeConstants.MILLIS_PER_DAY  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  DateTimeConstants.MILLIS_PER_DAY  +  1;	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    /    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
90	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    /    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
91	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	113	None	replace
92	[BUG]  [BUGGY]  sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	113	None	replace
93	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_DAY  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_DAY  -  1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_DAY  -  1);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	113	None	replace
94	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  /  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp  /  2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  /  2);	  sum    +=    Math.abs(dp    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	124	None	replace
95	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  *  2  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp  *  2  -  1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  *  2  -  1);	  sum    +=    Math.abs(dp    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	124	None	replace
96	[BUG]  [BUGGY]  sum  +=  Math.abs(dp)/  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp)/  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp)/  2;	  sum    +=    Math.abs(dp    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	124	None	replace
97	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.rint(distance)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.rint(distance)];  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.rint(distance)];	  int[]    p2    =    new    int[Math.log(distance)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	120	None	replace
98	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(distance,  distance)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.log(distance,  distance)];  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(distance,  distance)];	  int[]    p2    =    new    int[Math.log(distance)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	120	None	replace
99	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(distance)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(distance)];  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(distance)];	  int[]    p2    =    new    int[Math.log(distance)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	120	None	replace
100	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  Math.max(1,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  Math.max(1,  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  Math.max(1,  dp);	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
101	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  2;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
102	[BUG]  [BUGGY]  sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
103	[BUG]  [BUGGY]  sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
104	[BUG]  [BUGGY]  sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
105	[BUG]  [BUGGY]  sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
106	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  *  declaration);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp  *  declaration);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  *  declaration);	  sum    +=    Math.sqrt(declaration    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
107	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type,  declaration  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type,  declaration  *  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type,  declaration  *  dp);	  sum    +=    Math.sqrt(declaration    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
108	[BUG]  [BUGGY]  sum  +=  Math.sqrt(declaration  *  dp,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(declaration  *  dp,  type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(declaration  *  dp,  type);	  sum    +=    Math.sqrt(declaration    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
109	[BUG]  [BUGGY]  sum  +=  Math.sqrt(declaration  *  type,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(declaration  *  type,  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(declaration  *  type,  dp);	  sum    +=    Math.sqrt(declaration    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
110	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  1;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    -    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
111	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  DateTimeConstants.MILLIS_PER_MINUTE  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  DateTimeConstants.MILLIS_PER_MINUTE  -  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  DateTimeConstants.MILLIS_PER_MINUTE  -  1;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    -    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
112	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  -  1L;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  -  1L;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  -  1L;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    -    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	81	None	replace
113	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp)/  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(dp)/  1];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp)/  1];	  int[]    p2    =    new    int[Math.abs(dp)+    1];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
114	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp)%  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(dp)%  1];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp)%  1];	  int[]    p2    =    new    int[Math.abs(dp)+    1];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
115	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp)-  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(dp)-  1];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp)-  1];	  int[]    p2    =    new    int[Math.abs(dp)+    1];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
116	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  *  dp)/  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  *  dp)/  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  *  dp)/  sum);	  Math.sqrt(Math.abs(dp    *    dp)/    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
117	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum  *  dp)/  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum  *  dp)/  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum  *  dp)/  dp);	  Math.sqrt(Math.abs(dp    *    dp)/    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
118	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  *  dp)/  sum,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  *  dp)/  sum,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  *  dp)/  sum,  dp);	  Math.sqrt(Math.abs(dp    *    dp)/    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
119	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  /  dp)/  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  /  dp)/  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  /  dp)/  dp);	  Math.sqrt(Math.abs(dp    *    dp)/    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
120	[BUG]  [BUGGY]  Math.min(sum,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.min(sum,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.min(sum,  dp);	  Math.sqrt(dp,    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
121	[BUG]  [BUGGY]  Math.log(sum,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.log(sum,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.log(sum,  dp);	  Math.sqrt(dp,    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
122	[BUG]  [BUGGY]  sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
123	[BUG]  [BUGGY]  sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
124	[BUG]  [BUGGY]  sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
125	[BUG]  [BUGGY]  Math.sqrt(Math.pow(10,  sum  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.pow(10,  sum  -  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.pow(10,  sum  -  1));	  Math.sqrt(Math.pow(10,    sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
126	[BUG]  [BUGGY]  Math.sqrt(Math.pow(10,  sum  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.pow(10,  sum  +  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.pow(10,  sum  +  1));	  Math.sqrt(Math.pow(10,    sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
127	[BUG]  [BUGGY]  Math.sqrt(Math.pow(10,  sum)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.pow(10,  sum)+  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.pow(10,  sum)+  1);	  Math.sqrt(Math.pow(10,    sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
128	[BUG]  [BUGGY]  Math.sqrt(Math.pow(10,  sum),  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.pow(10,  sum),  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.pow(10,  sum),  dp);	  Math.sqrt(Math.pow(10,    sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	111	None	replace
129	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  dp;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  dp;	  sum    +=    DateTimeConstants.MILLIS_PER_HOUR    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
130	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  Math.max(1,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  Math.max(1,  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  Math.max(1,  dp);	  sum    +=    DateTimeConstants.MILLIS_PER_HOUR    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
131	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  -  1)*  Math.abs(sum));  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  -  1)*  Math.abs(sum));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  -  1)*  Math.abs(sum));	  Math.sqrt(Math.abs(dp    -    1)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	123	None	replace
132	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  *  dp)*  Math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  *  dp)*  Math.abs(dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  *  dp)*  Math.abs(dp));	  Math.sqrt(Math.abs(dp    -    1)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	123	None	replace
133	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum  -  1)*  Math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum  -  1)*  Math.abs(dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum  -  1)*  Math.abs(dp));	  Math.sqrt(Math.abs(dp    -    1)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	123	None	replace
134	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  -  1)/  Math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  -  1)/  Math.abs(dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  -  1)/  Math.abs(dp));	  Math.sqrt(Math.abs(dp    -    1)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	123	None	replace
135	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(dp)/  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.log(dp)/  1];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(dp)/  1];	  int[]    p2    =    new    int[Math.log(dp)+    1];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
136	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.rint(dp)+  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.rint(dp)+  1];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.rint(dp)+  1];	  int[]    p2    =    new    int[Math.log(dp)+    1];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
137	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(dp)+  2];  [CE]  invalid  method  declaration;  return  type  required  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.log(dp)+  2];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(dp)+  2];	  int[]    p2    =    new    int[Math.log(dp)+    1];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
138	[BUG]  [BUGGY]  Math.sqrt(Math.pow(10,  dp  *  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.pow(10,  dp  *  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.pow(10,  dp  *  dp));	  Math.sqrt(Math.pow(10,    dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
139	[BUG]  [BUGGY]  Math.sqrt(Math.pow(10,  dp)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.pow(10,  dp)+  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.pow(10,  dp)+  1);	  Math.sqrt(Math.pow(10,    dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
140	[BUG]  [BUGGY]  Math.sqrt(Math.pow(10,  dp  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.pow(10,  dp  +  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.pow(10,  dp  +  1));	  Math.sqrt(Math.pow(10,    dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	77	None	replace
141	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
142	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
143	[BUG]  [BUGGY]  sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
144	[BUG]  [BUGGY]  sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
145	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  sum  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  sum  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  sum  +  1);	  int[]    p2    =(int[])Math.rint(sum    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
146	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum  +  1,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum  +  1,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum  +  1,  dp);	  int[]    p2    =(int[])Math.rint(sum    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
147	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum  *  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum  *  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum  *  1);	  int[]    p2    =(int[])Math.rint(sum    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
148	[BUG]  [BUGGY]  sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
149	[BUG]  [BUGGY]  sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
150	[BUG]  [BUGGY]  sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
151	[BUG]  [BUGGY]  sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
152	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(sum  +  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(sum  +  1)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(sum  +  1)];	  int[]    p2    =    new    int[Math.abs(sum)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
153	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(sum  -  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(sum  -  1)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(sum  -  1)];	  int[]    p2    =    new    int[Math.abs(sum)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
154	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(sum)+  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(sum)+  1];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(sum)+  1];	  int[]    p2    =    new    int[Math.abs(sum)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
155	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp,  type  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp,  type  *  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp,  type  *  dp);	  sum    +=    Math.sqrt(type,    dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
156	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type,  p  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type,  p  *  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type,  p  *  dp);	  sum    +=    Math.sqrt(type,    dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
157	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type,  dp  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type,  dp  *  2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type,  dp  *  2);	  sum    +=    Math.sqrt(type,    dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
158	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.rint(sum)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.rint(sum)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.rint(sum)];	  int[]    p2    =    new    int[Math.rint(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
159	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.rint(sum,  dp)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.rint(sum,  dp)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.rint(sum,  dp)];	  int[]    p2    =    new    int[Math.rint(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
160	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.rint(mapping,  dp)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.rint(mapping,  dp)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.rint(mapping,  dp)];	  int[]    p2    =    new    int[Math.rint(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
161	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.rint(dp,  dp)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.rint(dp,  dp)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.rint(dp,  dp)];	  int[]    p2    =    new    int[Math.rint(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
162	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(sum,  dp)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.log(sum,  dp)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(sum,  dp)];	  int[]    p2    =    new    int[Math.log(dp,    sum)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
163	[BUG]  [BUGGY]  int[]  p2  =  new  int[size()  /  2];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[size()  /  2];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[size()  /  2];	  int[]    p2    =    new    int[size()    *    2];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
164	[BUG]  [BUGGY]  int[]  p2  =  new  int[size()  -  2];  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[size()  -  2];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[size()  -  2];	  int[]    p2    =    new    int[size()    *    2];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
165	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  dp  *  dp  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  dp  *  dp  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  dp  *  dp  +  1);	  Math.sqrt(Math.abs(dp)/    dp    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
166	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  dp,  sum  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  dp,  sum  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  dp,  sum  +  1);	  Math.sqrt(Math.abs(dp)/    dp    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
167	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  *  dp)/  dp  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  *  dp)/  dp  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  *  dp)/  dp  +  1);	  Math.sqrt(Math.abs(dp)/    dp    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
168	[BUG]  [BUGGY]  sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
169	[BUG]  [BUGGY]  sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
170	[BUG]  [BUGGY]  sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
171	[BUG]  [BUGGY]  sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
172	[BUG]  [BUGGY]  sum  +=  Math.sqrt(sum  /  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(sum  /  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(sum  /  dp);	  sum    +=    Math.sqrt(dp    /    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
173	[BUG]  [BUGGY]  int[]  p2  =  Math.sqrt(sum,  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  Math.sqrt(sum,  1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  Math.sqrt(sum,  1);	  int[]    p2    =    Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
174	[BUG]  [BUGGY]  int[]  p2  =  Math.sqrt(type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  Math.sqrt(type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  Math.sqrt(type);	  int[]    p2    =    Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
175	[BUG]  [BUGGY]  int[]  p2  =  Math.sqrt(sum,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  Math.sqrt(sum,  type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  Math.sqrt(sum,  type);	  int[]    p2    =    Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
176	[BUG]  [BUGGY]  int[]  p2  =  Math.sqrt(sum,  distance);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  Math.sqrt(sum,  distance);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  Math.sqrt(sum,  distance);	  int[]    p2    =    Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
177	[BUG]  [BUGGY]  sum  +=  Math.abs(dp)/  DateTimeConstants.MILLIS_PER_HOUR;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp)/  DateTimeConstants.MILLIS_PER_HOUR;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp)/  DateTimeConstants.MILLIS_PER_HOUR;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
178	[BUG]  [BUGGY]  sum  +=  Math.abs(type)*  DateTimeConstants.MILLIS_PER_HOUR;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(type)*  DateTimeConstants.MILLIS_PER_HOUR;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(type)*  DateTimeConstants.MILLIS_PER_HOUR;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
179	[BUG]  [BUGGY]  sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_HOUR  /  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_HOUR  /  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_HOUR  /  2;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
180	[BUG]  [BUGGY]  sum  +=  2  *  DateTimeConstants.MILLIS_PER_SECOND  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  2  *  DateTimeConstants.MILLIS_PER_SECOND  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  2  *  DateTimeConstants.MILLIS_PER_SECOND  +  1;	  sum    +=    2    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
181	[BUG]  [BUGGY]  sum  +=  2  *  DateTimeConstants.MILLIS_PER_SECOND  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  2  *  DateTimeConstants.MILLIS_PER_SECOND  -  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  2  *  DateTimeConstants.MILLIS_PER_SECOND  -  1;	  sum    +=    2    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
182	[BUG]  [BUGGY]  sum  +=  3  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  3  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  3  *  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    2    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
183	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum),  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum),  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum),  dp);	  int[]    p2    =(int[])Math.rint(dp,    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
184	[BUG]  [BUGGY]  float[]  p2  =(float[])Math.rint(dp,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  float[]  p2  =(float[])Math.rint(dp,  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	float[]  p2  =(float[])Math.rint(dp,  sum);	  int[]    p2    =(int[])Math.rint(dp,    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
185	[BUG]  [BUGGY]  Math.sqrt(dp,  dp  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(dp,  dp  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(dp,  dp  +  1);	  Math.sqrt(dp    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
186	[BUG]  [BUGGY]  Math.sqrt(dp,  sum  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(dp,  sum  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(dp,  sum  +  1);	  Math.sqrt(dp    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
187	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  *  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  *  dp;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SIZE  *  dp;	  sum    +=    DateTimeConstants.MILLIS_PER_SIZE    /    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
188	[BUG]  [BUGGY]  sum  +=  dp  /  DateTimeConstants.MILLIS_PER_SIZE;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  dp  /  DateTimeConstants.MILLIS_PER_SIZE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dp  /  DateTimeConstants.MILLIS_PER_SIZE;	  sum    +=    DateTimeConstants.MILLIS_PER_SIZE    /    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
189	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE  /  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE  /  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE  /  dp);	  sum    +=    DateTimeConstants.MILLIS_PER_SIZE    /    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
190	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE  *  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE  *  dp);	  sum    +=    DateTimeConstants.MILLIS_PER_SIZE    /    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
191	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum)+  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum)+  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum)+  dp);	  Math.sqrt(Math.abs(dp)+    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
192	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)+  sum,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)+  sum,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)+  sum,  dp);	  Math.sqrt(Math.abs(dp)+    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
193	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)*  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)*  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)*  sum);	  Math.sqrt(Math.abs(dp)+    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
194	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  /  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp  /  2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  /  2);	  sum    +=    dp    /    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
195	[BUG]  [BUGGY]  sum  +=  Math.max(sum,  dp  /  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(sum,  dp  /  2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(sum,  dp  /  2);	  sum    +=    dp    /    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	33	None	replace
196	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  DateTimeConstants.MILLIS_PER_MINUTE;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    /    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	117	None	replace
197	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_MINUTE  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_MINUTE  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_MINUTE  +  1;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    /    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	117	None	replace
198	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_MINUTE  *  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_MINUTE  *  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_MINUTE  *  2;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    /    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	117	None	replace
199	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum,  distance);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum,  distance);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.sqrt(sum,  distance);	  int[]    p2    =    new    int[Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
200	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum,  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum,  1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.sqrt(sum,  1);	  int[]    p2    =    new    int[Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
201	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.sqrt(distance);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.sqrt(distance);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.sqrt(distance);	  int[]    p2    =    new    int[Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
202	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.sqrt(declaration,sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.sqrt(declaration,sum);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.sqrt(declaration,sum);	  int[]    p2    =    new    int[Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
203	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
204	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
205	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
206	[BUG]  [BUGGY]  sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
207	[BUG]  [BUGGY]  sum  +=  Math.abs(dp)/  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp)/  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp)/  DateTimeConstants.MILLIS_PER_WEEK;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
208	[BUG]  [BUGGY]  sum  +=  Math.abs(type)*  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(type)*  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(type)*  DateTimeConstants.MILLIS_PER_WEEK;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
209	[BUG]  [BUGGY]  sum  +=  Math.abs(sqrt)*  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(sqrt)*  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(sqrt)*  DateTimeConstants.MILLIS_PER_WEEK;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
210	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
211	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY,  dp  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY,  dp  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY,  dp  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
212	[BUG]  [BUGGY]  sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
213	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY,  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY,  dp);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
214	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.log(sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.log(sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.log(sum);	  int[]    p2    =(int[])Math.log(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
215	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.log(sum,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.log(sum,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.log(sum,  dp);	  int[]    p2    =(int[])Math.log(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
216	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.log(dp,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.log(dp,  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.log(dp,  sum);	  int[]    p2    =(int[])Math.log(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
217	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
218	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
219	[BUG]  [BUGGY]  sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
220	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_SECOND);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	109	None	replace
221	[BUG]  [BUGGY]  sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_SECOND);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	109	None	replace
222	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_SECOND  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_SECOND  *  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_SECOND  *  dp);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	109	None	replace
223	[BUG]  [BUGGY]  Math.sqrt(Math.log(dp)+  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(dp)+  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(dp)+  sum);	  Math.sqrt(Math.log(sum)+    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
224	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum)/  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(sum)/  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum)/  dp);	  Math.sqrt(Math.log(sum)+    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
225	[BUG]  [BUGGY]  Math.sqrt(Math.log(dp)+  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(dp)+  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(dp)+  dp);	  Math.sqrt(Math.log(sum)+    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
226	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_MINUTE  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_MINUTE  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_MINUTE  +  1;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
227	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)/  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp)/  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)/  DateTimeConstants.MILLIS_PER_MINUTE;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
228	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE,  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE,  dp);	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
229	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY)*  DateTimeConstants.MILLIS_PER_DAY;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY)*  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY)*  DateTimeConstants.MILLIS_PER_DAY;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
230	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)/  DateTimeConstants.MILLIS_PER_DAY;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp)/  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)/  DateTimeConstants.MILLIS_PER_DAY;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
231	[BUG]  [BUGGY]  sum  +=  Math.sqrt(millis)*  DateTimeConstants.MILLIS_PER_DAY;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(millis)*  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(millis)*  DateTimeConstants.MILLIS_PER_DAY;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
232	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type)*  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type)*  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type)*  DateTimeConstants.MILLIS_PER_WEEK;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
233	[BUG]  [BUGGY]  sum  +=  Math.sqrt(millis)*  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(millis)*  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(millis)*  DateTimeConstants.MILLIS_PER_WEEK;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
234	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK,  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK,  dp);	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
235	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  *  DateTimeConstants.MILLIS_PER_SIZE;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  *  DateTimeConstants.MILLIS_PER_SIZE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SIZE  *  DateTimeConstants.MILLIS_PER_SIZE;	  sum    +=    DateTimeConstants.MILLIS_PER_SIZE    /    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
236	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE  +  1;	  sum    +=    DateTimeConstants.MILLIS_PER_SIZE    /    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
237	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE  *  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE  *  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE  *  2;	  sum    +=    DateTimeConstants.MILLIS_PER_SIZE    /    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	87	None	replace
238	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(type,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(type,  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(type,  sum);	  int[]    p2    =(int[])Math.rint(sum,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	121	None	replace
239	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  type,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  type,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  type,  dp);	  int[]    p2    =(int[])Math.rint(sum,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	121	None	replace
240	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  dp,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  dp,  type);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  dp,  type);	  int[]    p2    =(int[])Math.rint(sum,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	121	None	replace
241	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  type,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  type,  0);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  type,  0);	  int[]    p2    =(int[])Math.rint(sum,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	121	None	replace
242	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)*  Math.abs(sum  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)*  Math.abs(sum  -  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)*  Math.abs(sum  -  1));	  Math.sqrt(Math.abs(dp)*    Math.abs(dp    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	107	None	replace
243	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)*  Math.abs(dp  -  1),  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)*  Math.abs(dp  -  1),  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)*  Math.abs(dp  -  1),  sum);	  Math.sqrt(Math.abs(dp)*    Math.abs(dp    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	107	None	replace
244	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)*  Math.abs(dp  *  dp  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)*  Math.abs(dp  *  dp  -  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)*  Math.abs(dp  *  dp  -  1));	  Math.sqrt(Math.abs(dp)*    Math.abs(dp    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	107	None	replace
245	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum)*  Math.abs(dp  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum)*  Math.abs(dp  -  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum)*  Math.abs(dp  -  1));	  Math.sqrt(Math.abs(dp)*    Math.abs(dp    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	107	None	replace
246	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  *  dp  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  *  dp  +  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  *  dp  +  1));	  Math.sqrt(Math.abs(dp    +    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
247	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  +  1),  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  +  1),  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  +  1),  sum);	  Math.sqrt(Math.abs(dp    +    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
248	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  /  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  /  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  /  1));	  Math.sqrt(Math.abs(dp    +    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
249	[BUG]  [BUGGY]  sum  +=  dp  /  DateTimeConstants.MILLIS_PER_DAY;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  dp  /  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dp  /  DateTimeConstants.MILLIS_PER_DAY;	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    /    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
250	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  *  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  *  dp;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DAY  *  dp;	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    /    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
251	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY  /  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY  /  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY  /  dp);	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    /    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
252	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY)/  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY)/  dp;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY)/  dp;	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    /    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	40	None	replace
253	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  *  dp)+  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  *  dp)+  1];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp  *  dp)+  1];	  int[]    p2    =    new    int[Math.abs(dp    *    dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
254	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  *  sum)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  *  sum)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp  *  sum)];	  int[]    p2    =    new    int[Math.abs(dp    *    dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
255	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.floor(sum  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.floor(sum  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.floor(sum  +  1);	  int[]    p2    =(int[])Math.floor(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
256	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  distance);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  distance);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.floor(sum,  distance);	  int[]    p2    =(int[])Math.floor(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
257	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  Math.abs(sum));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  Math.abs(sum));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  Math.abs(sum));	  Math.sqrt(Math.abs(dp)/    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
258	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum)/  Math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum)/  Math.abs(dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum)/  Math.abs(dp));	  Math.sqrt(Math.abs(dp)/    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
259	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  Math.abs(sum,  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  Math.abs(sum,  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  Math.abs(sum,  dp));	  Math.sqrt(Math.abs(dp)/    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
260	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  *  dp)/  Math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  *  dp)/  Math.abs(dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  *  dp)/  Math.abs(dp));	  Math.sqrt(Math.abs(dp)/    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
261	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.ceil(sum,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.ceil(sum,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.ceil(sum,  dp);	  int[]    p2    =(int[])Math.floor(dp,    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	70	None	replace
262	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  0,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  0,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  0,  dp);	  int[]    p2    =(int[])Math.rint(sum,    0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
263	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  2);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  2);	  int[]    p2    =(int[])Math.rint(sum,    0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
264	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  3);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  3);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  3);	  int[]    p2    =(int[])Math.rint(sum,    0);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
265	[BUG]  [BUGGY]  Math.sqrt(dp,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(dp,  type);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(dp,  type);	  Math.sqrt(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
266	[BUG]  [BUGGY]  Math.sqrt(sum,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum,  type);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum,  type);	  Math.sqrt(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
267	[BUG]  [BUGGY]  Math.sqrt(Math.log(dp  *  dp  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(dp  *  dp  +  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(dp  *  dp  +  1));	  Math.sqrt(Math.log(dp    +    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
268	[BUG]  [BUGGY]  Math.sqrt(Math.log(dp  +  1),  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(dp  +  1),  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(dp  +  1),  sum);	  Math.sqrt(Math.log(dp    +    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
269	[BUG]  [BUGGY]  Math.sqrt(Math.log(dp  /  dp  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(dp  /  dp  +  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(dp  /  dp  +  1));	  Math.sqrt(Math.log(dp    +    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
270	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    /    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
271	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  2L;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  2L;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  2L;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    /    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
272	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp1,  dp2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp1,  dp2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp1,  dp2);	  sum    +=    Math.sqrt(dp2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
273	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type,  dp2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type,  dp2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type,  dp2);	  sum    +=    Math.sqrt(dp2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
274	[BUG]  [BUGGY]  sum  +=  Math.sqrt(sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(sum);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(sum);	  sum    +=    Math.sqrt(dp2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
275	[BUG]  [BUGGY]  sum  +=  Math.sqrt(declaration,  dp2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(declaration,  dp2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(declaration,  dp2);	  sum    +=    Math.sqrt(dp2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
276	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(sum)+  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.log(sum)+  1];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(sum)+  1];	  int[]    p2    =    new    int[Math.log(sum)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
277	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(sum  +  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.log(sum  +  1)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(sum  +  1)];	  int[]    p2    =    new    int[Math.log(sum)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
278	[BUG]  [BUGGY]  Math.sqrt(sum,  type,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum,  type,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum,  type,  dp);	  Math.sqrt(type,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
279	[BUG]  [BUGGY]  Math.sqrt(type,  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(type,  dp  *  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(type,  dp  *  dp);	  Math.sqrt(type,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
280	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
281	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_WEEK,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_WEEK,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_WEEK,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
282	[BUG]  [BUGGY]  sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
283	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  *  DateTimeConstants.MILLIS_PER_DECEMBER;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  *  DateTimeConstants.MILLIS_PER_DECEMBER;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SIZE  *  DateTimeConstants.MILLIS_PER_DECEMBER;	  sum    +=    DateTimeConstants.MILLIS_PER_SIZE    /    DateTimeConstants.MILLIS_PER_DECEMBER;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
284	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DECEMBER  /  DateTimeConstants.MILLIS_PER_SIZE;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DECEMBER  /  DateTimeConstants.MILLIS_PER_SIZE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DECEMBER  /  DateTimeConstants.MILLIS_PER_SIZE;	  sum    +=    DateTimeConstants.MILLIS_PER_SIZE    /    DateTimeConstants.MILLIS_PER_DECEMBER;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
285	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_DECEMBER,  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_DECEMBER,  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_DECEMBER,  1;	  sum    +=    DateTimeConstants.MILLIS_PER_SIZE    /    DateTimeConstants.MILLIS_PER_DECEMBER;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
286	[BUG]  [BUGGY]  int[]  p1  =  new  int[size()  +  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p1  =  new  int[size()  +  1];  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p1  =  new  int[size()  +  1];	  int[]    p1    =    new    int[size()    ];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
287	[BUG]  [BUGGY]  int[]  p1  =  new  int[size()  -  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p1  =  new  int[size()  -  1];  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p1  =  new  int[size()  -  1];	  int[]    p1    =    new    int[size()    ];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
288	[BUG]  [BUGGY]  int[]  p1  =  new  int[size()  *  2];  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int[]  p1  =  new  int[size()  *  2];  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p1  =  new  int[size()  *  2];	  int[]    p1    =    new    int[size()    ];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
289	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum)*  Math.abs(dp  *  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum)*  Math.abs(dp  *  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum)*  Math.abs(dp  *  dp));	  Math.sqrt(Math.abs(sum)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
290	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum)*  Math.abs(dp),  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum)*  Math.abs(dp),  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum)*  Math.abs(dp),  dp);	  Math.sqrt(Math.abs(sum)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
291	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)/  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp)/  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)/  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
292	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND)+  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND)+  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND)+  1;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
293	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type)*  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type)*  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type)*  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
294	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(dp  *  dp  +  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.log(dp  *  dp  +  1)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(dp  *  dp  +  1)];	  int[]    p2    =    new    int[Math.log(dp    +    1)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	108	None	replace
295	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.rint(dp  +  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.rint(dp  +  1)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.rint(dp  +  1)];	  int[]    p2    =    new    int[Math.log(dp    +    1)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	108	None	replace
296	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.ceil(sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.ceil(sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.ceil(sum);	  int[]    p2    =(int[])Math.ceil(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
297	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.ceil(dp,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.ceil(dp,  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.ceil(dp,  sum);	  int[]    p2    =(int[])Math.ceil(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
298	[BUG]  [BUGGY]  double[]  p2  =(double[])Math.ceil(dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  double[]  p2  =(double[])Math.ceil(dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	double[]  p2  =(double[])Math.ceil(dp);	  int[]    p2    =(int[])Math.ceil(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
299	[BUG]  [BUGGY]  sum  +=  dp  *  dateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  dp  *  dateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dp  *  dateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    dateTimeConstants.MILLIS_PER_SECOND    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
300	[BUG]  [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_SECOND  /  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_SECOND  /  dp;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dateTimeConstants.MILLIS_PER_SECOND  /  dp;	  sum    +=    dateTimeConstants.MILLIS_PER_SECOND    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
301	[BUG]  [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  2;	  sum    +=    dateTimeConstants.MILLIS_PER_SECOND    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
302	[BUG]  [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  Math.max(1,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  Math.max(1,  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  Math.max(1,  dp);	  sum    +=    dateTimeConstants.MILLIS_PER_SECOND    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
303	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
304	[BUG]  [BUGGY]  sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
305	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
306	[BUG]  [BUGGY]  sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
307	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)/  DateTimeConstants.MILLIS_PER_SIZE;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp)/  DateTimeConstants.MILLIS_PER_SIZE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)/  DateTimeConstants.MILLIS_PER_SIZE;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
308	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type)*  DateTimeConstants.MILLIS_PER_SIZE;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type)*  DateTimeConstants.MILLIS_PER_SIZE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type)*  DateTimeConstants.MILLIS_PER_SIZE;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
309	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_SIZE  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_SIZE  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_SIZE  +  1;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
310	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum)/  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum)/  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum)/  dp);	  Math.sqrt(Math.abs(dp)/    dp,    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
311	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum)/  dp,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum)/  dp,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum)/  dp,  dp);	  Math.sqrt(Math.abs(dp)/    dp,    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
312	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  sum,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  sum,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  sum,  dp);	  Math.sqrt(Math.abs(dp)/    dp,    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
313	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  dp,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  dp,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  dp,  dp);	  int[]    p2    =(int[])Math.rint(sum,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
314	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  dp,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  dp,  0);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  dp,  0);	  int[]    p2    =(int[])Math.rint(sum,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
315	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  dp  *  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  dp  *  dp);	  int[]    p2    =(int[])Math.rint(sum,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
316	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  *  dp  -  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  *  dp  -  1)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp  *  dp  -  1)];	  int[]    p2    =    new    int[Math.abs(dp    -    1)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	115	None	replace
317	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum),  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(sum),  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum),  dp);	  Math.sqrt(Math.log(dp,    sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
318	[BUG]  [BUGGY]  Math.sqrt(Math.exp(dp,  sum));  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.exp(dp,  sum));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.exp(dp,  sum));	  Math.sqrt(Math.log(dp,    sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	45	None	replace
319	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_SECOND);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
320	[BUG]  [BUGGY]  sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_SECOND);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
321	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND,  dp  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND,  dp  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND,  dp  *  DateTimeConstants.MILLIS_PER_SECOND);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
322	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND,  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND,  dp);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
323	[BUG]  [BUGGY]  sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
324	[BUG]  [BUGGY]  sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(2,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
325	[BUG]  [BUGGY]  sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  dp  /  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
326	[BUG]  [BUGGY]  sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(10,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
327	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  1);	  Math.sqrt(Math.abs(dp)+    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
328	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)+  1,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)+  1,  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)+  1,  sum);	  Math.sqrt(Math.abs(dp)+    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
329	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)+  1,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)+  1,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)+  1,  dp);	  Math.sqrt(Math.abs(dp)+    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
330	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  /  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
331	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_HOUR,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_HOUR,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_HOUR,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
332	[BUG]  [BUGGY]  sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(declaration  *  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
333	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_HOUR,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_HOUR,  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_HOUR,  dp);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
334	[BUG]  [BUGGY]  Math.sqrt(Math.exp(sum));  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.exp(sum));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.exp(sum));	  Math.sqrt(Math.exp(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
335	[BUG]  [BUGGY]  Math.sqrt(Math.exp(dp  *  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.exp(dp  *  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.exp(dp  *  dp));	  Math.sqrt(Math.exp(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
336	[BUG]  [BUGGY]  Math.sqrt(Math.exp(dp  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.exp(dp  +  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.exp(dp  +  1));	  Math.sqrt(Math.exp(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
337	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum  +  1),  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(sum  +  1),  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum  +  1),  dp);	  Math.sqrt(Math.log(sum    +    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
338	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum  +  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(sum  +  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum  +  dp));	  Math.sqrt(Math.log(sum    +    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
339	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum  /  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(sum  /  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum  /  1));	  Math.sqrt(Math.log(sum    +    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
340	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND  /  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND  /  dp;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SECOND  /  dp;	  sum    +=    DateTimeConstants.MILLIS_PER_SECOND    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	101	None	replace
341	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND  *  Math.max(1,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND  *  Math.max(1,  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SECOND  *  Math.max(1,  dp);	  sum    +=    DateTimeConstants.MILLIS_PER_SECOND    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	101	None	replace
342	[BUG]  [BUGGY]  sum  +=  Math.sqrt(declaration,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(declaration,  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(declaration,  dp);	  sum    +=    Math.sqrt(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
343	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type,  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type,  dp);	  sum    +=    Math.sqrt(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
344	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp,  type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp,  type);	  sum    +=    Math.sqrt(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	100	None	replace
345	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.rint(type)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.rint(type)];  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.rint(type)];	  int[]    p2    =    new    int[Math.log(type)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	119	None	replace
346	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(type)+  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.log(type)+  1];  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(type)+  1];	  int[]    p2    =    new    int[Math.log(type)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	119	None	replace
347	[BUG]  [BUGGY]  sum  +=  Math.sqrt(sum)*  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(sum)*  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(sum)*  2;	  sum    +=    Math.sqrt(dp)*    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
348	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type,  dp)*  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type,  dp)*  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type,  dp)*  2;	  sum    +=    Math.sqrt(dp)*    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
349	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type)*  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type)*  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type)*  2;	  sum    +=    Math.sqrt(dp)*    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
350	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  0,  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  0,  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  0,  1);	  int[]    p2    =(int[])Math.rint(sum,    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	122	None	replace
351	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  /  DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	118	None	replace
352	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_MINUTE,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_MINUTE,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_MINUTE,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	118	None	replace
353	[BUG]  [BUGGY]  sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(type  *  DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	118	None	replace
354	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_MINUTE  /  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_MINUTE  /  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_MINUTE  /  dp);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	118	None	replace
355	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)/  2  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp)/  2  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)/  2  +  1;	  sum    +=    dp    *    2    +    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
356	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  *  2  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp  *  2  +  1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  *  2  +  1);	  sum    +=    dp    *    2    +    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
357	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)*  2  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp)*  2  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)*  2  +  1;	  sum    +=    dp    *    2    +    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
358	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  -  1),  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  -  1),  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  -  1),  sum);	  Math.sqrt(Math.abs(dp    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	126	None	replace
359	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  -  1,  sum));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  -  1,  sum));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  -  1,  sum));	  Math.sqrt(Math.abs(dp    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	126	None	replace
360	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)*  Math.abs(sum  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)*  Math.abs(sum  +  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)*  Math.abs(sum  +  1));	  Math.sqrt(Math.abs(dp)*    Math.abs(sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
361	[BUG]  [BUGGY]  Math.abs(Math.abs(sum)*  Math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.abs(Math.abs(sum)*  Math.abs(dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.abs(Math.abs(sum)*  Math.abs(dp));	  Math.sqrt(Math.abs(dp)*    Math.abs(sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
362	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum  *  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum  *  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum  *  dp));	  Math.sqrt(Math.abs(dp    *    dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
363	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum  /  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum  /  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum  /  dp));	  Math.sqrt(Math.abs(dp    *    dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
364	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  *  sum));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  *  sum));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  *  sum));	  Math.sqrt(Math.abs(dp    *    dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
365	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(type,  dp,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(type,  dp,  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(type,  dp,  sum);	  int[]    p2    =(int[])Math.rint(type,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
366	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(dp,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(dp,  type);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(dp,  type);	  int[]    p2    =(int[])Math.rint(type,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
367	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_WEEK  /  DateTimeConstants.MILLIS_PER_WEEK  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_WEEK  /  DateTimeConstants.MILLIS_PER_WEEK  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_WEEK  /  DateTimeConstants.MILLIS_PER_WEEK  +  1;	  sum    +=    DateTimeConstants.MILLIS_PER_WEEK    /    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
368	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_WEEK  /  DateTimeConstants.MILLIS_PER_WEEK-1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_WEEK  /  DateTimeConstants.MILLIS_PER_WEEK-1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_WEEK  /  DateTimeConstants.MILLIS_PER_WEEK-1;	  sum    +=    DateTimeConstants.MILLIS_PER_WEEK    /    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
369	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  -  1)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  -  1)+  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  -  1)+  1);	  Math.sqrt(Math.abs(dp    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	126	None	replace
370	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)*  Math.abs(sum  +  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)*  Math.abs(sum  +  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)*  Math.abs(sum  +  dp));	  Math.sqrt(Math.abs(dp)*    Math.abs(sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
371	[BUG]  [BUGGY]  Math.sqrt(sum,  p1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum,  p1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum,  p1);	  Math.sqrt(sum,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
372	[BUG]  [BUGGY]  Math.sqrt(sum,  p2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum,  p2);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum,  p2);	  Math.sqrt(sum,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
373	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type);	  sum    +=    Math.sqrt(dp2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
374	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.rint(s)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.rint(s)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.rint(s)];	  int[]    p2    =    new    int[Math.rint(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
375	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.rint(random)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.rint(random)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.rint(random)];	  int[]    p2    =    new    int[Math.rint(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
376	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.rint(dp,  length)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.rint(dp,  length)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.rint(dp,  length)];	  int[]    p2    =    new    int[Math.rint(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
377	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
378	[BUG]  [BUGGY]  int[]  p1  =  new  int[size()  /  2];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p1  =  new  int[size()  /  2];  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p1  =  new  int[size()  /  2];	  int[]    p1    =    new    int[size()    ];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	63	None	replace
379	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)+  sum  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)+  sum  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)+  sum  +  1);	  Math.sqrt(Math.abs(dp)+    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
380	[BUG]  [BUGGY]  Math.sqrt(Math.log(require,  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(require,  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(require,  dp));	  Math.sqrt(Math.log(sum,    dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
381	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)/  2L;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp)/  2L;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)/  2L;	  sum    +=    Math.sqrt(dp)/    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
382	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type)/  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type)/  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type)/  2;	  sum    +=    Math.sqrt(dp)/    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
383	[BUG]  [BUGGY]  int[]  p2  =  new  int[size()  *  2  +  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[size()  *  2  +  1];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[size()  *  2  +  1];	  int[]    p2    =    new    int[size()    *    2];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	43	None	replace
384	[BUG]  [BUGGY]  sum  +=  2  /  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  2  /  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  2  /  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    2    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	103	None	replace
385	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND);	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
386	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND)*  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND)*  dp;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND)*  dp;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
387	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND)/  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND)/  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND)/  DateTimeConstants.MILLIS_PER_MINUTE;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
388	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(sum)/  2];  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.log(sum)/  2];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(sum)/  2];	  int[]    p2    =    new    int[Math.log(sum)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	58	None	replace
389	[BUG]  [BUGGY]  sum  +=  Math.abs(Math.abs(dp  /  DateTimeConstants.MILLIS_PER_SIZE));  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(Math.abs(dp  /  DateTimeConstants.MILLIS_PER_SIZE));  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(Math.abs(dp  /  DateTimeConstants.MILLIS_PER_SIZE));	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
390	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_SIZE  *  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_SIZE  *  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_SIZE  *  DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
391	[BUG]  [BUGGY]  Math.sqrt(Math.abs(value));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(value));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(value));	  Math.sqrt(Math.abs(sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
392	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum)+  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum)+  1);	  Math.sqrt(Math.abs(sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
393	[BUG]  [BUGGY]  sum  +=  Math.min(DateTimeConstants.MILLIS_PER_MINUTE,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.min(DateTimeConstants.MILLIS_PER_MINUTE,  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.min(DateTimeConstants.MILLIS_PER_MINUTE,  dp);	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
394	[BUG]  [BUGGY]  Math.sqrt(type,  declaration);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(type,  declaration);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(type,  declaration);	  Math.sqrt(declaration,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
395	[BUG]  [BUGGY]  Math.sqrt(declaration,  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(declaration,  dp  *  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(declaration,  dp  *  dp);	  Math.sqrt(declaration,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
396	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR)+  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR)+  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR)+  1;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
397	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum  -  1)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(sum  -  1)+  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum  -  1)+  1);	  Math.sqrt(Math.log(sum    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
398	[BUG]  [BUGGY]  Math.sqrt(sum  /  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum  /  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum  /  1);	  Math.sqrt(sum    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
399	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  dp  *  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  dp  *  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  dp  *  1);	  Math.sqrt(Math.abs(dp)/    dp    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
400	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  *  dp  +  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  *  dp  +  1)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp  *  dp  +  1)];	  int[]    p2    =    new    int[Math.abs(dp    *    dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
401	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum  /  dp)/  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum  /  dp)/  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum  /  dp)/  dp);	  Math.sqrt(Math.abs(dp    *    dp)/    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	30	None	replace
402	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  dp  +  1,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  dp  +  1,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.floor(sum,  dp  +  1,  dp);	  int[]    p2    =(int[])Math.floor(sum,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
403	[BUG]  [BUGGY]  sum  +=  Math.max(1,  y  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(1,  y  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  y  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
404	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_MINUTE  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_MINUTE  -  1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_MINUTE  -  1);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	118	None	replace
405	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_MINUTE  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_MINUTE  *  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_MINUTE  *  dp);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	118	None	replace
406	[BUG]  [BUGGY]  Math.sqrt(sum  /  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum  /  dp  *  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum  /  dp  *  dp);	  Math.sqrt(dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
407	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  Math.abs(dp  *  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  Math.abs(dp  *  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  Math.abs(dp  *  dp));	  Math.sqrt(Math.abs(dp)/    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
408	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  Math.abs(dp  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  Math.abs(dp  +  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  Math.abs(dp  +  1));	  Math.sqrt(Math.abs(dp)/    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
409	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  /  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  /  1)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp  /  1)];	  int[]    p2    =    new    int[Math.abs(dp    +    1)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
410	[BUG]  [BUGGY]  sum  +=  Math.abs(type  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(type  *  2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(type  *  2);	  sum    +=    Math.abs(dp    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	124	None	replace
411	[BUG]  [BUGGY]  sum  +=  Math.abs(dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp);	  sum    +=    Math.abs(dp    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	124	None	replace
412	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  -  1)*  Math.abs(dp  *  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  -  1)*  Math.abs(dp  *  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  -  1)*  Math.abs(dp  *  dp));	  Math.sqrt(Math.abs(dp    -    1)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	123	None	replace
413	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE)+  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE)+  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE)+  1;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
414	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE,  type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE,  type);	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
415	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
416	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(type);	  int[]    p2    =    new    int[Math.sqrt(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
417	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum  +  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum  +  2);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum  +  2);	  int[]    p2    =(int[])Math.rint(sum    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
418	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum  +  1,  length);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum  +  1,  length);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum  +  1,  length);	  int[]    p2    =(int[])Math.rint(sum    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
419	[BUG]  [BUGGY]  sum  +=  Math.abs(Math.abs(dp  /  DateTimeConstants.MILLIS_PER_SECOND));  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(Math.abs(dp  /  DateTimeConstants.MILLIS_PER_SECOND));  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(Math.abs(dp  /  DateTimeConstants.MILLIS_PER_SECOND));	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	109	None	replace
420	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  0);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.floor(sum,  0);	  int[]    p2    =(int[])Math.floor(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
421	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.log(type,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.log(type,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.log(type,  dp);	  int[]    p2    =(int[])Math.log(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
422	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND  *  4;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND  *  4;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SECOND  *  4;	  sum    +=    DateTimeConstants.MILLIS_PER_SECOND    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	101	None	replace
423	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp,  dp  *  d1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp,  dp  *  d1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp,  dp  *  d1);	  sum    +=    Math.sqrt(sum,    dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	27	None	replace
424	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  4);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  4);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  4);	  int[]    p2    =(int[])Math.rint(sum,    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	122	None	replace
425	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  dp  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  dp  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  dp  +  1);	  int[]    p2    =(int[])Math.rint(sum,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
426	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(dp  *  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.log(dp  *  1)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(dp  *  1)];	  int[]    p2    =    new    int[Math.log(dp    +    1)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	108	None	replace
427	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type,  dp  /  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type,  dp  /  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type,  dp  /  dp);	  sum    +=    Math.sqrt(dp    /    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
428	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(value  /  dp)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(value  /  dp)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(value  /  dp)];	  int[]    p2    =    new    int[Math.abs(dp    /    dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	116	None	replace
429	[BUG]  [BUGGY]  sum  -=  DateTimeConstants.MILLIS_PER_DAY  *  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  -=  DateTimeConstants.MILLIS_PER_DAY  *  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  -=  DateTimeConstants.MILLIS_PER_DAY  *  2;	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
430	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  *  4;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  *  4;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DAY  *  4;	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
431	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  -  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DAY  -  1;	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
432	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    /    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	117	None	replace
433	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE  -  1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE  -  1);	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
434	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE)+  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE)+  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE)+  1;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
435	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE)*  DateTimeConstants.MILLIS_PER_SIZE;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE)*  DateTimeConstants.MILLIS_PER_SIZE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SIZE)*  DateTimeConstants.MILLIS_PER_SIZE;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
436	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  -  1)*  Math.abs(dp  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  -  1)*  Math.abs(dp  -  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  -  1)*  Math.abs(dp  -  1));	  Math.sqrt(Math.abs(dp)*    Math.abs(dp    -    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	107	None	replace
437	[BUG]  [BUGGY]  sum  +=  Math.sqrt(millis  *  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(millis  *  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(millis  *  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
438	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  DateTimeConstants.MILLIS_PER_HOUR  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  DateTimeConstants.MILLIS_PER_HOUR  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  DateTimeConstants.MILLIS_PER_HOUR  +  1;	  sum    +=    DateTimeConstants.MILLIS_PER_HOUR    /    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	114	None	replace
439	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    DateTimeConstants.MILLIS_PER_HOUR    /    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	114	None	replace
440	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)*  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp)*  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)*  1;	  sum    +=    Math.sqrt(dp)*    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
441	[BUG]  [BUGGY]  sum  +=  Math.sqrt(declaration  *  p1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(declaration  *  p1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(declaration  *  p1);	  sum    +=    Math.sqrt(declaration    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	28	None	replace
442	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(distance)+  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.log(distance)+  1];  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(distance)+  1];	  int[]    p2    =    new    int[Math.log(distance)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	120	None	replace
443	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum  /  dp  *  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum  /  dp  *  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum  /  dp  *  dp));	  Math.sqrt(Math.abs(dp    *    dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
444	[BUG]  [BUGGY]  sum  +=  Math.sqrt(millis  *  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(millis  *  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(millis  *  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
445	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(mapping,  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(mapping,  dp  *  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(mapping,  dp  *  dp);	  int[]    p2    =(int[])Math.rint(mapping,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
446	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(mapping,  dp  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(mapping,  dp  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(mapping,  dp  +  1);	  int[]    p2    =(int[])Math.rint(mapping,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
447	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)+  1  -  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)+  1  -  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)+  1  -  sum);	  Math.sqrt(Math.abs(dp)+    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	74	None	replace
448	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(type,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(type,  0);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(type,  0);	  int[]    p2    =(int[])Math.rint(type,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
449	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(type,  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(type,  dp  *  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(type,  dp  *  dp);	  int[]    p2    =(int[])Math.rint(type,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
450	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(type,  dp  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(type,  dp  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(type,  dp  +  1);	  int[]    p2    =(int[])Math.rint(type,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
451	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)+  Math.abs(dp  *  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)+  Math.abs(dp  *  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)+  Math.abs(dp  *  dp));	  Math.sqrt(Math.abs(dp)+    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
452	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)+  Math.abs(dp  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)+  Math.abs(dp  +  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)+  Math.abs(dp  +  1));	  Math.sqrt(Math.abs(dp)+    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
453	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)+  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)+  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)+  1;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
454	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)*  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)*  dp;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)*  dp;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
455	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  2  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  2  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  2  +  1;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    /    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	80	None	replace
456	[BUG]  [BUGGY]  int[]  p2  =  Math.sqrt(sum,  p1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  Math.sqrt(sum,  p1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  Math.sqrt(sum,  p1);	  int[]    p2    =    Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	64	None	replace
457	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DECEMBER.length  /  DateTimeConstants.MILLIS_PER_SIZE;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DECEMBER.length  /  DateTimeConstants.MILLIS_PER_SIZE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DECEMBER.length  /  DateTimeConstants.MILLIS_PER_SIZE;	  sum    +=    DateTimeConstants.MILLIS_PER_SIZE    /    DateTimeConstants.MILLIS_PER_DECEMBER;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
458	[BUG]  [BUGGY]  Math.sqrt(Math.exp(dp)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.exp(dp)+  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.exp(dp)+  1);	  Math.sqrt(Math.exp(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	46	None	replace
459	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum),  Math.rint(dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum),  Math.rint(dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum),  Math.rint(dp);	  int[]    p2    =(int[])Math.rint(dp,    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
460	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR  *  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR  *  dp);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
461	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR  *  DateTimeConstants.MILLIS_PER_SECOND);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
462	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum)*  Math.abs(dp  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(sum)*  Math.abs(dp  +  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum)*  Math.abs(dp  +  1));	  Math.sqrt(Math.abs(sum)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
463	[BUG]  [BUGGY]  Math.sqrt(required);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(required);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(required);	  Math.sqrt(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	83	None	replace
464	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_WEEK)*  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_WEEK)*  dp;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_WEEK)*  dp;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
465	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.ceil(p2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.ceil(p2);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.ceil(p2);	  int[]    p2    =(int[])Math.ceil(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
466	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type  /  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type  /  dp  *  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type  /  dp  *  dp);	  sum    +=    Math.sqrt(type,    dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
467	[BUG]  [BUGGY]  sum  +=  Math.sqrt(declaration,  type  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(declaration,  type  *  dp);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(declaration,  type  *  dp);	  sum    +=    Math.sqrt(type,    dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
468	[BUG]  [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  4;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  4;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  4;	  sum    +=    dateTimeConstants.MILLIS_PER_SECOND    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
469	[BUG]  [BUGGY]  sum  +=  Math.pow(10,  i  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.pow(10,  i  *  2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.pow(10,  i  *  2);	  sum    +=    Math.pow(10,    dp    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
470	[BUG]  [BUGGY]  sum  +=  Math.pow(10,  ep  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.pow(10,  ep  *  2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.pow(10,  ep  *  2);	  sum    +=    Math.pow(10,    dp    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
471	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY  -  1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY  -  1);	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
472	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY)+  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY)+  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY)+  1;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
473	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
474	[BUG]  [BUGGY]  Math.sqrt(type,  dp  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(type,  dp  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(type,  dp  +  1);	  Math.sqrt(dp    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
475	[BUG]  [BUGGY]  Math.sqrt(dp  /  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(dp  /  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(dp  /  1);	  Math.sqrt(dp    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
476	[BUG]  [BUGGY]  Math.sqrt(dp  *  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(dp  *  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(dp  *  1);	  Math.sqrt(dp    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
477	[BUG]  [BUGGY]  Math.sqrt(type  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(type  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(type  +  1);	  Math.sqrt(dp    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
478	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp)*  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(dp)*  1];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp)*  1];	  int[]    p2    =    new    int[Math.abs(dp)+    1];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
479	[BUG]  [BUGGY]  sum  +=  Math.max(1,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(1,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE  +  1;	  sum    +=    Math.max(1,    dp)*    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
480	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  type  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  type  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  type  +  1);	  int[]    p2    =(int[])Math.rint(sum,    type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	121	None	replace
481	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type  *  2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type  *  2);	  sum    +=    Math.sqrt(type    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
482	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum  +  1)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(sum  +  1)+  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum  +  1)+  1);	  Math.sqrt(Math.log(sum    +    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
483	[BUG]  [BUGGY]  sum  +=  Math.max(0,  Math.min(MILLIS_PER_MINUTE,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(0,  Math.min(MILLIS_PER_MINUTE,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE));  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(0,  Math.min(MILLIS_PER_MINUTE,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE));	  sum    +=    Math.max(0,    dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
484	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  dp,  sum  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  dp,  sum  -  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  dp,  sum  -  1);	  Math.sqrt(Math.abs(dp)/    dp,    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
485	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_WEEK  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_WEEK  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_WEEK  *  DateTimeConstants.MILLIS_PER_SECOND);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
486	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_WEEK)+  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_WEEK)+  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_WEEK)+  1;	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
487	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum  +  dp)+  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(sum  +  dp)+  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum  +  dp)+  dp);	  Math.sqrt(Math.log(sum)+    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
488	[BUG]  [BUGGY]  sum  +=  Math.pow(10,  dp  *  2  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.pow(10,  dp  *  2  +  1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.pow(10,  dp  *  2  +  1);	  sum    +=    dp    *    2    +    1;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	36	None	replace
489	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_SECOND);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	113	None	replace
490	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	113	None	replace
491	[BUG]  [BUGGY]  Math.sqrt(sum  -  1,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum  -  1,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum  -  1,  dp);	  Math.sqrt(dp,    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
492	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum,  0);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.sqrt(sum,  0);	  int[]    p2    =    new    int[Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
493	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum,  32);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum,  32);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.sqrt(sum,  32);	  int[]    p2    =    new    int[Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
494	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND  -  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND  -  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SECOND  -  2;	  sum    +=    DateTimeConstants.MILLIS_PER_SECOND    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	110	None	replace
495	[BUG]  [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_MINUTE  /  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_MINUTE  /  dp;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dateTimeConstants.MILLIS_PER_MINUTE  /  dp;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
496	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  dp  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  dp  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  dp  +  1;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	82	None	replace
497	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  Math.abs(sum),  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  Math.abs(sum),  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  Math.abs(sum),  dp);	  Math.sqrt(Math.abs(dp)/    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
498	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  Math.abs(compiler,  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  Math.abs(compiler,  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  Math.abs(compiler,  dp));	  Math.sqrt(Math.abs(dp)/    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
499	[BUG]  [BUGGY]  sum  +=  Math.pow(10,  type  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.pow(10,  type  *  2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.pow(10,  type  *  2);	  sum    +=    Math.pow(10,    dp    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	99	None	replace
500	[BUG]  [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_HOUR;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_HOUR;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_HOUR;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
501	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR)*  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR)*  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_HOUR)*  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
502	[BUG]  [BUGGY]  Math.sqrt(sum,  dp  +  1,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(sum,  dp  +  1,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum,  dp  +  1,  dp);	  Math.sqrt(sum,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
503	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type)*  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type)*  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type)*  DateTimeConstants.MILLIS_PER_MINUTE;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
504	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
505	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(type,  dp,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(type,  dp,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(type,  dp,  dp);	  int[]    p2    =(int[])Math.rint(type,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
506	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND,  type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND,  type);	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
507	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND)/  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND)/  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_SECOND)/  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
508	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.log(type);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.log(type);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.log(type);	  int[]    p2    =(int[])Math.log(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	89	None	replace
509	[BUG]  [BUGGY]  sum  +=  Math.abs(p  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(p  *  2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(p  *  2);	  sum    +=    Math.abs(dp    *    2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	124	None	replace
510	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum),  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum),  type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.sqrt(sum),  type);	  int[]    p2    =    new    int[Math.sqrt(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
511	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.log(type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(type);	  int[]    p2    =    new    int[Math.sqrt(type);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	76	None	replace
512	[BUG]  [BUGGY]  sum  +=  Math.abs(type)*  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(type)*  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(type)*  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
513	[BUG]  [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
514	[BUG]  [BUGGY]  sum  +=  Math.max(0,  Math.min(MILLIS_PER_MINUTE,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(0,  Math.min(MILLIS_PER_MINUTE,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(0,  Math.min(MILLIS_PER_MINUTE,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    Math.max(0,    dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
515	[BUG]  [BUGGY]  sum  +=  Math.max(0,  Math.min(1,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(0,  Math.min(1,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE));  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(0,  Math.min(1,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE));	  sum    +=    Math.max(0,    dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
516	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  /  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  /  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  /  dp));	  Math.sqrt(Math.abs(dp    *    dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
517	[BUG]  [BUGGY]  sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
518	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK,  type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK,  type);	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
519	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)*  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)*  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)*  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
520	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)/  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)/  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_WEEK)/  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	51	None	replace
521	[BUG]  [BUGGY]  sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
522	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_HOUR,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_HOUR,  type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_HOUR,  type);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
523	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.cos(dp)+  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.cos(dp)+  1];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.cos(dp)+  1];	  int[]    p2    =    new    int[Math.log(dp)+    1];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	57	None	replace
524	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_SIZE;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_SIZE;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_SIZE;	  sum    +=    DateTimeConstants.MILLIS_PER_MINUTE    /    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	117	None	replace
525	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  dp  +  1,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  dp  +  1,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  dp  +  1,  dp);	  int[]    p2    =(int[])Math.rint(sum,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
526	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  Math.pow(10,  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  Math.pow(10,  dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  Math.pow(10,  dp));	  int[]    p2    =(int[])Math.rint(sum,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
527	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_DECEMBER  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_DECEMBER  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_DECEMBER  +  1;	  sum    +=    DateTimeConstants.MILLIS_PER_SIZE    /    DateTimeConstants.MILLIS_PER_DECEMBER;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	88	None	replace
528	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  DateTimeConstants.MILLIS_PER_DAY  *  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  DateTimeConstants.MILLIS_PER_DAY  *  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  DateTimeConstants.MILLIS_PER_DAY  *  2;	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    /    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	84	None	replace
529	[BUG]  [BUGGY]  sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
530	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.rint(dp,  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.rint(dp,  1)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.rint(dp,  1)];	  int[]    p2    =    new    int[Math.rint(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	55	None	replace
531	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_WEEK  /  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_WEEK  /  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_WEEK  /  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    DateTimeConstants.MILLIS_PER_WEEK    /    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	105	None	replace
532	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  DateTimeConstants.MILLIS_PER_DAY;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  DateTimeConstants.MILLIS_PER_DAY;	  sum    +=    DateTimeConstants.MILLIS_PER_HOUR    /    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	114	None	replace
533	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    DateTimeConstants.MILLIS_PER_HOUR    /    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	114	None	replace
534	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp1)/  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp1)/  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp1)/  2;	  sum    +=    Math.sqrt(dp)/    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
535	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp,  type)/  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp,  type)/  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp,  type)/  2;	  sum    +=    Math.sqrt(dp)/    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
536	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp2)/  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp2)/  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp2)/  2;	  sum    +=    Math.sqrt(dp)/    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	35	None	replace
537	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  2;	  sum    +=    DateTimeConstants.MILLIS_PER_SIZE    /    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
538	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  mapping,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  mapping,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  mapping,  dp);	  int[]    p2    =(int[])Math.rint(mapping,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
539	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  dp  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  dp  -  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.floor(sum,  dp  -  1);	  int[]    p2    =(int[])Math.floor(sum,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	69	None	replace
540	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum  +  1)+  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(sum  +  1)+  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum  +  1)+  dp);	  Math.sqrt(Math.log(sum)+    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
541	[BUG]  [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	113	None	replace
542	[BUG]  [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(DateTimeConstants.MILLIS_PER_DAY  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	113	None	replace
543	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.floor(sum  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.floor(sum  -  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.floor(sum  -  1);	  int[]    p2    =(int[])Math.floor(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
544	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dateTimeConstants.MILLIS_PER_DAY)*  DateTimeConstants.MILLIS_PER_DAY;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dateTimeConstants.MILLIS_PER_DAY)*  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dateTimeConstants.MILLIS_PER_DAY)*  DateTimeConstants.MILLIS_PER_DAY;	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
545	[BUG]  [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY,  type);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(DateTimeConstants.MILLIS_PER_DAY,  type);	  sum    +=    Math.sqrt(dp)*    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
546	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type  *  DateTimeConstants.MILLIS_PER_SECOND);	  sum    +=    Math.sqrt(type    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
547	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.sqrt(type    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	86	None	replace
548	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  +  1)+  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  +  1)+  1];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp  +  1)+  1];	  int[]    p2    =    new    int[Math.abs(dp)+    1];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
549	[BUG]  [BUGGY]  sum  +=  Math.sqrt(p1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(p1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(p1);	  sum    +=    Math.sqrt(dp2);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	125	None	replace
550	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp,  sum)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.abs(dp,  sum)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp,  sum)];	  int[]    p2    =    new    int[Math.abs(sum)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
551	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type  *  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type  *  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type  *  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	52	None	replace
552	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(dp  /  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.log(dp  /  1)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(dp  /  1)];	  int[]    p2    =    new    int[Math.log(dp    +    1)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	108	None	replace
553	[BUG]  [BUGGY]  long[]  p2  =(long[])Math.rint(dp,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  long[]  p2  =(long[])Math.rint(dp,  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	long[]  p2  =(long[])Math.rint(dp,  sum);	  int[]    p2    =(int[])Math.rint(dp,    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
554	[BUG]  [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_MINUTE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	118	None	replace
555	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  dp,  sum  +  1,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp)/  dp,  sum  +  1,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  dp,  sum  +  1,  dp);	  Math.sqrt(Math.abs(dp)/    dp,    sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	29	None	replace
556	[BUG]  [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_WEEK;	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
557	[BUG]  [BUGGY]  sum  +=  Math.abs(Math.abs(str)*  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(Math.abs(str)*  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(Math.abs(str)*  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.abs(dp)*    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	54	None	replace
558	[BUG]  [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  dp  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  dp  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  dp  +  1;	  sum    +=    dateTimeConstants.MILLIS_PER_SECOND    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	102	None	replace
559	[BUG]  [BUGGY]  sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	37	None	replace
560	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  /  p1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp  /  p1);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  /  p1);	  sum    +=    Math.sqrt(dp    /    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
561	[BUG]  [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
562	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum,  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum,  2);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.sqrt(sum,  2);	  int[]    p2    =    new    int[Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	75	None	replace
563	[BUG]  [BUGGY]  Math.sqrt(declaration,  dp,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(declaration,  dp,  sum);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(declaration,  dp,  sum);	  Math.sqrt(declaration,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
564	[BUG]  [BUGGY]  sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(description  *  DateTimeConstants.MILLIS_PER_SECOND);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
565	[BUG]  [BUGGY]  Math.sqrt(dp  +  1,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(dp  +  1,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(dp  +  1,  dp);	  Math.sqrt(dp    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	92	None	replace
566	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  dp  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  dp  +  1;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  dp  +  1;	  sum    +=    DateTimeConstants.MILLIS_PER_HOUR    *    dp;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
567	[BUG]  [BUGGY]  sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	53	None	replace
568	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.cos(sum,  dp)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =  new  int[Math.cos(sum,  dp)];  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.cos(sum,  dp)];	  int[]    p2    =    new    int[Math.log(dp,    sum)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
569	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  *  dp  +  1)/  dp  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  *  dp  +  1)/  dp  +  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  *  dp  +  1)/  dp  +  1);	  Math.sqrt(Math.abs(dp)/    dp    +    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	104	None	replace
570	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type  *  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(type  *  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type  *  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.sqrt(dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
571	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum,  dp)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.log(sum,  dp)+  1);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum,  dp)+  1);	  Math.sqrt(Math.log(sum,    dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	44	None	replace
572	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  -  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  -  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DAY  -  2;	  sum    +=    DateTimeConstants.MILLIS_PER_DAY    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	85	None	replace
573	[BUG]  [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_SECOND);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_SECOND);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	109	None	replace
574	[BUG]  [BUGGY]  sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_DAY);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	38	None	replace
575	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  /  dp  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  /  dp  +  1));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  /  dp  +  1));	  Math.sqrt(Math.abs(dp    +    1));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
576	[BUG]  [BUGGY]  Math.sqrt(declaration,  type,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(declaration,  type,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(declaration,  type,  dp);	  Math.sqrt(type,    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	90	None	replace
577	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp1)*  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp1)*  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp1)*  2;	  sum    +=    Math.sqrt(dp)*    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
578	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp2)*  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.sqrt(dp2)*  2;  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp2)*  2;	  sum    +=    Math.sqrt(dp)*    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	34	None	replace
579	[BUG]  [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_WEEK);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	106	None	replace
580	[BUG]  [BUGGY]  Math.sqrt(math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(math.abs(dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(math.abs(dp));	  Math.sqrt(Math.abs(sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
581	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.ceil(scope,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  int[]  p2  =(int[])Math.ceil(scope,  dp);  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.ceil(scope,  dp);	  int[]    p2    =(int[])Math.ceil(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	71	None	replace
582	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  -  sum)*  Math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  Math.sqrt(Math.abs(dp  -  sum)*  Math.abs(dp));  [BUGGY]      sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  -  sum)*  Math.abs(dp));	  Math.sqrt(Math.abs(dp    -    1)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	123	None	replace
583	[BUG]  [BUGGY]  sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  type  *  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    Math.max(1,    dp    *    DateTimeConstants.MILLIS_PER_HOUR);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
584	[BUG]  [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]      }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(Math.abs(type)*  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    Math.abs(dp    *    DateTimeConstants.MILLIS_PER_SIZE);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	112	None	replace
