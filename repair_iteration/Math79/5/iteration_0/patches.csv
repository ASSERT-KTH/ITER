bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sum  +=  dp  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  sum  +=  dp  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dp  *  DateTimeConstants.MILLIS_PER_SECOND;	sum  +=  dp  *  dp;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
2	[BUG]  [BUGGY]  sum  +=  dp  *  DateTimeConstants.MILLIS_PER_DAY;  [CE]  invalid  method  declaration;  return  type  required  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  sum  +=  dp  *  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dp  *  DateTimeConstants.MILLIS_PER_DAY;	sum  +=  dp  *  dp;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
3	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  sum  +=  Math.sqrt(dp  *  dp);  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  *  dp);	sum  +=  dp  *  dp;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
4	[BUG]  [BUGGY]  sum  +=  dp  *  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException  [CONTEXT]    [BUGGY]  sum  +=  dp  *  2;  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dp  *  2;	sum  +=  dp  *  dp;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
5	[BUG]  [BUGGY]    [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	  	sum  +=  dp  *  dp;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
6	[BUG]  [BUGGY]    Math.sqrt(dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    Math.sqrt(dp);  [BUGGY]  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	    Math.sqrt(dp);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
7	[BUG]  [BUGGY]    Math.sqrt(Math.abs(dp)*  Math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    Math.sqrt(Math.abs(dp)*  Math.abs(dp));  [BUGGY]  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	    Math.sqrt(Math.abs(dp)*  Math.abs(dp));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
8	[BUG]  [BUGGY]    Math.sqrt(Math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    Math.sqrt(Math.abs(dp));  [BUGGY]  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	    Math.sqrt(Math.abs(dp));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
9	[BUG]  [BUGGY]    Math.sqrt(Math.abs(dp)/  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    Math.sqrt(Math.abs(dp)/  dp);  [BUGGY]  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	    Math.sqrt(Math.abs(dp)/  dp);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
10	[BUG]  [BUGGY]    Math.sqrt(Math.log(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    Math.sqrt(Math.log(dp));  [BUGGY]  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	    Math.sqrt(Math.log(dp));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
11	[BUG]  [BUGGY]    int[]  p2  =(int[])Math.rint(sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    int[]  p2  =(int[])Math.rint(sum);  [BUGGY]  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	    int[]  p2  =(int[])Math.rint(sum);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
12	[BUG]  [BUGGY]    Math.sqrt(sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    Math.sqrt(sum);  [BUGGY]  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	    Math.sqrt(sum);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
13	[BUG]  [BUGGY]    int[]  p2  =  new  int[Math.abs(dp)];  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    int[]  p2  =  new  int[Math.abs(dp)];  [BUGGY]  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	    int[]  p2  =  new  int[Math.abs(dp)];		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
14	[BUG]  [BUGGY]    int[]  p2  =  new  int[size()  ];  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    int[]  p2  =  new  int[size()  ];  [BUGGY]  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	    int[]  p2  =  new  int[size()  ];		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
15	[BUG]  [BUGGY]    int[]  p2  =  new  int[Math.log(dp)];  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    int[]  p2  =  new  int[Math.log(dp)];  [BUGGY]  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	    int[]  p2  =  new  int[Math.log(dp)];		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
16	[BUG]  [BUGGY]  sum  +=  dp  *  DateTimeConstants.MILLIS_PER_SIZE;  [CE]  invalid  method  declaration;  return  type  required  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  sum  +=  dp  *  DateTimeConstants.MILLIS_PER_SIZE;  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dp  *  DateTimeConstants.MILLIS_PER_SIZE;	sum  +=  dp  *  dp;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
17	[BUG]  [BUGGY]  sum  +=  dp  *  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  invalid  method  declaration;  return  type  required  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  sum  +=  dp  *  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dp  *  DateTimeConstants.MILLIS_PER_WEEK;	sum  +=  dp  *  dp;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
18	[BUG]  [BUGGY]  sum  +=  dp  *  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  invalid  method  declaration;  return  type  required  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  sum  +=  dp  *  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dp  *  DateTimeConstants.MILLIS_PER_MINUTE;	sum  +=  dp  *  dp;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
19	[BUG]  [BUGGY]  sum  +=  dp  *  DateTimeConstants.MILLIS_PER_HOUR;  [CE]  invalid  method  declaration;  return  type  required  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  sum  +=  dp  *  DateTimeConstants.MILLIS_PER_HOUR;  [BUGGY]  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dp  *  DateTimeConstants.MILLIS_PER_HOUR;	sum  +=  dp  *  dp;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
20	[BUG]  [BUGGY]    int[]  p2  =(int[])Math.rint(dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    int[]  p2  =(int[])Math.rint(dp);  [BUGGY]  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	    int[]  p2  =(int[])Math.rint(dp);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
21	[BUG]  [BUGGY]    int[]  p2  =(int[])Math.floor(dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    int[]  p2  =(int[])Math.floor(dp);  [BUGGY]  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	    int[]  p2  =(int[])Math.floor(dp);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
22	[BUG]  [BUGGY]    Math.sqrt(Math.log(sum));  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    Math.sqrt(Math.log(sum));  [BUGGY]  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	    Math.sqrt(Math.log(sum));		non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	add
