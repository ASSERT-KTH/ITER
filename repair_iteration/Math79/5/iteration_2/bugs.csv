bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
2	[BUG]  [BUGGY]  sum  +=  Math.max(1,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.max(1,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  dp)*  DateTimeConstants.MILLIS_PER_MINUTE;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
3	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_MINUTE;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
4	[BUG]  [BUGGY]  sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(0,  dp  *  DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
5	[BUG]  [BUGGY]  Math.sqrt(sum,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(sum,  dp);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum,  dp);	      Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
6	[BUG]  [BUGGY]  Math.sqrt(dp,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(dp,  sum);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(dp,  sum);	      Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
7	[BUG]  [BUGGY]  Math.sqrt(sum  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(sum  +  1);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(sum  +  1);	      Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
8	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  *  dp)];  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  *  dp)];  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp  *  dp)];	      int[]    p2    =    new    int[Math.abs(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
9	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  +  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  +  1)];  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp  +  1)];	      int[]    p2    =    new    int[Math.abs(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
10	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp)+  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.abs(dp)+  1];  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp)+  1];	      int[]    p2    =    new    int[Math.abs(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
11	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(sum)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.abs(sum)];  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(sum)];	      int[]    p2    =    new    int[Math.abs(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
12	[BUG]  [BUGGY]  Math.sqrt(declaration,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(declaration,  dp);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(declaration,  dp);	      Math.sqrt(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
13	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_SIZE;  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_SIZE;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_SIZE;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
14	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
15	[BUG]  [BUGGY]  sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
16	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  dp;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  dp;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
17	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  dp);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  dp);	      int[]    p2    =(int[])Math.rint(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
18	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =(int[])Math.rint(sum  +  1);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum  +  1);	      int[]    p2    =(int[])Math.rint(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
19	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  0);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  0);	      int[]    p2    =(int[])Math.rint(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
20	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(dp,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =(int[])Math.rint(dp,  sum);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(dp,  sum);	      int[]    p2    =(int[])Math.rint(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
21	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(mapping,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =(int[])Math.rint(mapping,  dp);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(mapping,  dp);	      int[]    p2    =(int[])Math.rint(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
22	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
23	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_SECOND);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
24	[BUG]  [BUGGY]  sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
25	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  /  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp  /  dp);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  /  dp);	  sum    +=    Math.sqrt(dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
26	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type,  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(type,  dp  *  dp);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type,  dp  *  dp);	  sum    +=    Math.sqrt(dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
27	[BUG]  [BUGGY]  sum  +=  Math.sqrt(sum,  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(sum,  dp  *  dp);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(sum,  dp  *  dp);	  sum    +=    Math.sqrt(dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
28	[BUG]  [BUGGY]  sum  +=  Math.sqrt(declaration  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(declaration  *  dp);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(declaration  *  dp);	  sum    +=    Math.sqrt(dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
29	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  dp,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp)/  dp,  sum);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  dp,  sum);	      Math.sqrt(Math.abs(dp)/    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
30	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  *  dp)/  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp  *  dp)/  dp);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  *  dp)/  dp);	      Math.sqrt(Math.abs(dp)/    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
31	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp)/  dp  *  dp);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  dp  *  dp);	      Math.sqrt(Math.abs(dp)/    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
32	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp)/  sum);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  sum);	      Math.sqrt(Math.abs(dp)/    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
33	[BUG]  [BUGGY]  sum  +=  dp  /  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  dp  /  2;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dp  /  2;	  sum    +=    dp    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
34	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)*  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp)*  2;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)*  2;	  sum    +=    dp    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
35	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)/  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp)/  2;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)/  2;	  sum    +=    dp    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
36	[BUG]  [BUGGY]  sum  +=  dp  *  2  +  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  dp  *  2  +  1;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dp  *  2  +  1;	  sum    +=    dp    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
37	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
38	[BUG]  [BUGGY]  sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
39	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_DAY;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_DAY;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
40	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  dp;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  dp;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
41	[BUG]  [BUGGY]  int[]  p2  =  new  int[size()  +  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[size()  +  1];  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[size()  +  1];	      int[]    p2    =    new    int[size()    ];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
42	[BUG]  [BUGGY]  int[]  p2  =  new  int[size()  -  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[size()  -  1];  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[size()  -  1];	      int[]    p2    =    new    int[size()    ];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
43	[BUG]  [BUGGY]  int[]  p2  =  new  int[size()  *  2];  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[size()  *  2];  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[size()  *  2];	      int[]    p2    =    new    int[size()    ];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
44	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum,  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.log(sum,  dp));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum,  dp));	      Math.sqrt(Math.log(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
45	[BUG]  [BUGGY]  Math.sqrt(Math.log(dp,  sum));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.log(dp,  sum));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(dp,  sum));	      Math.sqrt(Math.log(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
46	[BUG]  [BUGGY]  Math.sqrt(Math.exp(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.exp(dp));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.exp(dp));	      Math.sqrt(Math.log(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
47	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)*  Math.abs(sum));  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp)*  Math.abs(sum));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)*  Math.abs(sum));	      Math.sqrt(Math.abs(dp)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
48	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum)*  Math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(sum)*  Math.abs(dp));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum)*  Math.abs(dp));	      Math.sqrt(Math.abs(dp)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
49	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  Math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp)/  Math.abs(dp));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  Math.abs(dp));	      Math.sqrt(Math.abs(dp)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
50	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)+  Math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp)+  Math.abs(dp));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)+  Math.abs(dp));	      Math.sqrt(Math.abs(dp)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
51	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp)*  DateTimeConstants.MILLIS_PER_WEEK;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
52	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
53	[BUG]  [BUGGY]  sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
54	[BUG]  [BUGGY]  sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_WEEK;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
55	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.rint(dp)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.rint(dp)];  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.rint(dp)];	      int[]    p2    =    new    int[Math.log(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
56	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(dp,  sum)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.log(dp,  sum)];  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(dp,  sum)];	      int[]    p2    =    new    int[Math.log(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
57	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(dp)+  1];  [CE]  invalid  method  declaration;  return  type  required  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.log(dp)+  1];  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(dp)+  1];	      int[]    p2    =    new    int[Math.log(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
58	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(sum)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.log(sum)];  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(sum)];	      int[]    p2    =    new    int[Math.log(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
59	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  *  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp  *  dp));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  *  dp));	      Math.sqrt(Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
60	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)+  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp)+  sum);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)+  sum);	      Math.sqrt(Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
61	[BUG]  [BUGGY]  Math.sqrt(Math.abs(sum));  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(sum));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(sum));	      Math.sqrt(Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
62	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp  +  1));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  +  1));	      Math.sqrt(Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
63	[BUG]  [BUGGY]  int[]  p1  =  new  int[size()  ];  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int[]  p1  =  new  int[size()  ];  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p1  =  new  int[size()  ];	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
64	[BUG]  [BUGGY]  int[]  p2  =  Math.sqrt(sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  Math.sqrt(sum);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  Math.sqrt(sum);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
65	[BUG]  [BUGGY]  sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.max(1,  dp  *  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
66	[BUG]  [BUGGY]  sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_HOUR;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_HOUR;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp)*  DateTimeConstants.MILLIS_PER_HOUR;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
67	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp  *  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
68	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.floor(sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =(int[])Math.floor(sum);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.floor(sum);	      int[]    p2    =(int[])Math.floor(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
69	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =(int[])Math.floor(sum,  dp);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.floor(sum,  dp);	      int[]    p2    =(int[])Math.floor(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
70	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.floor(dp,  sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =(int[])Math.floor(dp,  sum);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.floor(dp,  sum);	      int[]    p2    =(int[])Math.floor(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
71	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.ceil(dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =(int[])Math.ceil(dp);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.ceil(dp);	      int[]    p2    =(int[])Math.floor(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
72	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.log(sum  +  1));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum  +  1));	      Math.sqrt(Math.log(sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
73	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum)+  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.log(sum)+  dp);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum)+  dp);	      Math.sqrt(Math.log(sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
74	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)+  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp)+  1);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)+  1);	      Math.sqrt(Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
75	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.sqrt(sum);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.sqrt(sum);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
76	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.sqrt(type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.sqrt(type);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.sqrt(type);	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
77	[BUG]  [BUGGY]  Math.sqrt(Math.pow(10,  dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.pow(10,  dp));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.pow(10,  dp));	      Math.sqrt(Math.log(sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
78	[BUG]  [BUGGY]  Math.sqrt(Math.log(sum  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.log(sum  -  1));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(sum  -  1));	      Math.sqrt(Math.log(sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
79	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  dp;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  dp;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
80	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  2;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  2;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
81	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  -  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  -  1;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  -  1;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
82	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  dp;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  *  dp;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
83	[BUG]  [BUGGY]  Math.sqrt(type);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(type);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(type);	      Math.sqrt(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	12	None	replace
84	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  DateTimeConstants.MILLIS_PER_DAY;  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  DateTimeConstants.MILLIS_PER_DAY;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DAY  /  DateTimeConstants.MILLIS_PER_DAY;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
85	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  *  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_DAY  *  2;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_DAY  *  2;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
86	[BUG]  [BUGGY]  sum  +=  Math.sqrt(type  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(type  *  dp);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(type  *  dp);	  sum    +=    Math.sqrt(dp    *    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
87	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE;  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_SIZE;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
88	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_DECEMBER;  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_DECEMBER;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SIZE  /  DateTimeConstants.MILLIS_PER_DECEMBER;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
89	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.log(dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =(int[])Math.log(dp);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.log(dp);	      int[]    p2    =(int[])Math.floor(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	21	None	replace
90	[BUG]  [BUGGY]  Math.sqrt(type,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(type,  dp);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(type,  dp);	      Math.sqrt(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
91	[BUG]  [BUGGY]  Math.sqrt(dp  *  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(dp  *  dp);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(dp  *  dp);	      Math.sqrt(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
92	[BUG]  [BUGGY]  Math.sqrt(dp  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(dp  +  1);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(dp  +  1);	      Math.sqrt(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
93	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(random()  -  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =(int[])Math.rint(random()  -  dp);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(random()  -  dp);	      int[]    p2    =(int[])Math.rint(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
94	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(type,  dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =(int[])Math.rint(type,  dp);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(type,  dp);	      int[]    p2    =(int[])Math.rint(dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	20	None	replace
95	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  dp;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  dp;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
96	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  2;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_HOUR  *  2;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
97	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_HOUR);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_HOUR);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
98	[BUG]  [BUGGY]  Math.sqrt(Math.log(dp  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.log(dp  +  1));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.log(dp  +  1));	      Math.sqrt(Math.log(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	10	None	replace
99	[BUG]  [BUGGY]  sum  +=  Math.pow(10,  dp  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.pow(10,  dp  *  2);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.pow(10,  dp  *  2);	  sum    +=    dp    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
100	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp);	  sum    +=    dp    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
101	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND  *  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND  *  dp;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SECOND  *  dp;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
102	[BUG]  [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  dp;  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  dp;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  dateTimeConstants.MILLIS_PER_SECOND  *  dp;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
103	[BUG]  [BUGGY]  sum  +=  2  *  DateTimeConstants.MILLIS_PER_SECOND;  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  2  *  DateTimeConstants.MILLIS_PER_SECOND;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  2  *  DateTimeConstants.MILLIS_PER_SECOND;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
104	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)/  dp  +  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp)/  dp  +  1);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)/  dp  +  1);	      Math.sqrt(Math.abs(dp)/    dp);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
105	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_WEEK  /  DateTimeConstants.MILLIS_PER_WEEK;  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_WEEK  /  DateTimeConstants.MILLIS_PER_WEEK;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_WEEK  /  DateTimeConstants.MILLIS_PER_WEEK;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
106	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_WEEK);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_WEEK);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_WEEK;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
107	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp)*  Math.abs(dp  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp)*  Math.abs(dp  -  1));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp)*  Math.abs(dp  -  1));	      Math.sqrt(Math.abs(dp)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
108	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(dp  +  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.log(dp  +  1)];  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(dp  +  1)];	      int[]    p2    =    new    int[Math.log(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
109	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_SECOND);  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_SECOND);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_SECOND);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
110	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND  *  2;  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_SECOND  *  2;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_SECOND  *  2;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SECOND;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
111	[BUG]  [BUGGY]  Math.sqrt(Math.pow(10,  sum));  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.pow(10,  sum));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.pow(10,  sum));	      Math.sqrt(Math.log(sum));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
112	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_SIZE);  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_SIZE);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_SIZE);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_SIZE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
113	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_DAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_DAY);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_DAY);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_DAY;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	2	None	replace
114	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  DateTimeConstants.MILLIS_PER_HOUR;  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  DateTimeConstants.MILLIS_PER_HOUR;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_HOUR  /  DateTimeConstants.MILLIS_PER_HOUR;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_HOUR;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
115	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  -  1)];  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  -  1)];  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp  -  1)];	      int[]    p2    =    new    int[Math.abs(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
116	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  /  dp)];  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.abs(dp  /  dp)];  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.abs(dp  /  dp)];	      int[]    p2    =    new    int[Math.abs(dp)];    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	13	None	replace
117	[BUG]  [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_MINUTE;  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_MINUTE;  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  DateTimeConstants.MILLIS_PER_MINUTE  /  DateTimeConstants.MILLIS_PER_MINUTE;	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
118	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_MINUTE);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_MINUTE);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  *  DateTimeConstants.MILLIS_PER_MINUTE);	  sum    +=    dp    *    DateTimeConstants.MILLIS_PER_MINUTE;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
119	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(type)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.log(type)];  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(type)];	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
120	[BUG]  [BUGGY]  int[]  p2  =  new  int[Math.log(distance)];  [CE]  invalid  method  declaration;  return  type  required  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =  new  int[Math.log(distance)];  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =  new  int[Math.log(distance)];	      	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
121	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  type);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  type);	      int[]    p2    =(int[])Math.rint(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
122	[BUG]  [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int[]  p2  =(int[])Math.rint(sum,  1);  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	int[]  p2  =(int[])Math.rint(sum,  1);	      int[]    p2    =(int[])Math.rint(sum);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
123	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  -  1)*  Math.abs(dp));  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp  -  1)*  Math.abs(dp));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  -  1)*  Math.abs(dp));	      Math.sqrt(Math.abs(dp)*    Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
124	[BUG]  [BUGGY]  sum  +=  Math.abs(dp  *  2);  [CE]  invalid  method  declaration;  return  type  required  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.abs(dp  *  2);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.abs(dp  *  2);	  sum    +=    dp    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
125	[BUG]  [BUGGY]  sum  +=  Math.sqrt(dp2);  [CE]  invalid  method  declaration;  return  type  required  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  sum  +=  Math.sqrt(dp2);  [BUGGY]    }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	sum  +=  Math.sqrt(dp2);	  sum    +=    dp    *    2;    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
126	[BUG]  [BUGGY]  Math.sqrt(Math.abs(dp  -  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  Math.sqrt(Math.abs(dp  -  1));  [BUGGY]    sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1627	1627	1	replace	Math.sqrt(Math.abs(dp  -  1));	      Math.sqrt(Math.abs(dp));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
