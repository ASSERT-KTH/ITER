bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  sum  =  0;  [CE]  invalid  method  declaration;  return  type  required  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  double  sum  =  0;  [BUGGY]  for  (int  i  =  0;  i  <  p1.length;  i++)  {  final  int  dp  =  p1[i]  -  p2[i];  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1624	1624	1	replace	double  sum  =  0;	int  sum  =  0;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
2	[BUG]  [BUGGY]  int  sum  =  1;  [CE]  invalid  method  declaration;  return  type  required  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  int  sum  =  1;  [BUGGY]  for  (int  i  =  0;  i  <  p1.length;  i++)  {  final  int  dp  =  p1[i]  -  p2[i];  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1624	1624	1	replace	int  sum  =  1;	int  sum  =  0;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
3	[BUG]  [BUGGY]  float  sum  =  0;  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  float  sum  =  0;  [BUGGY]  for  (int  i  =  0;  i  <  p1.length;  i++)  {  final  int  dp  =  p1[i]  -  p2[i];  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1624	1624	1	replace	float  sum  =  0;	int  sum  =  0;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
4	[BUG]  [BUGGY]    [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    [BUGGY]  for  (int  i  =  0;  i  <  p1.length;  i++)  {  final  int  dp  =  p1[i]  -  p2[i];  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1624	1624	1	replace	  	int  sum  =  0;  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
5	[BUG]  [BUGGY]    final  int[]  p2  =(int[])Math.rint(p1.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    final  int[]  p2  =(int[])Math.rint(p1.length);  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  p1.length;  i++)  {  final  int  dp  =  p1[i]  -  p2[i];  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1624	1624	1	replace	    final  int[]  p2  =(int[])Math.rint(p1.length);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	add
6	[BUG]  [BUGGY]    final  int[]  p2  =(int[])Math.rint(p1.length,  p2.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    final  int[]  p2  =(int[])Math.rint(p1.length,  p2.length);  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  p1.length;  i++)  {  final  int  dp  =  p1[i]  -  p2[i];  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1624	1624	1	replace	    final  int[]  p2  =(int[])Math.rint(p1.length,  p2.length);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	add
7	[BUG]  [BUGGY]    int[]  p2  =(int[])Math.rint(p1.length,  p2.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    int[]  p2  =(int[])Math.rint(p1.length,  p2.length);  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  p1.length;  i++)  {  final  int  dp  =  p1[i]  -  p2[i];  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1624	1624	1	replace	    int[]  p2  =(int[])Math.rint(p1.length,  p2.length);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	add
8	[BUG]  [BUGGY]    int[]  p2  =(int[])Math.rint(p1.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException  [CONTEXT]    [BUGGY]    int[]  p2  =(int[])Math.rint(p1.length);  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  p1.length;  i++)  {  final  int  dp  =  p1[i]  -  p2[i];  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1624	1624	1	replace	    int[]  p2  =(int[])Math.rint(p1.length);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	add
9	[BUG]  [BUGGY]    final  int[]  p2  =(int[])Math.floor(p1.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]            NullPointerException  [CONTEXT]    [BUGGY]    final  int[]  p2  =(int[])Math.floor(p1.length);  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  p1.length;  i++)  {  final  int  dp  =  p1[i]  -  p2[i];  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1624	1624	1	replace	    final  int[]  p2  =(int[])Math.floor(p1.length);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	add
10	[BUG]  [BUGGY]    int[]  p2  =(int[])Math.floor(p1.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]    NullPointerException  [CONTEXT]    [BUGGY]    int[]  p2  =(int[])Math.floor(p1.length);  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  p1.length;  i++)  {  final  int  dp  =  p1[i]  -  p2[i];  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1624	1624	1	replace	    int[]  p2  =(int[])Math.floor(p1.length);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	add
11	[BUG]  [BUGGY]    int[]  p2  =(int[])Math.floor(p1.length,  p2.length);  [CE]  invalid  method  declaration;  return  type  required  [FE]      NullPointerException  [CONTEXT]    [BUGGY]    int[]  p2  =(int[])Math.floor(p1.length,  p2.length);  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  p1.length;  i++)  {  final  int  dp  =  p1[i]  -  p2[i];  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1624	1624	1	replace	    int[]  p2  =(int[])Math.floor(p1.length,  p2.length);		non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	add
12	[BUG]  [BUGGY]    int[]  p2  =(int[])mapping.clone();  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException  [CONTEXT]    [BUGGY]    int[]  p2  =(int[])mapping.clone();  [BUGGY]  int  sum  =  0;  for  (int  i  =  0;  i  <  p1.length;  i++)  {  final  int  dp  =  p1[i]  -  p2[i];  sum  +=  dp  *  dp;  }  return  Math.sqrt(sum);  }  [CLASS]  MathUtils  [METHOD]  distance  [RETURN_TYPE]  double  int[]  p1  int[]  p2  	projects/Math79/src/main/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	1624	1624	1	replace	    int[]  p2  =(int[])mapping.clone();		non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	add
