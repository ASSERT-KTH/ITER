bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  1);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  1);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue(argumentCount,  1);	  Validator    validator    =    option.getValue(argumentCount,    arguments);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
2	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  argumentCount  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  argumentCount  +  1);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue(argumentCount,  argumentCount  +  1);	  Validator    validator    =    option.getValue(argumentCount,    arguments);    	non-compiled	[CE]  class,  interface,  or  enum  expected	75	None	replace
3	[BUG]  [BUGGY]  final  int  argumentCount  =  arguments.get(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  int  argumentCount  =  arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  int  argumentCount  =  arguments.get(argumentCount);	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    argumentCount    =    arguments.get(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
4	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  argumentCount  =  arguments.get(argumentCount);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  argumentCount  =  arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  argumentCount  =  arguments.get(argumentCount);	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    argumentCount    =    arguments.get(argumentCount);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	46	None	replace
5	[BUG]  [BUGGY]  final  String  argumentCount  =  arguments.get(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  String  argumentCount  =  arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  String  argumentCount  =  arguments.get(argumentCount);	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    argumentCount    =    arguments.get(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
6	[BUG]  [BUGGY]  final  int  argumentCount  =  arguments.size();  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  int  argumentCount  =  arguments.size();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  int  argumentCount  =  arguments.size();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    argumentCount    =    arguments.get(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
7	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(0);  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(0);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(0);	  Validator    validator    =    options.getValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
8	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  1))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  &&(argumentCount  <  1))  {	  while(arguments.hasNext()    ||(argumentCount    <    1))    {    	compilable	  [FE]  ComparisonFailure  	80	1	replace
9	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  1))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  1))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  1))  {	  while(arguments.hasNext()    ||(argumentCount    <    1))    {    	compilable	  [FE]  ComparisonFailure  	80	1	replace
10	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  arguments.next()  <  minimum)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  arguments.next()  <  minimum)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||  arguments.next()  <  minimum)  {	  while(arguments.hasNext()    ||(argumentCount    <    1))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	80	None	replace
11	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final    String    allValuesQuoted    =(String)arguments.get(argumentCount    -    1);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
12	[BUG]  [BUGGY]  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final    String    allValuesQuoted    =(String)arguments.get(argumentCount    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
13	[BUG]  [BUGGY]  final  int  argumentCount  =  arguments.get(argumentCount  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  int  argumentCount  =  arguments.get(argumentCount  -  1);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  int  argumentCount  =  arguments.get(argumentCount  -  1);	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final    String    allValuesQuoted    =(String)arguments.get(argumentCount    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
14	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final    String    allValuesQuoted    =(String)arguments.next();    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	1	None	replace
15	[BUG]  [BUGGY]  final  int  argumentCount  =  arguments.next();  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  int  argumentCount  =  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  int  argumentCount  =  arguments.next();	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final    String    allValuesQuoted    =(String)arguments.next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
16	[BUG]  [BUGGY]  final  String  allValuesQuoted  =(String)arguments.next();  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  String  allValuesQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  String  allValuesQuoted  =(String)arguments.next();	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final    String    allValuesQuoted    =(String)arguments.next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
17	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  String  argumentCount  =  arguments.get(argumentCount);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  String  argumentCount  =  arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  final  String  argumentCount  =  arguments.get(argumentCount);	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final    String    argumentCount    =    arguments.get(argumentCount);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	4	None	replace
18	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.size();  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Integer  argumentCount  =  arguments.size();  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Integer  argumentCount  =  arguments.size();	  int    argumentCount    =    arguments.size()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
19	[BUG]  [BUGGY]  char  argumentCount  =  arguments.size();  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  char  argumentCount  =  arguments.size();  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	char  argumentCount  =  arguments.size();	  int    argumentCount    =    arguments.size()    -    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
20	[BUG]  [BUGGY]  Validator  validator  =  option.validateOption(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateOption(argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateOption(argumentCount);	  Validator    validator    =    option.validateOption(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
21	[BUG]  [BUGGY]  Validator  validator  =  option.validateOption(defaultValues);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateOption(defaultValues);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateOption(defaultValues);	  Validator    validator    =    option.validateOption(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
22	[BUG]  [BUGGY]  Validator  validator  =  option.validateOption(arguments);  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateOption(arguments);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateOption(arguments);	  Validator    validator    =    option.validateOption(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
23	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  int  argumentCount  =  arguments.size();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  int  argumentCount  =  arguments.size();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  int  argumentCount  =  arguments.size();	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    final    int    argumentCount    =    arguments.size();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	43	None	replace
24	[BUG]  [BUGGY]  Validator  validator  =  options.hasValue()?  option.getValue()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.hasValue()?  option.getValue()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.hasValue()?  option.getValue()  :  null;	  Validator    validator    =    option.hasValue()?    options.getValue()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
25	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  arguments.getValue()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValue()?  arguments.getValue()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValue()?  arguments.getValue()  :  null;	  Validator    validator    =    option.hasValue()?    options.getValue()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
26	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  options.getValue()  :  defaultValues;  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValue()?  options.getValue()  :  defaultValues;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValue()?  options.getValue()  :  defaultValues;	  Validator    validator    =    option.hasValue()?    options.getValue()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
27	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  minimum  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  minimum  +  1);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue(argumentCount,  minimum  +  1);	  Validator    validator    =    option.getValue(argumentCount,    minimum);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
28	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  minimum  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  minimum  -  1);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue(argumentCount,  minimum  -  1);	  Validator    validator    =    option.getValue(argumentCount,    minimum);    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
29	[BUG]  [BUGGY]  final  int  maximum  =  arguments.size();  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  int  maximum  =  arguments.size();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  int  maximum  =  arguments.size();	  while(arguments.hasNext())    {    if(arguments.hasNext())    {    final    String    allValuesQuoted    =    (String)arguments.next();    final    String    allValuesQuoted    =    (String)arguments.next();    final    String    allValuesQuoted    =    (String)argu    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
30	[BUG]  [BUGGY]  final  int  minimum  =  arguments.size();  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  int  minimum  =  arguments.size();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  int  minimum  =  arguments.size();	  while(arguments.hasNext())    {    if(arguments.hasNext())    {    final    String    allValuesQuoted    =    (String)arguments.next();    final    String    allValuesQuoted    =    (String)arguments.next();    final    String    allValuesQuoted    =    (String)argu    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
31	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    commandLine.addValue(option,    arguments.next());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
32	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    commandLine.addValue(option,    arguments.next());    }    	compilable	  [FE]  ComparisonFailure  	86	1	replace
33	[BUG]  [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    commandLine.addValue(option,    arguments.next());    }    	compilable	  [FE]  ComparisonFailure  	86	1	replace
34	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  arguments.add(argumentCount);  commandLine.addValue(option,  arguments.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext())  {  arguments.add(argumentCount);  commandLine.addValue(option,  arguments.next());	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    commandLine.addValue(option,    arguments.next());    }    	compilable	  [FE]  ComparisonFailure  	86	1	replace
35	[BUG]  [BUGGY]  while(arguments.hasNext())  {  arguments.add(argumentCount);  commandLine.addValue(option,  arguments.next());  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  arguments.add(argumentCount);  commandLine.addValue(option,  arguments.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  arguments.add(argumentCount);  commandLine.addValue(option,  arguments.next());	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    commandLine.addValue(option,    arguments.next());    }    	compilable	  [FE]  ComparisonFailure  	86	1	replace
36	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    commandLine.addValue(option,    arguments.next());    }    	compilable	  [FE]  ComparisonFailure  	86	1	replace
37	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    commandLine.addValue(option,    arguments.next());    }    	compilable	  [FE]  ComparisonFailure  	86	1	replace
38	[BUG]  [BUGGY]  Validator  validator  =  options.values().next();  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.values().next();  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.values().next();	  Validator    validator    =    option.values().next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
39	[BUG]  [BUGGY]  Validator  validator  =  option.values().remove(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.values().remove(argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.values().remove(argumentCount);	  Validator    validator    =    option.values().next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
40	[BUG]  [BUGGY]  Validator  validator  =  option.values().iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.values().iterator();  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.values().iterator();	  Validator    validator    =    option.values().next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
41	[BUG]  [BUGGY]  Validator  validator  =  option.validate(argumentCount  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(argumentCount  +  1);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(argumentCount  +  1);	  Validator    validator    =    option.validate(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
42	[BUG]  [BUGGY]  Validator  validator  =  option.validate(argumentCount  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(argumentCount  -  1);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(argumentCount  -  1);	  Validator    validator    =    option.validate(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
43	[BUG]  [BUGGY]  Validator  validator  =  option.validate(argumentCount,  minimum);  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(argumentCount,  minimum);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(argumentCount,  minimum);	  Validator    validator    =    option.validate(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
44	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  minimum);  [CE]  class,  interface,  or  enum  expected  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  minimum);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(argumentCount,  minimum);	  Validator    validator    =    option.validate(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
45	[BUG]  [BUGGY]  Argument  arguments  =  option.getArguments(argumentCount  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Argument  arguments  =  option.getArguments(argumentCount  +  1);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  arguments  =  option.getArguments(argumentCount  +  1);	  Argument    arguments    =    option.getArguments(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
46	[BUG]  [BUGGY]  Argument  arguments  =  option.getArguments(argumentCount  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Argument  arguments  =  option.getArguments(argumentCount  -  1);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  arguments  =  option.getArguments(argumentCount  -  1);	  Argument    arguments    =    option.getArguments(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
47	[BUG]  [BUGGY]  Argument  arguments  =  options.getArguments(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Argument  arguments  =  options.getArguments(argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  arguments  =  options.getArguments(argumentCount);	  Argument    arguments    =    option.getArguments(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
48	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValues  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValues  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValues	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    if(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    allValuesQuoted    =(String)arguments.next();    final    String    allValuesQuoted    =    (String)arguments.    	non-compiled	[CE]  ';'  expected	94	None	replace
49	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    if(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    allValuesQuoted    =(String)arguments.next();    final    String    allValuesQuoted    =    (String)arguments.    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
50	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    if(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    allValuesQuoted    =(String)arguments.next();    final    String    allValuesQuoted    =    (String)arguments.    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
51	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  Validator  validator  =  option.getValue();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  Validator  validator  =  option.getValue();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  Validator  validator  =  option.getValue();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    Validator    validator    =    option.getValue();    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
52	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  Validator  validator  =  option.getValue();  [CE]  cannot  find  symbol  maximal  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  Validator  validator  =  option.getValue();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  Validator  validator  =  option.getValue();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    Validator    validator    =    option.getValue();    	non-compiled	[CE]  cannot  find  symbol  maximal	48	None	replace
53	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  validator  =  option.getValue();  [CE]  cannot  assign  a  value  to  final  variable  validator  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  validator  =  option.getValue();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  validator  =  option.getValue();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    Validator    validator    =    option.getValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  validator	48	None	replace
54	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  int  argumentCount  =  arguments.size();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  int  argumentCount  =  arguments.size();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  int  argumentCount  =  arguments.size();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    int    argumentCount    =    arguments.size();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	47	None	replace
55	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  final  int  argumentCount  =  arguments.size();  [CE]  cannot  find  symbol  maximal  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  final  int  argumentCount  =  arguments.size();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  final  int  argumentCount  =  arguments.size();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    int    argumentCount    =    arguments.size();    	non-compiled	[CE]  cannot  find  symbol  maximal	47	None	replace
56	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  int  argumentsCount  =  arguments.size();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  int  argumentsCount  =  arguments.size();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  int  argumentsCount  =  arguments.size();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    int    argumentCount    =    arguments.size();    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
57	[BUG]  [BUGGY]  Validator  validator  =  option.hasValues()?  option.getValues()  :  defaultValues;  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValues()?  option.getValues()  :  defaultValues;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValues()?  option.getValues()  :  defaultValues;	  Validator    validator    =    option.hasValues()?    option.getValues()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
58	[BUG]  [BUGGY]  Validator  validator  =  options.hasValues()?  option.getValues()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.hasValues()?  option.getValues()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.hasValues()?  option.getValues()  :  null;	  Validator    validator    =    option.hasValues()?    option.getValues()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
59	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  id);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  id);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue(argumentCount,  id);	  Validator    validator    =    option.getValue(argumentCount,    maximum);    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
60	[BUG]  [BUGGY]  Argument  argument  =  options.getArguments();  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Argument  argument  =  options.getArguments();  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  argument  =  options.getArguments();	  Argument    arguments    =    options.getArguments();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
61	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.next();  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    allValuesQuoted    =(String)arguments.next();    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	26	None	replace
62	[BUG]  [BUGGY]  Validator  validator  =  option.hasValues()?  options.getValues()  :  defaultValues;  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValues()?  options.getValues()  :  defaultValues;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValues()?  options.getValues()  :  defaultValues;	  Validator    validator    =    option.hasValues()?    options.getValues()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
63	[BUG]  [BUGGY]  Validator  validator  =  option.hasValues()?  arguments.getValues()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValues()?  arguments.getValues()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValues()?  arguments.getValues()  :  null;	  Validator    validator    =    option.hasValues()?    options.getValues()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
64	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    final    String    allValuesQuoted    =(String)arguments.get(argumentCount    -    1);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
65	[BUG]  [BUGGY]  Validator  validator  =  option.getValue( "call. ",  arguments);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue( "call. ",  arguments);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue( "call. ",  arguments);	  Validator    validator    =    option.getValue(   "call   ",    arguments);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
66	[BUG]  [BUGGY]  Validator  validator  =  option.getValue( "call ",  values);  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue( "call ",  values);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue( "call ",  values);	  Validator    validator    =    option.getValue(   "call   ",    arguments);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
67	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  >=  maximum))  {  Validator  validator  =  option.getValue();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  >=  maximum))  {  Validator  validator  =  option.getValue();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  >=  maximum))  {  Validator  validator  =  option.getValue();	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    Validator    validator    =    option.getValue();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
68	[BUG]  [BUGGY]  final  String  argumentsQuoted  =(String)arguments.next();  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  String  argumentsQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  String  argumentsQuoted  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    argumentsQuoted    =(String)arguments.next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
69	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  String  argumentCount  =(String)arguments.next();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  String  argumentCount  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  final  String  argumentCount  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    argumentsQuoted    =(String)arguments.next();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	27	None	replace
70	[BUG]  [BUGGY]  final  String  argumentCount  =(String)arguments.next();  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  String  argumentCount  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  String  argumentCount  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    argumentsQuoted    =(String)arguments.next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
71	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(option,  arguments.next(),  argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(option,  arguments.next(),  argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(option,  arguments.next(),  argumentCount);	  Validator    validator    =    options.getValue(option,    arguments.next());    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
72	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(argumentCount,  arguments.next());  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(argumentCount,  arguments.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(argumentCount,  arguments.next());	  Validator    validator    =    options.getValue(option,    arguments.next());    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
73	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(option,  arguments.next(),  arguments.length);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(option,  arguments.next(),  arguments.length);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(option,  arguments.next(),  arguments.length);	  Validator    validator    =    options.getValue(option,    arguments.next());    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
74	[BUG]  [BUGGY]  int  minimal  =  arguments.size();  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  int  minimal  =  arguments.size();  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	int  minimal  =  arguments.size();	  int    minimum    =    arguments.size()    -    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
75	[BUG]  [BUGGY]  int  minimum  =  argumentCount.size();  [CE]  class,  interface,  or  enum  expected  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  int  minimum  =  argumentCount.size();  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	int  minimum  =  argumentCount.size();	  int    minimum    =    arguments.size()    -    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
76	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  arguments.next()  <  minimum)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while  (arguments.hasNext()  &&  arguments.next()  <  minimum)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while  (arguments.hasNext()  &&  arguments.next()  <  minimum)  {	  while    (arguments.hasNext()    &&    arguments.next()    <    maximum)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	36	None	replace
77	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  arguments.next()  <  argumentCount)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while  (arguments.hasNext()  &&  arguments.next()  <  argumentCount)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while  (arguments.hasNext()  &&  arguments.next()  <  argumentCount)  {	  while    (arguments.hasNext()    &&    arguments.next()    <    maximum)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	36	None	replace
78	[BUG]  [BUGGY]  Validator  validator  =  arguments.next().validate(option);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  arguments.next().validate(option);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  arguments.next().validate(option);	  Validator    validator    =    arguments.next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
79	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(defaultValues);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue(defaultValues);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue(defaultValues);	  Validator    validator    =    option.getValue(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
80	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(commandLine);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue(commandLine);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue(commandLine);	  Validator    validator    =    option.getValue(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
81	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(arguments);  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue(arguments);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue(arguments);	  Validator    validator    =    option.getValue(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
82	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(argumentCount);	  Validator    validator    =    option.validateValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
83	[BUG]  [BUGGY]  Validator  validator  =  option.validateOptionalValue();  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateOptionalValue();  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateOptionalValue();	  Validator    validator    =    option.validateValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
84	[BUG]  [BUGGY]  final  String  allValuesQuoted  =(String)arguments.getNext();  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  String  allValuesQuoted  =(String)arguments.getNext();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  String  allValuesQuoted  =(String)arguments.getNext();	  while(arguments.hasNext())    {    final    String    allValuesQuoted    =(String)arguments.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	65	None	replace
85	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.get(0);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.get(0);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.get(0);	  while(arguments.hasNext())    {    final    String    allValuesQuoted    =(String)arguments.getNext();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
86	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.getNext();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.getNext();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.getNext();	  while(arguments.hasNext())    {    final    String    allValuesQuoted    =(String)arguments.getNext();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
87	[BUG]  [BUGGY]  Validator  validator  =  arguments.getValue(option,  arguments.next());  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  arguments.getValue(option,  arguments.next());  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  arguments.getValue(option,  arguments.next());	  Validator    validator    =    arguments.getValue(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
88	[BUG]  [BUGGY]  Validator  validator  =  option.validate(argumentCount,  maximum);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(argumentCount,  maximum);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(argumentCount,  maximum);	  Validator    validator    =    option.validate(argumentCount,    argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
89	[BUG]  [BUGGY]  Validator  validator  =  option.validate(argumentCount,  0);  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(argumentCount,  0);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(argumentCount,  0);	  Validator    validator    =    option.validate(argumentCount,    argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
90	[BUG]  [BUGGY]  Validator  validator  =  option.validate(argumentCount,  argumentCount  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(argumentCount,  argumentCount  +  1);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(argumentCount,  argumentCount  +  1);	  Validator    validator    =    option.validate(argumentCount,    argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
91	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(defaultValues,  argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(defaultValues,  argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(defaultValues,  argumentCount);	  Validator    validator    =    options.getValue(defaultValues);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
92	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(defaultValues,  arguments);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(defaultValues,  arguments);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(defaultValues,  arguments);	  Validator    validator    =    options.getValue(defaultValues);    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
93	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  String  allValuesQuoted  =(String)arguments.next();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  String  allValuesQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&    argumentCount    <    minimum)    {    final  String  allValuesQuoted  =(String)arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
94	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  Validator  validator  =  option.getValue();  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  Validator  validator  =  option.getValue();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&    argumentCount    <    minimum)    {    Validator  validator  =  option.getValue();	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
95	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&    argumentCount    <    minimum)    {    final  String  allValuesQuoted  =(String)arguments.get(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
96	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  String  argumentCount  =  arguments.next();  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  String  argumentCount  =  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&    argumentCount    <    minimum)    {    final  String  argumentCount  =  arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
97	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  minimum)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  ||  argumentCount  <  minimum)  {	  while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    	compilable	  [FE]  ComparisonFailure  	101	1	replace
98	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  minimum)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  minimum)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||  argumentCount  <  minimum)  {	  while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    	compilable	  [FE]  ComparisonFailure  	101	1	replace
99	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  >  maximum)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  ||  argumentCount  >  maximum)  {	  while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    	compilable	  [FE]  NoSuchElementException  	101	1	replace
100	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  >  maximum)  {  [FE]  NoSuchElementException  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  >  maximum)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||  argumentCount  >  maximum)  {	  while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    	compilable	  [FE]  NoSuchElementException  	101	1	replace
101	[BUG]  [BUGGY]  Validator  validator  =  option.validate(),  argumentCount  +  1;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(),  argumentCount  +  1;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(),  argumentCount  +  1;	  Validator    validator    =    option.validate(),    argumentCount;    	non-compiled	[CE]  ';'  expected	15	None	replace
102	[BUG]  [BUGGY]  Validator  validator  =  option.validate(),  arguments;  [CE]  class,  interface,  or  enum  expected  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(),  arguments;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(),  arguments;	  Validator    validator    =    option.validate(),    argumentCount;    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
103	[BUG]  [BUGGY]  Validator  validator  =  option.validate(),  minimum;  [CE]  class,  interface,  or  enum  expected  [FE]                          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(),  minimum;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(),  minimum;	  Validator    validator    =    option.validate(),    argumentCount;    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
104	[BUG]  [BUGGY]  Validator  validator  =  option.validate(),  argumentCount-1;  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(),  argumentCount-1;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(),  argumentCount-1;	  Validator    validator    =    option.validate(),    argumentCount;    	non-compiled	[CE]  ';'  expected	15	None	replace
105	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  1)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  &&  argumentCount  <  1)  {	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    while(arguments.hasNext()    &&    argumentCount    <    maximum)    {    	compilable	  [FE]  ComparisonFailure  	90	1	replace
106	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  1)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  1)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  argumentCount  <  1)  {	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    while(arguments.hasNext()    &&    argumentCount    <    maximum)    {    	compilable	  [FE]  ComparisonFailure  	90	1	replace
107	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  int  argumentCount  =  arguments.size();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  int  argumentCount  =  arguments.size();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    final  int  argumentCount  =  arguments.size();	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
108	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  String  argumentCount  =  arguments.get(argumentCount);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  String  argumentCount  =  arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    final  String  argumentCount  =  arguments.get(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
109	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  Validator  validator  =  option.getValue();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  Validator  validator  =  option.getValue();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    Validator  validator  =  option.getValue();	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
110	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  int  argumentCount  =  arguments.size();  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  int  argumentCount  =  arguments.size();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    int  argumentCount  =  arguments.size();	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
111	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  String  argumentCount  =  arguments.next();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  String  argumentCount  =  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    final  String  argumentCount  =  arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
112	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  arguments.hasNext())  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  ||  arguments.hasNext())  {	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    if(arguments.hasNext()    ||(argumentCount    <    maximum))    {    while(arguments.hasNext()    &&(argumentCount    <    maximum))    {    }    	compilable	  [FE]  ComparisonFailure  	95	1	replace
113	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  arguments.hasNext())  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||  arguments.hasNext())  {	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    if(arguments.hasNext()    ||(argumentCount    <    maximum))    {    while(arguments.hasNext()    &&(argumentCount    <    maximum))    {    }    	compilable	  [FE]  ComparisonFailure  	95	1	replace
114	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  Validator  validator  =  option.next();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  Validator  validator  =  option.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  Validator  validator  =  option.next();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    Validator    validator    =    option.next();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
115	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  Validator  validator  =  option.next();  [CE]  cannot  find  symbol  maximal  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  Validator  validator  =  option.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  Validator  validator  =  option.next();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    Validator    validator    =    option.next();    	non-compiled	[CE]  cannot  find  symbol  maximal	50	None	replace
116	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  arguments.next()  <  maximum)  {  Validator  validator  =  option.next();  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  arguments.next()  <  maximum)  {  Validator  validator  =  option.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||  arguments.next()  <  maximum)  {  Validator  validator  =  option.next();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    Validator    validator    =    option.next();    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	50	None	replace
117	[BUG]  [BUGGY]  int  argumentCount  =  arguments.hasNext();  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  int  argumentCount  =  arguments.hasNext();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	int  argumentCount  =  arguments.hasNext();	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.add(option.next());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
118	[BUG]  [BUGGY]  nisips.add(option.next());  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  nisips.add(option.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	nisips.add(option.next());	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.add(option.next());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
119	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.next();  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Integer  argumentCount  =  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Integer  argumentCount  =  arguments.next();	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.add(option.next());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
120	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(option.next());  [CE]  class,  interface,  or  enum  expected  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Integer  argumentCount  =  arguments.get(option.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Integer  argumentCount  =  arguments.get(option.next());	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.add(option.next());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
121	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  arguments.next()  >  minimum)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  arguments.next()  >  minimum)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  arguments.next()  >  minimum)  {	  while(arguments.hasNext()    &&    arguments.next()    >    maximum)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	69	None	replace
122	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  argumentCount  =  arguments.next();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  argumentCount  =  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  argumentCount  =  arguments.next();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    argumentCount    =    arguments.next();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	49	None	replace
123	[BUG]  [BUGGY]  final  String  argumentCount  =  arguments.next();  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  String  argumentCount  =  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  String  argumentCount  =  arguments.next();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    argumentCount    =    arguments.next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
124	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  argumentCount  =  arguments.get(argumentCount);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  argumentCount  =  arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    1))    {    final  String  argumentCount  =  arguments.get(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
125	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  &&  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  &&  arguments.hasNext())  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    1))    {    &&  arguments.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
126	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  Validator  validator  =  option.getValue(argumentCount);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  Validator  validator  =  option.getValue(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    1))    {    Validator  validator  =  option.getValue(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
127	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  argumentCount  =  arguments.get(argumentCount  -  1);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  argumentCount  =  arguments.get(argumentCount  -  1);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    1))    {    final  String  argumentCount  =  arguments.get(argumentCount  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
128	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  argumentCount  =  arguments.next();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  argumentCount  =  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    1))    {    final  String  argumentCount  =  arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
129	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Integer  argumentCount  =  arguments.get(argumentCount);	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    i++)    {    arguments.next();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
130	[BUG]  [BUGGY]  int  argumentCount  =  arguments.next();  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  int  argumentCount  =  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	int  argumentCount  =  arguments.next();	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    i++)    {    arguments.next();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
131	[BUG]  [BUGGY]  Validator  validator  =  options.hasValueImpl()?  option.getValueImpl()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.hasValueImpl()?  option.getValueImpl()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.hasValueImpl()?  option.getValueImpl()  :  null;	  Validator    validator    =    option.hasValueImpl()?    options.getValueImpl()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
132	[BUG]  [BUGGY]  Validator  validator  =  options.hasValueImpl()?  options.getValueImpl()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.hasValueImpl()?  options.getValueImpl()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.hasValueImpl()?  options.getValueImpl()  :  null;	  Validator    validator    =    option.hasValueImpl()?    options.getValueImpl()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
133	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  options.getValueImpl()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValue()?  options.getValueImpl()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValue()?  options.getValueImpl()  :  null;	  Validator    validator    =    option.hasValueImpl()?    options.getValueImpl()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
134	[BUG]  [BUGGY]  Int  argumentCount  =  arguments.size();  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Int  argumentCount  =  arguments.size();  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Int  argumentCount  =  arguments.size();	  int    argumentCount    =    arguments.size()    -    2;    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
135	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  arguments.next()  <  maximal)  {  [CE]  cannot  find  symbol  maximal  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  arguments.next()  <  maximal)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  arguments.next()  <  maximal)  {	  while(arguments.hasNext()    ||    arguments.next()    <    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  maximal	22	None	replace
136	[BUG]  [BUGGY]  whil(arguments.hasNext()  &&  arguments.next()  <  maximum)  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  whil(arguments.hasNext()  &&  arguments.next()  <  maximum)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	whil(arguments.hasNext()  &&  arguments.next()  <  maximum)  {	  while(arguments.hasNext()    ||    arguments.next()    <    maximum)    {    	non-compiled	[CE]  ';'  expected	22	None	replace
137	[BUG]  [BUGGY]  nisips.add(arguments.next());  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  nisips.add(arguments.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	nisips.add(arguments.next());	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.remove();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
138	[BUG]  [BUGGY]  nisip.addValue(option,  arguments.next());  [CE]  class,  interface,  or  enum  expected  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  nisip.addValue(option,  arguments.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	nisip.addValue(option,  arguments.next());	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.remove();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
139	[BUG]  [BUGGY]  Argument  argument  =  option.getArgument();  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Argument  argument  =  option.getArgument();  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  argument  =  option.getArgument();	  Argument    argument    =    option.getArguments();    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
140	[BUG]  [BUGGY]  Argument  argument  =  option.getArguments(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Argument  argument  =  option.getArguments(argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  argument  =  option.getArguments(argumentCount);	  Argument    argument    =    option.getArguments();    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
141	[BUG]  [BUGGY]  Argument  argument  =  option.getArgument(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Argument  argument  =  option.getArgument(argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  argument  =  option.getArgument(argumentCount);	  Argument    argument    =    option.getArguments();    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
142	[BUG]  [BUGGY]  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    values.add(option.getValue(id));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
143	[BUG]  [BUGGY]  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    values.add(option.getValue(id));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
144	[BUG]  [BUGGY]  if(arguments.size()  >  maximum)  {  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.size()  >  maximum)  {  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.size()  >  maximum)  {  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    values.add(option.getValue(id));    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
145	[BUG]  [BUGGY]  Validator  validator  =  option.getValue( "call ",  argumentCount  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue( "call ",  argumentCount  +  1);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue( "call ",  argumentCount  +  1);	  Validator    validator    =    option.getValue(   "call   ",    argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
146	[BUG]  [BUGGY]  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  String  allValuesQuoted  =(String)arguments.get(argumentCount);	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    allValuesQuoted    =(String)arguments.get(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
147	[BUG]  [BUGGY]  final  int  argumentCount  =  arguments.hasNext()?  arguments.get(argumentCount):  arguments.get(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  int  argumentCount  =  arguments.hasNext()?  arguments.get(argumentCount):  arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  int  argumentCount  =  arguments.hasNext()?  arguments.get(argumentCount):  arguments.get(argumentCount);	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    allValuesQuoted    =(String)arguments.get(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
148	[BUG]  [BUGGY]  Validator  validator  =  option.validate(arguments,  argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(arguments,  argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(arguments,  argumentCount);	  Validator    validator    =    option.validate(arguments);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
149	[BUG]  [BUGGY]  Validator  validator  =  option.validate(arguments,  minimum);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(arguments,  minimum);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(arguments,  minimum);	  Validator    validator    =    option.validate(arguments);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
150	[BUG]  [BUGGY]  Validator  validator  =  option.validate(arguments,  arguments);  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(arguments,  arguments);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(arguments,  arguments);	  Validator    validator    =    option.validate(arguments);    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
151	[BUG]  [BUGGY]  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    methods.addValue(option,    arguments.get(id));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
152	[BUG]  [BUGGY]  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    methods.addValue(option,    arguments.get(id));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
153	[BUG]  [BUGGY]  while(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    methods.addValue(option,    arguments.get(id));    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
154	[BUG]  [BUGGY]  Validator  validator  =  options.getValueImpl(0);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValueImpl(0);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValueImpl(0);	  Validator    validator    =    options.getValueImpl();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
155	[BUG]  [BUGGY]  Validator  validator  =  options.getValueImpl(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValueImpl(argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValueImpl(argumentCount);	  Validator    validator    =    options.getValueImpl();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
156	[BUG]  [BUGGY]  Validator  validator  =  options.getValueImpl(option);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValueImpl(option);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValueImpl(option);	  Validator    validator    =    options.getValueImpl();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
157	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  Validator  validator  =  option.getValue();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  Validator  validator  =  option.getValue();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    Validator  validator  =  option.getValue();	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
158	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  final  String  argumentCount  =  arguments.get(argumentCount);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  final  String  argumentCount  =  arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    final  String  argumentCount  =  arguments.get(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
159	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  int  argumentCount  =  arguments.size();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  int  argumentCount  =  arguments.size();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    int  argumentCount  =  arguments.size();	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
160	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  Validator  validator  =  option.getValue(argumentCount);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  Validator  validator  =  option.getValue(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    Validator  validator  =  option.getValue(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
161	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  final  String  argumentCount  =  arguments.next();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  final  String  argumentCount  =  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    final  String  argumentCount  =  arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
162	[BUG]  [BUGGY]  while(arguments.hasNext())  {  arguments.addValue(option,  arguments.next());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  arguments.addValue(option,  arguments.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  arguments.addValue(option,  arguments.next());	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.addValue(option,    arguments.next());    }    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
163	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.addValue(option,    arguments.next());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
164	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.addValue(option,  arguments.next());	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.addValue(option,    arguments.next());    }    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
165	[BUG]  [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.addValue(option,    arguments.next());    }    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
166	[BUG]  [BUGGY]  final  int  argumentCount  =  arguments.hasNext()?  arguments.get(argumentCount  -  1):  arguments.get(argumentCount  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  int  argumentCount  =  arguments.hasNext()?  arguments.get(argumentCount  -  1):  arguments.get(argumentCount  -  1);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  int  argumentCount  =  arguments.hasNext()?  arguments.get(argumentCount  -  1):  arguments.get(argumentCount  -  1);	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    allValuesQuoted    =(String)arguments.get(argumentCount    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	59	None	replace
167	[BUG]  [BUGGY]  whilst(arguments.hasNext()  &&(argumentCount  <  minimum))  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  whilst(arguments.hasNext()  &&(argumentCount  <  minimum))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	whilst(arguments.hasNext()  &&(argumentCount  <  minimum))  {	  while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    	non-compiled	[CE]  ';'  expected	20	None	replace
168	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(option.getValue(),  argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(option.getValue(),  argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(option.getValue(),  argumentCount);	  Validator    validator    =    option.validateValue(option.getValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
169	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(option.getValue(),  arguments);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(option.getValue(),  arguments);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(option.getValue(),  arguments);	  Validator    validator    =    option.validateValue(option.getValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
170	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(option.getKey());  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(option.getKey());  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(option.getKey());	  Validator    validator    =    option.validateValue(option.getValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
171	[BUG]  [BUGGY]  Argument  arguments  =  option.getArgumentsForOption(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Argument  arguments  =  option.getArgumentsForOption(argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  arguments  =  option.getArgumentsForOption(argumentCount);	  Argument    arguments    =    option.getArgumentsForOption(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
172	[BUG]  [BUGGY]  Argument  arguments  =  options.getArgumentsForOption(option);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Argument  arguments  =  options.getArgumentsForOption(option);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  arguments  =  options.getArgumentsForOption(option);	  Argument    arguments    =    option.getArgumentsForOption(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
173	[BUG]  [BUGGY]  Argument  argument  =  option.getArgumentsForOption(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Argument  argument  =  option.getArgumentsForOption(argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  argument  =  option.getArgumentsForOption(argumentCount);	  Argument    arguments    =    option.getArgumentsForOption(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
174	[BUG]  [BUGGY]  Validator  validator  =  options.getValues(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValues(argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValues(argumentCount);	  Validator    validator    =    options.getValues();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
175	[BUG]  [BUGGY]  Validator  validator  =  options.getValues(option);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValues(option);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValues(option);	  Validator    validator    =    options.getValues();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
176	[BUG]  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  String  allValues  =  stripBoundaryQuotes(argumentCount);	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    final    String    allValues    =    stripBoundaryQuotes(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
177	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  String  allValues  =  stripBoundaryQuotes(argumentCount);  [CE]  method  stripBoundaryQuotes  in  class  ArgumentImpl  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  String  allValues  =  stripBoundaryQuotes(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  String  allValues  =  stripBoundaryQuotes(argumentCount);	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    final    String    allValues    =    stripBoundaryQuotes(argumentCount);    	non-compiled	[CE]  method  stripBoundaryQuotes  in  class  ArgumentImpl  cannot  be  applied  to  given  types;	91	None	replace
178	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  (argumentCount  <  minimum))  {  final  String  allValues  =  stripBoundaryQuotes(argumentCount);  [CE]  method  stripBoundaryQuotes  in  class  ArgumentImpl  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  (argumentCount  <  minimum))  {  final  String  allValues  =  stripBoundaryQuotes(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  (argumentCount  <  minimum))  {  final  String  allValues  =  stripBoundaryQuotes(argumentCount);	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    final    String    allValues    =    stripBoundaryQuotes(argumentCount);    	non-compiled	[CE]  method  stripBoundaryQuotes  in  class  ArgumentImpl  cannot  be  applied  to  given  types;	91	None	replace
179	[BUG]  [BUGGY]  Validator  validator  =  option.hasValueImpl()?  option.getRawValueImpl()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValueImpl()?  option.getRawValueImpl()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValueImpl()?  option.getRawValueImpl()  :  null;	  Validator    validator    =    option.hasValueImpl()?    option.getValueImpl()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
180	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  option.getValueImpl()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValue()?  option.getValueImpl()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValue()?  option.getValueImpl()  :  null;	  Validator    validator    =    option.hasValueImpl()?    option.getValueImpl()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
181	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  arguments.hasNext())  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  &&  arguments.hasNext())  {	  while(arguments.hasNext())    {    while(arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	96	1	replace
182	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  arguments.hasNext())  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  arguments.hasNext())  {	  while(arguments.hasNext())    {    while(arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	96	1	replace
183	[BUG]  [BUGGY]  Validator  validator  =  option.next(),  argumentCount  +  1;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.next(),  argumentCount  +  1;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.next(),  argumentCount  +  1;	  Validator    validator    =    option.next(),    argumentCount;    	non-compiled	[CE]  ';'  expected	68	None	replace
184	[BUG]  [BUGGY]  Validator  validator  =  option.next(),  arguments;  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.next(),  arguments;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.next(),  arguments;	  Validator    validator    =    option.next(),    argumentCount;    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
185	[BUG]  [BUGGY]  Validator  validator  =  option.next(),  minimum;  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.next(),  minimum;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.next(),  minimum;	  Validator    validator    =    option.next(),    argumentCount;    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
186	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(argumentCount,  minimum);  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(argumentCount,  minimum);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(argumentCount,  minimum);	  Validator    validator    =    options.getValue(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
187	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(argumentCount  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(argumentCount  -  1);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(argumentCount  -  1);	  Validator    validator    =    options.getValue(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
188	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(argumentCount  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(argumentCount  +  1);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(argumentCount  +  1);	  Validator    validator    =    options.getValue(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
189	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(argumentCount,  maximum);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(argumentCount,  maximum);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(argumentCount,  maximum);	  Validator    validator    =    options.getValue(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
190	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  arguments.id))  {  [CE]  cannot  find  symbol  id  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  arguments.id))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  arguments.id))  {	  while(arguments.hasNext()    &&(argumentCount    <    maximal))    {    	non-compiled	[CE]  cannot  find  symbol  id	21	None	replace
191	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  [CE]  illegal  start  of  expression  [FE]    NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    while(arguments.hasNext()  ||(argumentCount  >  maximum))  {	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
192	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  while(arguments.hasNext()  ||(argumentCount  >  minimum))  {  [CE]  illegal  start  of  expression  [FE]      NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  while(arguments.hasNext()  ||(argumentCount  >  minimum))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    while(arguments.hasNext()  ||(argumentCount  >  minimum))  {	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
193	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  final  String  argumentCount  =  arguments.get(argumentCount);  [CE]  illegal  start  of  expression  [FE]        NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  final  String  argumentCount  =  arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    final  String  argumentCount  =  arguments.get(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
194	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  Validator  validator  =  option.getValue();  [CE]  illegal  start  of  expression  [FE]          NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  Validator  validator  =  option.getValue();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    Validator  validator  =  option.getValue();	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
195	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  Validator  validator  =  option.getValue(argumentCount);  [CE]  illegal  start  of  expression  [FE]            NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  Validator  validator  =  option.getValue(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    Validator  validator  =  option.getValue(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
196	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final    String    allValuesQuoted    =(String)arguments.get(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
197	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  0);  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  0);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue(argumentCount,  0);	  Validator    validator    =    option.getValue(argumentCount,    argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
198	[BUG]  [BUGGY]  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    values.add(option.getValue(id,    arguments.next()));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
199	[BUG]  [BUGGY]  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    values.add(option.getValue(id,    arguments.next()));    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
200	[BUG]  [BUGGY]  if(arguments.size()  >  maximum)  {  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.size()  >  maximum)  {  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.size()  >  maximum)  {  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    values.add(option.getValue(id,    arguments.next()));    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
201	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  options.getValue());  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  options.getValue());  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(argumentCount,  options.getValue());	  Validator    validator    =    option.validateValue(argumentCount,    option.getValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
202	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  arguments.getValue());  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  arguments.getValue());  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(argumentCount,  arguments.getValue());	  Validator    validator    =    option.validateValue(argumentCount,    option.getValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
203	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  arguments.next());  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  arguments.next());  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(argumentCount,  arguments.next());	  Validator    validator    =    option.validateValue(argumentCount,    option.getValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
204	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  argument.getValue());  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  argument.getValue());  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(argumentCount,  argument.getValue());	  Validator    validator    =    option.validateValue(argumentCount,    option.getValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
205	[BUG]  [BUGGY]  int  argumentCount  =  options.size()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  int  argumentCount  =  options.size()  -  1;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	int  argumentCount  =  options.size()  -  1;	  int    argumentCount    =    options.size();    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
206	[BUG]  [BUGGY]  int  argumentCount  =  options.size()  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  int  argumentCount  =  options.size()  -  2;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	int  argumentCount  =  options.size()  -  2;	  int    argumentCount    =    options.size();    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
207	[BUG]  [BUGGY]  int  argumentCount  =  options.size()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  int  argumentCount  =  options.size()  +  1;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	int  argumentCount  =  options.size()  +  1;	  int    argumentCount    =    options.size();    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
208	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.next();  }  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.next();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.next();  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.next();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  arguments.next();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  arguments.next();  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.next();    }    	compilable	  [FE]  AssertionFailedError  	87	1	replace
210	[BUG]  [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  arguments.next();  }  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  arguments.next();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  arguments.next();  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.next();    }    	compilable	  [FE]  AssertionFailedError  	87	1	replace
211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.next();	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.next();    }    	compilable	  [FE]  AssertionFailedError  	87	1	replace
212	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.next();  [FE]  AssertionFailedError  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.next();	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.next();    }    	compilable	  [FE]  AssertionFailedError  	87	1	replace
213	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext())  {  arguments.next();	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.next();    }    	compilable	  [FE]  AssertionFailedError  	87	1	replace
214	[BUG]  [BUGGY]  while(arguments.hasNext())  {  arguments.next();  [FE]  AssertionFailedError  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  arguments.next();	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.next();    }    	compilable	  [FE]  AssertionFailedError  	87	1	replace
215	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  option.getRawValue()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValue()?  option.getRawValue()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValue()?  option.getRawValue()  :  null;	  Validator    validator    =    option.hasValue()?    option.getValue()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
216	[BUG]  [BUGGY]  final  String  argumentQuoted  =(String)arguments.next();  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  String  argumentQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  String  argumentQuoted  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    argumentQuoted    =(String)arguments.next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
217	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  String  argumentString  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext())  {  final  String  argumentString  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    argumentQuoted    =(String)arguments.next();    	compilable	  [FE]  AssertionFailedError  	64	1	replace
218	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  String  argumentString  =(String)arguments.next();  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  String  argumentString  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  final  String  argumentString  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    argumentQuoted    =(String)arguments.next();    	compilable	  [FE]  AssertionFailedError  	64	1	replace
219	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  String  argumentValue  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext())  {  final  String  argumentValue  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    argumentQuoted    =(String)arguments.next();    	compilable	  [FE]  AssertionFailedError  	64	1	replace
220	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  String  argumentValue  =(String)arguments.next();  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  String  argumentValue  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  final  String  argumentValue  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    argumentQuoted    =(String)arguments.next();    	compilable	  [FE]  AssertionFailedError  	64	1	replace
221	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]      NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  minimum))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  ||(argumentCount  >  minimum))  {	  while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    	compilable	  [FE]  NoSuchElementException  	71	1	replace
222	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  minimum))  {  [FE]  NoSuchElementException  [FE]      NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  minimum))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||(argumentCount  >  minimum))  {	  while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    	compilable	  [FE]  NoSuchElementException  	71	1	replace
223	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]        NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  1))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  ||(argumentCount  >  1))  {	  while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    	compilable	  [FE]  NoSuchElementException  	71	1	replace
224	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  1))  {  [FE]  NoSuchElementException  [FE]        NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  1))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||(argumentCount  >  1))  {	  while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    	compilable	  [FE]  NoSuchElementException  	71	1	replace
225	[BUG]  [BUGGY]  Validator  validator  =  options.getValue( "call ",  argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue( "call ",  argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue( "call ",  argumentCount);	  Validator    validator    =    options.getValue(   "call   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
226	[BUG]  [BUGGY]  Validator  validator  =  options.getValue( "call ",  arguments);  [CE]  class,  interface,  or  enum  expected  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue( "call ",  arguments);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue( "call ",  arguments);	  Validator    validator    =    options.getValue(   "call   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
227	[BUG]  [BUGGY]  Validator  validator  =  options.getValue( "call ",  null);  [CE]  class,  interface,  or  enum  expected  [FE]                          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue( "call ",  null);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue( "call ",  null);	  Validator    validator    =    options.getValue(   "call   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
228	[BUG]  [BUGGY]  Validator  validator  =  option.next(),  arguments.id;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.next(),  arguments.id;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.next(),  arguments.id;	  Validator    validator    =    option.next(),    argumentCount;    	non-compiled	[CE]  ';'  expected	68	None	replace
229	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.next();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    final  String  allValuesQuoted  =(String)arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
230	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    final  String  allValuesQuoted  =(String)arguments.get(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
231	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
232	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  Validator  validator  =  option.getValue(arguments.next());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  Validator  validator  =  option.getValue(arguments.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    Validator  validator  =  option.getValue(arguments.next());	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
233	[BUG]  [BUGGY]  While(arguments.hasNext()  &&(argumentCount  <  minimum))  {  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  While(arguments.hasNext()  &&(argumentCount  <  minimum))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	While(arguments.hasNext()  &&(argumentCount  <  minimum))  {	  while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    	non-compiled	[CE]  ';'  expected	20	None	replace
234	[BUG]  [BUGGY]  while(arguments.hasNext())  {  Validator  validator  =  option.getValue();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  Validator  validator  =  option.getValue();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  Validator  validator  =  option.getValue();	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    Validator    validator    =    option.getValue();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
235	[BUG]  [BUGGY]  Option  option  =  option.getOption();  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Option  option  =  option.getOption();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Option  option  =  option.getOption();	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.add(option.next());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
236	[BUG]  [BUGGY]  Option  option  =  option.getOption( "option ");  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Option  option  =  option.getOption( "option ");  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Option  option  =  option.getOption( "option ");	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.add(option.next());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
237	[BUG]  [BUGGY]  Validator  validator  =  option.getValue( "call ",  0);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue( "call ",  0);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue( "call ",  0);	  Validator    validator    =    option.getValue(   "call   ",    argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
238	[BUG]  [BUGGY]  While(arguments.hasNext()  &&(argumentCount  <  maximum))  {  Validator  validator  =  option.getValue();  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  While(arguments.hasNext()  &&(argumentCount  <  maximum))  {  Validator  validator  =  option.getValue();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	While(arguments.hasNext()  &&(argumentCount  <  maximum))  {  Validator  validator  =  option.getValue();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    Validator    validator    =    option.getValue();    	non-compiled	[CE]  ';'  expected	48	None	replace
239	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext()  ||  arguments.hasNext())  {  ++argumentCount;  arguments.next();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext())  {  if(arguments.hasNext()  ||  arguments.hasNext())  {  ++argumentCount;  arguments.next();  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.next();    }    	compilable	  [FE]  AssertionFailedError  	87	1	replace
240	[BUG]  [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext()  ||  arguments.hasNext())  {  ++argumentCount;  arguments.next();  }  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext()  ||  arguments.hasNext())  {  ++argumentCount;  arguments.next();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  if(arguments.hasNext()  ||  arguments.hasNext())  {  ++argumentCount;  arguments.next();  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.next();    }    	compilable	  [FE]  AssertionFailedError  	87	1	replace
241	[BUG]  [BUGGY]  while(arguments.hasNext())  {  if(arguments.next())  {  ++argumentCount;  arguments.next();  }  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  if(arguments.next())  {  ++argumentCount;  arguments.next();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  if(arguments.next())  {  ++argumentCount;  arguments.next();  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.next();    }    	non-compiled	[CE]  incompatible  types	87	None	replace
242	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  int  argumentCount  =  arguments.next();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  int  argumentCount  =  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  final  int  argumentCount  =  arguments.next();	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final    String    allValuesQuoted    =(String)arguments.next();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	1	None	replace
243	[BUG]  [BUGGY]  advocates.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  advocates.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	advocates.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    values.add(option.getValue(id,    arguments.next()));    }    	non-compiled	[CE]  not  a  statement	37	None	replace
244	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  arguments.next())  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  arguments.next())  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||  arguments.next())  {	  while(arguments.hasNext()    ||(argumentCount    <    1))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	80	None	replace
245	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  final  String  allValuesQuoted  =(String)arguments.next();  [CE]  cannot  find  symbol  maximal  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  final  String  allValuesQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  final  String  allValuesQuoted  =(String)arguments.next();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    allValuesQuoted    =(String)arguments.next();    	non-compiled	[CE]  cannot  find  symbol  maximal	57	None	replace
246	[BUG]  [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext()  ||  arguments.hasNext())  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext()  ||  arguments.hasNext())  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  if(arguments.hasNext()  ||  arguments.hasNext())  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.addValue(option,    arguments.next());    }    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
247	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentCount;  i++)  {  arguments.next();  }  [CE]  break  outside  switch  or  loop  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentCount;  i++)  {  arguments.next();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentCount;  i++)  {  arguments.next();  }	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    i++)    {    arguments.next();    }    	non-compiled	[CE]  break  outside  switch  or  loop	83	None	replace
248	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  arguments.next();  }  [CE]  cannot  find  symbol  length  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  arguments.next();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  i  =  0;  i  <  arguments.length;  i++)  {  arguments.next();  }	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    i++)    {    arguments.next();    }    	non-compiled	[CE]  cannot  find  symbol  length	83	None	replace
249	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  arguments.size();  i++)  {  arguments.next();  }  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  arguments.size();  i++)  {  arguments.next();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  i  =  0;  i  <  arguments.size();  i++)  {  arguments.next();  }	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    i++)    {    arguments.next();    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
250	[BUG]  [BUGGY]  Validator  validator  =  option.values().next()  +  argumentCount;  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.values().next()  +  argumentCount;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.values().next()  +  argumentCount;	  Validator    validator    =    option.values().next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
251	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  allValuesQuoted  =(String)arguments.next();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  allValuesQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    1))    {    final  String  allValuesQuoted  =(String)arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
252	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    1))    {    final  String  allValuesQuoted  =(String)arguments.get(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
253	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  allValues  =  stripBoundaryQuotes(arguments.next());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  allValues  =  stripBoundaryQuotes(arguments.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    1))    {    final  String  allValues  =  stripBoundaryQuotes(arguments.next());	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
254	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    1))    {    final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
255	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);	  while(arguments.hasNext())    {    final    String    allValuesQuoted    =(String)arguments.next();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
256	[BUG]  [BUGGY]  final  int  initialSplit  =  arguments.size();  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  int  initialSplit  =  arguments.size();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  int  initialSplit  =  arguments.size();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    argumentCount    =    arguments.get(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
257	[BUG]  [BUGGY]  Validator  validator  =  option.hasValueImpl()?  option.getValueImpl(argumentCount):  null;  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValueImpl()?  option.getValueImpl(argumentCount):  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValueImpl()?  option.getValueImpl(argumentCount):  null;	  Validator    validator    =    option.hasValueImpl()?    option.getValueImpl()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	51	None	replace
258	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final    String    allValuesQuoted    =(String)arguments.get(argumentCount    -    1);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
259	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  >  minimum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  >  minimum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  >  minimum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final    String    allValuesQuoted    =(String)arguments.get(argumentCount    -    1);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
260	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [CE]  cannot  find  symbol  maximal  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    allValuesQuoted    =(String)arguments.get(argumentCount    -    1);    	non-compiled	[CE]  cannot  find  symbol  maximal	59	None	replace
261	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  option.getKey()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValue()?  option.getKey()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValue()?  option.getKey()  :  null;	  Validator    validator    =    option.hasValue()?    option.getValue()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
262	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  option.next()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValue()?  option.next()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValue()?  option.next()  :  null;	  Validator    validator    =    option.hasValue()?    option.getValue()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
263	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  arguments.next()  >  maximumCount)  {  [CE]  cannot  find  symbol  maximumCount  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  arguments.next()  >  maximumCount)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  arguments.next()  >  maximumCount)  {	  while(arguments.hasNext()    &&    arguments.next()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  maximumCount	69	None	replace
264	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(option.getOptionalValue());  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(option.getOptionalValue());  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(option.getOptionalValue());	  Validator    validator    =    option.validateValue(option.getValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
265	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  [CE]  illegal  start  of  expression  [FE]    NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    final  String  allValuesQuoted  =(String)arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
266	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  while(arguments.hasNext()  &&(argumentCount  >  maximum))  {  [CE]  illegal  start  of  expression  [FE]      NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  while(arguments.hasNext()  &&(argumentCount  >  maximum))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    while(arguments.hasNext()  &&(argumentCount  >  maximum))  {	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
267	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  final  String  allValuesQuoted  =(String)arguments.getNext();  [CE]  illegal  start  of  expression  [FE]        NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  final  String  allValuesQuoted  =(String)arguments.getNext();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    final  String  allValuesQuoted  =(String)arguments.getNext();	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
268	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.getNext();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.getNext();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.getNext();	  while(arguments.hasNext())    {    final    String    allValuesQuoted    =(String)arguments.getNext();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
269	[BUG]  [BUGGY]  Validator  validator  =  option.validate(argumentCount,  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(argumentCount,  1);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(argumentCount,  1);	  Validator    validator    =    option.validate(argumentCount,    argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
270	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentCount;  ++id)  {  arguments.remove();  }  [CE]  id  has  private  access  in  OptionImpl  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentCount;  ++id)  {  arguments.remove();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentCount;  ++id)  {  arguments.remove();  }	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.remove();    }    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	84	None	replace
271	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  maximum;  ++id)  {  arguments.remove();  }  [CE]  id  has  private  access  in  OptionImpl  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  maximum;  ++id)  {  arguments.remove();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  i  =  0;  i  <  maximum;  ++id)  {  arguments.remove();  }	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.remove();    }    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	84	None	replace
272	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  minimum;  ++id)  {  arguments.remove();  }  [CE]  id  has  private  access  in  OptionImpl  [FE]                          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  minimum;  ++id)  {  arguments.remove();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  i  =  0;  i  <  minimum;  ++id)  {  arguments.remove();  }	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.remove();    }    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	84	None	replace
273	[BUG]  [BUGGY]  advocates.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  advocates.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	advocates.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    values.add(option.getValue(id));    }    	non-compiled	[CE]  not  a  statement	38	None	replace
274	[BUG]  [BUGGY]  because(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  because(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	because(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    values.add(option.getValue(id));    }    	non-compiled	[CE]  ';'  expected	38	None	replace
275	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  arguments.hasNext())  {  if(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =  (String)argu  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  arguments.hasNext())  {  if(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =  (String)argu  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  arguments.hasNext())  {  if(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =  (String)argu	  while(arguments.hasNext())    {    if(arguments.hasNext())    {    final    String    allValuesQuoted    =    (String)arguments.next();    final    String    allValuesQuoted    =    (String)arguments.    	non-compiled	[CE]  ';'  expected	98	None	replace
276	[BUG]  [BUGGY]  Validator  validator  =  option.hasValueImpl()?  options.getValueImpl(argumentCount):  null;  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValueImpl()?  options.getValueImpl(argumentCount):  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValueImpl()?  options.getValueImpl(argumentCount):  null;	  Validator    validator    =    option.hasValueImpl()?    options.getValueImpl()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
277	[BUG]  [BUGGY]  Validator  validator  =  option.hasValueImpl()?  options.getOptionalValueImpl()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValueImpl()?  options.getOptionalValueImpl()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValueImpl()?  options.getOptionalValueImpl()  :  null;	  Validator    validator    =    option.hasValueImpl()?    options.getValueImpl()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
278	[BUG]  [BUGGY]  Argument  arguments  =  options.getArgumentsForOption(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Argument  arguments  =  options.getArgumentsForOption(argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  arguments  =  options.getArgumentsForOption(argumentCount);	  Argument    arguments    =    option.getArgumentsForOption(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
279	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount.next()  <  maximum)  {  [CE]  int  cannot  be  dereferenced  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while  (arguments.hasNext()  &&  argumentCount.next()  <  maximum)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while  (arguments.hasNext()  &&  argumentCount.next()  <  maximum)  {	  while    (arguments.hasNext()    &&    arguments.next()    <    maximum)    {    	non-compiled	[CE]  int  cannot  be  dereferenced	36	None	replace
280	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  arguments.next()  <  maximumCount)  {  [CE]  cannot  find  symbol  maximumCount  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while  (arguments.hasNext()  &&  arguments.next()  <  maximumCount)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while  (arguments.hasNext()  &&  arguments.next()  <  maximumCount)  {	  while    (arguments.hasNext()    &&    arguments.next()    <    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  maximumCount	36	None	replace
281	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.next();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    final  String  allValuesQuoted  =(String)arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
282	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    final  String  allValuesQuoted  =(String)arguments.get(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
283	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
284	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  Validator  validator  =  option.getValue(arguments.next());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  Validator  validator  =  option.getValue(arguments.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    Validator  validator  =  option.getValue(arguments.next());	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
285	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(option,  arguments.next()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(option,  arguments.next()  -  1);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(option,  arguments.next()  -  1);	  Validator    validator    =    options.getValue(option,    arguments.next());    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
286	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(arguments.next());  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(arguments.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(arguments.next());	  Validator    validator    =    options.getValue(option,    arguments.next());    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
287	[BUG]  [BUGGY]  if(arguments.size()  >  maximum)  {  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.size()  >  maximum)  {  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.size()  >  maximum)  {  for(int  id  =  arguments.size();  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    methods.addValue(option,    arguments.get(id));    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
288	[BUG]  [BUGGY]  if(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  method.addValue(option,  arguments.get(id));  }  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  method.addValue(option,  arguments.get(id));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  method.addValue(option,  arguments.get(id));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    methods.addValue(option,    arguments.get(id));    }    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
289	[BUG]  [BUGGY]  while(commandLine.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(commandLine.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(commandLine.hasNext())  {  if(arguments.hasNext())  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    commandLine.addValue(option,    arguments.next());    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
290	[BUG]  [BUGGY]  while(commandLine.hasNext())  {  if(argumentCount  ==  minimum)  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(commandLine.hasNext())  {  if(argumentCount  ==  minimum)  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(commandLine.hasNext())  {  if(argumentCount  ==  minimum)  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    commandLine.addValue(option,    arguments.next());    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
291	[BUG]  [BUGGY]  while(commandLine.hasNext())  {  if(argumentCount  ==  maximum)  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(commandLine.hasNext())  {  if(argumentCount  ==  maximum)  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(commandLine.hasNext())  {  if(argumentCount  ==  maximum)  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    commandLine.addValue(option,    arguments.next());    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
292	[BUG]  [BUGGY]  Validator  validator  =  options.hasValues()?  options.getValues()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.hasValues()?  options.getValues()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.hasValues()?  options.getValues()  :  null;	  Validator    validator    =    option.hasValues()?    options.getValues()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
293	[BUG]  [BUGGY]  Validator  validator  =  option.hasValues()?  options.getValues()  :  NUL;  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValues()?  options.getValues()  :  NUL;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValues()?  options.getValues()  :  NUL;	  Validator    validator    =    option.hasValues()?    options.getValues()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
294	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  option.getArgumentCount());  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  option.getArgumentCount());  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(argumentCount,  option.getArgumentCount());	  Validator    validator    =    option.validateValue(argumentCount,    option.getValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
295	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  option.getValue(),  arguments);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  option.getValue(),  arguments);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(argumentCount,  option.getValue(),  arguments);	  Validator    validator    =    option.validateValue(argumentCount,    option.getValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
296	[BUG]  [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =  (String)argu  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =  (String)argu  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  if(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =  (String)argu	  while(arguments.hasNext())    {    if(arguments.hasNext())    {    final    String    allValuesQuoted    =    (String)arguments.next();    final    String    allValuesQuoted    =    (String)arguments.next();    final    String    allValuesQuoted    =    (String)argu    	non-compiled	[CE]  ';'  expected	97	None	replace
297	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  >  maximal))  {  [CE]  cannot  find  symbol  maximal  [FE]    NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  >  maximal))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  >  maximal))  {	  while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    	non-compiled	[CE]  cannot  find  symbol  maximal	71	None	replace
298	[BUG]  [BUGGY]  Validator  validator  =  option.validate(),  argumentCount++;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validate(),  argumentCount++;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(),  argumentCount++;	  Validator    validator    =    option.validate(),    argumentCount;    	non-compiled	[CE]  ';'  expected	15	None	replace
299	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(arguments);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(arguments);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(arguments);	  Validator    validator    =    option.validateValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
300	[BUG]  [BUGGY]  Validator  validator  =  arguments.get(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  arguments.get(argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  arguments.get(argumentCount);	  Validator    validator    =    arguments.next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
301	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentCount;  ++id)  {  arguments.next();  }  [CE]  id  has  private  access  in  OptionImpl  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentCount;  ++id)  {  arguments.next();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentCount;  ++id)  {  arguments.next();  }	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.next();    }    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	81	None	replace
302	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  maximum;  ++id)  {  arguments.next();  }  [CE]  id  has  private  access  in  OptionImpl  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  maximum;  ++id)  {  arguments.next();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  i  =  0;  i  <  maximum;  ++id)  {  arguments.next();  }	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.next();    }    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	81	None	replace
303	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  minimum;  ++id)  {  arguments.next();  }  [CE]  id  has  private  access  in  OptionImpl  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  minimum;  ++id)  {  arguments.next();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  i  =  0;  i  <  minimum;  ++id)  {  arguments.next();  }	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.next();    }    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	81	None	replace
304	[BUG]  [BUGGY]  While(arguments.hasNext()  &&(argumentCount  <  maximum))  {  Validator  validator  =  option.next();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  While(arguments.hasNext()  &&(argumentCount  <  maximum))  {  Validator  validator  =  option.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	While(arguments.hasNext()  &&(argumentCount  <  maximum))  {  Validator  validator  =  option.next();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    Validator    validator    =    option.next();    	non-compiled	[CE]  ';'  expected	50	None	replace
305	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValu  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValu  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValu	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    if(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    allValuesQuoted    =(String)arguments.next();    final    String    allValuesQuoted    =    (String)arguments.    	non-compiled	[CE]  ';'  expected	94	None	replace
306	[BUG]  [BUGGY]  While(arguments.hasNext()  &&(argumentCount  <  maximum))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  While(arguments.hasNext()  &&(argumentCount  <  maximum))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	While(arguments.hasNext()  &&(argumentCount  <  maximum))  {	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    if(arguments.hasNext()    ||(argumentCount    <    maximum))    {    while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    }    	non-compiled	[CE]  ';'  expected	93	None	replace
307	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  argumentsQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  argumentsQuoted  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    argumentsQuoted    =(String)arguments.next();    	compilable	  [FE]  AssertionFailedError  	27	1	replace
308	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  argumentsQuoted  =(String)arguments.next();  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  argumentsQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  argumentsQuoted  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    argumentsQuoted    =(String)arguments.next();    	compilable	  [FE]  AssertionFailedError  	27	1	replace
309	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  ++argumentCount;  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext())  {  ++argumentCount;	  while(arguments.hasNext())    {    final    String    argumentsQuoted    =(String)arguments.next();    	compilable	  [FE]  ComparisonFailure  	27	1	replace
310	[BUG]  [BUGGY]  while(arguments.hasNext())  {  ++argumentCount;  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  ++argumentCount;  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  ++argumentCount;	  while(arguments.hasNext())    {    final    String    argumentsQuoted    =(String)arguments.next();    	compilable	  [FE]  ComparisonFailure  	27	1	replace
311	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  argumentQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  argumentQuoted  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    argumentQuoted    =(String)arguments.next();    	compilable	  [FE]  AssertionFailedError  	64	1	replace
312	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  argumentQuoted  =(String)arguments.next();  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  argumentQuoted  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  argumentQuoted  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    argumentQuoted    =(String)arguments.next();    	compilable	  [FE]  AssertionFailedError  	64	1	replace
313	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  String  argument  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext())  {  final  String  argument  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    argumentQuoted    =(String)arguments.next();    	compilable	  [FE]  AssertionFailedError  	64	1	replace
314	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  String  argument  =(String)arguments.next();  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  String  argument  =(String)arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  final  String  argument  =(String)arguments.next();	  while(arguments.hasNext())    {    final    String    argumentQuoted    =(String)arguments.next();    	compilable	  [FE]  AssertionFailedError  	64	1	replace
315	[BUG]  [BUGGY]  Validator  validator  =  options.hasValue()?  options.getValue()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.hasValue()?  options.getValue()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.hasValue()?  options.getValue()  :  null;	  Validator    validator    =    option.hasValue()?    options.getValue()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
316	[BUG]  [BUGGY]  final  int  initialSplit  =  arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  argumentCount  =  arguments.next();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  final  int  initialSplit  =  arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  argumentCount  =  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	final  int  initialSplit  =  arguments.hasNext()  &&(argumentCount  <  maximum))  {  final  String  argumentCount  =  arguments.next();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    argumentCount    =    arguments.next();    	non-compiled	[CE]  ';'  expected	49	None	replace
317	[BUG]  [BUGGY]  Validator  validator  =  option.getValue( "call ",  null);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue( "call ",  null);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue( "call ",  null);	  Validator    validator    =    option.getValue(   "call   ",    arguments);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
318	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  2))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  &&(argumentCount  <  2))  {	  while(arguments.hasNext()    &&(argumentCount    <    maximal))    {    	compilable	  [FE]  ComparisonFailure  	21	1	replace
319	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  2))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  2))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  2))  {	  while(arguments.hasNext()    &&(argumentCount    <    maximal))    {    	compilable	  [FE]  ComparisonFailure  	21	1	replace
320	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  int  argumentCount  =  arguments.get(argumentCount);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  int  argumentCount  =  arguments.get(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  final  int  argumentCount  =  arguments.get(argumentCount);	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final    String    argumentCount    =    arguments.get(argumentCount);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	4	None	replace
321	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  maximal)  {  [CE]  cannot  find  symbol  maximal  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <  maximal)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  argumentCount  <  maximal)  {	  while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  maximal	101	None	replace
322	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  options.getValue(option):  null;  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValue()?  options.getValue(option):  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValue()?  options.getValue(option):  null;	  Validator    validator    =    option.hasValue()?    options.getValue()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
323	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  options.get(option):  null;  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValue()?  options.get(option):  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValue()?  options.get(option):  null;	  Validator    validator    =    option.hasValue()?    options.getValue()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
324	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  argumentCount  >  maximum)  {  Validator  validator  =  option.getValue();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&  argumentCount  >  maximum)  {  Validator  validator  =  option.getValue();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  argumentCount  >  maximum)  {  Validator  validator  =  option.getValue();	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    Validator    validator    =    option.getValue();    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
325	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  arguments.next()  <  maximum))  {  final  int  argumentCount  =  arguments.size();  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  arguments.next()  <  maximum))  {  final  int  argumentCount  =  arguments.size();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||  arguments.next()  <  maximum))  {  final  int  argumentCount  =  arguments.size();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    int    argumentCount    =    arguments.size();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
326	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(),  argumentCount;  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(),  argumentCount;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(),  argumentCount;	  Validator    validator    =    option.validate(),    argumentCount;    	non-compiled	[CE]  class,  interface,  or  enum  expected	15	None	replace
327	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  String  allValues  =  stripBoundaryQuotes(argumentCount);  [CE]  method  stripBoundaryQuotes  in  class  ArgumentImpl  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  String  allValues  =  stripBoundaryQuotes(argumentCount);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  final  String  allValues  =  stripBoundaryQuotes(argumentCount);	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    final    String    allValues    =    stripBoundaryQuotes(argumentCount);    	non-compiled	[CE]  method  stripBoundaryQuotes  in  class  ArgumentImpl  cannot  be  applied  to  given  types;	91	None	replace
328	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(option,  arguments.next()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(option,  arguments.next()  +  1);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(option,  arguments.next()  +  1);	  Validator    validator    =    options.getValue(option,    arguments.next());    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
329	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(option,  arguments.next(),  arguments.maximum);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(option,  arguments.next(),  arguments.maximum);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(option,  arguments.next(),  arguments.maximum);	  Validator    validator    =    options.getValue(option,    arguments.next());    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
330	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  if(arguments.hasNext()  ||(argumentCount  >  maximum))  {  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.  [CE]  <identifier>  expected  [FE]    NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  if(arguments.hasNext()  ||(argumentCount  >  maximum))  {  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    if(arguments.hasNext()  ||(argumentCount  >  maximum))  {  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.	  	non-compiled	[CE]  <identifier>  expected	70	None	add
331	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  if(arguments.hasNext()  ||(argumentCount  >  maximum))  {  while(arguments.hasNext()  &&(argumentCount  >  maximum))  {  }  [CE]  illegal  start  of  expression  [FE]      NoSuchElementException    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  if(arguments.hasNext()  ||(argumentCount  >  maximum))  {  while(arguments.hasNext()  &&(argumentCount  >  maximum))  {  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    >    maximum))    {    if(arguments.hasNext()  ||(argumentCount  >  maximum))  {  while(arguments.hasNext()  &&(argumentCount  >  maximum))  {  }	  	non-compiled	[CE]  illegal  start  of  expression	70	None	add
332	[BUG]  [BUGGY]  Validator  validator  =  options.getOptionalValue();  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getOptionalValue();  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getOptionalValue();	  Validator    validator    =    options.getValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
333	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(defaultValues);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(defaultValues);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(defaultValues);	  Validator    validator    =    option.validateValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	77	None	replace
334	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    while(arguments.hasNext()  ||  argumentCount  <  maximum)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
335	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  if(arguments.hasNext()  ||  argumentCount  <  maximum)  {  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  if(arguments.hasNext()  ||  argumentCount  <  maximum)  {  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    if(arguments.hasNext()  ||  argumentCount  <  maximum)  {  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
336	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  if(arguments.hasNext())  {  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  if(arguments.hasNext())  {  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    if(arguments.hasNext())  {  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  }	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
337	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  if(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  if(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    if(arguments.hasNext()  ||  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
338	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  if(arguments.hasNext()  ||  argumentCount  <  maximum)  {  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  if(arguments.hasNext()  ||  argumentCount  <  maximum)  {  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||    argumentCount    <    maximum)    {    if(arguments.hasNext()  ||  argumentCount  <  maximum)  {  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
339	[BUG]  [BUGGY]  Argument  argument  =  option.getArguments(argumentCount  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Argument  argument  =  option.getArguments(argumentCount  -  1);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  argument  =  option.getArguments(argumentCount  -  1);	  Argument    arguments    =    option.getArguments(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
340	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  while(arguments.hasNext()  &&  argumentCount  <  minimum)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  while(arguments.hasNext()  &&  argumentCount  <  minimum)  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&    argumentCount    <    minimum)    {    while(arguments.hasNext()  &&  argumentCount  <  minimum)  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
341	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  String  allValues  =  stripBoundaryQuotes(arguments.next());  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  final  String  allValues  =  stripBoundaryQuotes(arguments.next());  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&    argumentCount    <    minimum)    {    final  String  allValues  =  stripBoundaryQuotes(arguments.next());	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
342	[BUG]  [BUGGY]  Validator  validator  =  option.getValue( "call ",  arguments.next());  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue( "call ",  arguments.next());  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue( "call ",  arguments.next());	  Validator    validator    =    option.getValue(   "call   ",    argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
343	[BUG]  [BUGGY]  Validator  validator  =  option.getValue( "call ",  arguments.id);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue( "call ",  arguments.id);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue( "call ",  arguments.id);	  Validator    validator    =    option.getValue(   "call   ",    argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.next();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext())  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.next();  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.next();    }    	compilable	  [FE]  AssertionFailedError  	87	1	replace
345	[BUG]  [BUGGY]  while(arguments.hasNext())  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.next();  }  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.next();  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.next();  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.next();    }    	compilable	  [FE]  AssertionFailedError  	87	1	replace
346	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(option.getImplicitReturn());  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(option.getImplicitReturn());  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(option.getImplicitReturn());	  Validator    validator    =    option.validateValue(option.getValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
347	[BUG]  [BUGGY]  Validator  validator  =  options.getValueImpl(defaultValues);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValueImpl(defaultValues);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValueImpl(defaultValues);	  Validator    validator    =    options.getValueImpl();    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
348	[BUG]  [BUGGY]  while(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }	  if(arguments.size()    >    maximum)    {    for(int    id    =    argumentCount;    id    <    arguments.size();    id++)    {    values.add(option.getValue(id,    arguments.next()));    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
349	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  final  String  argumentCount  =  arguments.next();  [CE]  cannot  find  symbol  maximal  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  final  String  argumentCount  =  arguments.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  final  String  argumentCount  =  arguments.next();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    argumentCount    =    arguments.next();    	non-compiled	[CE]  cannot  find  symbol  maximal	49	None	replace
350	[BUG]  [BUGGY]  Argument  arguments  =  option.getArgumentsForOption(option,  arguments);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Argument  arguments  =  option.getArgumentsForOption(option,  arguments);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  arguments  =  option.getArgumentsForOption(option,  arguments);	  Argument    arguments    =    option.getArgumentsForOption(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
351	[BUG]  [BUGGY]  while(arguments.hasNext())  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    arguments.addValue(option,    arguments.next());    }    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
352	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(argumentCount,  0);  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(argumentCount,  0);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(argumentCount,  0);	  Validator    validator    =    options.getValue(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
353	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(argumentCount,  arguments.size());  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue(argumentCount,  arguments.size());  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(argumentCount,  arguments.size());	  Validator    validator    =    options.getValue(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
354	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentCount;  ++id)  {  arguments.add(option.next());  }  [CE]  id  has  private  access  in  OptionImpl  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentCount;  ++id)  {  arguments.add(option.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentCount;  ++id)  {  arguments.add(option.next());  }	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.add(option.next());    }    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	82	None	replace
355	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentsCount;  ++id)  {  arguments.add(option.next());  }  [CE]  cannot  find  symbol  argumentsCount  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentsCount;  ++id)  {  arguments.add(option.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  i  =  0;  i  <  argumentsCount;  ++id)  {  arguments.add(option.next());  }	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.add(option.next());    }    	non-compiled	[CE]  cannot  find  symbol  argumentsCount	82	None	replace
356	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  id  =  0;  i  <  maximum;  ++id)  {  arguments.add(option.next());  }  [CE]  cannot  find  symbol  i  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  if(arguments.hasNext())  {  for(int  id  =  0;  i  <  maximum;  ++id)  {  arguments.add(option.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  id  =  0;  i  <  maximum;  ++id)  {  arguments.add(option.next());  }	  if(arguments.hasNext())    {    for(int    id    =    0;    i    <    argumentCount;    ++id)    {    arguments.add(option.next());    }    	non-compiled	[CE]  cannot  find  symbol  i	82	None	replace
357	[BUG]  [BUGGY]  Validator  validator  =  option.hasValueImpl()?  options.getValueImpl(option):  null;  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValueImpl()?  options.getValueImpl(option):  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValueImpl()?  options.getValueImpl(option):  null;	  Validator    validator    =    option.hasValueImpl()?    options.getValueImpl()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
358	[BUG]  [BUGGY]  Validator  validator  =  option.hasValues()?  option.getValue(option):  null;  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValues()?  option.getValue(option):  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValues()?  option.getValue(option):  null;	  Validator    validator    =    option.hasValues()?    option.getValues()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
359	[BUG]  [BUGGY]  Validator  validator  =  options.getOptionalValues();  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getOptionalValues();  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getOptionalValues();	  Validator    validator    =    options.getValues();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
360	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  option.getImplicitReturn()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValue()?  option.getImplicitReturn()  :  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValue()?  option.getImplicitReturn()  :  null;	  Validator    validator    =    option.hasValue()?    option.getValue()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
361	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    while(arguments.hasNext()  ||(argumentCount  <  minimum))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
362	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  if(arguments.hasNext()  ||(argumentCount  <  minimum))  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  if(arguments.hasNext()  ||(argumentCount  <  minimum))  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    if(arguments.hasNext()  ||(argumentCount  <  minimum))  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  }	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
363	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  if(arguments.hasNext()  ||(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  if(arguments.hasNext()  ||(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    if(arguments.hasNext()  ||(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.	  	non-compiled	[CE]  <identifier>  expected	19	None	add
364	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  if(arguments.hasNext()  ||(argumentCount  <  minimum))  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  if(arguments.hasNext()  ||(argumentCount  <  minimum))  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    if(arguments.hasNext()  ||(argumentCount  <  minimum))  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
365	[BUG]  [BUGGY]  Validator  validator  =  option.next(),  arguments.idCount;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.next(),  arguments.idCount;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.next(),  arguments.idCount;	  Validator    validator    =    option.next(),    argumentCount;    	non-compiled	[CE]  ';'  expected	68	None	replace
366	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  option.getKey());  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  option.getKey());  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(argumentCount,  option.getKey());	  Validator    validator    =    option.validateValue(argumentCount,    option.getValue());    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
367	[BUG]  [BUGGY]  Validator  validator  =  options.getValue( "call ".equals(option.getMessage()));  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.getValue( "call ".equals(option.getMessage()));  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue( "call ".equals(option.getMessage()));	  Validator    validator    =    options.getValue(   "call   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
368	[BUG]  [BUGGY]  Validator  validator  =  arguments.get(0);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  arguments.get(0);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  arguments.get(0);	  Validator    validator    =    arguments.next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
369	[BUG]  [BUGGY]  Validator  validator  =  option.getValue( "call ".equals(arguments));  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.getValue( "call ".equals(arguments));  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue( "call ".equals(arguments));	  Validator    validator    =    option.getValue(   "call   ",    arguments);    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
370	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum)&&(argumentCount  >  1))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  ||(argumentCount  <  minimum)&&(argumentCount  >  1))  {	  while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
371	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum)&&(argumentCount  >  1))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum)&&(argumentCount  >  1))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||(argumentCount  <  minimum)&&(argumentCount  >  1))  {	  while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
372	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  minimal))  {  [CE]  cannot  find  symbol  minimal  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  minimal))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  minimal))  {	  while(arguments.hasNext()    ||(argumentCount    <    minimum))    {    	non-compiled	[CE]  cannot  find  symbol  minimal	20	None	replace
373	[BUG]  [BUGGY]  while(commandLine.hasValue(option))  {  if(arguments.hasNext())  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(commandLine.hasValue(option))  {  if(arguments.hasNext())  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(commandLine.hasValue(option))  {  if(arguments.hasNext())  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    commandLine.addValue(option,    arguments.next());    }    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
374	[BUG]  [BUGGY]  while(commandLine.hasValue(option))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(commandLine.hasValue(option))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(commandLine.hasValue(option))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }	  while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())    {    while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    ++argumentCount;    commandLine.addValue(option,    arguments.next());    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
375	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  while(arguments.hasNext()  ||(argumentCount  <  1))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  while(arguments.hasNext()  ||(argumentCount  <  1))  {  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    1))    {    while(arguments.hasNext()  ||(argumentCount  <  1))  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
376	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  if(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  if(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    1))    {    if(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
377	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  if(arguments.hasNext())  {  while(arguments.hasNext()  ||(argumentCount  <  1))  {  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  if(arguments.hasNext())  {  while(arguments.hasNext()  ||(argumentCount  <  1))  {  }  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    1))    {    if(arguments.hasNext())  {  while(arguments.hasNext()  ||(argumentCount  <  1))  {  }	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
378	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  if(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  if(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    1))    {    if(arguments.hasNext()  ||(argumentCount  <  1))  {  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.	  	non-compiled	[CE]  <identifier>  expected	79	None	add
379	[BUG]  [BUGGY]  Argument  arguments  =  options.getArgumentArguments();  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Argument  arguments  =  options.getArgumentArguments();  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  arguments  =  options.getArgumentArguments();	  Argument    arguments    =    options.getArguments();    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
380	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  arguments.hasNext())  {  Validator  validator  =  option.next();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  ||  arguments.hasNext())  {  Validator  validator  =  option.next();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||  arguments.hasNext())  {  Validator  validator  =  option.next();	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    Validator    validator    =    option.next();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
381	[BUG]  [BUGGY]  Validator  validator  =  option.validateOption(option,  arguments);  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateOption(option,  arguments);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateOption(option,  arguments);	  Validator    validator    =    option.validateOption(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
382	[BUG]  [BUGGY]  Validator  validator  =  option.validateOption(option,  argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.validateOption(option,  argumentCount);  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateOption(option,  argumentCount);	  Validator    validator    =    option.validateOption(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	78	None	replace
383	[BUG]  [BUGGY]  Validator  validator  =  option.hasValues()?  options.getValue(option):  null;  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  option.hasValues()?  options.getValue(option):  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValues()?  options.getValue(option):  null;	  Validator    validator    =    option.hasValues()?    options.getValues()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
384	[BUG]  [BUGGY]  Validator  validator  =  options.hasValues()?  options.getValue(option):  null;  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  Validator  validator  =  options.hasValues()?  options.getValue(option):  null;  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.hasValues()?  options.getValue(option):  null;	  Validator    validator    =    option.hasValues()?    options.getValues()    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
385	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||  arguments.next()  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValu  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||  arguments.next()  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValu  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||  arguments.next()  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValu	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    if(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final    String    allValuesQuoted    =(String)arguments.next();    final    String    allValuesQuoted    =    (String)arguments.    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
386	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  int  argumentCount  =  arguments.size();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;      [BUGGY]  while(arguments.hasNext())  {  final  int  argumentCount  =  arguments.size();  [BUGGY]      final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())  {  final  int  argumentCount  =  arguments.size();	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    final    int    argumentCount    =    arguments.size();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	43	None	replace
