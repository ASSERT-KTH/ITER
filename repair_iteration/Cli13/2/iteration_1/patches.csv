bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.next();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.next();  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final  String  allValuesQuoted  =(String)arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
2	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  Validator  validator  =  option.getValue();  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  Validator  validator  =  option.getValue();  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    Validator  validator  =  option.getValue();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
3	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final  String  allValuesQuoted  =(String)arguments.get(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
4	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  final  String  argumentCount  =  arguments.get(argumentCount);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  final  String  argumentCount  =  arguments.get(argumentCount);  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final  String  argumentCount  =  arguments.get(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
5	[BUG]  [BUGGY]  Validator  validator  =  option.hasValues()?  option.getValues()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.hasValues()?  option.getValues()  :  null;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValues()?  option.getValues()  :  null;	      Validator    validator    =    option.getValues();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
6	[BUG]  [BUGGY]  Validator  validator  =  options.getValues();  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  options.getValues();  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValues();	      Validator    validator    =    option.getValues();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
7	[BUG]  [BUGGY]  Validator  validator  =  option.hasValues()?  options.getValues()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.hasValues()?  options.getValues()  :  null;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValues()?  options.getValues()  :  null;	      Validator    validator    =    option.getValues();    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
8	[BUG]  [BUGGY]  int  argumentCount  =  arguments.size()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  int  argumentCount  =  arguments.size()  -  1;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	int  argumentCount  =  arguments.size()  -  1;	      int    argumentCount    =    arguments.size();    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
9	[BUG]  [BUGGY]  int  argumentCount  =  arguments.size()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  int  argumentCount  =  arguments.size()  +  1;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	int  argumentCount  =  arguments.size()  +  1;	      int    argumentCount    =    arguments.size();    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
10	[BUG]  [BUGGY]  int  argumentCount  =  arguments.size()  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  int  argumentCount  =  arguments.size()  -  2;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	int  argumentCount  =  arguments.size()  -  2;	      int    argumentCount    =    arguments.size();    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
11	[BUG]  [BUGGY]  Validator  validator  =  options.next();  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  options.next();  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.next();	      Validator    validator    =    option.next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
12	[BUG]  [BUGGY]  Validator  validator  =  arguments.next();  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  arguments.next();  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  arguments.next();	      Validator    validator    =    option.next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
13	[BUG]  [BUGGY]  Validator  validator  =  option.validate(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.validate(argumentCount);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(argumentCount);	      Validator    validator    =    option.validate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
14	[BUG]  [BUGGY]  Validator  validator  =  option.validate(argumentCount,  argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.validate(argumentCount,  argumentCount);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(argumentCount,  argumentCount);	      Validator    validator    =    option.validate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
15	[BUG]  [BUGGY]  Validator  validator  =  option.validate(),  argumentCount;  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.validate(),  argumentCount;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(),  argumentCount;	      Validator    validator    =    option.validate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
16	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  options.getValue(argumentCount);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(argumentCount);	      Validator    validator    =    option.getValue(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
17	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  minimum);  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  minimum);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue(argumentCount,  minimum);	      Validator    validator    =    option.getValue(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
18	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  maximum);  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  maximum);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue(argumentCount,  maximum);	      Validator    validator    =    option.getValue(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
19	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  ||(argumentCount  <  minimum))  {	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    	compilable	  [FE]  ComparisonFailure  	16	1	replace
20	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  minimum))  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||(argumentCount  <  minimum))  {	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    	compilable	  [FE]  ComparisonFailure  	16	1	replace
21	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  [CE]  cannot  find  symbol  maximal  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  maximal))  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&(argumentCount  <  maximal))  {	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    	non-compiled	[CE]  cannot  find  symbol  maximal	16	None	replace
22	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  arguments.next()  <  maximum)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||  arguments.next()  <  maximum)  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||  arguments.next()  <  maximum)  {	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	16	None	replace
23	[BUG]  [BUGGY]  Argument  arguments  =  option.getArguments(argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Argument  arguments  =  option.getArguments(argumentCount);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  arguments  =  option.getArguments(argumentCount);	      Argument    arguments    =    option.getArguments();    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
24	[BUG]  [BUGGY]  Argument  argument  =  option.getArguments();  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Argument  argument  =  option.getArguments();  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  argument  =  option.getArguments();	      Argument    arguments    =    option.getArguments();    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
25	[BUG]  [BUGGY]  Argument  arguments  =  options.getArguments();  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Argument  arguments  =  options.getArguments();  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  arguments  =  options.getArguments();	      Argument    arguments    =    option.getArguments();    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
26	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.next();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.next();  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())    {    final  String  allValuesQuoted  =(String)arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
27	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  String  argumentsQuoted  =(String)arguments.next();  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext())  {  final  String  argumentsQuoted  =(String)arguments.next();  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())    {    final  String  argumentsQuoted  =(String)arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
28	[BUG]  [BUGGY]  int  minimum  =  arguments.size()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  int  minimum  =  arguments.size()  -  1;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	int  minimum  =  arguments.size()  -  1;	      int    minimum    =    arguments.size();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
29	[BUG]  [BUGGY]  int  minimum  =  arguments.size()  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  int  minimum  =  arguments.size()  -  2;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	int  minimum  =  arguments.size()  -  2;	      int    minimum    =    arguments.size();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
30	[BUG]  [BUGGY]  int  minimum  =  arguments.size()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  int  minimum  =  arguments.size()  +  1;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	int  minimum  =  arguments.size()  +  1;	      int    minimum    =    arguments.size();    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
31	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  option.getValue()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.hasValue()?  option.getValue()  :  null;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValue()?  option.getValue()  :  null;	      Validator    validator    =    option.getValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
32	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  option.getValue());  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.validateValue(argumentCount,  option.getValue());  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(argumentCount,  option.getValue());	      Validator    validator    =    option.getValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
33	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(option.getValue());  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.validateValue(option.getValue());  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue(option.getValue());	      Validator    validator    =    option.getValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
34	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
35	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while  (arguments.hasNext()  &&  argumentCount  <  minimum)  {	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
36	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  arguments.next()  <  maximum)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&  arguments.next()  <  maximum)  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while  (arguments.hasNext()  &&  arguments.next()  <  maximum)  {	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	4	None	replace
37	[BUG]  [BUGGY]  if(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  if(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id,  arguments.next()));  }	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
38	[BUG]  [BUGGY]  if(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  if(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  values.add(option.getValue(id));  }	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
39	[BUG]  [BUGGY]  if(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  if(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.size()  >  maximum)  {  for(int  id  =  argumentCount;  id  <  arguments.size();  id++)  {  methods.addValue(option,  arguments.get(id));  }	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
40	[BUG]  [BUGGY]  Validator  validator  =  arguments.getValue(option);  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  arguments.getValue(option);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  arguments.getValue(option);	      Validator    validator    =    options.getValue(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
41	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(option);  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.getValue(option);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue(option);	      Validator    validator    =    options.getValue(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
42	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.next();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.next();  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    final  String  allValuesQuoted  =(String)arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
43	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  int  argumentCount  =  arguments.size();  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  int  argumentCount  =  arguments.size();  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    final  int  argumentCount  =  arguments.size();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
44	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    final  String  allValuesQuoted  =(String)arguments.get(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
45	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  maximum)  {  Validator  validator  =  option.getValue();  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  maximum)  {  Validator  validator  =  option.getValue();  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    Validator  validator  =  option.getValue();	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
46	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  argumentCount  =  arguments.get(argumentCount);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  argumentCount  =  arguments.get(argumentCount);  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final  String  argumentCount  =  arguments.get(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
47	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  int  argumentCount  =  arguments.size();  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  int  argumentCount  =  arguments.size();  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final  int  argumentCount  =  arguments.size();	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
48	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  Validator  validator  =  option.getValue();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  Validator  validator  =  option.getValue();  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    Validator  validator  =  option.getValue();	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
49	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  argumentCount  =  arguments.next();  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  argumentCount  =  arguments.next();  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final  String  argumentCount  =  arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
50	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  Validator  validator  =  option.next();  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  Validator  validator  =  option.next();  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    Validator  validator  =  option.next();	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
51	[BUG]  [BUGGY]  Validator  validator  =  option.hasValueImpl()?  option.getValueImpl()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.hasValueImpl()?  option.getValueImpl()  :  null;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValueImpl()?  option.getValueImpl()  :  null;	      Validator    validator    =    option.getValueImpl();    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
52	[BUG]  [BUGGY]  Validator  validator  =  options.getValueImpl();  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  options.getValueImpl();  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValueImpl();	      Validator    validator    =    option.getValueImpl();    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
53	[BUG]  [BUGGY]  Validator  validator  =  option.hasValueImpl()?  options.getValueImpl()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.hasValueImpl()?  options.getValueImpl()  :  null;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValueImpl()?  options.getValueImpl()  :  null;	      Validator    validator    =    option.getValueImpl();    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
54	[BUG]  [BUGGY]  Validator  validator  =  option.getValue( "call ",  argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.getValue( "call ",  argumentCount);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue( "call ",  argumentCount);	      Validator    validator    =    option.getValue(   "call   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
55	[BUG]  [BUGGY]  Validator  validator  =  option.getValue( "call ",  arguments);  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.getValue( "call ",  arguments);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue( "call ",  arguments);	      Validator    validator    =    option.getValue(   "call   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
56	[BUG]  [BUGGY]  Validator  validator  =  options.getValue( "call ");  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  options.getValue( "call ");  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue( "call ");	      Validator    validator    =    option.getValue(   "call   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
57	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final  String  allValuesQuoted  =(String)arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
58	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final  String  allValuesQuoted  =(String)arguments.get(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
59	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
60	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(defaultValues);  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  options.getValue(defaultValues);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(defaultValues);	      Validator    validator    =    options.getValue(option);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
61	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
62	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
63	[BUG]  [BUGGY]  int  argumentCount  =  options.size();  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  int  argumentCount  =  options.size();  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	int  argumentCount  =  options.size();	      int    argumentCount    =    arguments.size();    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
64	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  String  argumentQuoted  =(String)arguments.next();  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext())  {  final  String  argumentQuoted  =(String)arguments.next();  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())    {    final  String  argumentQuoted  =(String)arguments.next();	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
65	[BUG]  [BUGGY]  while(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.getNext();  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext())  {  final  String  allValuesQuoted  =(String)arguments.getNext();  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())    {    final  String  allValuesQuoted  =(String)arguments.getNext();	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
66	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(option,  arguments.next());  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  options.getValue(option,  arguments.next());  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue(option,  arguments.next());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
67	[BUG]  [BUGGY]  Validator  validator  =  option.values().next();  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.values().next();  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.values().next();	      Validator    validator    =    option.next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
68	[BUG]  [BUGGY]  Validator  validator  =  option.next(),  argumentCount;  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.next(),  argumentCount;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.next(),  argumentCount;	      Validator    validator    =    option.next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
69	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  arguments.next()  >  maximum)  {  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  &&  arguments.next()  >  maximum)  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  arguments.next()  >  maximum)  {	  while(arguments.hasNext())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	12	None	replace
70	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  ||(argumentCount  >  maximum))  {	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    	compilable	  [FE]  NoSuchElementException  	16	1	replace
71	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  [FE]  NoSuchElementException  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||(argumentCount  >  maximum))  {	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    	compilable	  [FE]  NoSuchElementException  	16	1	replace
72	[BUG]  [BUGGY]  Validator  validator  =  options.getValue();  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  options.getValue();  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  options.getValue();	      Validator    validator    =    option.getValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
73	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  options.getValue()  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.hasValue()?  options.getValue()  :  null;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.hasValue()?  options.getValue()  :  null;	      Validator    validator    =    option.getValue();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
74	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  argumentCount);  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  argumentCount);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue(argumentCount,  argumentCount);	      Validator    validator    =    option.getValue(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
75	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  arguments);  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.getValue(argumentCount,  arguments);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.getValue(argumentCount,  arguments);	      Validator    validator    =    option.getValue(argumentCount);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
76	[BUG]  [BUGGY]  Validator  validator  =  option.validate(arguments);  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.validate(arguments);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validate(arguments);	      Validator    validator    =    option.validate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
77	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue();  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.validateValue();  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateValue();	      Validator    validator    =    option.validate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
78	[BUG]  [BUGGY]  Validator  validator  =  option.validateOption(option);  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  option.validateOption(option);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  option.validateOption(option);	      Validator    validator    =    option.validate();    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
79	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  ||(argumentCount  <  1))  {	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    	compilable	  [FE]  ComparisonFailure  	16	1	replace
80	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  1))  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||(argumentCount  <  1))  {	  while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    	compilable	  [FE]  ComparisonFailure  	16	1	replace
81	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  id  =  0;  i  <  argumentCount;  ++id)  {  arguments.next();  }  [CE]  cannot  find  symbol  i  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  if(arguments.hasNext())  {  for(int  id  =  0;  i  <  argumentCount;  ++id)  {  arguments.next();  }  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  id  =  0;  i  <  argumentCount;  ++id)  {  arguments.next();  }	      	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
82	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  id  =  0;  i  <  argumentCount;  ++id)  {  arguments.add(option.next());  }  [CE]  cannot  find  symbol  i  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  if(arguments.hasNext())  {  for(int  id  =  0;  i  <  argumentCount;  ++id)  {  arguments.add(option.next());  }  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  id  =  0;  i  <  argumentCount;  ++id)  {  arguments.add(option.next());  }	      	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
83	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  id  =  0;  i  <  argumentCount;  i++)  {  arguments.next();  }  [CE]  cannot  find  symbol  i  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  if(arguments.hasNext())  {  for(int  id  =  0;  i  <  argumentCount;  i++)  {  arguments.next();  }  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  id  =  0;  i  <  argumentCount;  i++)  {  arguments.next();  }	      	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
84	[BUG]  [BUGGY]  if(arguments.hasNext())  {  for(int  id  =  0;  i  <  argumentCount;  ++id)  {  arguments.remove();  }  [CE]  cannot  find  symbol  i  [FE]                  ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  if(arguments.hasNext())  {  for(int  id  =  0;  i  <  argumentCount;  ++id)  {  arguments.remove();  }  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	if(arguments.hasNext())  {  for(int  id  =  0;  i  <  argumentCount;  ++id)  {  arguments.remove();  }	      	non-compiled	[CE]  cannot  find  symbol  i	5	None	replace
85	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
86	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  if(arguments.hasNext())  {  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  if(arguments.hasNext())  {  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())  {  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
87	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  if(arguments.hasNext())  {  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  ++argumentCount;  arguments.next();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  if(arguments.hasNext())  {  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  ++argumentCount;  arguments.next();  }  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())  {  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  ++argumentCount;  arguments.next();  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
88	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  if(arguments.hasNext())  {  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  if(arguments.hasNext())  {  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&(argumentCount    <    minimum))    {    if(arguments.hasNext())  {  while  (arguments.hasNext()  &&(argumentCount  <  minimum))  {  ++argumentCount;  arguments.addValue(option,  arguments.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
89	[BUG]  [BUGGY]  Validator  validator  =  argument.next();  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Validator  validator  =  argument.next();  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Validator  validator  =  argument.next();	      Validator    validator    =    option.next();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
90	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  maximum)  {  while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  maximum)  {  while(arguments.hasNext()  &&  argumentCount  <  maximum)  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    while(arguments.hasNext()  &&  argumentCount  <  maximum)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
91	[BUG]  [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  allValues  =  stripBoundaryQuotes(argumentCount);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while  (arguments.hasNext()  &&  argumentCount  <  maximum)  {  final  String  allValues  =  stripBoundaryQuotes(argumentCount);  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    final  String  allValues  =  stripBoundaryQuotes(argumentCount);	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
92	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    while(arguments.hasNext()  ||(argumentCount  <  maximum))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
93	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  }  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
94	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  final  String  allValuesQuoted  =(String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.	  	non-compiled	[CE]  <identifier>  expected	15	None	add
95	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  }  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()    ||(argumentCount    <    maximum))    {    if(arguments.hasNext()  ||(argumentCount  <  maximum))  {  while(arguments.hasNext()  &&(argumentCount  <  maximum))  {  }	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
96	[BUG]  [BUGGY]  while(arguments.hasNext())  {  while(arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext())  {  while(arguments.hasNext())  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())    {    while(arguments.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
97	[BUG]  [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext())  {  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)argu  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext())  {  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)argu  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())    {    if(arguments.hasNext())  {  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)argu	  	non-compiled	[CE]  ';'  expected	11	None	add
98	[BUG]  [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext())  {  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext())  {  if(arguments.hasNext())  {  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext())    {    if(arguments.hasNext())  {  final  String  allValuesQuoted  =  (String)arguments.next();  final  String  allValuesQuoted  =  (String)arguments.	  	non-compiled	[CE]  <identifier>  expected	11	None	add
99	[BUG]  [BUGGY]  Argument  arguments  =  option.getArgumentsForOption(option);  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  Argument  arguments  =  option.getArgumentsForOption(option);  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	Argument  arguments  =  option.getArgumentsForOption(option);	      Argument    arguments    =    option.getArguments();    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
100	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  ||  argumentCount  <  maximum)  {	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
101	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;    [BUGGY]  while(arguments.hasNext()  ||  argumentCount  <  maximum)  {  [BUGGY]    final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||  argumentCount  <  maximum)  {	  while    (arguments.hasNext()    &&    argumentCount    <    maximum)    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
