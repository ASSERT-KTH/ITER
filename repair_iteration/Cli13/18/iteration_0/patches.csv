bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Validator  validator  =  options.getValue(commandLine);  [CE]  cannot  find  symbol  options  [FE]    ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]    Validator  validator  =  options.getValue(commandLine);  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	    Validator  validator  =  options.getValue(commandLine);		non-compiled	[CE]  cannot  find  symbol  options	37	None	add
2	[BUG]  [BUGGY]    Validator  validator  =  getValues();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]    Validator  validator  =  getValues();  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	    Validator  validator  =  getValues();		non-compiled	[CE]  cannot  find  symbol	37	None	add
3	[BUG]  [BUGGY]    Validator  validator  =  options.getValue(option);  [CE]  cannot  find  symbol  options  [FE]        ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]    Validator  validator  =  options.getValue(option);  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	    Validator  validator  =  options.getValue(option);		non-compiled	[CE]  cannot  find  symbol  options	37	None	add
4	[BUG]  [BUGGY]    Validator  validator  =  options.getValues();  [CE]  cannot  find  symbol  options  [FE]          ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]    Validator  validator  =  options.getValues();  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	    Validator  validator  =  options.getValues();		non-compiled	[CE]  cannot  find  symbol  options	37	None	add
5	[BUG]  [BUGGY]    Validator  validator  =  option.validate(values);  [CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]    Validator  validator  =  option.validate(values);  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	    Validator  validator  =  option.validate(values);		non-compiled	[CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;	37	None	add
6	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]    ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  [BUGGY]  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,      (String)  values.get(maximum));  	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	36	None	replace
7	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  valueCount,  (String)values.get(maximum));  [CE]  cannot  find  symbol  valueCount  [FE]      ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  valueCount,  (String)values.get(maximum));  [BUGGY]  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  valueCount,  (String)values.get(maximum));	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,      (String)  values.get(maximum));  	non-compiled	[CE]  cannot  find  symbol  valueCount	36	None	replace
8	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char)  [FE]        ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR);	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,      (String)  values.get(maximum));  	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char)	36	None	replace
9	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_MISSING_VALUES);  [CE]  cannot  find  symbol  DEFAULT_MISSING_VALUES  [FE]          ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_MISSING_VALUES);  [BUGGY]  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_MISSING_VALUES);	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,      (String)  values.get(maximum));  	non-compiled	[CE]  cannot  find  symbol  DEFAULT_MISSING_VALUES	36	None	replace
10	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(argumentCount));  [CE]  cannot  find  symbol  argumentCount  [FE]    ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(argumentCount));  [BUGGY]  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(argumentCount));	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,      (String)  values.get(maximum));  	non-compiled	[CE]  cannot  find  symbol  argumentCount	36	None	replace
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [BUGGY]  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	add	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,      (String)  values.get(maximum));  	compilable	  [FE]  ComparisonFailure  	36	1	replace
12	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [BUGGY]  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,      (String)  values.get(maximum));  	compilable	  [FE]  ComparisonFailure  	36	1	replace
13	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(argumentCount));  [CE]  cannot  find  symbol  argumentCount  [FE]        ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(argumentCount));  [BUGGY]  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(argumentCount));	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,      (String)  values.get(maximum));  	non-compiled	[CE]  cannot  find  symbol  argumentCount	36	None	replace
14	[BUG]  [BUGGY]    Validator  validator  =  options.getValues(option);  [CE]  cannot  find  symbol  options  [FE]    ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]    Validator  validator  =  options.getValues(option);  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	    Validator  validator  =  options.getValues(option);		non-compiled	[CE]  cannot  find  symbol  options	37	None	add
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]    Validator  validator  =  null;  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	add	    Validator  validator  =  null;		compilable	  [FE]  ComparisonFailure  	37	1	add
16	[BUG]  [BUGGY]    Validator  validator  =  null;  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]    Validator  validator  =  null;  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	    Validator  validator  =  null;		compilable	  [FE]  ComparisonFailure  	37	1	add
17	[BUG]  [BUGGY]    Validator  validator  =  values.get(maximum);  [CE]  incompatible  types  [FE]    ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]    Validator  validator  =  values.get(maximum);  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	    Validator  validator  =  values.get(maximum);		non-compiled	[CE]  incompatible  types	37	None	add
18	[BUG]  [BUGGY]    Validator  validator  =  values.get(option);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]    Validator  validator  =  values.get(option);  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	    Validator  validator  =  values.get(option);		non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	37	None	add
19	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  value.toString());  [CE]  cannot  find  symbol  value  [FE]    ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  value.toString());  [BUGGY]  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  value.toString());	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,      (String)  values.get(maximum));  	non-compiled	[CE]  cannot  find  symbol  value	36	None	replace
20	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  [BUGGY]  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	add	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,      (String)  values.get(maximum));  	compilable	  [FE]  ComparisonFailure  	36	1	replace
21	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  [BUGGY]  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,      (String)  values.get(maximum));  	compilable	  [FE]  ComparisonFailure  	36	1	replace
