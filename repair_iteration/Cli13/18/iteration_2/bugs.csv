bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  (String)values.get(maximum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,String)  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  (String)values.get(maximum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size(),  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    valueCount,    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,String)	7	None	replace
2	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  (String)values.get(maximum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,String)  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  (String)values.get(maximum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum,  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    valueCount,    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,int,String)	7	None	replace
3	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  id,  (String)values.get(maximum));  [CE]  id  has  private  access  in  OptionImpl  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  id,  (String)values.get(maximum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  id,  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    valueCount,    (String)values.get(maximum));    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	7	None	replace
4	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(maximum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(maximum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    valueCount,    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	7	None	replace
5	[BUG]  [BUGGY]  Validator  validator  =  values.get(argumentCount);  [CE]  cannot  find  symbol  argumentCount  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  values.get(argumentCount);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(argumentCount);	      Validator    validator    =    values.get(maximum);    	non-compiled	[CE]  cannot  find  symbol  argumentCount	17	None	replace
6	[BUG]  [BUGGY]  Validator  validator  =  values.get(minimum);  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  values.get(minimum);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(minimum);	      Validator    validator    =    values.get(maximum);    	non-compiled	[CE]  incompatible  types	17	None	replace
7	[BUG]  [BUGGY]  Validator  validator  =  values.get(id);  [CE]  id  has  private  access  in  OptionImpl  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  values.get(id);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(id);	      Validator    validator    =    values.get(maximum);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	17	None	replace
8	[BUG]  [BUGGY]  Validator  validator  =  values.get(minor);  [CE]  cannot  find  symbol  minor  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  values.get(minor);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(minor);	      Validator    validator    =    values.get(maximum);    	non-compiled	[CE]  cannot  find  symbol  minor	17	None	replace
9	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum);  [CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  option.validate(values,  minimum);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  minimum);	      Validator    validator    =    option.validate(values);    	non-compiled	[CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;	5	None	replace
10	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  maximum);  [CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  option.validate(values,  maximum);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  maximum);	      Validator    validator    =    option.validate(values);    	non-compiled	[CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;	5	None	replace
11	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  defaultValues);  [CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  option.validate(values,  defaultValues);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  defaultValues);	      Validator    validator    =    option.validate(values);    	non-compiled	[CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;	5	None	replace
12	[BUG]  [BUGGY]  Validator  validator  =  options.validate(values);  [CE]  cannot  find  symbol  options  [FE]                      ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  options.validate(values);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  options.validate(values);	      Validator    validator    =    option.validate(values);    	non-compiled	[CE]  cannot  find  symbol  options	5	None	replace
13	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(id));  [CE]  id  has  private  access  in  OptionImpl  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(id));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(id));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(argumentCount));    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	10	None	replace
14	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(argumentCount));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	10	None	replace
15	[BUG]  [BUGGY]  Validator  validator  =  values.getValue(option);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  values.getValue(option);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.getValue(option);	      Validator    validator    =    options.getValue(option);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
16	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(option);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  resources.getValue(option);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  resources.getValue(option);	      Validator    validator    =    options.getValue(option);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
17	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(option);  [CE]  incompatible  types  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  commandLine.getValue(option);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValue(option);	      Validator    validator    =    options.getValue(option);    	non-compiled	[CE]  incompatible  types	3	None	replace
18	[BUG]  [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  }  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  }  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  }	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	21	None	replace
19	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]      ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	21	None	replace
20	[BUG]  [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  }  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  }  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	if(values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(1));  }	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	21	None	replace
21	[BUG]  [BUGGY]  Validator  validator  =  values.getValues();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  values.getValues();  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.getValues();	      Validator    validator    =    options.getValues();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
22	[BUG]  [BUGGY]  Validator  validator  =  resources.getValues();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  resources.getValues();  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  resources.getValues();	      Validator    validator    =    options.getValues();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
23	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValues();  [CE]  no  suitable  method  found  for  getValues()  [FE]                  ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  commandLine.getValues();  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValues();	      Validator    validator    =    options.getValues();    	non-compiled	[CE]  no  suitable  method  found  for  getValues()	4	None	replace
24	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  minimum);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  values.get(option,  minimum);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  minimum);	      Validator    validator    =    values.get(option);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	18	None	replace
25	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  defaultValues);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  values.get(option,  defaultValues);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  defaultValues);	      Validator    validator    =    values.get(option);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	18	None	replace
26	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  maximum);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  values.get(option,  maximum);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  maximum);	      Validator    validator    =    values.get(option);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	18	None	replace
27	[BUG]  [BUGGY]  Validator  validator  =  values.get(defaultValues);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  values.get(defaultValues);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(defaultValues);	      Validator    validator    =    values.get(option);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	18	None	replace
28	[BUG]  [BUGGY]  Validator  validator  =  getValues(option);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  getValues(option);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues(option);	      Validator    validator    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
29	[BUG]  [BUGGY]  Validator  validator  =  getValues().iterator();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  getValues().iterator();  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues().iterator();	      Validator    validator    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
30	[BUG]  [BUGGY]  Validator  validator  =  getValues().values;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  getValues().values;  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues().values;	      Validator    validator    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
31	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);	      Validator    validator    =    null;    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	16	None	replace
32	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR);  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]      ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR);	      Validator    validator    =    null;    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	16	None	replace
33	[BUG]  [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  values.size());  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  values.size());  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator(DEFAULT_INITIAL_SEPARATOR,  values.size());	      Validator    validator    =    null;    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	16	None	replace
34	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(id));  [CE]  <identifier>  expected  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(id));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(id));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(argumentCount));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
35	[BUG]  [BUGGY]      Validator  validator  =  null;  Validator  validator  =  null;  [CE]  variable  validator  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]      Validator  validator  =  null;  Validator  validator  =  null;  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	        Validator    validator    =    null;    Validator  validator  =  null;	  	non-compiled	[CE]  variable  validator  is  already  defined  in  method  validate(WriteableCommandLine,Option)	15	None	add
36	[BUG]  [BUGGY]      Validator  validator  =  null;  Validator  validator  =  null;  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(maximum));  (String)values.get(maximum));  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]      Validator  validator  =  null;  Validator  validator  =  null;  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(maximum));  (String)values.get(maximum));  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	        Validator    validator    =    null;    Validator  validator  =  null;  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(maximum));  (String)values.get(maximum));	  	non-compiled	[CE]  not  a  statement	15	None	add
37	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,int)  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  minimum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_MISSING_VALUES);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,int)	9	None	replace
38	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size());  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,int)  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size());  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.size());	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_MISSING_VALUES);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,int)	9	None	replace
39	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  maximum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,int)  [FE]                  ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  maximum);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  maximum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_MISSING_VALUES);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,int)	9	None	replace
40	[BUG]  [BUGGY]  Validator  validator  =  values.getValues(option);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  values.getValues(option);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.getValues(option);	      Validator    validator    =    options.getValues(option);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
41	[BUG]  [BUGGY]  Validator  validator  =  resources.getValues(option);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  resources.getValues(option);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  resources.getValues(option);	      Validator    validator    =    options.getValues(option);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
42	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValues(option);  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  commandLine.getValues(option);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commandLine.getValues(option);	      Validator    validator    =    options.getValues(option);    	non-compiled	[CE]  incompatible  types	14	None	replace
43	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));	  	non-compiled	[CE]  unreachable  statement	11	None	add
44	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));	  	non-compiled	[CE]  not  a  statement	11	None	add
45	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
46	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(minimum));	  	non-compiled	[CE]  unreachable  statement	11	None	add
47	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));	  	non-compiled	[CE]  unreachable  statement	20	None	add
48	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));	  	non-compiled	[CE]  not  a  statement	20	None	add
49	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(1));  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(1));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(1));	  	non-compiled	[CE]  unreachable  statement	20	None	add
50	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
51	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(1));  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(1));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(1));	  	non-compiled	[CE]  not  a  statement	20	None	add
52	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(0));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	12	None	replace
53	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]      ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	12	None	replace
54	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object)	12	None	replace
55	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int)  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  minimum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int)	6	None	replace
56	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  maximum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int)  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  maximum);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  maximum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0));    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,Object,int)	6	None	replace
57	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  id);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0),  id);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(0));    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	6	None	replace
58	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value   "[testfile.txt  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	add	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    value.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value   "[testfile.txt  	19	1	replace
59	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value   "[testfile.txt  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    value.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<Unexpected  [testfile.txt  while  processing  ]>  but  was:<Unexpected  [value   "[testfile.txt  	19	1	replace
60	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    value.toString());    	non-compiled	[CE]  <identifier>  expected	19	None	replace
61	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  valueValues.toString());  [CE]  cannot  find  symbol  valueValues  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  valueValues.toString());  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  valueValues.toString());	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    value.toString());    	non-compiled	[CE]  cannot  find  symbol  valueValues	19	None	replace
62	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char)  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char)	8	None	replace
63	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.size());  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.size());  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values.size());	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)	8	None	replace
64	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,List)  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  values);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,List)	8	None	replace
65	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  valueCount);  [CE]  cannot  find  symbol  valueCount  [FE]                  ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  valueCount);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  valueCount);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  valueCount	8	None	replace
66	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(commandLine);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  resources.getValue(commandLine);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  resources.getValue(commandLine);	      Validator    validator    =    options.getValue(commandLine);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
67	[BUG]  [BUGGY]  Validator  validator  =  commands.getValue(commandLine);  [CE]  cannot  find  symbol  commands  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  commands.getValue(commandLine);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commands.getValue(commandLine);	      Validator    validator    =    options.getValue(commandLine);    	non-compiled	[CE]  cannot  find  symbol  commands	1	None	replace
68	[BUG]  [BUGGY]  Validator  validator  =  commands.getValue(option);  [CE]  cannot  find  symbol  commands  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  commands.getValue(option);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  commands.getValue(option);	      Validator    validator    =    options.getValue(commandLine);    	non-compiled	[CE]  cannot  find  symbol  commands	1	None	replace
69	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  DEFAULT_INITIAL_SEPARATOR);	      Validator    validator    =    values.get(option);    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	18	None	replace
70	[BUG]  [BUGGY]  Validator  validator  =  options.get(values);  [CE]  cannot  find  symbol  options  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  options.get(values);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  options.get(values);	      Validator    validator    =    values.get(option);    	non-compiled	[CE]  cannot  find  symbol  options	18	None	replace
71	[BUG]  [BUGGY]  Validator  validator  =  values.get(option,  valueCount);  [CE]  cannot  find  symbol  valueCount  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  values.get(option,  valueCount);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(option,  valueCount);	      Validator    validator    =    values.get(option);    	non-compiled	[CE]  cannot  find  symbol  valueCount	18	None	replace
72	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	add	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_MISSING_VALUES);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
73	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  [FE]  ComparisonFailure  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_CONSUME_REMAINING);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_MISSING_VALUES);    	compilable	  [FE]  ComparisonFailure  	9	1	replace
74	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0);  [CE]  <identifier>  expected  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    Option  option  =  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0);	  	non-compiled	[CE]  <identifier>  expected	20	None	add
75	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [CE]  <identifier>  expected  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    Option  option  =  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));	  	non-compiled	[CE]  <identifier>  expected	11	None	add
76	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	add	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(argumentCount));    	compilable	  [FE]  ComparisonFailure  	13	1	replace
77	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(minimum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(argumentCount));    	compilable	  [FE]  ComparisonFailure  	13	1	replace
78	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(option);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  option.getValue(option);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.getValue(option);	      Validator    validator    =    options.getValue(option);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
79	[BUG]  [BUGGY]  Validator  validator  =  values.get(defaultValues.size());  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  values.get(defaultValues.size());  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  values.get(defaultValues.size());	      Validator    validator    =    values.get(maximum);    	non-compiled	[CE]  incompatible  types	17	None	replace
80	[BUG]  [BUGGY]  Validator  validator  =  option.getValues(option);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  option.getValues(option);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.getValues(option);	      Validator    validator    =    options.getValues(option);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
81	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  [CE]  not  a  statement  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.toString());	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    value.toString());    	non-compiled	[CE]  not  a  statement	19	None	replace
82	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  valueCount);  [CE]  cannot  find  symbol  valueCount  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  option.validate(values,  valueCount);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  option.validate(values,  valueCount);	      Validator    validator    =    option.validate(values);    	non-compiled	[CE]  cannot  find  symbol  valueCount	5	None	replace
83	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	add	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    	compilable	  [FE]  ComparisonFailure  	21	1	replace
84	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(0));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    	compilable	  [FE]  ComparisonFailure  	21	1	replace
85	[BUG]  [BUGGY]      Validator  validator  =  null;  validateValues(option,  values.get(maximum));  Validator  validator  =  null;  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]      Validator  validator  =  null;  validateValues(option,  values.get(maximum));  Validator  validator  =  null;  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	        Validator    validator    =    null;    validateValues(option,  values.get(maximum));  Validator  validator  =  null;	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
86	[BUG]  [BUGGY]      Validator  validator  =  null;  validateValues(option,  values.size());  Validator  validator  =  null;  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]      Validator  validator  =  null;  validateValues(option,  values.size());  Validator  validator  =  null;  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	        Validator    validator    =    null;    validateValues(option,  values.size());  Validator  validator  =  null;	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
87	[BUG]  [BUGGY]      Validator  validator  =  null;  validateValues(values);  Validator  validator  =  null;  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]      Validator  validator  =  null;  validateValues(values);  Validator  validator  =  null;  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	        Validator    validator    =    null;    validateValues(values);  Validator  validator  =  null;	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
88	[BUG]  [BUGGY]      Validator  validator  =  null;  Validator  validator  =  null;  this.validate(values,  option);  [CE]  variable  validator  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]      Validator  validator  =  null;  Validator  validator  =  null;  this.validate(values,  option);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	        Validator    validator    =    null;    Validator  validator  =  null;  this.validate(values,  option);	  	non-compiled	[CE]  variable  validator  is  already  defined  in  method  validate(WriteableCommandLine,Option)	15	None	add
89	[BUG]  [BUGGY]  Validator  validator  =  getValue(option);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  getValue(option);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValue(option);	      Validator    validator    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
90	[BUG]  [BUGGY]  Validator  validator  =  getValues().validate(values);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  getValues().validate(values);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  getValues().validate(values);	      Validator    validator    =    getValues();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
91	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(maximum));  [CE]  <identifier>  expected  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(maximum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    values.get(argumentCount));    	non-compiled	[CE]  <identifier>  expected	10	None	replace
92	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  initialSeparator);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,char)  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  initialSeparator);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  initialSeparator);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,char)	8	None	replace
93	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR);  [CE]  <identifier>  expected  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
94	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]                ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  id);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  id);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	8	None	replace
95	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(argumentCount));  [CE]  cannot  find  symbol  argumentCount  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(argumentCount));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  values.get(argumentCount));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol  argumentCount	12	None	replace
96	[BUG]  [BUGGY]  Validator  validator  =  defaultValues;  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  defaultValues;  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  defaultValues;	      Validator    validator    =    null;    	non-compiled	[CE]  incompatible  types	16	None	replace
97	[BUG]  [BUGGY]  Validator  validator  =  new  Validator();  [CE]  Validator  is  abstract;  cannot  be  instantiated  [FE]      ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  new  Validator();  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  new  Validator();	      Validator    validator    =    null;    	non-compiled	[CE]  Validator  is  abstract;  cannot  be  instantiated	16	None	replace
98	[BUG]  [BUGGY]  Validator  validator  =  NUL;  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =  NUL;  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =  NUL;	      Validator    validator    =    null;    	non-compiled	[CE]  incompatible  types	16	None	replace
99	[BUG]  [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  [CE]  <identifier>  expected  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throwables.throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.get(0));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
100	[BUG]  [BUGGY]      Validator  validator  =  null;  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);  [CE]  variable  validator  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]      Validator  validator  =  null;  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	        Validator    validator    =    null;    Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_SUBSEQUENT_SEPARATOR);	  	non-compiled	[CE]  variable  validator  is  already  defined  in  method  validate(WriteableCommandLine,Option)	15	None	add
101	[BUG]  [BUGGY]      Validator  validator  =  null;  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR);  [CE]  variable  validator  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]      ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]      Validator  validator  =  null;  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	        Validator    validator    =    null;    Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_SUBSEQUENT_SEPARATOR);	  	non-compiled	[CE]  variable  validator  is  already  defined  in  method  validate(WriteableCommandLine,Option)	15	None	add
102	[BUG]  [BUGGY]      Validator  validator  =  null;  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_INITIAL_SEPARATOR);  [CE]  variable  validator  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]        ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]      Validator  validator  =  null;  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	        Validator    validator    =    null;    Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_CONSUME_REMAINING,  DEFAULT_INITIAL_SEPARATOR);	  	non-compiled	[CE]  variable  validator  is  already  defined  in  method  validate(WriteableCommandLine,Option)	15	None	add
103	[BUG]  [BUGGY]      Validator  validator  =  null;  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING);  [CE]  variable  validator  is  already  defined  in  method  validate(WriteableCommandLine,Option)  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]      Validator  validator  =  null;  Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING);  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	        Validator    validator    =    null;    Validator  validator  =  null;  this.validate(values,  Option.DEFAULT_INITIAL_SEPARATOR,  DEFAULT_CONSUME_REMAINING);	  	non-compiled	[CE]  variable  validator  is  already  defined  in  method  validate(WriteableCommandLine,Option)	15	None	add
104	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.id,  (String)values.get(maximum));  [CE]  cannot  find  symbol  id  [FE]          ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.id,  (String)values.get(maximum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.id,  (String)values.get(maximum));	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    valueCount,    (String)values.get(maximum));    	non-compiled	[CE]  cannot  find  symbol  id	7	None	replace
105	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  (String)values.get(0));  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)values.get(0));  (String)values.get(0));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    (String)values.get(0));    (String)values.get(0));	  	non-compiled	[CE]  not  a  statement	20	None	add
106	[BUG]  [BUGGY]  Validator  validator  =(values.size()  >  maximum)?  values.get(maximum):  null;  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =(values.size()  >  maximum)?  values.get(maximum):  null;  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =(values.size()  >  maximum)?  values.get(maximum):  null;	      Validator    validator    =    null;    	non-compiled	[CE]  incompatible  types	16	None	replace
107	[BUG]  [BUGGY]  Validator  validator  =(values.size()  >  maximum)?  values.get(0):  null;  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Validator  validator  =(values.size()  >  maximum)?  values.get(0):  null;  [BUGGY]    throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,          (String)  values.get(maximum));  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Validator  validator  =(values.size()  >  maximum)?  values.get(0):  null;	      Validator    validator    =    null;    	non-compiled	[CE]  incompatible  types	16	None	replace
108	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  maximum);  [CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)  [FE]            ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  maximum);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_INITIAL_SEPARATOR,  maximum);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  no  suitable  constructor  found  for  OptionException(Option,String,char,int)	8	None	replace
109	[BUG]  [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR);  [CE]  not  a  statement  [FE]              ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR);  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	Throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  DEFAULT_SUBSEQUENT_SEPARATOR);	  throw    new    OptionException(option,    ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  not  a  statement	8	None	replace
110	[BUG]  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  (String)values.get(maximum));  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  if  (values.size()  >  maximum)  {    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES,  (String)values.get(maximum));  (String)values.get(maximum));  [BUGGY]    (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  }  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	245	246	1	replace	throw    new    OptionException(option,    ResourceConstants.ARGUMENT_MISSING_VALUES,    (String)values.get(maximum));    (String)values.get(maximum));	  	non-compiled	[CE]  not  a  statement	11	None	add
