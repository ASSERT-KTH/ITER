projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,options.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=options.getCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=option.getResources();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator||arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(token,options.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.getCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(token,option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintmaximum=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consequentSplit&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consequentSplit&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.createCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.getArgumentLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSplit){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSplit&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&arguments.size()>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSplit&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=options.getArgumentLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=options.getCommandLine(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit||arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(afterSplit&&arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSplit&&arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,arguments.nextToken());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSplit&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSeparator&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=options.getResources();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=option.getAllResources();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=option.findResources();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSplit&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSeparator&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consumeSplit&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(afterSplit&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintmaximum=arguments.size()-1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintmaximum=arguments.size()-2;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintmaximum=arguments.size()+1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,options.nextToken());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.setValue(option,options.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.setValue(option,token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token,true);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&arguments.size()>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSplit&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.removeValue(option,token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.add(option,token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSplit||arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSeparator||arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator||arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){elseif(subsequentSplit&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){finalintmaximum=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){finalintpreferredSeparator=options.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){finalintinitialSeparator=options.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){finalintinitialSeparator=arguments.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=option.findResources(defaultValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSeparator&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.removeValue(token,options.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.removeValue(token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(token,value);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(values,option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&options.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&options.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSplit&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(token,option.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(values,token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token+1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&options.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){finalComparisonFailure<ComparisonFailure>commandLine=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){finalComparisonFailure<Short>commandLine=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){finalComparisonFailure<ComparisonFailure>commandLine=option.getCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){finalComparisonFailure<ComparisonFailure>commandLine=options.getCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.getCommandLine(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,options.next(),token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&option.hasArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&option.hasOptionalArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator||arguments.nextToken()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consequentSplit&&arguments.size()>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(proposedSplit&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){finalStringargumentCount=options.get(defaultValues.size()-1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){finalStringargumentCount=options.get(defaultValues.size());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){finalintargumentCount=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.removeValue(option,options.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.removeCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consequentSeparator&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.removeValue(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consequentSplit&&arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argument.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSplit||arguments.nextToken()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator||commandLine.nextToken()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator||arguments.nextToken()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalComparisonFailure<Short>commandLine=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){finalComparisonFailure<Short>commandLine=options.next();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&arguments.size()>1){finalComparisonFailure<Short>commandLine=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSplit&&option.hasArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&options.hasArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator||option.hasArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalComparisonFailure<ComparisonFailure>commandLine=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalComparisonFailure<ComparFailure>commandLine=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalComparFailure<ComparisonFailure>commandLine=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator||arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&argumentLine.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consumeSplit&&arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSplit&&option.hasOptionalArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&options.hasOptionalArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(option.hasOptionalArg()&&subsequentSeparator.hasOptionalArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consumeRemaining&&arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalComparisonFailure<ComparisonFailure>commandLine=option.getCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){finalComparisonFailure<ComparisonFailure>commandLine=option.getCommandLine();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(continuousSplit&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.setValue(option,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.removeValue(option,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.add(option,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&arguments.size()>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(maximum&&arguments.size()>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(maximumSplit&&arguments.size()>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSplit&&arguments.size()>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit||arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSplit||arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalComparisonFailure<ComparisonFailure>commandLine=options.getCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount>1){finalComparisonFailure<ComparisonFailure>commandLine=options.getCommandLine();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintargumentCount=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintargumentCount=arguments.size()-1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalcharargumentCount=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=options.findResources();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=option.findResources(arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(expectedSplit&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintmaximal=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,arguments.next(),token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,options.nextToken(),token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,options.next(),token,nextSplit);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token,arguments.nextToken());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token,values.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token,options.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSplit&&arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator||arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(afterSplit&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(secondSplit&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token,false);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.removeValue(option,token,true);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.setValue(option,token,false);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token,null);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.createCommandLine(arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=options.createCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.createCommandLine(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.setValue(option,arguments.nextToken());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=option.findResources(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=option.findResources(defaultValuesQuoted,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=options.findResources(defaultValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&commandLine.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&option.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.setValue(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&arguments.size()>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(afterSplit){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(secondarySeparator){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(continuousSeparator){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=options.getAllResources();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=options.getOptionalResources();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&arguments.size()>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(maximumSeparator&&arguments.size()>initialSeparator){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(maximumSeparator&&initialSeparator.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintpreferredSeparator=options.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintsubsequentSeparator=options.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalcharsubsequentSplit=options.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&arguments.nextToken().hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(afterSplit&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consumeSplit&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalStringargumentCount=options.get(defaultValues.size()-1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalStringargumentCount=options.get(defaultValues.size());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintsubsequentSplitCount=options.get(defaultValues.size()-1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintsubsequentSeparator=options.get(defaultValues.size()-1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=options.getCommandLine(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=options.getCommandLine(commandLine,nextSplit);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=resources.getCommandLine(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token+2);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token+3);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintinitialSeparator=options.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalcharinitialSeparator=options.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalStringinitialSeparator=options.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSplit||arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSplit||arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.getCommandLine(argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.getCommandLine(arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&resources.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&option.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintinitialSeparator=arguments.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalcharinitialSeparator=arguments.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalStringinitialSeparator=arguments.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsplitSeparator&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,options.getToken());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.removeValue(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(afterSplit||arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consumeSplit||arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=option.getAllResources(defaultValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(producedSplit&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSplit&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&arguments.hasNext()||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintmaximum=argumentCount.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&commandLine.looksLikeOption(subsequentSeparator)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&initialSplit){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addOption(option,token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.add(option,token,nextSplit);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=arguments.getArgumentLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consumeRemaining&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSplit&&argumentCount>1){finalintmaximum=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSplit&&argumentCount>1){finalintmaximum=arguments.size();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=options.removeCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.setValue(option,token.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.removeValue(option,token.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.add(option,token.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.setValue(option,token,true);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(minimumSplit&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(minimumSplit&&arguments.size()>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token.nextToken());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator||arguments.nextToken().hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintsubsequentSeparator=options.get(defaultValues.size());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintsubsequentSplitCount=options.get(defaultValues.size());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintsubsequentSplit=options.get(defaultValues.size());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(secondSplit&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&resources.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&option.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,value);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.setValue(token,value);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addToken(token,value);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSplit&&arguments.size()>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSplit&&arguments.size()>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(afterSplit&&arguments.size()>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(token,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(values,token,0);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(values,token,nextSplit);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.add(option,token+1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&options.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=option.getAllValues();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSeparator&&arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consequentSeparator&&arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(afterSeparator&&arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=options.getArgumentLine(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(commandLine.looksLikeOption(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(commandLine.looksLikeOption(null)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintinitialSeparator=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalcharsubsequentSplit=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=options.getOptions();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(maximum&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(afterSeparator&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.removeValue(token,option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164Finalintmaximum=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token).next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=options.getCommandLine(commandLine,token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=options.getCommandLine(commandLine,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(proposedSeparator&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(minimumSeparator&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(minimumSeparator&&arguments.size()>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalShort>commandLine=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintsubsequentSeparator=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(expectedSplit&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(null&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalcharsubsequentSeparator=options.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.setValue(token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&options.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSeparator&&arguments.size()>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalComparationFailure<ComparisonFailure>commandLine=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.removeValue(token,true);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintmaximum=options.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(maximumSeparator&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.setValue(token,option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(maximum&&subsequentSeparator>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(afterSeparator&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(afterSeparator&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(pendingSeparator&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(afterSequentSeparator){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(pendingSeparator){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSeparator){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&options.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&arguments.size()>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&initialSeparator.startsWith("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&initialSeparator.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintinitialSeparator=options.get(defaultValues.size()-1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(pendingSeparator||arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,values.nextToken());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,options.next(),token,subsequentSplit);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.createArgumentLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalComparisonFailure<ComparFailure>commandLine=option.getCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalComparFailure<ComparisonFailure>commandLine=option.getCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(option.hasOptionalArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSeparator||arguments.nextToken()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(token,arguments.nextToken());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(token,options.nextToken());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(proposedSequentSeparator&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalComparisonFailure<ComparFailure>commandLine=options.getCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalComparationFailure<ComparisonFailure>commandLine=options.getCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintmaximum=argument.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintinitialSeparator=options.get(defaultValues.size());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.getCommandLine(commandLine,token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.getCommandLine(commandLine,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalcharsubsequentSeparator=arguments.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(option.hasArg()&&subsequentSeparator){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(option&&subsequentSeparator.hasArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(proposedSequentSeparator&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(maximumSeparator&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(null||arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.createCommandLine(null);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(value,token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalcharpreferredSeparator=options.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalStringsubsequentSeparator=options.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(proposedSeparator&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalComparableFailure<ComparisonFailure>commandLine=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator||arguments.next()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit||argument.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSeparator||arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=options.getResources(defaultValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.removeValue(values,option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentCount.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.withArgumentLength();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(secondarySeparator&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.removeValue(option,options.nextToken());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(reversedSeparator){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(proposedSequentSeparator){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.moveValue(option,options.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164ArgumentImplresources=option.findResources(argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&argumentCount>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit){finalComparisonFailure<ComparisonFailure>commandLine=option.getCommandLine();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSeparator==DEFAULT_INITIAL_SEPARATOR){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.setValue(values,token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.setValue(token,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSeparator&&arguments.size()>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consequentSplit&&arguments.size()>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalbooleansubsequentSplit=commandLine.looksLikeOption(secondSeparator);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.addValue(option,token.remove());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintargumentCount=options.get(defaultValues.size());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(proposedSeparator&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(secondarySeparator&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit){finalComparisonFailure<ComparisonFailure>commandLine=options.getCommandLine();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit){finalComparisonFailure<ComparisonFailure>commandLine=options.getCommandLine();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit&&argumentLine.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&option.hasOptionalArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(secondarySplit&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164CommandLinecommandLine=option.createCommandLine(argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator&&arguments.hasArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&option.hasArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(preservedSeparator&&arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consequentSeparator&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164commandLine.moveValue(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(consequentSeparator&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(secondarySeparator&&argumentCount>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(initialSeparator&&argumentCount.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintmax=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164finalintargumentCount=options.get(defaultValues.size()-1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(currentSeparator&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(secondarySeparator||arguments.hasMoreTokens()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(proposedSeparator||arguments.hasMoreTokens()){
