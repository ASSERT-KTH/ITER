bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.createCommandLine();  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  CommandLine  commandLine  =  option.createCommandLine();  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.createCommandLine();	      CommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
2	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getArgumentLine();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  CommandLine  commandLine  =  option.getArgumentLine();  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.getArgumentLine();	      CommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
3	[BUG]  [BUGGY]  else  if(initialSplit)  {  [CE]  cannot  find  symbol  initialSplit  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(initialSplit)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSplit)  {	  else    if(subsequentSeparator)    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	11	None	replace
4	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSeparator  &&  arguments.size()  >  maximum)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  arguments.size()  >  maximum)  {	  else    if(subsequentSeparator)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
5	[BUG]  [BUGGY]  else  if(currentSplit  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  currentSplit  [FE]    ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(currentSplit  &&  argumentCount  >  1)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSplit  &&  argumentCount  >  1)  {	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  currentSplit	10	None	replace
6	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  arguments.size()  >  1)  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  arguments.size()  >  1)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  arguments.size()  >  1)  {	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
7	[BUG]  [BUGGY]  else  if(initialSplit  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  initialSplit  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(initialSplit  &&  argumentCount  >  1)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSplit  &&  argumentCount  >  1)  {	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	10	None	replace
8	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine();  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  options.getArgumentLine();	      CommandLine    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
9	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(commandLine);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(commandLine);  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  options.getCommandLine(commandLine);	      CommandLine    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
10	[BUG]  [BUGGY]  else  if(subsequentSplit  ||  arguments.isEmpty())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  ||  arguments.isEmpty())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  ||  arguments.isEmpty())  {	  else    if(subsequentSplit    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
11	[BUG]  [BUGGY]  else  if(afterSplit  &&  arguments.isEmpty())  {  [CE]  cannot  find  symbol  afterSplit  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(afterSplit  &&  arguments.isEmpty())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(afterSplit  &&  arguments.isEmpty())  {	  else    if(subsequentSplit    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  afterSplit	7	None	replace
12	[BUG]  [BUGGY]  else  if(currentSplit  &&  arguments.isEmpty())  {  [CE]  cannot  find  symbol  currentSplit  [FE]              ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(currentSplit  &&  arguments.isEmpty())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSplit  &&  arguments.isEmpty())  {	  else    if(subsequentSplit    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  currentSplit	7	None	replace
13	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.nextToken());  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.addValue(option,  arguments.nextToken());  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  arguments.nextToken());	      commandLine.addValue(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
14	[BUG]  [BUGGY]  else  if(currentSplit  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  currentSplit  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(currentSplit  &&  arguments.size()  >  maximum)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSplit  &&  arguments.size()  >  maximum)  {	  else    if(consequentSplit    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  currentSplit	19	None	replace
15	[BUG]  [BUGGY]  else  if(currentSeparator  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  currentSeparator  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(currentSeparator  &&  arguments.size()  >  maximum)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSeparator  &&  arguments.size()  >  maximum)  {	  else    if(consequentSplit    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  currentSeparator	19	None	replace
16	[BUG]  [BUGGY]  commandLine.addValue(option,  token.next());  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.addValue(option,  token.next());  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  token.next());	      commandLine.addValue(token,    options.next());    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
17	[BUG]  [BUGGY]  ArgumentImpl  resources  =  options.getResources();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  ArgumentImpl  resources  =  options.getResources();  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  options.getResources();	      ArgumentImpl    resources    =    option.getResources();    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
18	[BUG]  [BUGGY]  ArgumentImpl  resources  =  option.getAllResources();  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  ArgumentImpl  resources  =  option.getAllResources();  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  option.getAllResources();	      ArgumentImpl    resources    =    option.getResources();    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
19	[BUG]  [BUGGY]  ArgumentImpl  resources  =  option.findResources();  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  ArgumentImpl  resources  =  option.findResources();  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  option.findResources();	      ArgumentImpl    resources    =    option.getResources();    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
20	[BUG]  [BUGGY]  else  if(initialSplit  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  initialSplit  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(initialSplit  &&  arguments.hasMoreTokens())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSplit  &&  arguments.hasMoreTokens())  {	  else    if(subsequentSeparator    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	13	None	replace
21	[BUG]  [BUGGY]  else  if(currentSeparator  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  currentSeparator  [FE]              ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(currentSeparator  &&  arguments.hasMoreTokens())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSeparator  &&  arguments.hasMoreTokens())  {	  else    if(subsequentSeparator    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  currentSeparator	13	None	replace
22	[BUG]  [BUGGY]  else  if(consumeSplit  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  consumeSplit  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(consumeSplit  &&  arguments.hasMoreTokens())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(consumeSplit  &&  arguments.hasMoreTokens())  {	  else    if(consequentSplit    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  consumeSplit	18	None	replace
23	[BUG]  [BUGGY]  else  if(afterSplit  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  afterSplit  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(afterSplit  &&  arguments.hasMoreTokens())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(afterSplit  &&  arguments.hasMoreTokens())  {	  else    if(consequentSplit    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  afterSplit	18	None	replace
24	[BUG]  [BUGGY]  final  int  maximum  =  arguments.size()  -  1;  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  final  int  maximum  =  arguments.size()  -  1;  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  maximum  =  arguments.size()  -  1;	      final    int    maximum    =    arguments.size();    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
25	[BUG]  [BUGGY]  final  int  maximum  =  arguments.size()  -  2;  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  final  int  maximum  =  arguments.size()  -  2;  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  maximum  =  arguments.size()  -  2;	      final    int    maximum    =    arguments.size();    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
26	[BUG]  [BUGGY]  final  int  maximum  =  arguments.size()  +  1;  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  final  int  maximum  =  arguments.size()  +  1;  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	final  int  maximum  =  arguments.size()  +  1;	      final    int    maximum    =    arguments.size();    	non-compiled	[CE]  'else'  without  'if'	17	None	replace
27	[BUG]  [BUGGY]  commandLine.addValue(option,  options.nextToken());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.addValue(option,  options.nextToken());  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  options.nextToken());	      commandLine.addValue(option,    options.next());    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
28	[BUG]  [BUGGY]  commandLine.setValue(option,  options.next());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.setValue(option,  options.next());  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.setValue(option,  options.next());	      commandLine.addValue(option,    options.next());    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
29	[BUG]  [BUGGY]  commandLine.addValue(option,  token,  arguments.next());  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.addValue(option,  token,  arguments.next());  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  token,  arguments.next());	      commandLine.addValue(option,    token);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
30	[BUG]  [BUGGY]  commandLine.setValue(option,  token);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.setValue(option,  token);  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.setValue(option,  token);	      commandLine.addValue(option,    token);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
31	[BUG]  [BUGGY]  commandLine.addValue(option,  token,  true);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.addValue(option,  token,  true);  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  token,  true);	      commandLine.addValue(option,    token);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
32	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  arguments.size()  >  minimum)  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  arguments.size()  >  minimum)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  arguments.size()  >  minimum)  {	  else    if(subsequentSplit    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
33	[BUG]  [BUGGY]  else  if(initialSplit  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  initialSplit  [FE]              ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(initialSplit  &&  arguments.size()  >  maximum)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSplit  &&  arguments.size()  >  maximum)  {	  else    if(subsequentSplit    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	8	None	replace
34	[BUG]  [BUGGY]  commandLine.removeValue(option,  token);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.removeValue(option,  token);  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.removeValue(option,  token);	      commandLine.addValue(token,    option);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
35	[BUG]  [BUGGY]  commandLine.add(option,  token);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.add(option,  token);  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.add(option,  token);	      commandLine.addValue(token,    option);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
36	[BUG]  [BUGGY]  else  if(initialSplit  ||  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  initialSplit  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(initialSplit  ||  arguments.hasMoreTokens())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSplit  ||  arguments.hasMoreTokens())  {	  else    if(subsequentSeparator    ||    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	12	None	replace
37	[BUG]  [BUGGY]  else  if(currentSeparator  ||  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  currentSeparator  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(currentSeparator  ||  arguments.hasMoreTokens())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSeparator  ||  arguments.hasMoreTokens())  {	  else    if(subsequentSeparator    ||    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  currentSeparator	12	None	replace
38	[BUG]  [BUGGY]  else  if(initialSeparator  ||  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(initialSeparator  ||  arguments.hasMoreTokens())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  ||  arguments.hasMoreTokens())  {	  else    if(subsequentSeparator    ||    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
39	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  else  if(subsequentSplit  &&  argumentCount  >  1)  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  else  if(subsequentSplit  &&  argumentCount  >  1)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else    if(subsequentSplit    &&    argumentCount    >    1)    {    else  if(subsequentSplit  &&  argumentCount  >  1)  {	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
40	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  int  maximum  =  arguments.size();  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  int  maximum  =  arguments.size();  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else    if(subsequentSplit    &&    argumentCount    >    1)    {    final  int  maximum  =  arguments.size();	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
41	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  int  preferredSeparator  =  options.nextToken();  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  int  preferredSeparator  =  options.nextToken();  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else    if(subsequentSplit    &&    argumentCount    >    1)    {    final  int  preferredSeparator  =  options.nextToken();	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
42	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  int  initialSeparator  =  options.nextToken();  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  int  initialSeparator  =  options.nextToken();  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else    if(subsequentSplit    &&    argumentCount    >    1)    {    final  int  initialSeparator  =  options.nextToken();	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
43	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  int  initialSeparator  =  arguments.nextToken();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  int  initialSeparator  =  arguments.nextToken();  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else    if(subsequentSplit    &&    argumentCount    >    1)    {    final  int  initialSeparator  =  arguments.nextToken();	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
44	[BUG]  [BUGGY]  ArgumentImpl  resources  =  option.findResources(defaultValuesQuoted);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  ArgumentImpl  resources  =  option.findResources(defaultValuesQuoted);  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	ArgumentImpl  resources  =  option.findResources(defaultValuesQuoted);	      ArgumentImpl    resources    =    option.getResources();    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
45	[BUG]  [BUGGY]  else  if(currentSeparator  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  currentSeparator  [FE]    ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(currentSeparator  &&  argumentCount  >  1)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSeparator  &&  argumentCount  >  1)  {	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  currentSeparator	10	None	replace
46	[BUG]  [BUGGY]  commandLine.removeValue(token,  options.next());  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.removeValue(token,  options.next());  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.removeValue(token,  options.next());	      commandLine.addValue(token,    options.next());    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
47	[BUG]  [BUGGY]  commandLine.removeValue(token);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.removeValue(token);  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.removeValue(token);	      commandLine.addValue(token,    option);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
48	[BUG]  [BUGGY]  commandLine.addValue(token,  value);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.addValue(token,  value);  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(token,  value);	      commandLine.addValue(token,    option);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
49	[BUG]  [BUGGY]  commandLine.addValue(values,  option);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.addValue(values,  option);  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(values,  option);	      commandLine.addValue(token,    option);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
50	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  options.isEmpty())  {  [CE]  cannot  find  symbol  options  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  options.isEmpty())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  options.isEmpty())  {	  else    if(subsequentSplit    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  options	7	None	replace
51	[BUG]  [BUGGY]  else  if(initialSeparator  &&  arguments.isEmpty())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(initialSeparator  &&  arguments.isEmpty())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  arguments.isEmpty())  {	  else    if(subsequentSplit    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
52	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  options.hasMoreTokens())  {  [CE]  cannot  find  symbol  options  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  options.hasMoreTokens())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  options.hasMoreTokens())  {	  else    if(subsequentSplit    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  options	6	None	replace
53	[BUG]  [BUGGY]  else  if(currentSplit  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  currentSplit  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(currentSplit  &&  arguments.hasMoreTokens())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(currentSplit  &&  arguments.hasMoreTokens())  {	  else    if(subsequentSplit    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  currentSplit	6	None	replace
54	[BUG]  [BUGGY]  else  if(initialSeparator  &&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(initialSeparator  &&  arguments.size()  >  maximum)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  arguments.size()  >  maximum)  {	  else    if(subsequentSplit    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
55	[BUG]  [BUGGY]  commandLine.addValue(token,  option.next());  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.addValue(token,  option.next());  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(token,  option.next());	      commandLine.addValue(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
56	[BUG]  [BUGGY]  commandLine.addValue(values,  token);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.addValue(values,  token);  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(values,  token);	      commandLine.addValue(option,    token);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
57	[BUG]  [BUGGY]  commandLine.addValue(option,  token  +  1);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.addValue(option,  token  +  1);  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  token  +  1);	      commandLine.addValue(option,    token);    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
58	[BUG]  [BUGGY]  else  if(initialSeparator  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(initialSeparator  &&  arguments.hasMoreTokens())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator  &&  arguments.hasMoreTokens())  {	  else    if(subsequentSeparator    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
59	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  options.hasMoreTokens())  {  [CE]  cannot  find  symbol  options  [FE]              ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSeparator  &&  options.hasMoreTokens())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  options.hasMoreTokens())  {	  else    if(subsequentSeparator    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  options	13	None	replace
60	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.next();  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.next();  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else    if(subsequentSplit    &&    argumentCount    >    1)    {    final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.next();	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
61	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  Short>  commandLine  =  options.next();  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  Short>  commandLine  =  options.next();  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else    if(subsequentSplit    &&    argumentCount    >    1)    {    final  ComparisonFailure  <  Short>  commandLine  =  options.next();	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
62	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else    if(subsequentSplit    &&    argumentCount    >    1)    {    final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  option.getCommandLine();	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
63	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else    if(subsequentSplit    &&    argumentCount    >    1)    {    final  ComparisonFailure  <  ComparisonFailure>  commandLine  =  options.getCommandLine();	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
64	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(commandLine);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(commandLine);  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.getCommandLine(commandLine);	      CommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
65	[BUG]  [BUGGY]  commandLine.addValue(option,  options.next(),  token);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.addValue(option,  options.next(),  token);  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.addValue(option,  options.next(),  token);	      commandLine.addValue(option,    options.next());    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
66	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  option.hasArg())  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSeparator  &&  option.hasArg())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  option.hasArg())  {	  else    if(subsequentSeparator)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
67	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  option.hasOptionalArg())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSeparator  &&  option.hasOptionalArg())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  option.hasOptionalArg())  {	  else    if(subsequentSeparator)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
68	[BUG]  [BUGGY]  else  if(initialSeparator)  {  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(initialSeparator)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(initialSeparator)  {	  else    if(subsequentSeparator)    {    	non-compiled	[CE]  incompatible  types	11	None	replace
69	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  argumentCount  >  1)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]              ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSeparator  &&  argumentCount  >  1)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  argumentCount  >  1)  {	  else    if(subsequentSeparator)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	11	None	replace
70	[BUG]  [BUGGY]  else  if(subsequentSeparator  ||  arguments.nextToken())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSeparator  ||  arguments.nextToken())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  ||  arguments.nextToken())  {	  else    if(subsequentSeparator    ||    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
71	[BUG]  [BUGGY]  else  if(consequentSplit  &&  arguments.size()  >  minimum)  {  [CE]  cannot  find  symbol  consequentSplit  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(consequentSplit  &&  arguments.size()  >  minimum)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(consequentSplit  &&  arguments.size()  >  minimum)  {	  else    if(consequentSplit    &&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  consequentSplit	19	None	replace
72	[BUG]  [BUGGY]  else  if(proposedSplit  &&  argumentCount  >  1)  {  [CE]  cannot  find  symbol  proposedSplit  [FE]    ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(proposedSplit  &&  argumentCount  >  1)  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(proposedSplit  &&  argumentCount  >  1)  {	  else    if(subsequentSplit    &&    argumentCount    >    1)    {    	non-compiled	[CE]  cannot  find  symbol  proposedSplit	10	None	replace
73	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  String  argumentCount  =  options.get(defaultValues.size()  -  1);  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  String  argumentCount  =  options.get(defaultValues.size()  -  1);  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else    if(subsequentSplit    &&    argumentCount    >    1)    {    final  String  argumentCount  =  options.get(defaultValues.size()  -  1);	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
74	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  String  argumentCount  =  options.get(defaultValues.size());  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  String  argumentCount  =  options.get(defaultValues.size());  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else    if(subsequentSplit    &&    argumentCount    >    1)    {    final  String  argumentCount  =  options.get(defaultValues.size());	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
75	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  int  argumentCount  =  arguments.size();  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  argumentCount  >  1)  {  final  int  argumentCount  =  arguments.size();  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else    if(subsequentSplit    &&    argumentCount    >    1)    {    final  int  argumentCount  =  arguments.size();	  	non-compiled	[CE]  'else'  without  'if'	9	None	add
76	[BUG]  [BUGGY]  commandLine.removeValue(option,  options.next());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.removeValue(option,  options.next());  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.removeValue(option,  options.next());	      commandLine.addValue(option,    options.next());    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
77	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.removeCommandLine();  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  CommandLine  commandLine  =  option.removeCommandLine();  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	CommandLine  commandLine  =  option.removeCommandLine();	      CommandLine    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
78	[BUG]  [BUGGY]  else  if(consequentSeparator  &&  arguments.hasMoreTokens())  {  [CE]  cannot  find  symbol  consequentSeparator  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(consequentSeparator  &&  arguments.hasMoreTokens())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(consequentSeparator  &&  arguments.hasMoreTokens())  {	  else    if(consequentSplit    &&    arguments.hasMoreTokens())    {    	non-compiled	[CE]  cannot  find  symbol  consequentSeparator	18	None	replace
79	[BUG]  [BUGGY]  commandLine.removeValue(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  commandLine.removeValue(option,  arguments.next());  [BUGGY]    else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	commandLine.removeValue(option,  arguments.next());	      commandLine.addValue(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
80	[BUG]  [BUGGY]  else  if(consequentSplit  &&  arguments.isEmpty())  {  [CE]  cannot  find  symbol  consequentSplit  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(consequentSplit  &&  arguments.isEmpty())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(consequentSplit  &&  arguments.isEmpty())  {	  else    if(subsequentSplit    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  consequentSplit	7	None	replace
81	[BUG]  [BUGGY]  else  if(subsequentSplit  &&  argument.isEmpty())  {  [CE]  cannot  find  symbol  argument  [FE]            ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSplit  &&  argument.isEmpty())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSplit  &&  argument.isEmpty())  {	  else    if(subsequentSplit    &&    arguments.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  argument	7	None	replace
82	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  arguments.hasNext())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]        ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSeparator  &&  arguments.hasNext())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  arguments.hasNext())  {	  else    if(subsequentSeparator)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	11	None	replace
83	[BUG]  [BUGGY]  else  if(subsequentSeparator  &&  arguments.isEmpty())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }      [BUGGY]  else  if(subsequentSeparator  &&  arguments.isEmpty())  {  [BUGGY]    final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  &&  arguments.isEmpty())  {	  else    if(subsequentSeparator)    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
