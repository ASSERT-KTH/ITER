bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Argument  argument  =  commandLine.getValue(option);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  commandLine.getValue(option);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  commandLine.getValue(option);	  Argument    argument    =    commandLine.get(option);    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
2	[BUG]  [BUGGY]  Argument  argument  =  commandLine.get(option,  allValues);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  commandLine.get(option,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  commandLine.get(option,  allValues);	  Argument    argument    =    commandLine.get(option);    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
3	[BUG]  [BUGGY]  Argument  argument  =  commandLine.get(option.toString());  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  commandLine.get(option.toString());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  commandLine.get(option.toString());	  Argument    argument    =    commandLine.get(option);    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( ", "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  ||  allValues.equals( ", "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    if(!allValues.isEmpty()    ||    allValues.equals(   ",       "))    {    	compilable	  [FE]  AssertionFailedError  	3	1	replace
5	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( ", "))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( ", "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  ||  allValues.equals( ", "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    if(!allValues.isEmpty()    ||    allValues.equals(   ",       "))    {    	compilable	  [FE]  AssertionFailedError  	3	1	replace
6	[BUG]  [BUGGY]  if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( ", "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( ", "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( ", "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    if(!allValues.isEmpty()    ||    allValues.equals(   ",       "))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "n "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  ||  allValues.equals( "n "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    if(!allValues.isEmpty()    ||    allValues.equals(   ",       "))    {    	compilable	  [FE]  AssertionFailedError  	3	1	replace
8	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "n "))  {  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "n "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  ||  allValues.equals( "n "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    if(!allValues.isEmpty()    ||    allValues.equals(   ",       "))    {    	compilable	  [FE]  AssertionFailedError  	3	1	replace
9	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "[ "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  ||  allValues.equals( "[ "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    if(!allValues.isEmpty()    ||    allValues.equals(   ",       "))    {    	compilable	  [FE]  AssertionFailedError  	3	1	replace
10	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "[ "))  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "[ "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  ||  allValues.equals( "[ "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    if(!allValues.isEmpty()    ||    allValues.equals(   ",       "))    {    	compilable	  [FE]  AssertionFailedError  	3	1	replace
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals( "* ")||  allValues.equals( "* "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.equals( "* ")||  allValues.equals( "* "))  {	  if(allValues.equals(   "*   "))    {    	compilable	  [FE]  ComparisonFailure  	41	1	replace
12	[BUG]  [BUGGY]  if(allValues.equals( "* ")||  allValues.equals( "* "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals( "* ")||  allValues.equals( "* "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals( "* ")||  allValues.equals( "* "))  {	  if(allValues.equals(   "*   "))    {    	compilable	  [FE]  ComparisonFailure  	41	1	replace
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals( "* ")&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.equals( "* ")&&  arguments.hasNext())  {	  if(allValues.equals(   "*   "))    {    	compilable	  [FE]  ComparisonFailure  	41	1	replace
14	[BUG]  [BUGGY]  if(allValues.equals( "* ")&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals( "* ")&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals( "* ")&&  arguments.hasNext())  {	  if(allValues.equals(   "*   "))    {    	compilable	  [FE]  ComparisonFailure  	41	1	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals( "* "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals( "* "))  {	  if(allValues.equals(   "*   "))    {    	compilable	  [FE]  AssertionFailedError  	41	1	replace
16	[BUG]  [BUGGY]  if(!allValues.equals( "* "))  {  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals( "* "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals( "* "))  {	  if(allValues.equals(   "*   "))    {    	compilable	  [FE]  AssertionFailedError  	41	1	replace
17	[BUG]  [BUGGY]  if(!allValues.equals(   "-   "))  {  if(!allValues.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(   "-   "))  {  if(!allValues.equals( "-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "-   "))    {    if(!allValues.equals( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
18	[BUG]  [BUGGY]  if(!allValues.equals(   "-   "))  {  if(!allValues.equals( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(   "-   "))  {  if(!allValues.equals( ".-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "-   "))    {    if(!allValues.equals( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
19	[BUG]  [BUGGY]  if(!allValues.equals(   "-   "))  {  if(!allValues.equals( ",-   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(   "-   "))  {  if(!allValues.equals( ",-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "-   "))    {    if(!allValues.equals( ",-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
20	[BUG]  [BUGGY]  if(!allValues.equals(   "-   "))  {  If(!allValues.equals( "-   "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(   "-   "))  {  If(!allValues.equals( "-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "-   "))    {    If(!allValues.equals( "-   "))  {	  	non-compiled	[CE]  	34	None	add
21	[BUG]  [BUGGY]  Argument  argument  =  resources.get(option,  allValues);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.get(option,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.get(option,  allValues);	  Argument    argument    =    resources.get(option);    	non-compiled	[CE]  'else'  without  'if'	47	None	replace
22	[BUG]  [BUGGY]  Argument  argument  =  resources.get(argumentCount);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.get(argumentCount);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.get(argumentCount);	  Argument    argument    =    resources.get(option);    	non-compiled	[CE]  'else'  without  'if'	47	None	replace
23	[BUG]  [BUGGY]  Argument  argument  =  resources.get(option.toString());  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.get(option.toString());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.get(option.toString());	  Argument    argument    =    resources.get(option);    	non-compiled	[CE]  'else'  without  'if'	47	None	replace
24	[BUG]  [BUGGY]  if(option.looksLikeOption(allValues)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.looksLikeOption(allValues)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.looksLikeOption(allValues)&&  arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValues)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
25	[BUG]  [BUGGY]  if(option.hasArg()  &&  commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasArg()  &&  commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasArg()  &&  commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValues)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
26	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues  ==  null  ||  allValues.equals( "* "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues  ==  null  ||  allValues.equals( "* "))  {	  if(allValues    ==    null    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	99	1	replace
27	[BUG]  [BUGGY]  if(allValues  ==  null  ||  allValues.equals( "* "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues  ==  null  ||  allValues.equals( "* "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues  ==  null  ||  allValues.equals( "* "))  {	  if(allValues    ==    null    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	99	1	replace
28	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues  ==  null  ||  allValues.equals( "- "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues  ==  null  ||  allValues.equals( "- "))  {	  if(allValues    ==    null    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	99	1	replace
29	[BUG]  [BUGGY]  if(allValues  ==  null  ||  allValues.equals( "- "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues  ==  null  ||  allValues.equals( "- "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues  ==  null  ||  allValues.equals( "- "))  {	  if(allValues    ==    null    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	99	1	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!commandLine.looksLikeOption(allValuesQuoted))  {	  if(!allValues.equals(       "       "))    {    if(!allValues.equals(       "       "))    {    	compilable	  [FE]  AssertionFailedError  	53	1	replace
31	[BUG]  [BUGGY]  if(!commandLine.looksLikeOption(allValuesQuoted))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!commandLine.looksLikeOption(allValuesQuoted))  {	  if(!allValues.equals(       "       "))    {    if(!allValues.equals(       "       "))    {    	compilable	  [FE]  AssertionFailedError  	53	1	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.contains( "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.contains( "   "))  {	  if(!allValues.equals(       "       "))    {    if(!allValues.equals(       "       "))    {    	compilable	  [FE]  AssertionFailedError  	53	1	replace
33	[BUG]  [BUGGY]  if(!allValues.contains( "   "))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.contains( "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.contains( "   "))  {	  if(!allValues.equals(       "       "))    {    if(!allValues.equals(       "       "))    {    	compilable	  [FE]  AssertionFailedError  	53	1	replace
34	[BUG]  [BUGGY]  if(!allValues.isEmpty())  {  if(!allValues.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty())  {  if(!allValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty())    {    if(!allValues.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
35	[BUG]  [BUGGY]  if(!allValues.isEmpty())  {  If(!allValues.isEmpty())  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty())  {  If(!allValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty())    {    If(!allValues.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	32	None	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues!=  null  ||  allValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues!=  null  ||  allValues.isEmpty())  {	  if(allValues.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	45	1	replace
37	[BUG]  [BUGGY]  if(allValues!=  null  ||  allValues.isEmpty())  {  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues!=  null  ||  allValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues!=  null  ||  allValues.isEmpty())  {	  if(allValues.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	45	1	replace
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues  ==  null  ||  allValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues  ==  null  ||  allValues.isEmpty())  {	  if(allValues.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	45	1	replace
39	[BUG]  [BUGGY]  if(allValues  ==  null  ||  allValues.isEmpty())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues  ==  null  ||  allValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues  ==  null  ||  allValues.isEmpty())  {	  if(allValues.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	45	1	replace
40	[BUG]  [BUGGY]  if(allValues.isEmpty()  ||  arguments.isEmpty())  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty()  ||  arguments.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty()  ||  arguments.isEmpty())  {	  if(allValues.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
41	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  options.getValue()  :  null;  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.hasValue()?  options.getValue()  :  null;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.hasValue()?  options.getValue()  :  null;	  Validator    validator    =    option.hasValue()?    option.getValue()    :    null;    	non-compiled	[CE]  'else'  without  'if'	118	None	replace
42	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  option.getRawValue()  :  null;  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.hasValue()?  option.getRawValue()  :  null;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.hasValue()?  option.getRawValue()  :  null;	  Validator    validator    =    option.hasValue()?    option.getValue()    :    null;    	non-compiled	[CE]  'else'  without  'if'	118	None	replace
43	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  option.getKey()  :  null;  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.hasValue()?  option.getKey()  :  null;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.hasValue()?  option.getKey()  :  null;	  Validator    validator    =    option.hasValue()?    option.getValue()    :    null;    	non-compiled	[CE]  'else'  without  'if'	118	None	replace
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.equals(allValues)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(option.equals(allValues)||  arguments.hasNext())  {	  if(option.equals(allValues))    {    	compilable	  [FE]  ComparisonFailure  	50	1	replace
45	[BUG]  [BUGGY]  if(option.equals(allValues)||  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.equals(allValues)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.equals(allValues)||  arguments.hasNext())  {	  if(option.equals(allValues))    {    	compilable	  [FE]  ComparisonFailure  	50	1	replace
46	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  &&  allValues.equals( "-   "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	82	1	replace
47	[BUG]  [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "-   "))  {  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  &&  allValues.equals( "-   "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	82	1	replace
48	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty()  ||  allValues.equals( "- "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.isEmpty()  ||  allValues.equals( "- "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	82	1	replace
49	[BUG]  [BUGGY]  if(allValues.isEmpty()  ||  allValues.equals( "- "))  {  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty()  ||  allValues.equals( "- "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty()  ||  allValues.equals( "- "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	82	1	replace
50	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultValuesQuoted);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  options.getOption(defaultValuesQuoted);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  options.getOption(defaultValuesQuoted);	  Option    option    =    option.getOption(defaultValuesQuoted);    	non-compiled	[CE]  'else'  without  'if'	130	None	replace
51	[BUG]  [BUGGY]  Option  option  =  option.getOption(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  option.getOption(allValuesQuoted);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(allValuesQuoted);	  Option    option    =    option.getOption(defaultValuesQuoted);    	non-compiled	[CE]  'else'  without  'if'	130	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  options.getOption(allValuesQuoted);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  options.getOption(allValuesQuoted);	  Option    option    =    options.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
53	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultValues);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  options.getOption(defaultValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  options.getOption(defaultValues);	  Option    option    =    options.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
54	[BUG]  [BUGGY]  if(arguments.hasNext()  ||  option.hasArg())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(arguments.hasNext()  ||  option.hasArg())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(arguments.hasNext()  ||  option.hasArg())  {	  if(option.hasArg()    ||    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
55	[BUG]  [BUGGY]  if(arguments.hasNext()  ||  option.hasArgumentCount())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(arguments.hasNext()  ||  option.hasArgumentCount())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(arguments.hasNext()  ||  option.hasArgumentCount())  {	  if(option.hasArg()    ||    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
56	[BUG]  [BUGGY]  if(arguments.hasArg()  ||  option.hasNext())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(arguments.hasArg()  ||  option.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(arguments.hasArg()  ||  option.hasNext())  {	  if(option.hasArg()    ||    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
57	[BUG]  [BUGGY]  if(option.hasArg()  &&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasArg()  &&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasArg()  &&  arguments.hasNext())  {	  if(option.hasArg()    ||    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
58	[BUG]  [BUGGY]  Validator  validator  =  options.getOption(allValues,  argumentCount);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  options.getOption(allValues,  argumentCount);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  options.getOption(allValues,  argumentCount);	  Validator    validator    =    options.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	67	None	replace
59	[BUG]  [BUGGY]  Validator  validator  =  options.getOption(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  options.getOption(allValuesQuoted);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  options.getOption(allValuesQuoted);	  Validator    validator    =    options.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	67	None	replace
60	[BUG]  [BUGGY]  Argument  option  =  resources.getOption(commandLine);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  option  =  resources.getOption(commandLine);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  resources.getOption(commandLine);	  Argument    option    =    options.getOption(commandLine);    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
61	[BUG]  [BUGGY]  Argument  option  =  options.getOption(commandLine,  allValues);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  option  =  options.getOption(commandLine,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(commandLine,  allValues);	  Argument    option    =    options.getOption(commandLine);    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
62	[BUG]  [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals(   "     "))  {  if(!allValues.isEmpty()  &&  allValues.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals(   "     "))  {  if(!allValues.isEmpty()  &&  allValues.equals(   "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    &&    allValues.equals(   "       "))    {    if(!allValues.isEmpty()  &&  allValues.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
63	[BUG]  [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals(   "     "))  {  if(!allValues.isEmpty()  &&  allValues.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals(   "     "))  {  if(!allValues.isEmpty()  &&  allValues.equals( ".   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    &&    allValues.equals(   "       "))    {    if(!allValues.isEmpty()  &&  allValues.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
64	[BUG]  [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals(   "     "))  {  if(!allValues.isEmpty()  &&  allValues.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals(   "     "))  {  if(!allValues.isEmpty()  &&  allValues.equals( ",   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    &&    allValues.equals(   "       "))    {    if(!allValues.isEmpty()  &&  allValues.equals( ",   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
65	[BUG]  [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals(   "     "))  {  if(!allValues.isEmpty()  &&  allValues.equals(? "   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals(   "     "))  {  if(!allValues.isEmpty()  &&  allValues.equals(? "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    &&    allValues.equals(   "       "))    {    if(!allValues.isEmpty()  &&  allValues.equals(? "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
66	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  allValues);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  options.getOption(option,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  options.getOption(option,  allValues);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
67	[BUG]  [BUGGY]  Option  option  =  options.getOption(commandLine);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  options.getOption(commandLine);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  options.getOption(commandLine);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option!=  null)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(option!=  null)  {	  if(commandLine!=    null)    {    	compilable	  [FE]  AssertionFailedError  	122	1	replace
69	[BUG]  [BUGGY]  if(option!=  null)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option!=  null)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option!=  null)  {	  if(commandLine!=    null)    {    	compilable	  [FE]  AssertionFailedError  	122	1	replace
70	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(option  ==  null)  {	  if(commandLine!=    null)    {    	compilable	  [FE]  ComparisonFailure  	122	1	replace
71	[BUG]  [BUGGY]  if(option  ==  null)  {  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option  ==  null)  {	  if(commandLine!=    null)    {    	compilable	  [FE]  ComparisonFailure  	122	1	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(arguments!=  null)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(arguments!=  null)  {	  if(commandLine!=    null)    {    	compilable	  [FE]  AssertionFailedError  	122	1	replace
73	[BUG]  [BUGGY]  if(arguments!=  null)  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(arguments!=  null)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(arguments!=  null)  {	  if(commandLine!=    null)    {    	compilable	  [FE]  AssertionFailedError  	122	1	replace
74	[BUG]  [BUGGY]  Option  option  =  option.getOption(DEFAULT_CONSUME_REMAINING,  allValues);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  option.getOption(DEFAULT_CONSUME_REMAINING,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(DEFAULT_CONSUME_REMAINING,  allValues);	  Option    option    =    option.getOption(ALL_VALUES,    allValues);    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
75	[BUG]  [BUGGY]  Option  option  =  option.getOption(ALL_VALUES,  allValues,  consumeRemaining);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  option.getOption(ALL_VALUES,  allValues,  consumeRemaining);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(ALL_VALUES,  allValues,  consumeRemaining);	  Option    option    =    option.getOption(ALL_VALUES,    allValues);    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
76	[BUG]  [BUGGY]  Option  option  =  options.getOption(ALL_VALUES,  allValues);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  options.getOption(ALL_VALUES,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  options.getOption(ALL_VALUES,  allValues);	  Option    option    =    option.getOption(ALL_VALUES,    allValues);    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
77	[BUG]  [BUGGY]  if(option.equals(allValues))  {  if(option.equals(allValues))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.equals(allValues))  {  if(option.equals(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.equals(allValues))    {    if(option.equals(allValues))  {	  	non-compiled	[CE]  illegal  start  of  expression	49	None	add
78	[BUG]  [BUGGY]  if(option.equals(allValues))  {  If(option.equals(allValues))  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.equals(allValues))  {  If(option.equals(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.equals(allValues))    {    If(option.equals(allValues))  {	  	non-compiled	[CE]  ';'  expected	49	None	add
79	[BUG]  [BUGGY]  if(allValues.equals(option)||  arguments.hasNext())  {  if(allValues.equals(option)||  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(option)||  arguments.hasNext())  {  if(allValues.equals(option)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(option)||    arguments.hasNext())    {    if(allValues.equals(option)||  arguments.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
80	[BUG]  [BUGGY]  if(allValues.equals(option)||  arguments.hasNext())  {  If(allValues.equals(option)||  arguments.hasNext())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(option)||  arguments.hasNext())  {  If(allValues.equals(option)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(option)||    arguments.hasNext())    {    If(allValues.equals(option)||  arguments.hasNext())  {	  	non-compiled	[CE]  ';'  expected	51	None	add
81	[BUG]  [BUGGY]  if(commandLine.hasArg())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasArg())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasArg())  {	  if(option.hasArg())    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
82	[BUG]  [BUGGY]  if(arguments.hasArg())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(arguments.hasArg())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(arguments.hasArg())  {	  if(option.hasArg())    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
83	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.previous()  :  1;  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.previous()  :  1;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.previous()  :  1;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.previous()    :    1;    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
84	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine.looksLikeOption(allValuesQUoted))    {    	compilable	  [FE]  ComparisonFailure  	107	1	replace
85	[BUG]  [BUGGY]  if(arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine.looksLikeOption(allValuesQUoted))    {    	compilable	  [FE]  ComparisonFailure  	107	1	replace
86	[BUG]  [BUGGY]  if(commandLine.hasValue(option))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasValue(option))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasValue(option))  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine.looksLikeOption(allValuesQUoted))    {    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
87	[BUG]  [BUGGY]  if(!allValues.contains(option))  {  [CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.contains(option))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.contains(option))  {	  if(!allValues.equals(commandLine))    {    	non-compiled	[CE]  method  contains  in  class  String  cannot  be  applied  to  given  types;	88	None	replace
88	[BUG]  [BUGGY]  if(allValues.isEmpty())  {  If(allValues.equals(option))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty())  {  If(allValues.equals(option))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty())  {  If(allValues.equals(option))  {	  if(allValues.equals(option))    {    If(allValues.equals(option))    {    	non-compiled	[CE]  ';'  expected	14	None	replace
89	[BUG]  [BUGGY]  if(allValues.isEmpty())  {  if(allValues.equals(option))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty())  {  if(allValues.equals(option))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty())  {  if(allValues.equals(option))  {	  if(allValues.equals(option))    {    If(allValues.equals(option))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
90	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValues)&&    arguments.hasNext())    {    if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
91	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  If(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  If(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValues)&&    arguments.hasNext())    {    If(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {	  	non-compiled	[CE]  ';'  expected	19	None	add
92	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  if(commandLine.looksLikeOption(allValues)&&  argumentCount.hasNext())  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  if(commandLine.looksLikeOption(allValues)&&  argumentCount.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValues)&&    arguments.hasNext())    {    if(commandLine.looksLikeOption(allValues)&&  argumentCount.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
93	[BUG]  [BUGGY]  if(option.hasArg())  {  if(!allValues.equals(option))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasArg())  {  if(!allValues.equals(option))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasArg())  {  if(!allValues.equals(option))  {	  if(!allValues.equals(option))    {    if(!allValues.equals(option))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
94	[BUG]  [BUGGY]  if(!allValues.isEmpty())  {  if(!allValues.equals(option))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty())  {  if(!allValues.equals(option))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty())  {  if(!allValues.equals(option))  {	  if(!allValues.equals(option))    {    if(!allValues.equals(option))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
95	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted))  {  if(!allValues.equals(option))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted))  {  if(!allValues.equals(option))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValuesQuoted))  {  if(!allValues.equals(option))  {	  if(!allValues.equals(option))    {    if(!allValues.equals(option))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
96	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  &&  arguments.hasNext())  {	  if(!allValues.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	33	1	replace
97	[BUG]  [BUGGY]  if(!allValues.isEmpty()  &&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  &&  arguments.hasNext())  {	  if(!allValues.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	33	1	replace
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  ||  arguments.hasNext())  {	  if(!allValues.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	33	1	replace
99	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  arguments.hasNext())  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  ||  arguments.hasNext())  {	  if(!allValues.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	33	1	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues!=  null  ||!allValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues!=  null  ||!allValues.isEmpty())  {	  if(!allValues.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	33	1	replace
101	[BUG]  [BUGGY]  if(allValues!=  null  ||!allValues.isEmpty())  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues!=  null  ||!allValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues!=  null  ||!allValues.isEmpty())  {	  if(!allValues.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	33	1	replace
102	[BUG]  [BUGGY]  Argument  argument  =  option.getOption(option,  allValues.next());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  option.getOption(option,  allValues.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.getOption(option,  allValues.next());	  Argument    argument    =    option.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	72	None	replace
103	[BUG]  [BUGGY]  Argument  argument  =  option.getOption(allValues,  option.next());  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  option.getOption(allValues,  option.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.getOption(allValues,  option.next());	  Argument    argument    =    option.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	72	None	replace
104	[BUG]  [BUGGY]  Argument  argument  =  option.getOption(option,  arguments.next(),  allValues);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  option.getOption(option,  arguments.next(),  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.getOption(option,  arguments.next(),  allValues);	  Argument    argument    =    option.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	72	None	replace
105	[BUG]  [BUGGY]  if(allValues.equals(   "*   "))  {  if(allValues.equals(   "*   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(   "*   "))  {  if(allValues.equals(   "*   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "*   "))    {    if(allValues.equals(   "*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
106	[BUG]  [BUGGY]  if(allValues.equals(   "*   "))  {  if(allValues.equals( ".*   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(   "*   "))  {  if(allValues.equals( ".*   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "*   "))    {    if(allValues.equals( ".*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
107	[BUG]  [BUGGY]  if(allValues.equals(   "*   "))  {  if(allValues.equals( ",*   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(   "*   "))  {  if(allValues.equals( ",*   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "*   "))    {    if(allValues.equals( ",*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
108	[BUG]  [BUGGY]  if(allValues.equals(   "*   "))  {  If(allValues.equals(   "*   "))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(   "*   "))  {  If(allValues.equals(   "*   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "*   "))    {    If(allValues.equals(   "*   "))  {	  	non-compiled	[CE]  	40	None	add
109	[BUG]  [BUGGY]  Option  option  =  commandLine.getOption(option);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  commandLine.getOption(option);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  commandLine.getOption(option);	  Option    option    =    option.getOption(commandLine);    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
110	[BUG]  [BUGGY]  option  =  option.getOption(consumeRemaining);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  option  =  option.getOption(consumeRemaining);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	option  =  option.getOption(consumeRemaining);	  Option    option    =    option.getOption(commandLine);    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
111	[BUG]  [BUGGY]  Option  option  =  resourceHelper.getOption(commandLine);  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  resourceHelper.getOption(commandLine);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  resourceHelper.getOption(commandLine);	  Option    option    =    option.getOption(commandLine);    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
112	[BUG]  [BUGGY]  if(allValues!=  null  ||  allValues.equals(   "   "))  {  if(allValues!=  null  ||  allValues.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues!=  null  ||  allValues.equals(   "   "))  {  if(allValues!=  null  ||  allValues.equals(   "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues!=    null    ||    allValues.equals(   "   "))    {    if(allValues!=  null  ||  allValues.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
113	[BUG]  [BUGGY]  if(allValues!=  null  ||  allValues.equals(   "   "))  {  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues!=  null  ||  allValues.equals(   "   "))  {  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues!=    null    ||    allValues.equals(   "   "))    {    if(allValues  ==  null  ||  allValues.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
114	[BUG]  [BUGGY]  if(allValues!=  null  ||  allValues.equals(   "   "))  {  if(allValues!=  null  ||  allValues.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues!=  null  ||  allValues.equals(   "   "))  {  if(allValues!=  null  ||  allValues.equals( ".   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues!=    null    ||    allValues.equals(   "   "))    {    if(allValues!=  null  ||  allValues.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
115	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine!=  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(commandLine!=  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  AssertionFailedError  	92	1	replace
116	[BUG]  [BUGGY]  if(commandLine!=  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine!=  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine!=  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  AssertionFailedError  	92	1	replace
117	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(option  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	92	1	replace
118	[BUG]  [BUGGY]  if(option  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	92	1	replace
119	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(option  ==  null  ||  commandLine.looksLikeOption(allValues))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	92	1	replace
120	[BUG]  [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValues))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option  ==  null  ||  commandLine.looksLikeOption(allValues))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	92	1	replace
121	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(commandLine  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	92	1	replace
122	[BUG]  [BUGGY]  if(commandLine  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	92	1	replace
123	[BUG]  [BUGGY]  Option  option  =  options.getOption(ALL_VALUES,  ALL_VALUES);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  options.getOption(ALL_VALUES,  ALL_VALUES);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  options.getOption(ALL_VALUES,  ALL_VALUES);	  Option    option    =    options.getOption(ALL_VALUES);    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
124	[BUG]  [BUGGY]  Option  option  =  option.getOption(allValues,  arguments);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  option.getOption(allValues,  arguments);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(allValues,  arguments);	  Option    option    =    option.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
125	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.previous()  :  0;  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.previous()  :  0;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.previous()  :  0;	  int    consumeRemaining    =    arguments.size()    >    maximum?    argumentCount.previous()    :    0;    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
126	[BUG]  [BUGGY]  Argument  argument  =  option.removeValue(allValues);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  option.removeValue(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.removeValue(allValues);	  Argument    argument    =    option.next();    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
127	[BUG]  [BUGGY]  Argument  argument  =  option.getArgument();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  option.getArgument();  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.getArgument();	  Argument    argument    =    option.next();    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
128	[BUG]  [BUGGY]  Argument  argument  =  option.getValue(allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  option.getValue(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.getValue(allValues);	  Argument    argument    =    option.next();    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
129	[BUG]  [BUGGY]  if(!allValues.equals(option)&&  arguments.hasNext())  {  if(!allValues.equals(option)&&  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(option)&&  arguments.hasNext())  {  if(!allValues.equals(option)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(option)&&    arguments.hasNext())    {    if(!allValues.equals(option)&&  arguments.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
130	[BUG]  [BUGGY]  if(!allValues.equals(option)&&  arguments.hasNext())  {  If(!allValues.equals(option)&&  arguments.hasNext())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(option)&&  arguments.hasNext())  {  If(!allValues.equals(option)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(option)&&    arguments.hasNext())    {    If(!allValues.equals(option)&&  arguments.hasNext())  {	  	non-compiled	[CE]  ';'  expected	85	None	add
131	[BUG]  [BUGGY]  if(!allValues.equals(option)&&  arguments.hasNext())  {  if(!allValues.equals(option)&&  argument.hasNext())  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(option)&&  arguments.hasNext())  {  if(!allValues.equals(option)&&  argument.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(option)&&    arguments.hasNext())    {    if(!allValues.equals(option)&&  argument.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
132	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues!=  null  &&  allValues.equals( "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues!=  null  &&  allValues.equals( "   "))  {	  if(allValues!=    null    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	101	1	replace
133	[BUG]  [BUGGY]  if(allValues!=  null  &&  allValues.equals( "   "))  {  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues!=  null  &&  allValues.equals( "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues!=  null  &&  allValues.equals( "   "))  {	  if(allValues!=    null    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	101	1	replace
134	[BUG]  [BUGGY]  Argument  option  =  options.getOption(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  option  =  options.getOption(allValuesQuoted);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(allValuesQuoted);	  Argument    option    =    options.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
135	[BUG]  [BUGGY]  if(allValues.size()  >  maximum)  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.size()  >  maximum)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.size()  >  maximum)  {	  if(allValues.equals(       "       "))    {    if(allValues.equals(   ".       "))    {    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
136	[BUG]  [BUGGY]  Argument  argument  =  arguments.next(),  allValues,  consumeRemaining);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  arguments.next(),  allValues,  consumeRemaining);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.next(),  allValues,  consumeRemaining);	  Argument    argument    =    arguments.next(),    allValues);    	non-compiled	[CE]  ';'  expected	62	None	replace
137	[BUG]  [BUGGY]  Argument  argument  =  options.next(),  allValues);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.next(),  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.next(),  allValues);	  Argument    argument    =    arguments.next(),    allValues);    	non-compiled	[CE]  ';'  expected	62	None	replace
138	[BUG]  [BUGGY]  Argument  argument  =  arguments.next(),  allValues,  commandLine);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  arguments.next(),  allValues,  commandLine);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.next(),  allValues,  commandLine);	  Argument    argument    =    arguments.next(),    allValues);    	non-compiled	[CE]  ';'  expected	62	None	replace
139	[BUG]  [BUGGY]  Argument  argument  =  arguments.next(),  allValues,  description);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  arguments.next(),  allValues,  description);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.next(),  allValues,  description);	  Argument    argument    =    arguments.next(),    allValues);    	non-compiled	[CE]  ';'  expected	62	None	replace
140	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals( "- ")||  allValues.equals( "- "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.equals( "- ")||  allValues.equals( "- "))  {	  if(allValues.equals(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	43	1	replace
141	[BUG]  [BUGGY]  if(allValues.equals( "- ")||  allValues.equals( "- "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals( "- ")||  allValues.equals( "- "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals( "- ")||  allValues.equals( "- "))  {	  if(allValues.equals(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	43	1	replace
142	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals( "- ")&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.equals( "- ")&&  arguments.hasNext())  {	  if(allValues.equals(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	43	1	replace
143	[BUG]  [BUGGY]  if(allValues.equals( "- ")&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals( "- ")&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals( "- ")&&  arguments.hasNext())  {	  if(allValues.equals(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	43	1	replace
144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals( "   ")&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals( "   ")&&  arguments.hasNext())  {	  if(!allValues.equals(   "   ")||    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	96	1	replace
145	[BUG]  [BUGGY]  if(!allValues.equals( "   ")&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals( "   ")&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals( "   ")&&  arguments.hasNext())  {	  if(!allValues.equals(   "   ")||    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	96	1	replace
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals( "* ")||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals( "* ")||  arguments.hasNext())  {	  if(!allValues.equals(   "   ")||    arguments.hasNext())    {    	compilable	  [FE]  AssertionFailedError  	96	1	replace
147	[BUG]  [BUGGY]  if(!allValues.equals( "* ")||  arguments.hasNext())  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals( "* ")||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals( "* ")||  arguments.hasNext())  {	  if(!allValues.equals(   "   ")||    arguments.hasNext())    {    	compilable	  [FE]  AssertionFailedError  	96	1	replace
148	[BUG]  [BUGGY]  if(!allValues.equals(   "   ")||  arguments.hasNext())  {  if(!allValues.equals(   "   ")||  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(   "   ")||  arguments.hasNext())  {  if(!allValues.equals(   "   ")||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "   ")||    arguments.hasNext())    {    if(!allValues.equals(   "   ")||  arguments.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
149	[BUG]  [BUGGY]  if(!allValues.equals(   "   ")||  arguments.hasNext())  {  if(!allValues.equals( ".   ")||  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(   "   ")||  arguments.hasNext())  {  if(!allValues.equals( ".   ")||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "   ")||    arguments.hasNext())    {    if(!allValues.equals( ".   ")||  arguments.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
150	[BUG]  [BUGGY]  if(!allValues.equals(   "   ")||  arguments.hasNext())  {  If(!allValues.equals(   "   ")||  arguments.hasNext())  {  [CE]  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(   "   ")||  arguments.hasNext())  {  If(!allValues.equals(   "   ")||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "   ")||    arguments.hasNext())    {    If(!allValues.equals(   "   ")||  arguments.hasNext())  {	  	non-compiled	[CE]  	95	None	add
151	[BUG]  [BUGGY]  if(!allValues.equals(   "   ")||  arguments.hasNext())  {  if(!allValues.equals( ",   ")||  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(   "   ")||  arguments.hasNext())  {  if(!allValues.equals( ",   ")||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "   ")||    arguments.hasNext())    {    if(!allValues.equals( ",   ")||  arguments.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	95	None	add
152	[BUG]  [BUGGY]  if(!option.equals(allValues))  {  if(!option.equals(allValues))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!option.equals(allValues))  {  if(!option.equals(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!option.equals(allValues))    {    if(!option.equals(allValues))  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
153	[BUG]  [BUGGY]  if(!option.equals(allValues))  {  If(!option.equals(allValues))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!option.equals(allValues))  {  If(!option.equals(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!option.equals(allValues))    {    If(!option.equals(allValues))  {	  	non-compiled	[CE]  ';'  expected	111	None	add
154	[BUG]  [BUGGY]  Argument  argument  =  options.next(),  allValues;  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.next(),  allValues;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.next(),  allValues;	  Argument    argument    =    arguments.next(),    allValues;    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
155	[BUG]  [BUGGY]  Argument  argument  =  arguments.get(argumentCount).next(),  allValues;  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  arguments.get(argumentCount).next(),  allValues;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.get(argumentCount).next(),  allValues;	  Argument    argument    =    arguments.next(),    allValues;    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
156	[BUG]  [BUGGY]  Argument  argument  =  arguments.next(),  allValues,  consumeRemaining;  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  arguments.next(),  allValues,  consumeRemaining;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.next(),  allValues,  consumeRemaining;	  Argument    argument    =    arguments.next(),    allValues;    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
157	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "__ "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  &&  allValues.equals( "__ "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "_   "))    {    	compilable	  [FE]  ComparisonFailure  	84	1	replace
158	[BUG]  [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "__ "))  {  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "__ "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  &&  allValues.equals( "__ "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "_   "))    {    	compilable	  [FE]  ComparisonFailure  	84	1	replace
159	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "_ "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  &&  allValues.equals( "_ "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "_   "))    {    	compilable	  [FE]  ComparisonFailure  	84	1	replace
160	[BUG]  [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "_ "))  {  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "_ "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  &&  allValues.equals( "_ "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "_   "))    {    	compilable	  [FE]  ComparisonFailure  	84	1	replace
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "__ "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  ||  allValues.equals( "__ "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "_   "))    {    	compilable	  [FE]  AssertionFailedError  	84	1	replace
162	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "__ "))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "__ "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  ||  allValues.equals( "__ "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "_   "))    {    	compilable	  [FE]  AssertionFailedError  	84	1	replace
163	[BUG]  [BUGGY]  if(commandLine!=  null)  {  if(commandLine!=  null)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine!=  null)  {  if(commandLine!=  null)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine!=    null)    {    if(commandLine!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
164	[BUG]  [BUGGY]  if(commandLine!=  null)  {  if(commandLine  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine!=  null)  {  if(commandLine  ==  null)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine!=    null)    {    if(commandLine  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
165	[BUG]  [BUGGY]  if(commandLine!=  null)  {  if(commandLine  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine!=  null)  {  if(commandLine  >=  null)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine!=    null)    {    if(commandLine  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
166	[BUG]  [BUGGY]  if(commandLine!=  null)  {  If(commandLine!=  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine!=  null)  {  If(commandLine!=  null)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine!=    null)    {    If(commandLine!=  null)  {	  	non-compiled	[CE]  ';'  expected	121	None	add
167	[BUG]  [BUGGY]  if(commandLine!=  null)  {  if(commandLine  >>  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine!=  null)  {  if(commandLine  >>  null)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine!=    null)    {    if(commandLine  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	121	None	add
168	[BUG]  [BUGGY]  if(!allValues.equals(   "n   "))  {  if(!allValues.equals(   "n   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(   "n   "))  {  if(!allValues.equals(   "n   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "n   "))    {    if(!allValues.equals(   "n   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
169	[BUG]  [BUGGY]  if(!allValues.equals(   "n   "))  {  if(!allValues.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(   "n   "))  {  if(!allValues.equals( ".   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "n   "))    {    if(!allValues.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
170	[BUG]  [BUGGY]  if(!allValues.equals(   "n   "))  {  if(!allValues.equals( ".n   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(   "n   "))  {  if(!allValues.equals( ".n   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "n   "))    {    if(!allValues.equals( ".n   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
171	[BUG]  [BUGGY]  if(!allValues.equals(   "n   "))  {  if(!allValues.equals( ",n   "))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(   "n   "))  {  if(!allValues.equals( ",n   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "n   "))    {    if(!allValues.equals( ",n   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	125	None	add
172	[BUG]  [BUGGY]  Argument  argument  =  resources.getOption(option,  allValues);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.getOption(option,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.getOption(option,  allValues);	  Argument    argument    =    resources.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	115	None	replace
173	[BUG]  [BUGGY]  Argument  argument  =  resources.getOption(allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.getOption(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.getOption(allValues);	  Argument    argument    =    resources.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	115	None	replace
174	[BUG]  [BUGGY]  Argument  argument  =  resources.getOption(option,  arguments);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.getOption(option,  arguments);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.getOption(option,  arguments);	  Argument    argument    =    resources.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	115	None	replace
175	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(arguments.equals(option)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(arguments.equals(option)||  arguments.hasNext())  {	  if(allValues.equals(option)||    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	52	1	replace
176	[BUG]  [BUGGY]  if(arguments.equals(option)||  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(arguments.equals(option)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(arguments.equals(option)||  arguments.hasNext())  {	  if(allValues.equals(option)||    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	52	1	replace
177	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(option)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.equals(option)&&  arguments.hasNext())  {	  if(allValues.equals(option)||    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	52	1	replace
178	[BUG]  [BUGGY]  if(allValues.equals(option)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(option)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(option)&&  arguments.hasNext())  {	  if(allValues.equals(option)||    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	52	1	replace
179	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.contains( "n ")||  allValues.contains( "n "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.contains( "n ")||  allValues.contains( "n "))  {	  if(allValues.equals(       "       "))    {    if(allValues.equals(   ",       "))    {    	compilable	  [FE]  ComparisonFailure  	39	1	replace
180	[BUG]  [BUGGY]  if(allValues.contains( "n ")||  allValues.contains( "n "))  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.contains( "n ")||  allValues.contains( "n "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.contains( "n ")||  allValues.contains( "n "))  {	  if(allValues.equals(       "       "))    {    if(allValues.equals(   ",       "))    {    	compilable	  [FE]  ComparisonFailure  	39	1	replace
181	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(allValuesQuoted);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(allValuesQuoted);	  Argument    argument    =    options.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
182	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(allValues,  arguments);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(allValues,  arguments);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(allValues,  arguments);	  Argument    argument    =    options.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
183	[BUG]  [BUGGY]  if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( ". "))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( ". "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( ". "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    if(!allValues.isEmpty()    ||    allValues.equals(   ".       "))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
184	[BUG]  [BUGGY]  if(!allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( ". "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( ". "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( ". "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    if(!allValues.isEmpty()    ||    allValues.equals(   ".       "))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
185	[BUG]  [BUGGY]  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues    ==    null    ||    allValues.equals(   "   "))    {    if(allValues  ==  null  ||  allValues.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
186	[BUG]  [BUGGY]  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  if(allValues  ==  null  ||  allValues.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  if(allValues  ==  null  ||  allValues.equals( ".   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues    ==    null    ||    allValues.equals(   "   "))    {    if(allValues  ==  null  ||  allValues.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
187	[BUG]  [BUGGY]  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  if(allValues!=  null  ||  allValues.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  if(allValues!=  null  ||  allValues.equals(   "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues    ==    null    ||    allValues.equals(   "   "))    {    if(allValues!=  null  ||  allValues.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
188	[BUG]  [BUGGY]  if(!allValues.isEmpty())  {  If(!allValues.equals( " "))  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty())  {  If(!allValues.equals( " "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty())  {  If(!allValues.equals( " "))  {	  if(!allValues.equals(       "       "))    {    If(!allValues.equals(       "       "))    {    	non-compiled	[CE]  	56	None	replace
189	[BUG]  [BUGGY]  if(!allValues.isEmpty())  {  if(!allValues.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty())  {  if(!allValues.equals( " "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty())  {  if(!allValues.equals( " "))  {	  if(!allValues.equals(       "       "))    {    If(!allValues.equals(       "       "))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
190	[BUG]  [BUGGY]  ||!allValues.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  ||!allValues.equals( "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	||!allValues.equals( "   "))  {	  if(!allValues.equals(       "       "))    {    If(!allValues.equals(       "       "))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
191	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "-   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "-   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( "-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "-   "))    {    if(!allValues.isEmpty()  ||  allValues.equals( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
192	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "-   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "-   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ".-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "-   "))    {    if(!allValues.isEmpty()  ||  allValues.equals( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
193	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "-   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ",-   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "-   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ",-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "-   "))    {    if(!allValues.isEmpty()  ||  allValues.equals( ",-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
194	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "-   "))  {  If(!allValues.isEmpty()  ||  allValues.equals( "-   "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "-   "))  {  If(!allValues.isEmpty()  ||  allValues.equals( "-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "-   "))    {    If(!allValues.isEmpty()  ||  allValues.equals( "-   "))  {	  	non-compiled	[CE]  	81	None	add
195	[BUG]  [BUGGY]  Argument  argument  =  arguments.getOption(option,  options.next(),  allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  arguments.getOption(option,  options.next(),  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.getOption(option,  options.next(),  allValues);	  Argument    argument    =    arguments.getOption(option,    options.next());    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
196	[BUG]  [BUGGY]  Validator  validator  =  option.findValue(allValues,  description);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.findValue(allValues,  description);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.findValue(allValues,  description);	  Validator    validator    =    option.findValue(allValues);    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
197	[BUG]  [BUGGY]  Validator  validator  =  option.findValue(allValues,  arguments);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.findValue(allValues,  arguments);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.findValue(allValues,  arguments);	  Validator    validator    =    option.findValue(allValues);    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
198	[BUG]  [BUGGY]  Validator  validator  =  option.findValue(allValues,  argumentCount);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.findValue(allValues,  argumentCount);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.findValue(allValues,  argumentCount);	  Validator    validator    =    option.findValue(allValues);    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
199	[BUG]  [BUGGY]  Argument  option  =  options.getOption(option,  arguments);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  option  =  options.getOption(option,  arguments);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(option,  arguments);	  Argument    option    =    options.getOption(option,    allValues);    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
200	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!option.equals(allValues)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!option.equals(allValues)&&  arguments.hasNext())  {	  if(!option.equals(allValues))    {    	compilable	  [FE]  ComparisonFailure  	112	1	replace
201	[BUG]  [BUGGY]  if(!option.equals(allValues)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!option.equals(allValues)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!option.equals(allValues)&&  arguments.hasNext())  {	  if(!option.equals(allValues))    {    	compilable	  [FE]  ComparisonFailure  	112	1	replace
202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!option.equals(allValues)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!option.equals(allValues)||  arguments.hasNext())  {	  if(!option.equals(allValues))    {    	compilable	  [FE]  AssertionFailedError  	112	1	replace
203	[BUG]  [BUGGY]  if(!option.equals(allValues)||  arguments.hasNext())  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!option.equals(allValues)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!option.equals(allValues)||  arguments.hasNext())  {	  if(!option.equals(allValues))    {    	compilable	  [FE]  AssertionFailedError  	112	1	replace
204	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!commandLine.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!commandLine.looksLikeOption(allValues))  {	  if(!option.equals(allValues))    {    	compilable	  [FE]  AssertionFailedError  	112	1	replace
205	[BUG]  [BUGGY]  if(!commandLine.looksLikeOption(allValues))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!commandLine.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!commandLine.looksLikeOption(allValues))  {	  if(!option.equals(allValues))    {    	compilable	  [FE]  AssertionFailedError  	112	1	replace
206	[BUG]  [BUGGY]  Argument  argument  =  commandLine.getOption(option,  allValues);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  commandLine.getOption(option,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  commandLine.getOption(option,  allValues);	  Argument    argument    =    commandLine.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	66	None	replace
207	[BUG]  [BUGGY]  Argument  argument  =  commandLine.getArgumentValue(option);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  commandLine.getArgumentValue(option);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  commandLine.getArgumentValue(option);	  Argument    argument    =    commandLine.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	66	None	replace
208	[BUG]  [BUGGY]  Argument  argument  =  commandLine.getArgument(option);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  commandLine.getArgument(option);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  commandLine.getArgument(option);	  Argument    argument    =    commandLine.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	66	None	replace
209	[BUG]  [BUGGY]  if(allValues.equals(   "   ")||  allValues.equals(   "-   "))  {  if(allValues.equals(   "   ")||  allValues.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(   "   ")||  allValues.equals(   "-   "))  {  if(allValues.equals(   "   ")||  allValues.equals( "-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "   ")||    allValues.equals(   "-   "))    {    if(allValues.equals(   "   ")||  allValues.equals( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
210	[BUG]  [BUGGY]  if(allValues.equals(   "   ")||  allValues.equals(   "-   "))  {  if(allValues.equals(   "   ")||  allValues.equals( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(   "   ")||  allValues.equals(   "-   "))  {  if(allValues.equals(   "   ")||  allValues.equals( ".-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "   ")||    allValues.equals(   "-   "))    {    if(allValues.equals(   "   ")||  allValues.equals( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
211	[BUG]  [BUGGY]  Validator  validator  =  option.evaluateValue(allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.evaluateValue(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.evaluateValue(allValues);	  Validator    validator    =    option.evaluateValue();    	non-compiled	[CE]  'else'  without  'if'	106	None	replace
212	[BUG]  [BUGGY]  Validator  validator  =  option.evaluate(allValues);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.evaluate(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.evaluate(allValues);	  Validator    validator    =    option.evaluateValue();    	non-compiled	[CE]  'else'  without  'if'	106	None	replace
213	[BUG]  [BUGGY]  Validator  validator  =  option.evaluate();  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.evaluate();  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.evaluate();	  Validator    validator    =    option.evaluateValue();    	non-compiled	[CE]  'else'  without  'if'	106	None	replace
214	[BUG]  [BUGGY]  Validator  validator  =  arguments.getOption(option,  allValues);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  arguments.getOption(option,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  arguments.getOption(option,  allValues);	  Validator    validator    =    arguments.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	68	None	replace
215	[BUG]  [BUGGY]  Validator  validator  =  option.getOption(arguments);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.getOption(arguments);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.getOption(arguments);	  Validator    validator    =    arguments.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	68	None	replace
216	[BUG]  [BUGGY]  Validator  validator  =  arguments.getOption(allValues);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  arguments.getOption(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  arguments.getOption(allValues);	  Validator    validator    =    arguments.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	68	None	replace
217	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(option);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  options.getValue(option);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  options.getValue(option);	  Validator    validator    =    options.getValue();    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
218	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(allValues);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  options.getValue(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  options.getValue(allValues);	  Validator    validator    =    options.getValue();    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
219	[BUG]  [BUGGY]  Validator  validator  =  options.next();  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  options.next();  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  options.next();	  Validator    validator    =    options.getValue();    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
220	[BUG]  [BUGGY]  Argument  argument  =  arguments.get(allValues.size()  -  1);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  arguments.get(allValues.size()  -  1);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.get(allValues.size()  -  1);	  Argument    argument    =    arguments.get(allValues);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
221	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.length  -  1  :  0;  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.length  -  1  :  0;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.length  -  1  :  0;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.length    :    0;    	non-compiled	[CE]  'else'  without  'if'	70	None	replace
222	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.length  :  1;  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.length  :  1;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.length  :  1;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.length    :    0;    	non-compiled	[CE]  'else'  without  'if'	70	None	replace
223	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(allValues,  option.next(),  arguments);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(allValues,  option.next(),  arguments);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(allValues,  option.next(),  arguments);	  Argument    argument    =    options.getOption(allValues,    option.next());    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
224	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(allValuesQuoted,  option.next());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(allValuesQuoted,  option.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(allValuesQuoted,  option.next());	  Argument    argument    =    options.getOption(allValues,    option.next());    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
225	[BUG]  [BUGGY]  Argument  argument  =  option.getOption(allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  option.getOption(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.getOption(allValues);	  Argument    argument    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	116	None	replace
226	[BUG]  [BUGGY]  Argument  argument  =  option.getArgument(allValues);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  option.getArgument(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.getArgument(allValues);	  Argument    argument    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	116	None	replace
227	[BUG]  [BUGGY]  Argument  argument  =  option.getArgumentValue(allValues);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  option.getArgumentValue(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.getArgumentValue(allValues);	  Argument    argument    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	116	None	replace
228	[BUG]  [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  if(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  if(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    if(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
229	[BUG]  [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  if(option!=  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  if(option!=  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    if(option!=  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
230	[BUG]  [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  If(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  If(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    If(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  	non-compiled	[CE]  ';'  expected	91	None	add
231	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty()  ||  allValues.equals( "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.isEmpty()  ||  allValues.equals( "   "))  {	  if(!allValues.isEmpty()    &&    allValues.equals(   "       "))    {    	compilable	  [FE]  ComparisonFailure  	80	1	replace
232	[BUG]  [BUGGY]  if(allValues.isEmpty()  ||  allValues.equals( "   "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty()  ||  allValues.equals( "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty()  ||  allValues.equals( "   "))  {	  if(!allValues.isEmpty()    &&    allValues.equals(   "       "))    {    	compilable	  [FE]  ComparisonFailure  	80	1	replace
233	[BUG]  [BUGGY]  if(allValues.isEmpty())  {  if(allValues.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty())  {  if(allValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty())    {    if(allValues.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
234	[BUG]  [BUGGY]  if(allValues.isEmpty())  {  If(allValues.isEmpty())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty())  {  If(allValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty())    {    If(allValues.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	44	None	add
235	[BUG]  [BUGGY]  if(allValues.isEmpty())  {  if(AllValues.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty())  {  if(AllValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty())    {    if(AllValues.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
236	[BUG]  [BUGGY]  Validator  validator  =  option.getOption(allValues);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.getOption(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.getOption(allValues);	  Validator    validator    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
237	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(option);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.getValue(option);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.getValue(option);	  Validator    validator    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
238	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(allValues);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.getValue(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.getValue(allValues);	  Validator    validator    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
239	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(allValues,  options.getValue());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.validateValue(allValues,  options.getValue());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.validateValue(allValues,  options.getValue());	  Validator    validator    =    option.validateValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
240	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(allValues,  allValues.getValue());  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.validateValue(allValues,  allValues.getValue());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.validateValue(allValues,  allValues.getValue());	  Validator    validator    =    option.validateValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
241	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(allValues,  option.next());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.validateValue(allValues,  option.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.validateValue(allValues,  option.next());	  Validator    validator    =    option.validateValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
242	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(allValues,  argument.getValue());  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.validateValue(allValues,  argument.getValue());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.validateValue(allValues,  argument.getValue());	  Validator    validator    =    option.validateValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.contains( "- "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.contains( "- "))  {	  if(!allValues.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	35	1	replace
244	[BUG]  [BUGGY]  if(!allValues.contains( "- "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.contains( "- "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.contains( "- "))  {	  if(!allValues.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	35	1	replace
245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals( "- ")||!allValues.equals( "- "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals( "- ")||!allValues.equals( "- "))  {	  if(!allValues.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	35	1	replace
246	[BUG]  [BUGGY]  if(!allValues.equals( "- ")||!allValues.equals( "- "))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals( "- ")||!allValues.equals( "- "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals( "- ")||!allValues.equals( "- "))  {	  if(!allValues.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	35	1	replace
247	[BUG]  [BUGGY]  if(option.hasValues()  ||  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasValues()  ||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasValues()  ||  arguments.hasNext())  {	  if(option.hasValues())    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
248	[BUG]  [BUGGY]  if(commandLine.hasValues())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasValues())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasValues())  {	  if(option.hasValues())    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
249	[BUG]  [BUGGY]  if(option.hasValues()  &&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasValues()  &&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasValues()  &&  arguments.hasNext())  {	  if(option.hasValues())    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
250	[BUG]  [BUGGY]  Argument  option  =  options.getOption(option,  allValues.next());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  option  =  options.getOption(option,  allValues.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(option,  allValues.next());	  Argument    option    =    options.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
251	[BUG]  [BUGGY]  Argument  option  =  options.getOption(option,  arguments.next(),  allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  option  =  options.getOption(option,  arguments.next(),  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(option,  arguments.next(),  allValues);	  Argument    option    =    options.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
252	[BUG]  [BUGGY]  Argument  option  =  options.getOption(commandLine,  arguments.next());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  option  =  options.getOption(commandLine,  arguments.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(commandLine,  arguments.next());	  Argument    option    =    options.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
253	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(commandLine.hasOption(allValuesQuoted))  {	  if(option.hasOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	120	1	replace
254	[BUG]  [BUGGY]  if(commandLine.hasOption(allValuesQuoted))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasOption(allValuesQuoted))  {	  if(option.hasOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	120	1	replace
255	[BUG]  [BUGGY]  if(option.hasOption(allValuesQuoted)||  options.hasOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasOption(allValuesQuoted)||  options.hasOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasOption(allValuesQuoted)||  options.hasOption(allValuesQuoted))  {	  if(option.hasOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
256	[BUG]  [BUGGY]  if(option.hasOption(allValuesQuoted)||  option.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasOption(allValuesQuoted)||  option.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasOption(allValuesQuoted)||  option.looksLikeOption(allValuesQuoted))  {	  if(option.hasOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
257	[BUG]  [BUGGY]  if(option.hasOption(allValuesQuoted)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasOption(allValuesQuoted)&&  arguments.hasNext())  {	  if(option.hasOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
258	[BUG]  [BUGGY]  If(commandLine.looksLikeOption(allValues))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  If(commandLine.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	If(commandLine.looksLikeOption(allValues))  {	  if(commandLine.looksLikeOption(allValues))    {    If(commandLine.looksLikeOption(allValues))    {    	non-compiled	[CE]  ';'  expected	31	None	replace
259	[BUG]  [BUGGY]  if(option.hasArg())  {  If(commandLine.looksLikeOption(allValues))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasArg())  {  If(commandLine.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasArg())  {  If(commandLine.looksLikeOption(allValues))  {	  if(commandLine.looksLikeOption(allValues))    {    If(commandLine.looksLikeOption(allValues))    {    	non-compiled	[CE]  ';'  expected	31	None	replace
260	[BUG]  [BUGGY]  If(commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  If(commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	If(commandLine.looksLikeOption(allValuesQuoted))  {	  if(commandLine.looksLikeOption(allValues))    {    If(commandLine.looksLikeOption(allValues))    {    	non-compiled	[CE]  ';'  expected	31	None	replace
261	[BUG]  [BUGGY]  If(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  If(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	If(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValues))    {    If(commandLine.looksLikeOption(allValues))    {    	non-compiled	[CE]  ';'  expected	31	None	replace
262	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValues)||    arguments.hasNext())    {    if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
263	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  If(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  If(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValues)||    arguments.hasNext())    {    If(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {	  	non-compiled	[CE]  ';'  expected	17	None	add
264	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksLikeOption(allValuesQuoted))  {	  if(allValues.equals(option))    {    if(allValues.equals(option))    {    	compilable	  [FE]  ComparisonFailure  	13	1	replace
265	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksLikeOption(allValuesQuoted))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksLikeOption(allValuesQuoted))  {	  if(allValues.equals(option))    {    if(allValues.equals(option))    {    	compilable	  [FE]  ComparisonFailure  	13	1	replace
266	[BUG]  [BUGGY]  if(!allValues.isEmpty())  {  if(allValues.equals(option))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty())  {  if(allValues.equals(option))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty())  {  if(allValues.equals(option))  {	  if(allValues.equals(option))    {    if(allValues.equals(option))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
267	[BUG]  [BUGGY]  if(!allValues.isEmpty())  {  If(!allValues.equals(option))  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty())  {  If(!allValues.equals(option))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty())  {  If(!allValues.equals(option))  {	  if(!allValues.equals(option))    {    If(!allValues.equals(option))    {    	non-compiled	[CE]  ';'  expected	28	None	replace
268	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals( " ")||  allValues.equals( " "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.equals( " ")||  allValues.equals( " "))  {	  if(allValues.equals(   "   ")||    allValues.equals(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	103	1	replace
269	[BUG]  [BUGGY]  if(allValues.equals( " ")||  allValues.equals( " "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals( " ")||  allValues.equals( " "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals( " ")||  allValues.equals( " "))  {	  if(allValues.equals(   "   ")||    allValues.equals(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	103	1	replace
270	[BUG]  [BUGGY]  if(!option.equals(allValues)&&  arguments.previous())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]        AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!option.equals(allValues)&&  arguments.previous())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!option.equals(allValues)&&  arguments.previous())  {	  if(!allValues.equals(option)&&    arguments.previous())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	129	None	replace
271	[BUG]  [BUGGY]  if(!arguments.equals(option)&&  arguments.previous())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]          AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!arguments.equals(option)&&  arguments.previous())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!arguments.equals(option)&&  arguments.previous())  {	  if(!allValues.equals(option)&&    arguments.previous())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	129	None	replace
272	[BUG]  [BUGGY]  if(!allValues.equals(option)&&  arguments.previous()  ||  arguments.hasNext())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(option)&&  arguments.previous()  ||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(option)&&  arguments.previous()  ||  arguments.hasNext())  {	  if(!allValues.equals(option)&&    arguments.previous())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	129	None	replace
273	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "*   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( "*   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "*   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( "*   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "*   "))    {    if(!allValues.isEmpty()  ||  allValues.equals( "*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
274	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "*   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ".*   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "*   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ".*   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "*   "))    {    if(!allValues.isEmpty()  ||  allValues.equals( ".*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
275	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "*   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ",*   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "*   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ",*   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "*   "))    {    if(!allValues.isEmpty()  ||  allValues.equals( ",*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
276	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "*   "))  {  if(!allValues.isEmpty()  ||  allValues.equals(... "*   "))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "*   "))  {  if(!allValues.isEmpty()  ||  allValues.equals(... "*   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "*   "))    {    if(!allValues.isEmpty()  ||  allValues.equals(... "*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	132	None	add
277	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  if(commandline.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	29	1	replace
278	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  if(commandline.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	29	1	replace
279	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.previous())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.previous())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.previous())  {	  if(commandline.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	29	None	replace
280	[BUG]  [BUGGY]  if(arguments.looksLikeOption(allValuesQuoted)&&  option.hasNext())  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(arguments.looksLikeOption(allValuesQuoted)&&  option.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(arguments.looksLikeOption(allValuesQuoted)&&  option.hasNext())  {	  if(option.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
281	[BUG]  [BUGGY]  if(parameters.looksLikeOption(allValuesQuoted)&&  option.hasNext())  {  [CE]  cannot  find  symbol  parameters  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(parameters.looksLikeOption(allValuesQuoted)&&  option.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(parameters.looksLikeOption(allValuesQuoted)&&  option.hasNext())  {	  if(option.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  parameters	123	None	replace
282	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.get(argumentCount):  0;  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.get(argumentCount):  0;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.get(argumentCount):  0;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.get(remainingCount):    0;    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
283	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.get(remainingCount):  0;  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.get(remainingCount):  0;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.get(remainingCount):  0;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.get(remainingCount):    0;    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
284	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments);  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  options.getOption(arguments);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  options.getOption(arguments);	  Option    option    =    option.getOption(arguments);    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
285	[BUG]  [BUGGY]  Option  option  =  option.getOption(arguments,  allValues);  [CE]  'else'  without  'if'  [FE]                            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  option.getOption(arguments,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(arguments,  allValues);	  Option    option    =    option.getOption(arguments);    	non-compiled	[CE]  'else'  without  'if'	60	None	replace
286	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.equals(allValues)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(option.equals(allValues)&&  arguments.hasNext())  {	  if(!allValues.equals(option)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	86	1	replace
287	[BUG]  [BUGGY]  if(option.equals(allValues)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.equals(allValues)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.equals(allValues)&&  arguments.hasNext())  {	  if(!allValues.equals(option)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	86	1	replace
288	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(option)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals(option)||  arguments.hasNext())  {	  if(!allValues.equals(option)&&    arguments.hasNext())    {    	compilable	  [FE]  AssertionFailedError  	86	1	replace
289	[BUG]  [BUGGY]  if(!allValues.equals(option)||  arguments.hasNext())  {  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(option)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(option)||  arguments.hasNext())  {	  if(!allValues.equals(option)&&    arguments.hasNext())    {    	compilable	  [FE]  AssertionFailedError  	86	1	replace
290	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(commandLine)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals(commandLine)&&  arguments.hasNext())  {	  if(!allValues.equals(option)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	86	1	replace
291	[BUG]  [BUGGY]  if(!allValues.equals(commandLine)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(commandLine)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(commandLine)&&  arguments.hasNext())  {	  if(!allValues.equals(option)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	86	1	replace
292	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.contains( "n "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.contains( "n "))  {	  if(!allValues.equals(       "       "))    {    if(!allValues.equals(   ",       "))    {    	compilable	  [FE]  AssertionFailedError  	55	1	replace
293	[BUG]  [BUGGY]  if(!allValues.contains( "n "))  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.contains( "n "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.contains( "n "))  {	  if(!allValues.equals(       "       "))    {    if(!allValues.equals(   ",       "))    {    	compilable	  [FE]  AssertionFailedError  	55	1	replace
294	[BUG]  [BUGGY]  Validator  validator  =  option.findValue(allValues,  allValues.getValue());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.findValue(allValues,  allValues.getValue());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.findValue(allValues,  allValues.getValue());	  Validator    validator    =    option.findValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
295	[BUG]  [BUGGY]  Validator  validator  =  option.findValue(allValues,  options.getValue());  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.findValue(allValues,  options.getValue());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.findValue(allValues,  options.getValue());	  Validator    validator    =    option.findValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
296	[BUG]  [BUGGY]  Validator  validator  =  option.findValue(allValues,  option.next());  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.findValue(allValues,  option.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.findValue(allValues,  option.next());	  Validator    validator    =    option.findValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
297	[BUG]  [BUGGY]  Validator  validator  =  option.findValue(allValues,  option.getKey());  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.findValue(allValues,  option.getKey());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.findValue(allValues,  option.getKey());	  Validator    validator    =    option.findValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
298	[BUG]  [BUGGY]  if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( " "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( " "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    if(!allValues.isEmpty()    ||    allValues.equals(   "))    {    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
299	[BUG]  [BUGGY]  if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( "))  {  [CE]  unclosed  string  literal  [FE]          AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    if(!allValues.isEmpty()    ||    allValues.equals(   "))    {    	non-compiled	[CE]  unclosed  string  literal	124	None	replace
300	[BUG]  [BUGGY]  if(option.hasArg()  &&  commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasArg()  &&  commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasArg()  &&  commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValues)||    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
301	[BUG]  [BUGGY]  if(option.looksLikeOption(allValues)||  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.looksLikeOption(allValues)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.looksLikeOption(allValues)||  arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValues)||    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
302	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(commandLine.hasOption(allValues))  {	  if(option.hasOption(allValues))    {    	compilable	  [FE]  ComparisonFailure  	119	1	replace
303	[BUG]  [BUGGY]  if(commandLine.hasOption(allValues))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasOption(allValues))  {	  if(option.hasOption(allValues))    {    	compilable	  [FE]  ComparisonFailure  	119	1	replace
304	[BUG]  [BUGGY]  if(option.hasOption(allValues)||  options.hasOption(allValues))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasOption(allValues)||  options.hasOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasOption(allValues)||  options.hasOption(allValues))  {	  if(option.hasOption(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
305	[BUG]  [BUGGY]  if(option.hasOption(allValues)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasOption(allValues)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasOption(allValues)&&  arguments.hasNext())  {	  if(option.hasOption(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
306	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(option,  allValues.next(),  arguments);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(option,  allValues.next(),  arguments);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(option,  allValues.next(),  arguments);	  Argument    argument    =    options.getOption(option,    allValues.next());    	non-compiled	[CE]  'else'  without  'if'	71	None	replace
307	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(option,  allValuesQuoted);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(option,  allValuesQuoted);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(option,  allValuesQuoted);	  Argument    argument    =    options.getOption(option,    allValues.next());    	non-compiled	[CE]  'else'  without  'if'	71	None	replace
308	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(option,  allValues.get(0));  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(option,  allValues.get(0));  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(option,  allValues.get(0));	  Argument    argument    =    options.getOption(option,    allValues.next());    	non-compiled	[CE]  'else'  without  'if'	71	None	replace
309	[BUG]  [BUGGY]  Argument  argument  =  resources.get(allValues,  arguments);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.get(allValues,  arguments);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.get(allValues,  arguments);	  Argument    argument    =    resources.get(allValues);    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
310	[BUG]  [BUGGY]  Argument  argument  =  resources.get(allValues,  description);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.get(allValues,  description);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.get(allValues,  description);	  Argument    argument    =    resources.get(allValues);    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
311	[BUG]  [BUGGY]  Argument  argument  =  resources.get(allValues  -  1);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.get(allValues  -  1);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.get(allValues  -  1);	  Argument    argument    =    resources.get(allValues);    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
312	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "_   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( "_   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "_   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( "_   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "_   "))    {    if(!allValues.isEmpty()  ||  allValues.equals( "_   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
313	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "_   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( "._   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "_   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( "._   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "_   "))    {    if(!allValues.isEmpty()  ||  allValues.equals( "._   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
314	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "_   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ",_   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "_   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ",_   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "_   "))    {    if(!allValues.isEmpty()  ||  allValues.equals( ",_   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
315	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "_   "))  {  If(!allValues.isEmpty()  ||  allValues.equals( "_   "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "_   "))  {  If(!allValues.isEmpty()  ||  allValues.equals( "_   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "_   "))    {    If(!allValues.isEmpty()  ||  allValues.equals( "_   "))  {	  	non-compiled	[CE]  	83	None	add
316	[BUG]  [BUGGY]  Option  option  =  options.getOption(DEFAULT_CONSUME_REMAINING);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  options.getOption(DEFAULT_CONSUME_REMAINING);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  options.getOption(DEFAULT_CONSUME_REMAINING);	  Option    option    =    option.getOption(DEFAULT_CONSUME_REMAINING);    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
317	[BUG]  [BUGGY]  Option  option  =  option.getOption(ALL_VALues);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  option.getOption(ALL_VALues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(ALL_VALues);	  Option    option    =    option.getOption(DEFAULT_CONSUME_REMAINING);    	non-compiled	[CE]  'else'  without  'if'	78	None	replace
318	[BUG]  [BUGGY]  if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals(... "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals(... "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals(... "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    if(!allValues.isEmpty()    ||    allValues.equals(...   "       "))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
319	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(... " "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(... " "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  ||  allValues.equals(... " "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    if(!allValues.isEmpty()    ||    allValues.equals(...   "       "))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
320	[BUG]  [BUGGY]  if(!allValues.isEmpty())  {  If(allValues.equals( "   "))  {  [CE]  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty())  {  If(allValues.equals( "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty())  {  If(allValues.equals( "   "))  {	  if(allValues.equals(       "       "))    {    If(allValues.equals(       "       "))    {    	non-compiled	[CE]  	38	None	replace
321	[BUG]  [BUGGY]  if(allValues.isEmpty())  {  If(allValues.equals( "   "))  {  [CE]  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty())  {  If(allValues.equals( "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty())  {  If(allValues.equals( "   "))  {	  if(allValues.equals(       "       "))    {    If(allValues.equals(       "       "))    {    	non-compiled	[CE]  	38	None	replace
322	[BUG]  [BUGGY]  if(allValues.size()  >  maximum)  {  If(allValues.equals( "   "))  {  [CE]  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.size()  >  maximum)  {  If(allValues.equals( "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.size()  >  maximum)  {  If(allValues.equals( "   "))  {	  if(allValues.equals(       "       "))    {    If(allValues.equals(       "       "))    {    	non-compiled	[CE]  	38	None	replace
323	[BUG]  [BUGGY]  if(commandLine.hasArg()  ||  option.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasArg()  ||  option.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasArg()  ||  option.looksLikeOption(allValuesQuoted))  {	  if(option.hasArg()    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
324	[BUG]  [BUGGY]  if(commandLine.hasArg()  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasArg()  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasArg()  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  if(option.hasArg()    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
325	[BUG]  [BUGGY]  if(commandLine.hasArg()  ||  options.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasArg()  ||  options.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasArg()  ||  options.looksLikeOption(allValuesQuoted))  {	  if(option.hasArg()    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
326	[BUG]  [BUGGY]  Argument  argument  =  option.getOption(arguments);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  option.getOption(arguments);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.getOption(arguments);	  Argument    argument    =    arguments.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
327	[BUG]  [BUGGY]  Argument  argument  =  arguments.getOption(option,  allValues);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  arguments.getOption(option,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.getOption(option,  allValues);	  Argument    argument    =    arguments.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
328	[BUG]  [BUGGY]  Argument  argument  =  option.getOption(argumentCount);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  option.getOption(argumentCount);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.getOption(argumentCount);	  Argument    argument    =    arguments.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
329	[BUG]  [BUGGY]  If(commandLine.looksLikeOption(allValues)||  commandLine.looksLikeOption(allValues))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  If(commandLine.looksLikeOption(allValues)||  commandLine.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	If(commandLine.looksLikeOption(allValues)||  commandLine.looksLikeOption(allValues))  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    If(commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  ';'  expected	8	None	replace
330	[BUG]  [BUGGY]  If(commandLine.looksLikeOption(allValues)||  commandLine.looksBoundaryQuotes(allValues))  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  If(commandLine.looksLikeOption(allValues)||  commandLine.looksBoundaryQuotes(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	If(commandLine.looksLikeOption(allValues)||  commandLine.looksBoundaryQuotes(allValues))  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    If(commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  ';'  expected	8	None	replace
331	[BUG]  [BUGGY]  if(commandLine.hasArg()  &&  option.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasArg()  &&  option.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasArg()  &&  option.looksLikeOption(allValuesQuoted))  {	  if(option.hasArg()    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
332	[BUG]  [BUGGY]  if(commandLine.hasArg()  &&  options.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasArg()  &&  options.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasArg()  &&  options.looksLikeOption(allValuesQuoted))  {	  if(option.hasArg()    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
333	[BUG]  [BUGGY]  if(commandline.hasArg()  &&  option.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  commandline  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandline.hasArg()  &&  option.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandline.hasArg()  &&  option.looksLikeOption(allValuesQuoted))  {	  if(option.hasArg()    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  commandline	16	None	replace
334	[BUG]  [BUGGY]  Argument  argument  =  commandLine.getValue(option,  allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  commandLine.getValue(option,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  commandLine.getValue(option,  allValues);	  Argument    argument    =    commandLine.get(allValues);    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
335	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "*   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  &&  allValues.equals( "*   "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "*   "))    {    	compilable	  [FE]  ComparisonFailure  	133	1	replace
336	[BUG]  [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "*   "))  {  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "*   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  &&  allValues.equals( "*   "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "*   "))    {    	compilable	  [FE]  ComparisonFailure  	133	1	replace
337	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty()  ||  allValues.equals( "* "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.isEmpty()  ||  allValues.equals( "* "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "*   "))    {    	compilable	  [FE]  ComparisonFailure  	133	1	replace
338	[BUG]  [BUGGY]  if(allValues.isEmpty()  ||  allValues.equals( "* "))  {  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty()  ||  allValues.equals( "* "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty()  ||  allValues.equals( "* "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "*   "))    {    	compilable	  [FE]  ComparisonFailure  	133	1	replace
339	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals( "null "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals( "null "))  {	  if(!allValues.equals(   "n   "))    {    	compilable	  [FE]  AssertionFailedError  	126	1	replace
340	[BUG]  [BUGGY]  if(!allValues.equals( "null "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals( "null "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals( "null "))  {	  if(!allValues.equals(   "n   "))    {    	compilable	  [FE]  AssertionFailedError  	126	1	replace
341	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals( "false "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals( "false "))  {	  if(!allValues.equals(   "n   "))    {    	compilable	  [FE]  AssertionFailedError  	126	1	replace
342	[BUG]  [BUGGY]  if(!allValues.equals( "false "))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals( "false "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals( "false "))  {	  if(!allValues.equals(   "n   "))    {    	compilable	  [FE]  AssertionFailedError  	126	1	replace
343	[BUG]  [BUGGY]  if(!allValues.equals(commandLine))  {  if(!allValues.equals(commandLine))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(commandLine))  {  if(!allValues.equals(commandLine))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(commandLine))    {    if(!allValues.equals(commandLine))  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
344	[BUG]  [BUGGY]  if(!allValues.equals(commandLine))  {  If(!allValues.equals(commandLine))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(commandLine))  {  If(!allValues.equals(commandLine))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(commandLine))    {    If(!allValues.equals(commandLine))  {	  	non-compiled	[CE]  ';'  expected	87	None	add
345	[BUG]  [BUGGY]  if(!option.equals(allValues.getName()))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!option.equals(allValues.getName()))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!option.equals(allValues.getName()))  {	  if(!allValues.equals(option.getName()))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
346	[BUG]  [BUGGY]  if(!allValues.equals(option.getName())||  option.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(option.getName())||  option.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(option.getName())||  option.looksLikeOption(allValuesQuoted))  {	  if(!allValues.equals(option.getName()))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
347	[BUG]  [BUGGY]  if(!allValues.equals(option.getName())||  options.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(option.getName())||  options.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(option.getName())||  options.looksLikeOption(allValuesQuoted))  {	  if(!allValues.equals(option.getName()))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
348	[BUG]  [BUGGY]  Validator  validator  =  options.getOption(defaultValues,  allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  options.getOption(defaultValues,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  options.getOption(defaultValues,  allValues);	  Validator    validator    =    options.getOption(defaultValues);    	non-compiled	[CE]  'else'  without  'if'	114	None	replace
349	[BUG]  [BUGGY]  Argument  argument  =  options.get(argumentCount);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.get(argumentCount);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.get(argumentCount);	  Argument    argument    =    arguments.get(option);    	non-compiled	[CE]  'else'  without  'if'	46	None	replace
350	[BUG]  [BUGGY]  Argument  argument  =  arguments.get(option.toString());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  arguments.get(option.toString());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.get(option.toString());	  Argument    argument    =    arguments.get(option);    	non-compiled	[CE]  'else'  without  'if'	46	None	replace
351	[BUG]  [BUGGY]  if(!allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty())  {  if(!allValues.isEmpty()  ||  allValues.equals( "   "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    if(!allValues.isEmpty()    ||    allValues.equals(       "       "))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
352	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(argumentCount  -  1):  0;  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(argumentCount  -  1):  0;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(argumentCount  -  1):  0;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.get(argumentCount):    0;    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
353	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(argumentCount  +  1):  0;  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(argumentCount  +  1):  0;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(argumentCount  +  1):  0;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.get(argumentCount):    0;    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
354	[BUG]  [BUGGY]  Argument  argument  =  resources.getOption(option,  allValues.next());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.getOption(option,  allValues.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.getOption(option,  allValues.next());	  Argument    argument    =    resources.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	131	None	replace
355	[BUG]  [BUGGY]  Argument  argument  =  resources.getOption(option,  arguments.next(),  allValues);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.getOption(option,  arguments.next(),  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.getOption(option,  arguments.next(),  allValues);	  Argument    argument    =    resources.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	131	None	replace
356	[BUG]  [BUGGY]  if(allValues.equals(   "-   "))  {  if(allValues.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(   "-   "))  {  if(allValues.equals( "-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "-   "))    {    if(allValues.equals( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
357	[BUG]  [BUGGY]  if(allValues.equals(   "-   "))  {  if(allValues.equals( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(   "-   "))  {  if(allValues.equals( ".-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "-   "))    {    if(allValues.equals( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
358	[BUG]  [BUGGY]  if(allValues.equals(   "-   "))  {  if(allValues.equals( ",-   "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(   "-   "))  {  if(allValues.equals( ",-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "-   "))    {    if(allValues.equals( ",-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
359	[BUG]  [BUGGY]  if(allValues.equals(   "-   "))  {  If(allValues.equals( "-   "))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(   "-   "))  {  If(allValues.equals( "-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "-   "))    {    If(allValues.equals( "-   "))  {	  	non-compiled	[CE]  	42	None	add
360	[BUG]  [BUGGY]  if(commandLine.hasArg()  ||  option.looksLikeOption(allValues))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasArg()  ||  option.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasArg()  ||  option.looksLikeOption(allValues))  {	  if(option.hasArg()    ||    commandLine.looksLikeOption(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
361	[BUG]  [BUGGY]  if(commandLine.hasArg()  ||  commandLine.looksLikeOption(allValues))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasArg()  ||  commandLine.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasArg()  ||  commandLine.looksLikeOption(allValues))  {	  if(option.hasArg()    ||    commandLine.looksLikeOption(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
362	[BUG]  [BUGGY]  if(commandLine.hasArg()  ||  options.looksLikeOption(allValues))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasArg()  ||  options.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasArg()  ||  options.looksLikeOption(allValues))  {	  if(option.hasArg()    ||    commandLine.looksLikeOption(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
363	[BUG]  [BUGGY]  if(commandLine.hasArg()  &&  option.looksLikeOption(allValues))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasArg()  &&  option.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasArg()  &&  option.looksLikeOption(allValues))  {	  if(option.hasArg()    &&    commandLine.looksLikeOption(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
364	[BUG]  [BUGGY]  if(commandLine.hasArg()  &&  options.looksLikeOption(allValues))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.hasArg()  &&  options.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.hasArg()  &&  options.looksLikeOption(allValues))  {	  if(option.hasArg()    &&    commandLine.looksLikeOption(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
365	[BUG]  [BUGGY]  if(commandline.hasArg()  &&  option.looksLikeOption(allValues))  {  [CE]  cannot  find  symbol  commandline  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandline.hasArg()  &&  option.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandline.hasArg()  &&  option.looksLikeOption(allValues))  {	  if(option.hasArg()    &&    commandLine.looksLikeOption(allValues))    {    	non-compiled	[CE]  cannot  find  symbol  commandline	15	None	replace
366	[BUG]  [BUGGY]  if(!allValues.isEmpty())  {  if(AllValues.equals(option))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty())  {  if(AllValues.equals(option))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty())  {  if(AllValues.equals(option))  {	  if(allValues.equals(option))    {    if(AllValues.equals(option))    {    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
367	[BUG]  [BUGGY]  if(AllValues.isEmpty())  {  [CE]  cannot  find  symbol  AllValues  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(AllValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(AllValues.isEmpty())  {	  if(allValues.equals(option))    {    if(AllValues.equals(option))    {    	non-compiled	[CE]  cannot  find  symbol  AllValues	113	None	replace
368	[BUG]  [BUGGY]  Argument  argument  =  option.getArgumentOption(allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  option.getArgumentOption(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.getArgumentOption(allValues);	  Argument    argument    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	116	None	replace
369	[BUG]  [BUGGY]  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  if(allValues  ==  null  ||  allValues.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  if(allValues  ==  null  ||  allValues.equals( ",   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues    ==    null    ||    allValues.equals(   "   "))    {    if(allValues  ==  null  ||  allValues.equals( ",   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	98	None	add
370	[BUG]  [BUGGY]  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  if(allValues  ==  null  ||  allValues.equals( "))  {  [CE]  unclosed  string  literal  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  if(allValues  ==  null  ||  allValues.equals( "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues    ==    null    ||    allValues.equals(   "   "))    {    if(allValues  ==  null  ||  allValues.equals( "))  {	  	non-compiled	[CE]  unclosed  string  literal	98	None	add
371	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(allValues,  option.getKey());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.validateValue(allValues,  option.getKey());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.validateValue(allValues,  option.getKey());	  Validator    validator    =    option.validateValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
372	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(allValues,  option.getArgument());  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.validateValue(allValues,  option.getArgument());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.validateValue(allValues,  option.getArgument());	  Validator    validator    =    option.validateValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
373	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(allValues,  option.getOption());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.validateValue(allValues,  option.getOption());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.validateValue(allValues,  option.getOption());	  Validator    validator    =    option.validateValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
374	[BUG]  [BUGGY]  if(!options.equals(allValues.getName()))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!options.equals(allValues.getName()))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!options.equals(allValues.getName()))  {	  if(!allValues.equals(option.getName()))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
375	[BUG]  [BUGGY]  if(!commandLine.equals(option.getName()))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!commandLine.equals(option.getName()))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!commandLine.equals(option.getName()))  {	  if(!allValues.equals(option.getName()))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
376	[BUG]  [BUGGY]  Argument  option  =  options.getOption(defaultValues,  allValues);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  option  =  options.getOption(defaultValues,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(defaultValues,  allValues);	  Argument    option    =    options.getOption(option,    allValues);    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
377	[BUG]  [BUGGY]  Argument  argument  =  arguments.next(),  allValues,  consumptionRemaining);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  arguments.next(),  allValues,  consumptionRemaining);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.next(),  allValues,  consumptionRemaining);	  Argument    argument    =    arguments.next(),    allValues);    	non-compiled	[CE]  ';'  expected	62	None	replace
378	[BUG]  [BUGGY]  if(arguments.hasNext()  ||  option.hasArgument())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(arguments.hasNext()  ||  option.hasArgument())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(arguments.hasNext()  ||  option.hasArgument())  {	  if(option.hasArg()    ||    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	128	None	replace
379	[BUG]  [BUGGY]  Validator  validator  =  option.findValue(allValues,  option.getArgument());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.findValue(allValues,  option.getArgument());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.findValue(allValues,  option.getArgument());	  Validator    validator    =    option.findValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
380	[BUG]  [BUGGY]  Validator  validator  =  option.findValue(allValues,  option.getOption());  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.findValue(allValues,  option.getOption());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.findValue(allValues,  option.getOption());	  Validator    validator    =    option.findValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
381	[BUG]  [BUGGY]  Validator  validator  =  options.getOption(option,  allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  options.getOption(option,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  options.getOption(option,  allValues);	  Validator    validator    =    options.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	67	None	replace
382	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null  ||!allValues.equals(option)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(option  ==  null  ||!allValues.equals(option)&&  arguments.hasNext())  {	  if(!allValues.equals(option)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	86	1	replace
383	[BUG]  [BUGGY]  if(option  ==  null  ||!allValues.equals(option)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null  ||!allValues.equals(option)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option  ==  null  ||!allValues.equals(option)&&  arguments.hasNext())  {	  if(!allValues.equals(option)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	86	1	replace
384	[BUG]  [BUGGY]  if(option.hasArg()  &&!allValues.equals(option)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasArg()  &&!allValues.equals(option)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasArg()  &&!allValues.equals(option)&&  arguments.hasNext())  {	  if(!allValues.equals(option)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
385	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(argumentCount);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(argumentCount);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(argumentCount);	  Argument    argument    =    arguments.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
386	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(arguments);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(arguments);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(arguments);	  Argument    argument    =    arguments.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
387	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(maximum  >  maximum)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(maximum  >  maximum)  {	  if(commandLine.looksLikeOption(allValues))    {    if(commandLine.looksLikeOption(allValues))    {    	compilable	  [FE]  ComparisonFailure  	30	1	replace
388	[BUG]  [BUGGY]  if(maximum  >  maximum)  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(maximum  >  maximum)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(maximum  >  maximum)  {	  if(commandLine.looksLikeOption(allValues))    {    if(commandLine.looksLikeOption(allValues))    {    	compilable	  [FE]  ComparisonFailure  	30	1	replace
389	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  option.next()  :  null;  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.hasValue()?  option.next()  :  null;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.hasValue()?  option.next()  :  null;	  Validator    validator    =    option.hasValue()?    option.getValue()    :    null;    	non-compiled	[CE]  'else'  without  'if'	118	None	replace
390	[BUG]  [BUGGY]  Option  option  =  resources.getOption(commandLine);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  resources.getOption(commandLine);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  resources.getOption(commandLine);	  Option    option    =    option.getOption(commandLine);    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
391	[BUG]  [BUGGY]  if(allValues!=  null  ||  allValues.equals(   "   "))  {  if(allValues!=  null  ||  allValues.equals(... "   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues!=  null  ||  allValues.equals(   "   "))  {  if(allValues!=  null  ||  allValues.equals(... "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues!=    null    ||    allValues.equals(   "   "))    {    if(allValues!=  null  ||  allValues.equals(... "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
392	[BUG]  [BUGGY]  if(allValues!=  null  ||  allValues.equals(   "   "))  {  if(allValues!=  null  ||  allValues.equals( "))  {  [CE]  unclosed  string  literal  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues!=  null  ||  allValues.equals(   "   "))  {  if(allValues!=  null  ||  allValues.equals( "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues!=    null    ||    allValues.equals(   "   "))    {    if(allValues!=  null  ||  allValues.equals( "))  {	  	non-compiled	[CE]  unclosed  string  literal	100	None	add
393	[BUG]  [BUGGY]  Argument  argument  =  commandLine.getOption(allValues);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  commandLine.getOption(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  commandLine.getOption(allValues);	  Argument    argument    =    commandLine.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	66	None	replace
394	[BUG]  [BUGGY]  Argument  argument  =  commandLine.getOption(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  commandLine.getOption(option,  arguments.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  commandLine.getOption(option,  arguments.next());	  Argument    argument    =    commandLine.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	66	None	replace
395	[BUG]  [BUGGY]  if(!option.equals(allValues)&&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!option.equals(allValues)&&  arguments.size()  >  maximum)  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!option.equals(allValues)&&  arguments.size()  >  maximum)  {	  if(!option.equals(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
396	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  options.getValue(option,  arguments.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  options.getValue(option,  arguments.next());	  Validator    validator    =    options.getValue();    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
397	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.length  :  0;  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.length  :  0;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  minimum?  arguments.length  :  0;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.length    :    0;    	non-compiled	[CE]  'else'  without  'if'	70	None	replace
398	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "*   "))  {  If(!allValues.isEmpty()  ||  allValues.equals( "*   "))  {  [CE]  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "*   "))  {  If(!allValues.isEmpty()  ||  allValues.equals( "*   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "*   "))    {    If(!allValues.isEmpty()  ||  allValues.equals( "*   "))  {	  	non-compiled	[CE]  	132	None	add
399	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValues)&&  arguments.previous())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(allValues)&&  arguments.previous())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValues)&&  arguments.previous())  {	  if(commandline.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	29	None	replace
400	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.size()  :  1;  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.size()  :  1;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.size()  :  1;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.previous()    :    1;    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
401	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.last()  :  1;  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.last()  :  1;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.last()  :  1;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.previous()    :    1;    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
402	[BUG]  [BUGGY]  if(allValues!=  null)  {  If(allValues.equals( " "))  {  [CE]  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues!=  null)  {  If(allValues.equals( " "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues!=  null)  {  If(allValues.equals( " "))  {	  if(allValues.equals(       "       "))    {    If(allValues.equals(       "       "))    {    	non-compiled	[CE]  	38	None	replace
403	[BUG]  [BUGGY]  if(allValues  ==  null)  {  If(allValues.equals( " "))  {  [CE]  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues  ==  null)  {  If(allValues.equals( " "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues  ==  null)  {  If(allValues.equals( " "))  {	  if(allValues.equals(       "       "))    {    If(allValues.equals(       "       "))    {    	non-compiled	[CE]  	38	None	replace
404	[BUG]  [BUGGY]  Argument  argument  =  resources.getOption(option,  options.next());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.getOption(option,  options.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.getOption(option,  options.next());	  Argument    argument    =    resources.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	131	None	replace
405	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty()  ||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.isEmpty()  ||  arguments.hasNext())  {	  if(allValues.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	45	1	replace
406	[BUG]  [BUGGY]  if(allValues.isEmpty()  ||  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty()  ||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty()  ||  arguments.hasNext())  {	  if(allValues.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	45	1	replace
407	[BUG]  [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals(   "     "))  {  if(!allValues.isEmpty()  &&  allValues.equals( "))  {  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals(   "     "))  {  if(!allValues.isEmpty()  &&  allValues.equals( "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    &&    allValues.equals(   "       "))    {    if(!allValues.isEmpty()  &&  allValues.equals( "))  {	  	non-compiled	[CE]  unclosed  string  literal	79	None	add
408	[BUG]  [BUGGY]  Option  option  =  option.getOption(ALL_VALUES,  ALL_VALUES);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  option.getOption(ALL_VALUES,  ALL_VALUES);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(ALL_VALUES,  ALL_VALUES);	  Option    option    =    option.getOption(ALL_VALUES,    allValues);    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
409	[BUG]  [BUGGY]  if(option.looksLikeOption(allValues))  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.looksLikeOption(allValues))  {	  if(option.equals(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
410	[BUG]  [BUGGY]  if(!allValues.isEmpty()  &&  options.hasOption(option))  {  [CE]  cannot  find  symbol  options  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  options.hasOption(option))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  &&  options.hasOption(option))  {	  if(!allValues.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  options	33	None	replace
411	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "-- "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  &&  allValues.equals( "-- "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	82	1	replace
412	[BUG]  [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "-- "))  {  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "-- "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  &&  allValues.equals( "-- "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	82	1	replace
413	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals( "- ")||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals( "- ")||  arguments.hasNext())  {	  if(!allValues.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	35	1	replace
414	[BUG]  [BUGGY]  if(!allValues.equals( "- ")||  arguments.hasNext())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals( "- ")||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals( "- ")||  arguments.hasNext())  {	  if(!allValues.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	35	1	replace
415	[BUG]  [BUGGY]  if(allValues.equals(   "   ")||  allValues.equals(   "-   "))  {  if(allValues.equals( ".   ")||  allValues.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(   "   ")||  allValues.equals(   "-   "))  {  if(allValues.equals( ".   ")||  allValues.equals( "-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "   ")||    allValues.equals(   "-   "))    {    if(allValues.equals( ".   ")||  allValues.equals( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
416	[BUG]  [BUGGY]  Argument  option  =  options.getOption(ALL_VALUES);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  option  =  options.getOption(ALL_VALUES);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(ALL_VALUES);	  Argument    option    =    options.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
417	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  options.getOption(option,  arguments.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  options.getOption(option,  arguments.next());	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
418	[BUG]  [BUGGY]  if(option.looksLikeOption(allValuesQuoted)&&  arguments.previous())  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.looksLikeOption(allValuesQuoted)&&  arguments.previous())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.looksLikeOption(allValuesQuoted)&&  arguments.previous())  {	  if(option.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
419	[BUG]  [BUGGY]  if(!allValues.equals(   "n   "))  {  If(!allValues.equals(   "n   "))  {  [CE]  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(   "n   "))  {  If(!allValues.equals(   "n   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "n   "))    {    If(!allValues.equals(   "n   "))  {	  	non-compiled	[CE]  	125	None	add
420	[BUG]  [BUGGY]  if(option.hasOption(allValuesQuoted)&&  option.looksLikeOption(allValues))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasOption(allValuesQuoted)&&  option.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasOption(allValuesQuoted)&&  option.looksLikeOption(allValues))  {	  if(option.hasOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
421	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues!=  null  ||  allValues.equals( "* "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues!=  null  ||  allValues.equals( "* "))  {	  if(allValues    ==    null    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	99	1	replace
422	[BUG]  [BUGGY]  if(allValues!=  null  ||  allValues.equals( "* "))  {  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues!=  null  ||  allValues.equals( "* "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues!=  null  ||  allValues.equals( "* "))  {	  if(allValues    ==    null    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	99	1	replace
423	[BUG]  [BUGGY]  Argument  argument  =  resources.getOption(option,  allValuesQuoted);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.getOption(option,  allValuesQuoted);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.getOption(option,  allValuesQuoted);	  Argument    argument    =    resources.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	115	None	replace
424	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(option,  allValues);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(option,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(option,  allValues);	  Argument    argument    =    options.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
425	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(commandLine);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(commandLine);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(commandLine);	  Argument    argument    =    options.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
426	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(option,  option.next());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(option,  option.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(option,  option.next());	  Argument    argument    =    options.getOption(allValues,    option.next());    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
427	[BUG]  [BUGGY]  Validator  validator  =  option.getOption(ALL_VALues);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.getOption(ALL_VALues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.getOption(ALL_VALues);	  Validator    validator    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
428	[BUG]  [BUGGY]  Validator  validator  =  options.findValue(allValues);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  options.findValue(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  options.findValue(allValues);	  Validator    validator    =    option.findValue(allValues);    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
429	[BUG]  [BUGGY]  Validator  validator  =  option.findValue(allValues,  commandLine);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.findValue(allValues,  commandLine);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.findValue(allValues,  commandLine);	  Validator    validator    =    option.findValue(allValues);    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
430	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(option  ==  null  ||  commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValues)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
431	[BUG]  [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option  ==  null  ||  commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValues)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
432	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(option,  allValues.next(),  consumeRemaining);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(option,  allValues.next(),  consumeRemaining);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(option,  allValues.next(),  consumeRemaining);	  Argument    argument    =    options.getOption(option,    allValues.next());    	non-compiled	[CE]  'else'  without  'if'	71	None	replace
433	[BUG]  [BUGGY]  if(commandLine!=  null)  {  if(!allValues.equals(option))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine!=  null)  {  if(!allValues.equals(option))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine!=  null)  {  if(!allValues.equals(option))  {	  if(!allValues.equals(option))    {    If(!allValues.equals(option))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
434	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValues)||    arguments.hasNext())    {    if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
435	[BUG]  [BUGGY]  Validator  validator  =  option.evaluateValues();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.evaluateValues();  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.evaluateValues();	  Validator    validator    =    option.evaluateValue();    	non-compiled	[CE]  'else'  without  'if'	106	None	replace
436	[BUG]  [BUGGY]  Argument  argument  =  arguments.next(),  allValues  =  stripBoundaryQuotes(allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  arguments.next(),  allValues  =  stripBoundaryQuotes(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.next(),  allValues  =  stripBoundaryQuotes(allValues);	  Argument    argument    =    arguments.next(),    allValues;    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
437	[BUG]  [BUGGY]  Argument  argument  =  arguments.next(),  consumeRemaining;  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  arguments.next(),  consumeRemaining;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.next(),  consumeRemaining;	  Argument    argument    =    arguments.next(),    allValues;    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
438	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(option)||  arguments.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(option)||  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(option)||  arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValues)||    arguments.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	18	None	replace
439	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValues)||    arguments.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	18	None	replace
440	[BUG]  [BUGGY]  if(allValues.equals(option)||  arguments.hasNext())  {  if(allValues.equals(option)&|  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(option)||  arguments.hasNext())  {  if(allValues.equals(option)&|  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(option)||    arguments.hasNext())    {    if(allValues.equals(option)&|  arguments.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	51	None	add
441	[BUG]  [BUGGY]  if(!option.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!option.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!option.looksLikeOption(allValuesQuoted))  {	  if(!allValues.equals(commandLine))    {    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
442	[BUG]  [BUGGY]  if(option.equals(allValues)&&  arguments.previous())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]        AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.equals(allValues)&&  arguments.previous())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.equals(allValues)&&  arguments.previous())  {	  if(!allValues.equals(option)&&    arguments.previous())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	129	None	replace
443	[BUG]  [BUGGY]  if(!allValues.equals(option)&&  arguments.next())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]          AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(option)&&  arguments.next())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(option)&&  arguments.next())  {	  if(!allValues.equals(option)&&    arguments.previous())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	129	None	replace
444	[BUG]  [BUGGY]  Argument  argument  =  resources.get(allValues,  0);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.get(allValues,  0);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.get(allValues,  0);	  Argument    argument    =    resources.get(allValues);    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
445	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(option!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	92	1	replace
446	[BUG]  [BUGGY]  if(option!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	92	1	replace
447	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine!=  null  ||  commandLine.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(commandLine!=  null  ||  commandLine.looksLikeOption(allValues))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  AssertionFailedError  	92	1	replace
448	[BUG]  [BUGGY]  if(commandLine!=  null  ||  commandLine.looksLikeOption(allValues))  {  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine!=  null  ||  commandLine.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine!=  null  ||  commandLine.looksLikeOption(allValues))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  AssertionFailedError  	92	1	replace
449	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option!=  null  ||  commandLine.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(option!=  null  ||  commandLine.looksLikeOption(allValues))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  AssertionFailedError  	92	1	replace
450	[BUG]  [BUGGY]  if(option!=  null  ||  commandLine.looksLikeOption(allValues))  {  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option!=  null  ||  commandLine.looksLikeOption(allValues))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option!=  null  ||  commandLine.looksLikeOption(allValues))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  AssertionFailedError  	92	1	replace
451	[BUG]  [BUGGY]  if(option.hasArgs())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasArgs())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasArgs())  {	  if(option.hasArg())    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
452	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.lastIndexOf('.'):  0;  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.lastIndexOf('.'):  0;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.lastIndexOf('.'):  0;	  int    consumeRemaining    =    arguments.size()    >    maximum?    argumentCount.previous()    :    0;    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
453	[BUG]  [BUGGY]  if(option.hasOption(allValues)&&  option.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasOption(allValues)&&  option.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasOption(allValues)&&  option.looksLikeOption(allValuesQuoted))  {	  if(option.hasOption(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
454	[BUG]  [BUGGY]  if(option.hasOption(allValues)&&  options.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.hasOption(allValues)&&  options.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasOption(allValues)&&  options.looksLikeOption(allValuesQuoted))  {	  if(option.hasOption(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	119	None	replace
455	[BUG]  [BUGGY]  if(!allValues.isEmpty())  {  If(allValues.equals(option))  {  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty())  {  If(allValues.equals(option))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty())  {  If(allValues.equals(option))  {	  if(allValues.equals(option))    {    If(allValues.equals(option))    {    	non-compiled	[CE]  ';'  expected	14	None	replace
456	[BUG]  [BUGGY]  Argument  argument  =  arguments.next(),  DEFAULT_CONSUME_REMAINING);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  arguments.next(),  DEFAULT_CONSUME_REMAINING);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.next(),  DEFAULT_CONSUME_REMAINING);	  Argument    argument    =    arguments.next(),    allValues);    	non-compiled	[CE]  ';'  expected	62	None	replace
457	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.contains( "_ "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  ||  allValues.contains( "_ "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "_   "))    {    	compilable	  [FE]  AssertionFailedError  	84	1	replace
458	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.contains( "_ "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.contains( "_ "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  ||  allValues.contains( "_ "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "_   "))    {    	compilable	  [FE]  AssertionFailedError  	84	1	replace
459	[BUG]  [BUGGY]  Argument  option  =  options.getOption(option,  arguments.next(),  argumentCount);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  option  =  options.getOption(option,  arguments.next(),  argumentCount);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(option,  arguments.next(),  argumentCount);	  Argument    option    =    options.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	109	None	replace
460	[BUG]  [BUGGY]  Argument  option  =  options.getOption(option,  DEFAULT_CONSUME_REMAINING);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  option  =  options.getOption(option,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(option,  DEFAULT_CONSUME_REMAINING);	  Argument    option    =    options.getOption(option,    allValues);    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
461	[BUG]  [BUGGY]  If(!allValues.isEmpty())  {  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  If(!allValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	If(!allValues.isEmpty())  {	  if(allValues.equals(       "       "))    {    If(allValues.equals(       "       "))    {    	non-compiled	[CE]  ';'  expected	38	None	replace
462	[BUG]  [BUGGY]  Argument  argument  =  commandLine.addValue(option,  allValues);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  commandLine.addValue(option,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  commandLine.addValue(option,  allValues);	  Argument    argument    =    commandLine.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	66	None	replace
463	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.contains( "- "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  ||  allValues.contains( "- "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	82	1	replace
464	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.contains( "- "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.contains( "- "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  ||  allValues.contains( "- "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "-   "))    {    	compilable	  [FE]  AssertionFailedError  	82	1	replace
465	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(ALLValuesQuoted))  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(ALLValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(ALLValuesQuoted))  {	  if(allValues.equals(       "       "))    {    if(allValues.equals(   ",       "))    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	39	None	replace
466	[BUG]  [BUGGY]  Argument  option  =  resources.getOption(option);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  option  =  resources.getOption(option);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  resources.getOption(option);	  Argument    option    =    options.getOption(commandLine);    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
467	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.lastIndexOf('.'):  1;  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.lastIndexOf('.'):  1;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.lastIndexOf('.'):  1;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.previous()    :    1;    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
468	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.remaining()  :  1;  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.remaining()  :  1;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.remaining()  :  1;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.previous()    :    1;    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
469	[BUG]  [BUGGY]  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  If(allValues  ==  null  ||  allValues.equals(   "   "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues  ==  null  ||  allValues.equals(   "   "))  {  If(allValues  ==  null  ||  allValues.equals(   "   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues    ==    null    ||    allValues.equals(   "   "))    {    If(allValues  ==  null  ||  allValues.equals(   "   "))  {	  	non-compiled	[CE]  	98	None	add
470	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.contains( "* "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.contains( "* "))  {	  if(allValues.equals(   "*   "))    {    	compilable	  [FE]  ComparisonFailure  	41	1	replace
471	[BUG]  [BUGGY]  if(allValues.contains( "* "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.contains( "* "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.contains( "* "))  {	  if(allValues.equals(   "*   "))    {    	compilable	  [FE]  ComparisonFailure  	41	1	replace
472	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "-   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ")-   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "-   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ")-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "-   "))    {    if(!allValues.isEmpty()  ||  allValues.equals( ")-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
473	[BUG]  [BUGGY]  Argument  option  =  options.getOption(defaultValues);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  option  =  options.getOption(defaultValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(defaultValues);	  Argument    option    =    options.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
474	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine!=  null  &&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(commandLine!=  null  &&  arguments.hasNext())  {	  if(commandLine!=    null)    {    	compilable	  [FE]  ComparisonFailure  	122	1	replace
475	[BUG]  [BUGGY]  if(commandLine!=  null  &&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine!=  null  &&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine!=  null  &&  arguments.hasNext())  {	  if(commandLine!=    null)    {    	compilable	  [FE]  ComparisonFailure  	122	1	replace
476	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(0):  0;  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(0):  0;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(0):  0;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.get(argumentCount):    0;    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
477	[BUG]  [BUGGY]  Validator  validator  =  option.getOption(option,  arguments);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.getOption(option,  arguments);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.getOption(option,  arguments);	  Validator    validator    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
478	[BUG]  [BUGGY]  if(option  ==  null  ||  arguments.hasNext())  {  if(!allValues.equals(option))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null  ||  arguments.hasNext())  {  if(!allValues.equals(option))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option  ==  null  ||  arguments.hasNext())  {  if(!allValues.equals(option))  {	  if(!allValues.equals(option))    {    If(!allValues.equals(option))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
479	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option!=  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(option!=  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  AssertionFailedError  	92	1	replace
480	[BUG]  [BUGGY]  if(option!=  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option!=  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option!=  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  if(option    ==    null    ||    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  AssertionFailedError  	92	1	replace
481	[BUG]  [BUGGY]  if(allValues.isEmpty())  {  if(!allValues.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty())  {  if(!allValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty())    {    if(!allValues.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
482	[BUG]  [BUGGY]  if(option.looksLikeOption(allValuesQuoted)&&  arguments.next())  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option.looksLikeOption(allValuesQuoted)&&  arguments.next())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.looksLikeOption(allValuesQuoted)&&  arguments.next())  {	  if(option.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
483	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(allValues,  option.getDescription());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.validateValue(allValues,  option.getDescription());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.validateValue(allValues,  option.getDescription());	  Validator    validator    =    option.validateValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
484	[BUG]  [BUGGY]  Validator  validator  =  options.looksLikeOption(allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  options.looksLikeOption(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  options.looksLikeOption(allValues);	  Validator    validator    =    options.getOption(defaultValues);    	non-compiled	[CE]  'else'  without  'if'	114	None	replace
485	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty()  &&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.isEmpty()  &&  arguments.hasNext())  {	  if(allValues.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	45	1	replace
486	[BUG]  [BUGGY]  if(allValues.isEmpty()  &&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.isEmpty()  &&  arguments.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty()  &&  arguments.hasNext())  {	  if(allValues.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	45	1	replace
487	[BUG]  [BUGGY]  Option  option  =  option.getOption(consumeRemaining);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Option  option  =  option.getOption(consumeRemaining);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(consumeRemaining);	  Option    option    =    option.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
488	[BUG]  [BUGGY]  if(!allValues.equals(commandLine)&&  arguments.previous())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]        AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(commandLine)&&  arguments.previous())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(commandLine)&&  arguments.previous())  {	  if(!allValues.equals(option)&&    arguments.previous())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	129	None	replace
489	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum  &&  arguments.length  :  0;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum  &&  arguments.length  :  0;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum  &&  arguments.length  :  0;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.length    :    0;    	non-compiled	[CE]  ';'  expected	70	None	replace
490	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "_   "))  {  if(!allValues.isEmpty()  ||  allValues.equals(... "_   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "_   "))  {  if(!allValues.isEmpty()  ||  allValues.equals(... "_   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "_   "))    {    if(!allValues.isEmpty()  ||  allValues.equals(... "_   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
491	[BUG]  [BUGGY]  Argument  argument  =  arguments.next(),  DEFAULT_CONSUME_REMAINING;  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  arguments.next(),  DEFAULT_CONSUME_REMAINING;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.next(),  DEFAULT_CONSUME_REMAINING;	  Argument    argument    =    arguments.next(),    allValues;    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
492	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.contains( "* "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  ||  allValues.contains( "* "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "*   "))    {    	compilable	  [FE]  AssertionFailedError  	133	1	replace
493	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.contains( "* "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  ||  allValues.contains( "* "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  ||  allValues.contains( "* "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "*   "))    {    	compilable	  [FE]  AssertionFailedError  	133	1	replace
494	[BUG]  [BUGGY]  if(!allValues.equals(   "-   "))  {  if(!allValues.equals( ")-   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(   "-   "))  {  if(!allValues.equals( ")-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "-   "))    {    if(!allValues.equals( ")-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
495	[BUG]  [BUGGY]  Argument  argument  =  resources.get(option)+  1;  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.get(option)+  1;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.get(option)+  1;	  Argument    argument    =    resources.get(option);    	non-compiled	[CE]  'else'  without  'if'	47	None	replace
496	[BUG]  [BUGGY]  if(!commandLine.isEmpty())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!commandLine.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!commandLine.isEmpty())  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    If(commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
497	[BUG]  [BUGGY]  if(!commandLine.hasValues())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!commandLine.hasValues())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!commandLine.hasValues())  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    If(commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
498	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(option,  options.next());  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(option,  options.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(option,  options.next());	  Argument    argument    =    arguments.getOption(option,    options.next());    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
499	[BUG]  [BUGGY]  Validator  validator  =  option.findValue(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.findValue(allValuesQuoted);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.findValue(allValuesQuoted);	  Validator    validator    =    option.findValue(allValues);    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
500	[BUG]  [BUGGY]  Validator  validator  =  option.looksLikeOption(allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.looksLikeOption(allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.looksLikeOption(allValues);	  Validator    validator    =    option.findValue(allValues);    	non-compiled	[CE]  'else'  without  'if'	105	None	replace
501	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(allValues):  0;  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(allValues):  0;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(allValues):  0;	  int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.get(remainingCount):    0;    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
502	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.next()  :  0;  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.next()  :  0;  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.next()  :  0;	  int    consumeRemaining    =    arguments.size()    >    maximum?    argumentCount.previous()    :    0;    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
503	[BUG]  [BUGGY]  Validator  validator  =  options.getOption(ALL_VALUES);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  options.getOption(ALL_VALUES);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  options.getOption(ALL_VALUES);	  Validator    validator    =    options.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	67	None	replace
504	[BUG]  [BUGGY]  if(!allValues.contains(option.getName()))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.contains(option.getName()))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.contains(option.getName()))  {	  if(!allValues.equals(option.getName()))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
505	[BUG]  [BUGGY]  if(!allValues.equals(option.getQualifiedName()))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.equals(option.getQualifiedName()))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(option.getQualifiedName()))  {	  if(!allValues.equals(option.getName()))    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
506	[BUG]  [BUGGY]  Validator  validator  =  arguments.getOption(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  arguments.getOption(option,  arguments.next());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  arguments.getOption(option,  arguments.next());	  Validator    validator    =    arguments.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	68	None	replace
507	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(ALL_VALUES);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  options.getOption(ALL_VALUES);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(ALL_VALUES);	  Argument    argument    =    options.getOption(allValues);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
508	[BUG]  [BUGGY]  Argument  argument  =  option.addValue(consumeRemaining,  allValues);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  option.addValue(consumeRemaining,  allValues);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.addValue(consumeRemaining,  allValues);	  Argument    argument    =    option.next();    	non-compiled	[CE]  'else'  without  'if'	110	None	replace
509	[BUG]  [BUGGY]  if(allValues.equals(   "-   "))  {  if(allValues.equals( ")-   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.equals(   "-   "))  {  if(allValues.equals( ")-   "))  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "-   "))    {    if(allValues.equals( ")-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
510	[BUG]  [BUGGY]  if(!allValues.isEmpty())  {  if(!allValues.hasEmpty())  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty())  {  if(!allValues.hasEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty())    {    if(!allValues.hasEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	32	None	add
511	[BUG]  [BUGGY]  Argument  argument  =  resources.get(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Argument  argument  =  resources.get(allValuesQuoted);  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.get(allValuesQuoted);	  Argument    argument    =    resources.get(allValues);    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
512	[BUG]  [BUGGY]  if(!allValues.isEmpty()  &&  arguments.previous())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]    AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(!allValues.isEmpty()  &&  arguments.previous())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  &&  arguments.previous())  {	  if(!allValues.isEmpty())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	33	None	replace
513	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null  ||!allValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(option  ==  null  ||!allValues.isEmpty())  {	  if(!allValues.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	33	1	replace
514	[BUG]  [BUGGY]  if(option  ==  null  ||!allValues.isEmpty())  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(option  ==  null  ||!allValues.isEmpty())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option  ==  null  ||!allValues.isEmpty())  {	  if(!allValues.isEmpty())    {    	compilable	  [FE]  AssertionFailedError  	33	1	replace
515	[BUG]  [BUGGY]  if(allValues.hasNext())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(allValues.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.hasNext())  {	  if(allValues.equals(       "       "))    {    if(allValues.equals(   ".       "))    {    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
516	[BUG]  [BUGGY]  Validator  validator  =  option.findValue(allValues,  option.getDescription());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  Validator  validator  =  option.findValue(allValues,  option.getDescription());  [BUGGY]      if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.findValue(allValues,  option.getDescription());	  Validator    validator    =    option.findValue(allValues,    option.getValue());    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
517	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  if(commandLine.looksLikeOption(allValues)||  argument.hasNext())  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);        [BUGGY]  if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  if(commandLine.looksLikeOption(allValues)||  argument.hasNext())  {  [BUGGY]      while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValues)||    arguments.hasNext())    {    if(commandLine.looksLikeOption(allValues)||  argument.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
