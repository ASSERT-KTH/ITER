bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "   "))  {  if(!allValues.isEmpty()  ||  allValues.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "   "))  {  if(!allValues.isEmpty()  ||  allValues.equals(   "   "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "   "))    {    if(!allValues.isEmpty()  ||  allValues.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
2	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ".   "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "   "))    {    if(!allValues.isEmpty()  ||  allValues.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
3	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( ",   "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "   "))    {    if(!allValues.isEmpty()  ||  allValues.equals( ",   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
4	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "   "))  {  if(!allValues.isEmpty()  ||  allValues.equals(... "   "))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "   "))  {  if(!allValues.isEmpty()  ||  allValues.equals(... "   "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "   "))    {    if(!allValues.isEmpty()  ||  allValues.equals(... "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
5	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  argumentCount.previous()  :  0;  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  argumentCount.previous()  :  0;  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  argumentCount.previous()  :  0;	      int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.previous()    :    0;    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
6	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.previous()  :  1;  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.previous()  :  1;  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.previous()  :  1;	      int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.previous()    :    0;    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
7	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine.looksLikeOption(allValuesQuoted))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
8	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted))  {  If(commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted))  {  If(commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValuesQuoted))    {    If(commandLine.looksLikeOption(allValuesQuoted))  {	  	non-compiled	[CE]  ';'  expected	21	None	add
9	[BUG]  [BUGGY]  Argument  option  =  options.getOption(allValues);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  option  =  options.getOption(allValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(allValues);	      Argument    option    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOption(allValues);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Option  option  =  options.getOption(allValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  options.getOption(allValues);	      Argument    option    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
11	[BUG]  [BUGGY]  Argument  option  =  options.getOption(commandLine);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  option  =  options.getOption(commandLine);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(commandLine);	      Argument    option    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
12	[BUG]  [BUGGY]  Argument  option  =  options.getOption(option,  allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  option  =  options.getOption(option,  allValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(option,  allValues);	      Argument    option    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
13	[BUG]  [BUGGY]  if(allValues.equals(option))  {  if(allValues.equals(option))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals(option))  {  if(allValues.equals(option))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(option))    {    if(allValues.equals(option))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
14	[BUG]  [BUGGY]  if(allValues.equals(option))  {  If(allValues.equals(option))  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals(option))  {  If(allValues.equals(option))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(option))    {    If(allValues.equals(option))  {	  	non-compiled	[CE]  ';'  expected	6	None	add
15	[BUG]  [BUGGY]  if(option.hasArg()  &&  commandLine.looksLikeOption(allValues))  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(option.hasArg()  &&  commandLine.looksLikeOption(allValues))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasArg()  &&  commandLine.looksLikeOption(allValues))  {	  if(commandLine.looksLikeOption(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
16	[BUG]  [BUGGY]  if(option.hasArg()  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(option.hasArg()  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasArg()  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  if(commandLine.looksLikeOption(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValues))    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
18	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValues)||  arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValues))    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
19	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValues))    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
20	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValues))    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
21	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(allValues,  option.getValue());  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Validator  validator  =  option.validateValue(allValues,  option.getValue());  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.validateValue(allValues,  option.getValue());	      Validator    validator    =    option.getValue();    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
22	[BUG]  [BUGGY]  Validator  validator  =  options.getValue();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Validator  validator  =  options.getValue();  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  options.getValue();	      Validator    validator    =    option.getValue();    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
23	[BUG]  [BUGGY]  Validator  validator  =  option.findValue(allValues,  option.getValue());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Validator  validator  =  option.findValue(allValues,  option.getValue());  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.findValue(allValues,  option.getValue());	      Validator    validator    =    option.getValue();    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
24	[BUG]  [BUGGY]  Argument  argument  =  resources.get(allValues);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  resources.get(allValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.get(allValues);	      Argument    argument    =    options.get(allValues);    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
25	[BUG]  [BUGGY]  Argument  argument  =  arguments.get(allValues);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  arguments.get(allValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.get(allValues);	      Argument    argument    =    options.get(allValues);    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
26	[BUG]  [BUGGY]  Argument  argument  =  commandLine.get(allValues);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  commandLine.get(allValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  commandLine.get(allValues);	      Argument    argument    =    options.get(allValues);    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
27	[BUG]  [BUGGY]  if(!allValues.equals(option))  {  if(!allValues.equals(option))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals(option))  {  if(!allValues.equals(option))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(option))    {    if(!allValues.equals(option))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
28	[BUG]  [BUGGY]  if(!allValues.equals(option))  {  If(!allValues.equals(option))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals(option))  {  If(!allValues.equals(option))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(option))    {    If(!allValues.equals(option))  {	  	non-compiled	[CE]  ';'  expected	10	None	add
29	[BUG]  [BUGGY]  if(commandline.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  commandline  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(commandline.looksLikeOption(allValuesQuoted))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandline.looksLikeOption(allValuesQuoted))  {	  if(option.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  commandline	23	None	replace
30	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValues))  {  if(commandLine.looksLikeOption(allValues))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(commandLine.looksLikeOption(allValues))  {  if(commandLine.looksLikeOption(allValues))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValues))    {    if(commandLine.looksLikeOption(allValues))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
31	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValues))  {  If(commandLine.looksLikeOption(allValues))  {  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(commandLine.looksLikeOption(allValues))  {  If(commandLine.looksLikeOption(allValues))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValues))    {    If(commandLine.looksLikeOption(allValues))  {	  	non-compiled	[CE]  ';'  expected	17	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty())  {	  if(!allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	13	1	replace
33	[BUG]  [BUGGY]  if(!allValues.isEmpty())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty())  {	  if(!allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	13	1	replace
34	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals( "- "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals( "- "))  {	  if(!allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	13	1	replace
35	[BUG]  [BUGGY]  if(!allValues.equals( "- "))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals( "- "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals( "- "))  {	  if(!allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	13	1	replace
36	[BUG]  [BUGGY]  if(allValues.equals(   "   "))  {  if(allValues.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals(   "   "))  {  if(allValues.equals(   "   "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "   "))    {    if(allValues.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
37	[BUG]  [BUGGY]  if(allValues.equals(   "   "))  {  if(allValues.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals(   "   "))  {  if(allValues.equals( ".   "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "   "))    {    if(allValues.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
38	[BUG]  [BUGGY]  if(allValues.equals(   "   "))  {  If(allValues.equals(   "   "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals(   "   "))  {  If(allValues.equals(   "   "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "   "))    {    If(allValues.equals(   "   "))  {	  	non-compiled	[CE]  	8	None	add
39	[BUG]  [BUGGY]  if(allValues.equals(   "   "))  {  if(allValues.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals(   "   "))  {  if(allValues.equals( ",   "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(   "   "))    {    if(allValues.equals( ",   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals( "* "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.equals( "* "))  {	  if(allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
41	[BUG]  [BUGGY]  if(allValues.equals( "* "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals( "* "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals( "* "))  {	  if(allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals( "- "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.equals( "- "))  {	  if(allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
43	[BUG]  [BUGGY]  if(allValues.equals( "- "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals( "- "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals( "- "))  {	  if(allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.isEmpty())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.isEmpty())  {	  if(allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
45	[BUG]  [BUGGY]  if(allValues.isEmpty())  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.isEmpty())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.isEmpty())  {	  if(allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
46	[BUG]  [BUGGY]  Argument  argument  =  arguments.get(option);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  arguments.get(option);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.get(option);	      Argument    argument    =    options.get(option);    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
47	[BUG]  [BUGGY]  Argument  argument  =  resources.get(option);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  resources.get(option);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.get(option);	      Argument    argument    =    options.get(option);    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
48	[BUG]  [BUGGY]  Argument  argument  =  commandLine.get(option);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  commandLine.get(option);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  commandLine.get(option);	      Argument    argument    =    options.get(option);    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
49	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(option.equals(allValues))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(option.equals(allValues))  {	  if(allValues.equals(option))    {    	compilable	  [FE]  ComparisonFailure  	7	1	replace
50	[BUG]  [BUGGY]  if(option.equals(allValues))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(option.equals(allValues))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.equals(allValues))  {	  if(allValues.equals(option))    {    	compilable	  [FE]  ComparisonFailure  	7	1	replace
51	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals(option)||  arguments.hasNext())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.equals(option)||  arguments.hasNext())  {	  if(allValues.equals(option))    {    	compilable	  [FE]  ComparisonFailure  	7	1	replace
52	[BUG]  [BUGGY]  if(allValues.equals(option)||  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals(option)||  arguments.hasNext())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(option)||  arguments.hasNext())  {	  if(allValues.equals(option))    {    	compilable	  [FE]  ComparisonFailure  	7	1	replace
53	[BUG]  [BUGGY]  if(!allValues.equals(   "   "))  {  if(!allValues.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals(   "   "))  {  if(!allValues.equals(   "   "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "   "))    {    if(!allValues.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
54	[BUG]  [BUGGY]  if(!allValues.equals(   "   "))  {  if(!allValues.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals(   "   "))  {  if(!allValues.equals( ".   "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "   "))    {    if(!allValues.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
55	[BUG]  [BUGGY]  if(!allValues.equals(   "   "))  {  if(!allValues.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals(   "   "))  {  if(!allValues.equals( ",   "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "   "))    {    if(!allValues.equals( ",   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
56	[BUG]  [BUGGY]  if(!allValues.equals(   "   "))  {  If(!allValues.equals(   "   "))  {  [CE]  [FE]          AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals(   "   "))  {  If(!allValues.equals(   "   "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "   "))    {    If(!allValues.equals(   "   "))  {	  	non-compiled	[CE]  	12	None	add
57	[BUG]  [BUGGY]  Option  option  =  option.getOption(allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Option  option  =  option.getOption(allValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(allValues);	      Option    option    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  options.getOption(option);	      Option    option    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
59	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Option  option  =  option.getOption(commandLine);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(commandLine);	      Option    option    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
60	[BUG]  [BUGGY]  Option  option  =  option.getOption(arguments);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Option  option  =  option.getOption(arguments);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(arguments);	      Option    option    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
61	[BUG]  [BUGGY]  Argument  argument  =  options.next();  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  options.next();  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.next();	      Argument    argument    =    arguments.next();    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
62	[BUG]  [BUGGY]  Argument  argument  =  arguments.next(),  allValues);  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  arguments.next(),  allValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.next(),  allValues);	      Argument    argument    =    arguments.next();    	non-compiled	[CE]  ';'  expected	1	None	replace
63	[BUG]  [BUGGY]  Argument  argument  =  arguments.next(),  allValues;  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  arguments.next(),  allValues;  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.next(),  allValues;	      Argument    argument    =    arguments.next();    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
64	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(allValues);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  options.getOption(allValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(allValues);	      Argument    argument    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
65	[BUG]  [BUGGY]  Argument  argument  =  arguments.getOption(option);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  arguments.getOption(option);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.getOption(option);	      Argument    argument    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
66	[BUG]  [BUGGY]  Argument  argument  =  commandLine.getOption(option);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  commandLine.getOption(option);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  commandLine.getOption(option);	      Argument    argument    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
67	[BUG]  [BUGGY]  Validator  validator  =  options.getOption(allValues);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Validator  validator  =  options.getOption(allValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  options.getOption(allValues);	      Validator    validator    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
68	[BUG]  [BUGGY]  Validator  validator  =  arguments.getOption(option);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Validator  validator  =  arguments.getOption(option);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  arguments.getOption(option);	      Validator    validator    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
69	[BUG]  [BUGGY]  Validator  validator  =  option.getOption(option);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Validator  validator  =  option.getOption(option);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.getOption(option);	      Validator    validator    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
70	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.length  :  0;  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.length  :  0;  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.length  :  0;	      int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.remaining()    :    0;    	non-compiled	[CE]  'else'  without  'if'	26	None	replace
71	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(option,  allValues.next());  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  options.getOption(option,  allValues.next());  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(option,  allValues.next());	      Argument    argument    =    options.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
72	[BUG]  [BUGGY]  Argument  argument  =  option.getOption(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  option.getOption(option,  arguments.next());  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.getOption(option,  arguments.next());	      Argument    argument    =    options.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
73	[BUG]  [BUGGY]  Argument  argument  =  arguments.getOption(option,  options.next());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  arguments.getOption(option,  options.next());  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  arguments.getOption(option,  options.next());	      Argument    argument    =    options.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
74	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(argumentCount):  0;  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(argumentCount):  0;  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(argumentCount):  0;	      int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.get(remaining):    0;    	non-compiled	[CE]  'else'  without  'if'	28	None	replace
75	[BUG]  [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(remainingCount):  0;  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(remainingCount):  0;  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	int  consumeRemaining  =  arguments.size()  >  maximum?  arguments.get(remainingCount):  0;	      int    consumeRemaining    =    arguments.size()    >    maximum?    arguments.get(remaining):    0;    	non-compiled	[CE]  'else'  without  'if'	28	None	replace
76	[BUG]  [BUGGY]  Option  option  =  options.getOption(ALL_VALUES);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Option  option  =  options.getOption(ALL_VALUES);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  options.getOption(ALL_VALUES);	      Option    option    =    option.getOption(ALL_VALUES);    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
77	[BUG]  [BUGGY]  Option  option  =  option.getOption(ALL_VALUES,  allValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Option  option  =  option.getOption(ALL_VALUES,  allValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(ALL_VALUES,  allValues);	      Option    option    =    option.getOption(ALL_VALUES);    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
78	[BUG]  [BUGGY]  Option  option  =  option.getOption(DEFAULT_CONSUME_REMAINING);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Option  option  =  option.getOption(DEFAULT_CONSUME_REMAINING);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(DEFAULT_CONSUME_REMAINING);	      Option    option    =    option.getOption(ALL_VALUES);    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
79	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "   "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  &&  allValues.equals( "   "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
80	[BUG]  [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "   "))  {  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty()  &&  allValues.equals( "   "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  &&  allValues.equals( "   "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	20	1	replace
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "- "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  ||  allValues.equals( "- "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
82	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "- "))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "- "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  ||  allValues.equals( "- "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "_ "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  ||  allValues.equals( "_ "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
84	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "_ "))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "_ "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  ||  allValues.equals( "_ "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
85	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals(option)&&  arguments.hasNext())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals(option)&&  arguments.hasNext())  {	  if(!allValues.equals(option))    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
86	[BUG]  [BUGGY]  if(!allValues.equals(option)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals(option)&&  arguments.hasNext())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(option)&&  arguments.hasNext())  {	  if(!allValues.equals(option))    {    	compilable	  [FE]  ComparisonFailure  	11	1	replace
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals(commandLine))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals(commandLine))  {	  if(!allValues.equals(option))    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
88	[BUG]  [BUGGY]  if(!allValues.equals(commandLine))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals(commandLine))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(commandLine))  {	  if(!allValues.equals(option))    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
89	[BUG]  [BUGGY]  if(!allValues.equals(option.getName()))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals(option.getName()))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(option.getName()))  {	  if(!allValues.equals(option))    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
90	[BUG]  [BUGGY]  if(option.hasArg()  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(option.hasArg()  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasArg()  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
91	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	22	1	replace
92	[BUG]  [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	22	1	replace
93	[BUG]  [BUGGY]  if(option.hasArg()  ||  commandLine.looksLikeOption(allValues))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(option.hasArg()  ||  commandLine.looksLikeOption(allValues))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasArg()  ||  commandLine.looksLikeOption(allValues))  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
94	[BUG]  [BUGGY]  if(option.hasArg())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(option.hasArg())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasArg())  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals( " ")||  arguments.hasNext())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals( " ")||  arguments.hasNext())  {	  if(!allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	13	1	replace
96	[BUG]  [BUGGY]  if(!allValues.equals( " ")||  arguments.hasNext())  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals( " ")||  arguments.hasNext())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals( " ")||  arguments.hasNext())  {	  if(!allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	13	1	replace
97	[BUG]  [BUGGY]  Argument  argument  =  options.getOption(allValues,  option.next());  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  options.getOption(allValues,  option.next());  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  options.getOption(allValues,  option.next());	      Argument    argument    =    options.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
98	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues  ==  null  ||  allValues.equals( " "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues  ==  null  ||  allValues.equals( " "))  {	  if(allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
99	[BUG]  [BUGGY]  if(allValues  ==  null  ||  allValues.equals( " "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues  ==  null  ||  allValues.equals( " "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues  ==  null  ||  allValues.equals( " "))  {	  if(allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
100	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues!=  null  ||  allValues.equals( " "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues!=  null  ||  allValues.equals( " "))  {	  if(allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	9	1	replace
101	[BUG]  [BUGGY]  if(allValues!=  null  ||  allValues.equals( " "))  {  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues!=  null  ||  allValues.equals( " "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues!=  null  ||  allValues.equals( " "))  {	  if(allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	9	1	replace
102	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals( " ")||  allValues.equals( "- "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.equals( " ")||  allValues.equals( "- "))  {	  if(allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
103	[BUG]  [BUGGY]  if(allValues.equals( " ")||  allValues.equals( "- "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals( " ")||  allValues.equals( "- "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals( " ")||  allValues.equals( "- "))  {	  if(allValues.equals(   "   "))    {    	compilable	  [FE]  ComparisonFailure  	9	1	replace
104	[BUG]  [BUGGY]  Argument  argument  =  values.get(allValues);  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  values.get(allValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  values.get(allValues);	      Argument    argument    =    options.get(allValues);    	non-compiled	[CE]  'else'  without  'if'	14	None	replace
105	[BUG]  [BUGGY]  Validator  validator  =  option.findValue(allValues);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Validator  validator  =  option.findValue(allValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.findValue(allValues);	      Validator    validator    =    option.getValue();    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
106	[BUG]  [BUGGY]  Validator  validator  =  option.evaluateValue();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Validator  validator  =  option.evaluateValue();  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.evaluateValue();	      Validator    validator    =    option.getValue();    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
107	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine.looksLikeOption(allValuesQUoted))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine.looksLikeOption(allValuesQUoted))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine.looksLikeOption(allValuesQUoted))  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
108	[BUG]  [BUGGY]  if(!allValues.equals(   "   "))  {  if(!allValues.equals( "))  {  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals(   "   "))  {  if(!allValues.equals( "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(   "   "))    {    if(!allValues.equals( "))  {	  	non-compiled	[CE]  unclosed  string  literal	12	None	add
109	[BUG]  [BUGGY]  Argument  option  =  options.getOption(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  option  =  options.getOption(option,  arguments.next());  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  option  =  options.getOption(option,  arguments.next());	      Argument    option    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	15	None	replace
110	[BUG]  [BUGGY]  Argument  argument  =  option.next();  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  option.next();  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.next();	      Argument    argument    =    arguments.next();    	non-compiled	[CE]  'else'  without  'if'	1	None	replace
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!option.equals(allValues))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!option.equals(allValues))  {	  if(!allValues.equals(option))    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
112	[BUG]  [BUGGY]  if(!option.equals(allValues))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!option.equals(allValues))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!option.equals(allValues))  {	  if(!allValues.equals(option))    {    	compilable	  [FE]  AssertionFailedError  	11	1	replace
113	[BUG]  [BUGGY]  if(allValues.equals(option))  {  if(AllValues.equals(option))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(allValues.equals(option))  {  if(AllValues.equals(option))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(option))    {    if(AllValues.equals(option))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
114	[BUG]  [BUGGY]  Validator  validator  =  options.getOption(defaultValues);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Validator  validator  =  options.getOption(defaultValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  options.getOption(defaultValues);	      Validator    validator    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
115	[BUG]  [BUGGY]  Argument  argument  =  resources.getOption(option);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  resources.getOption(option);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.getOption(option);	      Argument    argument    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
116	[BUG]  [BUGGY]  Argument  argument  =  option.getOption(option);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  option.getOption(option);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  option.getOption(option);	      Argument    argument    =    options.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
117	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultValues);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Option  option  =  option.getOption(defaultValues);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(defaultValues);	      Option    option    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
118	[BUG]  [BUGGY]  Validator  validator  =  option.hasValue()?  option.getValue()  :  null;  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Validator  validator  =  option.hasValue()?  option.getValue()  :  null;  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Validator  validator  =  option.hasValue()?  option.getValue()  :  null;	      Validator    validator    =    option.getValue();    	non-compiled	[CE]  'else'  without  'if'	2	None	replace
119	[BUG]  [BUGGY]  if(option.hasOption(allValues))  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(option.hasOption(allValues))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasOption(allValues))  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
120	[BUG]  [BUGGY]  if(option.hasOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(option.hasOption(allValuesQuoted))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasOption(allValuesQuoted))  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(commandLine!=  null)  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(commandLine!=  null)  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
122	[BUG]  [BUGGY]  if(commandLine!=  null)  {  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(commandLine!=  null)  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(commandLine!=  null)  {	  if(commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  AssertionFailedError  	22	1	replace
123	[BUG]  [BUGGY]  if(option.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(option.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  if(option.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
124	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( "))  {  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals(   "   "))  {  if(!allValues.isEmpty()  ||  allValues.equals( "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()    ||    allValues.equals(   "   "))    {    if(!allValues.isEmpty()  ||  allValues.equals( "))  {	  	non-compiled	[CE]  unclosed  string  literal	19	None	add
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals( "n "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals( "n "))  {	  if(!allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	13	1	replace
126	[BUG]  [BUGGY]  if(!allValues.equals( "n "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals( "n "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals( "n "))  {	  if(!allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	13	1	replace
127	[BUG]  [BUGGY]  if(option.hasValues())  {  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(option.hasValues())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasValues())  {	  if(commandLine.looksLikeOption(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
128	[BUG]  [BUGGY]  if(option.hasArg()  ||  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(option.hasArg()  ||  arguments.hasNext())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(option.hasArg()  ||  arguments.hasNext())  {	  if(commandLine.looksLikeOption(allValues))    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
129	[BUG]  [BUGGY]  if(!allValues.equals(option)&&  arguments.previous())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.equals(option)&&  arguments.previous())  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(option)&&  arguments.previous())  {	  if(!allValues.equals(option))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	11	None	replace
130	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultValuesQuoted);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Option  option  =  option.getOption(defaultValuesQuoted);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Option  option  =  option.getOption(defaultValuesQuoted);	      Option    option    =    option.getOption(option);    	non-compiled	[CE]  'else'  without  'if'	5	None	replace
131	[BUG]  [BUGGY]  Argument  argument  =  resources.getOption(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  Argument  argument  =  resources.getOption(option,  arguments.next());  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	Argument  argument  =  resources.getOption(option,  arguments.next());	      Argument    argument    =    options.getOption(option,    arguments.next());    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
132	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "* "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.isEmpty()  ||  allValues.equals( "* "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
133	[BUG]  [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "* "))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);      [BUGGY]  if(!allValues.isEmpty()  ||  allValues.equals( "* "))  {  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.isEmpty()  ||  allValues.equals( "* "))  {	  if(!allValues.isEmpty()    ||    allValues.equals(   "   "))    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
