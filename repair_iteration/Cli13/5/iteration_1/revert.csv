projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.getValue();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.get(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(ALL_VALUES);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValuesQuoted.equals(consumeRemaining)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.get(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.remaining():0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.previous():0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.get(remaining):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("")){if(!allValues.isEmpty()||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("")){if(!allValues.isEmpty()||allValues.equals(".")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("")){if(!allValues.isEmpty()||allValues.equals(",")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("")){if(!allValues.isEmpty()||allValues.equals(..."")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?argumentCount.previous():0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.previous():1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValuesQuoted)){if(commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValuesQuoted)){If(commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(option,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option)){if(allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option)){If(allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()&&commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()&&commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.validateValue(allValues,option.getValue());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getValue();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues,option.getValue());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.get(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.get(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.get(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)){if(!allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)){If(!allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandline.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)){if(commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)){If(commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")){if(allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")){if(allValues.equals(".")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")){If(allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")){if(allValues.equals(",")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.get(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.get(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.get(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.equals(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")){if(!allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")){if(!allValues.equals(".")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")){if(!allValues.equals(",")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")){If(!allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next(),allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next(),allValues;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=arguments.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.length:0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(option,allValues.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getOption(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.getOption(option,options.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.get(argumentCount):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.get(remainingCount):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(ALL_VALUES);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(ALL_VALUES,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(DEFAULT_CONSUME_REMAINING);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("_")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(commandLine)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option.getName())){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()||commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option==null||commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()||commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(allValues,option.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues==null||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues!=null||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")||allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=values.get(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.evaluateValue();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValuesQuoted)){if(commandLine.looksLikeOption(allValuesQUoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")){if(!allValues.equals(")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!option.equals(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option)){if(AllValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getOption(defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.hasValue()?option.getValue():null;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine!=null){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.looksLikeOption(allValuesQuoted)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("")){if(!allValues.isEmpty()||allValues.equals(")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("n")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasValues()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)&&arguments.previous()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(defaultValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.getOption(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("*")){
