projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.getValue();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.get(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(ALL_VALUES);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValuesQuoted.equals(consumeRemaining)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.get(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.remaining():0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.previous():0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.get(remaining):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("")){if(!allValues.isEmpty()||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("")){if(!allValues.isEmpty()||allValues.equals(".")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("")){if(!allValues.isEmpty()||allValues.equals(",")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("")){if(!allValues.isEmpty()||allValues.equals(..."")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?argumentCount.previous():0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.previous():1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValuesQuoted)){if(commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValuesQuoted)){If(commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(option,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option)){if(allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option)){If(allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()&&commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()&&commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.validateValue(allValues,option.getValue());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getValue();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues,option.getValue());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.get(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.get(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.get(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)){if(!allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)){If(!allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandline.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)){if(commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)){If(commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")){if(allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")){if(allValues.equals(".")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")){If(allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")){if(allValues.equals(",")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.get(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.get(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.get(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.equals(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")){if(!allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")){if(!allValues.equals(".")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")){if(!allValues.equals(",")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")){If(!allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next(),allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next(),allValues;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=arguments.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.length:0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(option,allValues.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getOption(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.getOption(option,options.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.get(argumentCount):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.get(remainingCount):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(ALL_VALUES);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(ALL_VALUES,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(DEFAULT_CONSUME_REMAINING);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("_")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(commandLine)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option.getName())){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()||commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option==null||commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()||commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(allValues,option.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues==null||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues!=null||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")||allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=values.get(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.evaluateValue();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValuesQuoted)){if(commandLine.looksLikeOption(allValuesQUoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")){if(!allValues.equals(")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!option.equals(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option)){if(AllValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getOption(defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.hasValue()?option.getValue():null;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine!=null){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.looksLikeOption(allValuesQuoted)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("")){if(!allValues.isEmpty()||allValues.equals(")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("n")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasValues()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)&&arguments.previous()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(defaultValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.getOption(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.getValue(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.get(option,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.get(option.toString());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals(",")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()){if(!allValues.isEmpty()||allValues.equals(",")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("n")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("[")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("*")||allValues.equals("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("*")&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("-")){if(!allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("-")){if(!allValues.equals(".-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("-")){if(!allValues.equals(",-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("-")){If(!allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.get(option,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.get(argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.get(option.toString());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.looksLikeOption(allValues)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()&&commandLine.looksLikeOption(allValues)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues==null||allValues.equals("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues==null||allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.contains("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){if(!allValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){If(!allValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues!=null||allValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues==null||allValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()||arguments.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.hasValue()?options.getValue():null;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.hasValue()?option.getRawValue():null;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.hasValue()?option.getKey():null;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.equals(allValues)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()||allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(defaultValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(arguments.hasNext()||option.hasArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(arguments.hasNext()||option.hasArgumentCount()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(arguments.hasArg()||option.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getOption(allValues,argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getOption(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=resources.getOption(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(commandLine,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&allValues.equals("")){if(!allValues.isEmpty()&&allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&allValues.equals("")){if(!allValues.isEmpty()&&allValues.equals(".")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&allValues.equals("")){if(!allValues.isEmpty()&&allValues.equals(",")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&allValues.equals("")){if(!allValues.isEmpty()&&allValues.equals(?"")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(option,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option!=null){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option==null){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(arguments!=null){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(DEFAULT_CONSUME_REMAINING,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(ALL_VALUES,allValues,consumeRemaining);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(ALL_VALUES,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.equals(allValues)){if(option.equals(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.equals(allValues)){If(option.equals(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option)||arguments.hasNext()){if(allValues.equals(option)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option)||arguments.hasNext()){If(allValues.equals(option)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(arguments.hasArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>minimum?arguments.previous():1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasValue(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.contains(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()){If(allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()){if(allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)&&arguments.hasNext()){if(commandLine.looksLikeOption(allValues)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)&&arguments.hasNext()){If(commandLine.looksLikeOption(allValues)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)&&arguments.hasNext()){if(commandLine.looksLikeOption(allValues)&&argumentCount.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()){if(!allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){if(!allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValuesQuoted)){if(!allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues!=null||!allValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getOption(option,allValues.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getOption(allValues,option.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getOption(option,arguments.next(),allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("*")){if(allValues.equals("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("*")){if(allValues.equals(".*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("*")){if(allValues.equals(",*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("*")){If(allValues.equals("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=commandLine.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151option=option.getOption(consumeRemaining);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=resourceHelper.getOption(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues!=null||allValues.equals("")){if(allValues!=null||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues!=null||allValues.equals("")){if(allValues==null||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues!=null||allValues.equals("")){if(allValues!=null||allValues.equals(".")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine!=null||commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option==null&&commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option==null||commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine==null||commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(ALL_VALUES,ALL_VALUES);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(allValues,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>minimum?arguments.previous():0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.removeValue(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getArgument();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getValue(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)&&arguments.hasNext()){if(!allValues.equals(option)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)&&arguments.hasNext()){If(!allValues.equals(option)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)&&arguments.hasNext()){if(!allValues.equals(option)&&argument.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues!=null&&allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next(),allValues,consumeRemaining);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.next(),allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next(),allValues,commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next(),allValues,description);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("-")||allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("-")&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("*")||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")||arguments.hasNext()){if(!allValues.equals("")||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")||arguments.hasNext()){if(!allValues.equals(".")||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")||arguments.hasNext()){If(!allValues.equals("")||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("")||arguments.hasNext()){if(!allValues.equals(",")||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!option.equals(allValues)){if(!option.equals(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!option.equals(allValues)){If(!option.equals(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.next(),allValues;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.get(argumentCount).next(),allValues;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next(),allValues,consumeRemaining;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&allValues.equals("__")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&allValues.equals("_")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("__")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine!=null){if(commandLine!=null){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine!=null){if(commandLine==null){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine!=null){if(commandLine>=null){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine!=null){If(commandLine!=null){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine!=null){if(commandLine>>null){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("n")){if(!allValues.equals("n")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("n")){if(!allValues.equals(".")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("n")){if(!allValues.equals(".n")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("n")){if(!allValues.equals(",n")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.getOption(option,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.getOption(option,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(arguments.equals(option)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.contains("n")||allValues.contains("n")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(allValues,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()){if(!allValues.isEmpty()||allValues.equals(".")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){if(!allValues.isEmpty()||allValues.equals(".")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues==null||allValues.equals("")){if(allValues==null||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues==null||allValues.equals("")){if(allValues==null||allValues.equals(".")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues==null||allValues.equals("")){if(allValues!=null||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){If(!allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){if(!allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151||!allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("-")){if(!allValues.isEmpty()||allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("-")){if(!allValues.isEmpty()||allValues.equals(".-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("-")){if(!allValues.isEmpty()||allValues.equals(",-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("-")){If(!allValues.isEmpty()||allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.getOption(option,options.next(),allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues,description);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues,argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(option,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!option.equals(allValues)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!option.equals(allValues)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.getOption(option,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.getArgumentValue(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.getArgument(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")||allValues.equals("-")){if(allValues.equals("")||allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")||allValues.equals("-")){if(allValues.equals("")||allValues.equals(".-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.evaluateValue(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.evaluate(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.evaluate();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=arguments.getOption(option,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.getOption(arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=arguments.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getValue(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getValue(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.get(allValues.size()-1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.length-1:0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.length:1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(allValues,option.next(),arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(allValuesQuoted,option.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getArgument(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getArgumentValue(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option==null||commandLine.looksLikeOption(allValuesQuoted)){if(option==null||commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option==null||commandLine.looksLikeOption(allValuesQuoted)){if(option!=null||commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option==null||commandLine.looksLikeOption(allValuesQuoted)){If(option==null||commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()){if(allValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()){If(allValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()){if(AllValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.getValue(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.getValue(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.validateValue(allValues,options.getValue());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.validateValue(allValues,allValues.getValue());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.validateValue(allValues,option.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.validateValue(allValues,argument.getValue());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.contains("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("-")||!allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasValues()||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasValues()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasValues()&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(option,allValues.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(option,arguments.next(),allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(commandLine,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasOption(allValuesQuoted)||options.hasOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasOption(allValuesQuoted)||option.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasOption(allValuesQuoted)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151If(commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()){If(commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151If(commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151If(commandLine.looksLikeOption(allValues)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)||arguments.hasNext()){if(commandLine.looksLikeOption(allValues)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)||arguments.hasNext()){If(commandLine.looksLikeOption(allValues)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValuesQuoted)||commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){if(allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){If(!allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!option.equals(allValues)&&arguments.previous()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!arguments.equals(option)&&arguments.previous()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)&&arguments.previous()||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("*")){if(!allValues.isEmpty()||allValues.equals("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("*")){if(!allValues.isEmpty()||allValues.equals(".*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("*")){if(!allValues.isEmpty()||allValues.equals(",*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("*")){if(!allValues.isEmpty()||allValues.equals(..."*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValuesQuoted)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValuesQuoted)&&arguments.previous()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(arguments.looksLikeOption(allValuesQuoted)&&option.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(parameters.looksLikeOption(allValuesQuoted)&&option.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>minimum?arguments.get(argumentCount):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>minimum?arguments.get(remainingCount):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(arguments,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.equals(allValues)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(commandLine)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.contains("n")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues,allValues.getValue());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues,options.getValue());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues,option.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues,option.getKey());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()){if(!allValues.isEmpty()||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()){if(!allValues.isEmpty()||allValues.equals(")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()&&commandLine.looksLikeOption(allValues)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.looksLikeOption(allValues)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasOption(allValues)||options.hasOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasOption(allValues)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(option,allValues.next(),arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(option,allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(option,allValues.get(0));
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.get(allValues,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.get(allValues,description);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.get(allValues-1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("_")){if(!allValues.isEmpty()||allValues.equals("_")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("_")){if(!allValues.isEmpty()||allValues.equals("._")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("_")){if(!allValues.isEmpty()||allValues.equals(",_")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("_")){If(!allValues.isEmpty()||allValues.equals("_")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(DEFAULT_CONSUME_REMAINING);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(ALL_VALues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()){if(!allValues.isEmpty()||allValues.equals(...")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals(..."")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){If(allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()){If(allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.size()>maximum){If(allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasArg()||option.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasArg()||commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasArg()||options.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getOption(arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.getOption(option,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getOption(argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151If(commandLine.looksLikeOption(allValues)||commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151If(commandLine.looksLikeOption(allValues)||commandLine.looksBoundaryQuotes(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasArg()&&option.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasArg()&&options.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandline.hasArg()&&option.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.getValue(option,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&allValues.equals("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()||allValues.equals("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("null")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("false")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(commandLine)){if(!allValues.equals(commandLine)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(commandLine)){If(!allValues.equals(commandLine)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!option.equals(allValues.getName())){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option.getName())||option.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option.getName())||options.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getOption(defaultValues,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.get(argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.get(option.toString());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){if(!allValues.isEmpty()||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.get(argumentCount-1):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.get(argumentCount+1):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.getOption(option,allValues.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.getOption(option,arguments.next(),allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("-")){if(allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("-")){if(allValues.equals(".-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("-")){if(allValues.equals(",-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("-")){If(allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasArg()||option.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasArg()||commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasArg()||options.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasArg()&&option.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.hasArg()&&options.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandline.hasArg()&&option.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){if(AllValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(AllValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.getArgumentOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues==null||allValues.equals("")){if(allValues==null||allValues.equals(",")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues==null||allValues.equals("")){if(allValues==null||allValues.equals(")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.validateValue(allValues,option.getKey());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.validateValue(allValues,option.getArgument());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.validateValue(allValues,option.getOption());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!options.equals(allValues.getName())){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!commandLine.equals(option.getName())){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(defaultValues,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next(),allValues,consumptionRemaining);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(arguments.hasNext()||option.hasArgument()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues,option.getArgument());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues,option.getOption());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getOption(option,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option==null||!allValues.equals(option)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArg()&&!allValues.equals(option)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(maximum>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.hasValue()?option.next():null;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=resources.getOption(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues!=null||allValues.equals("")){if(allValues!=null||allValues.equals(..."")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues!=null||allValues.equals("")){if(allValues!=null||allValues.equals(")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.getOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.getOption(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!option.equals(allValues)&&arguments.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getValue(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>minimum?arguments.length:0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("*")){If(!allValues.isEmpty()||allValues.equals("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)&&arguments.previous()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.size():1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.last():1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues!=null){If(allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues==null){If(allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.getOption(option,options.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&allValues.equals("")){if(!allValues.isEmpty()&&allValues.equals(")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(ALL_VALUES,ALL_VALUES);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&options.hasOption(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&allValues.equals("--")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("-")||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("")||allValues.equals("-")){if(allValues.equals(".")||allValues.equals("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(ALL_VALUES);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=options.getOption(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.looksLikeOption(allValuesQuoted)&&arguments.previous()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("n")){If(!allValues.equals("n")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasOption(allValuesQuoted)&&option.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues!=null||allValues.equals("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.getOption(option,allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(option,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(option,option.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.getOption(ALL_VALues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.findValue(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues,commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option==null||commandLine.looksLikeOption(allValues)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(option,allValues.next(),consumeRemaining);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine!=null){if(!allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)||arguments.hasNext()){if(commandLine.looksLikeOption(allValues)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.evaluateValues();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next(),allValues=stripBoundaryQuotes(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next(),consumeRemaining;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(option)||arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(option)&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option)||arguments.hasNext()){if(allValues.equals(option)&|arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!option.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.equals(allValues)&&arguments.previous()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option)&&arguments.next()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.get(allValues,0);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option!=null&&commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine!=null||commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option!=null||commandLine.looksLikeOption(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasArgs()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.lastIndexOf('.'):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasOption(allValues)&&option.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.hasOption(allValues)&&options.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){If(allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next(),DEFAULT_CONSUME_REMAINING);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.contains("_")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(option,arguments.next(),argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(option,DEFAULT_CONSUME_REMAINING);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151If(!allValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=commandLine.addValue(option,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.contains("-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(ALLValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=resources.getOption(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.lastIndexOf('.'):1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.remaining():1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues==null||allValues.equals("")){If(allValues==null||allValues.equals("")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.contains("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("-")){if(!allValues.isEmpty()||allValues.equals(")-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentoption=options.getOption(defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine!=null&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.get(0):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.getOption(option,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option==null||arguments.hasNext()){if(!allValues.equals(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option!=null||commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()){if(!allValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option.looksLikeOption(allValuesQuoted)&&arguments.next()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.validateValue(allValues,option.getDescription());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.looksLikeOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.isEmpty()&&arguments.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Optionoption=option.getOption(consumeRemaining);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(commandLine)&&arguments.previous()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum&&arguments.length:0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.equals("_")){if(!allValues.isEmpty()||allValues.equals(..."_")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=arguments.next(),DEFAULT_CONSUME_REMAINING;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()||allValues.contains("*")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals("-")){if(!allValues.equals(")-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.get(option)+1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!commandLine.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!commandLine.hasValues()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(option,options.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.looksLikeOption(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.get(allValues):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151intconsumeRemaining=arguments.size()>maximum?arguments.next():0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=options.getOption(ALL_VALUES);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.contains(option.getName())){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(option.getQualifiedName())){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=arguments.getOption(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=options.getOption(ALL_VALUES);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=option.addValue(consumeRemaining,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals("-")){if(allValues.equals(")-")){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()){if(!allValues.hasEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Argumentargument=resources.get(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.isEmpty()&&arguments.previous()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(option==null||!allValues.isEmpty()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.hasNext()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151Validatorvalidator=option.findValue(allValues,option.getDescription());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(commandLine.looksLikeOption(allValues)||arguments.hasNext()){if(commandLine.looksLikeOption(allValues)||argument.hasNext()){
