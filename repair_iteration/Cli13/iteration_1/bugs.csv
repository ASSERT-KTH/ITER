bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	add	    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	8	1
2	[BUG]  [BUGGY]    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	8	1	add
2	[BUG]  [BUGGY]  [FE]  NoSuchElementException  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	add	    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }		compilable	  [FE]  NoSuchElementException  testLoopingOptionLookAlike2	8	1
3	[BUG]  [BUGGY]    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [FE]  NoSuchElementException  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }		compilable	  [FE]  NoSuchElementException  testLoopingOptionLookAlike2	8	1	add
3	[BUG]  [BUGGY]  [FE]  NoSuchElementException  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.toLowerCase();  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	add	    final  String  consumeRemaining  =(String)allValuesQuoted.toLowerCase();  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }		compilable	  [FE]  NoSuchElementException  testLoopingOptionLookAlike2	8	1
4	[BUG]  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.toLowerCase();  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [FE]  NoSuchElementException  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.toLowerCase();  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =(String)allValuesQuoted.toLowerCase();  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }		compilable	  [FE]  NoSuchElementException  testLoopingOptionLookAlike2	8	1	add
4	[BUG]  [BUGGY]    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  [CE]  illegal  start  of  expression  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;		non-compiled	[CE]  illegal  start  of  expression	8	None	add
5	[BUG]  [BUGGY]    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  commandsLine.addValue(option,  arguments.next());  }  [CE]  cannot  find  symbol  commandsLine  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  commandsLine.addValue(option,  arguments.next());  }  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =  stripBoundaryQuotes(allValuesQuoted);  if(consumeRemaining.equals(consumeRemaining))  {  ++argumentCount;  commandsLine.addValue(option,  arguments.next());  }		non-compiled	[CE]  cannot  find  symbol  commandsLine	8	None	add
15	[BUG]  [BUGGY]    [CE]  class,  interface,  or  enum  expected  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	  	while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
31	[BUG]  [BUGGY]    int  argumentCount  =  arguments.size();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    int  argumentCount  =  arguments.size();  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    int  argumentCount  =  arguments.size();		non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	4	None	add
32	[BUG]  [BUGGY]    int  maximum  =  arguments.size();  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    int  maximum  =  arguments.size();  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    int  maximum  =  arguments.size();		non-compiled	[CE]  cannot  find  symbol	4	None	add
33	[BUG]  [BUGGY]    final  int  maximum  =  arguments.size();  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    final  int  maximum  =  arguments.size();  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    final  int  maximum  =  arguments.size();		non-compiled	[CE]  cannot  find  symbol	4	None	add
34	[BUG]  [BUGGY]    final  String  consumeRemaining  =  options.getConsumeRemaining();  [CE]  cannot  find  symbol  options  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    final  String  consumeRemaining  =  options.getConsumeRemaining();  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    final  String  consumeRemaining  =  options.getConsumeRemaining();		non-compiled	[CE]  cannot  find  symbol  options	4	None	add
35	[BUG]  [BUGGY]    final  String  consumeRemaining  =  options.get(argumentCount);  [CE]  cannot  find  symbol  options  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    final  String  consumeRemaining  =  options.get(argumentCount);  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    final  String  consumeRemaining  =  options.get(argumentCount);		non-compiled	[CE]  cannot  find  symbol  options	4	None	add
41	[BUG]  [BUGGY]    if(arguments.hasMoreTokens())  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    if(arguments.hasMoreTokens())  {  ++argumentCount;  }  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    if(arguments.hasMoreTokens())  {  ++argumentCount;  }		non-compiled	[CE]  cannot  find  symbol	14	None	add
42	[BUG]  [BUGGY]    boolean  subsequentSplit  =  arguments.hasMoreTokens()  &&  argumentCount  >  maximum;  [CE]  'else'  without  'if'  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    boolean  subsequentSplit  =  arguments.hasMoreTokens()  &&  argumentCount  >  maximum;  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    boolean  subsequentSplit  =  arguments.hasMoreTokens()  &&  argumentCount  >  maximum;		non-compiled	[CE]  'else'  without  'if'	14	None	add
43	[BUG]  [BUGGY]    boolean  subsequentSplit  =  arguments.hasMoreTokens();  [CE]  'else'  without  'if'  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    boolean  subsequentSplit  =  arguments.hasMoreTokens();  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    boolean  subsequentSplit  =  arguments.hasMoreTokens();		non-compiled	[CE]  'else'  without  'if'	14	None	add
44	[BUG]  [BUGGY]    boolean  subsequentSplit  =  arguments.hasMoreTokens()  &&  arguments.next();  [CE]  'else'  without  'if'  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    boolean  subsequentSplit  =  arguments.hasMoreTokens()  &&  arguments.next();  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    boolean  subsequentSplit  =  arguments.hasMoreTokens()  &&  arguments.next();		non-compiled	[CE]  'else'  without  'if'	14	None	add
45	[BUG]  [BUGGY]    boolean  subsequentSplit  =  options.hasMoreTokens();  arguments.remove();  [CE]  'else'  without  'if'  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    boolean  subsequentSplit  =  options.hasMoreTokens();  arguments.remove();  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    boolean  subsequentSplit  =  options.hasMoreTokens();  arguments.remove();		non-compiled	[CE]  'else'  without  'if'	14	None	add
51	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  arguments.next());  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	add	    ++argumentCount;  commandLine.addValue(option,  arguments.next());		compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	6	1
52	[BUG]  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  arguments.next());  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  arguments.next());  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	    ++argumentCount;  commandLine.addValue(option,  arguments.next());		compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	6	1	add
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    ++argumentCount;  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	add	    ++argumentCount;		compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	6	1
53	[BUG]  [BUGGY]    ++argumentCount;  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    ++argumentCount;  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	    ++argumentCount;		compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	6	1	add
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    final  String  consumeRemaining  =(String)arguments.next();  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	add	    final  String  consumeRemaining  =(String)arguments.next();		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	6	1
54	[BUG]  [BUGGY]    final  String  consumeRemaining  =(String)arguments.next();  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    final  String  consumeRemaining  =(String)arguments.next();  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	    final  String  consumeRemaining  =(String)arguments.next();		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	6	1	add
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    ++argumentCount;  arguments.next();  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	add	    ++argumentCount;  arguments.next();		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	6	1
55	[BUG]  [BUGGY]    ++argumentCount;  arguments.next();  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    ++argumentCount;  arguments.next();  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	    ++argumentCount;  arguments.next();		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	6	1	add
55	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  argumentCount);  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	add	    ++argumentCount;  commandLine.addValue(option,  argumentCount);		compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	6	1
56	[BUG]  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  argumentCount);  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    ++argumentCount;  commandLine.addValue(option,  argumentCount);  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	    ++argumentCount;  commandLine.addValue(option,  argumentCount);		compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	6	1	add
61	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  consumeRemaining;  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	add	final  String  allValues  =  consumeRemaining;	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	7	1
62	[BUG]  [BUGGY]  final  String  allValues  =  consumeRemaining;  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  consumeRemaining;  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	final  String  allValues  =  consumeRemaining;	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	7	1	replace
62	[BUG]  [BUGGY]  final  String  allValues  =  getBoundaryQuotes(allValuesQuoted);  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  getBoundaryQuotes(allValuesQuoted);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	final  String  allValues  =  getBoundaryQuotes(allValuesQuoted);	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
63	[BUG]  [BUGGY]  final  String  allValues  =  consumeBoundaryQuotes(allValuesQuoted);  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  consumeBoundaryQuotes(allValuesQuoted);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	final  String  allValues  =  consumeBoundaryQuotes(allValuesQuoted);	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
64	[BUG]  [BUGGY]  final  String  allValues  =  consumeRemaining.substring(allValuesQuoted);  [CE]  no  suitable  method  found  for  substring(String)  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  consumeRemaining.substring(allValuesQuoted);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	final  String  allValues  =  consumeRemaining.substring(allValuesQuoted);	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	non-compiled	[CE]  no  suitable  method  found  for  substring(String)	7	None	replace
71	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(allValues.equals(consumeRemaining))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues.equals(consumeRemaining))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	9	1
72	[BUG]  [BUGGY]  if(allValues.equals(consumeRemaining))  {  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(allValues.equals(consumeRemaining))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(consumeRemaining))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	9	1	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(!allValues.equals(consumeRemaining))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValues.equals(consumeRemaining))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	9	1
73	[BUG]  [BUGGY]  if(!allValues.equals(consumeRemaining))  {  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(!allValues.equals(consumeRemaining))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValues.equals(consumeRemaining))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	9	1	replace
73	[BUG]  [BUGGY]  if(allValues.equals(consume))  {  [CE]  cannot  find  symbol  consume  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(allValues.equals(consume))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(consume))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	non-compiled	[CE]  cannot  find  symbol  consume	9	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(!allValuesQuoted.equals(consumeRemaining))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValuesQuoted.equals(consumeRemaining))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	9	1
75	[BUG]  [BUGGY]  if(!allValuesQuoted.equals(consumeRemaining))  {  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(!allValuesQuoted.equals(consumeRemaining))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValuesQuoted.equals(consumeRemaining))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	9	1	replace
75	[BUG]  [BUGGY]    [CE]  'else'  without  'if'  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]    [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	  	if  (allValuesQuoted.equals(consumeRemaining))  {  	non-compiled	[CE]  'else'  without  'if'	9	None	replace
81	[BUG]  [BUGGY]  else  if(subsequentSeparator!=  null)  {  [CE]  incomparable  types:  char  and  <null>  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]  else  if(subsequentSeparator!=  null)  {  [BUGGY]  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator!=  null)  {	else  if  (subsequentSplit)  {  	non-compiled	[CE]  incomparable  types:  char  and  <null>	13	None	replace
82	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]  else  if(!subsequentSplit)  {  [BUGGY]  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	add	else  if(!subsequentSplit)  {	else  if  (subsequentSplit)  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	13	1
83	[BUG]  [BUGGY]  else  if(!subsequentSplit)  {  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]  else  if(!subsequentSplit)  {  [BUGGY]  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(!subsequentSplit)  {	else  if  (subsequentSplit)  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	13	1	replace
83	[BUG]  [BUGGY]  else  if(subsequentSeparator  instanceof  StringTokenizer)  {  [CE]  unexpected  type  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]  else  if(subsequentSeparator  instanceof  StringTokenizer)  {  [BUGGY]  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  instanceof  StringTokenizer)  {	else  if  (subsequentSplit)  {  	non-compiled	[CE]  unexpected  type	13	None	replace
84	[BUG]  [BUGGY]  else  if(subsequentSeparator  instanceof  String)  {  [CE]  unexpected  type  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]  else  if(subsequentSeparator  instanceof  String)  {  [BUGGY]  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(subsequentSeparator  instanceof  String)  {	else  if  (subsequentSplit)  {  	non-compiled	[CE]  unexpected  type	13	None	replace
91	[BUG]  [BUGGY]    ListIterator  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {    [BUGGY]    ListIterator  arguments  =  options.getOptions();  [BUGGY]  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	    ListIterator  arguments  =  options.getOptions();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	add
92	[BUG]  [BUGGY]    int  argumentCount  =  arguments.size();  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {    [BUGGY]    int  argumentCount  =  arguments.size();  [BUGGY]  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	    int  argumentCount  =  arguments.size();		non-compiled	[CE]  cannot  find  symbol	2	None	add
93	[BUG]  [BUGGY]    ListIterator  arguments  =  options.getRawClass();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {    [BUGGY]    ListIterator  arguments  =  options.getRawClass();  [BUGGY]  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	    ListIterator  arguments  =  options.getRawClass();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	add
94	[BUG]  [BUGGY]    ListIterator  arguments  =  options.getAllIterator();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {    [BUGGY]    ListIterator  arguments  =  options.getAllIterator();  [BUGGY]  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	    ListIterator  arguments  =  options.getAllIterator();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	add
95	[BUG]  [BUGGY]    ListIterator  arguments  =  options.getAllIterators();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {    [BUGGY]    ListIterator  arguments  =  options.getAllIterators();  [BUGGY]  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	    ListIterator  arguments  =  options.getAllIterators();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	add
101	[BUG]  [BUGGY]  [FE]  ClassCastException  testLoopingOptionLookAlike2  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(option,  arguments);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	add	commandLine.addValue(option,  arguments);	commandLine.addValue(option,  allValues);  	compilable	  [FE]  ClassCastException  testLoopingOptionLookAlike2	17	1
102	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments);  [FE]  ClassCastException  testLoopingOptionLookAlike2  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(option,  arguments);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  arguments);	commandLine.addValue(option,  allValues);  	compilable	  [FE]  ClassCastException  testLoopingOptionLookAlike2	17	1	replace
102	[BUG]  [BUGGY]  commandLine.addValue(values,  allValues);  [CE]  cannot  find  symbol  values  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(values,  allValues);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(values,  allValues);	commandLine.addValue(option,  allValues);  	non-compiled	[CE]  cannot  find  symbol  values	17	None	replace
103	[BUG]  [BUGGY]  commandLine.addValue(value,  allValues);  [CE]  cannot  find  symbol  value  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(value,  allValues);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(value,  allValues);	commandLine.addValue(option,  allValues);  	non-compiled	[CE]  cannot  find  symbol  value	17	None	replace
105	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	add	  	commandLine.addValue(option,  allValues);  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	17	1
106	[BUG]  [BUGGY]    [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	  	commandLine.addValue(option,  allValues);  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	17	1	replace
111	[BUG]  [BUGGY]    if(commandLine.looksLikeRemaining(allValuesQuoted))  {  ++argumentCount;  break;  }  [CE]  cannot  find  symbol  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(commandLine.looksLikeRemaining(allValuesQuoted))  {  ++argumentCount;  break;  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(commandLine.looksLikeRemaining(allValuesQuoted))  {  ++argumentCount;  break;  }		non-compiled	[CE]  cannot  find  symbol	12	None	add
112	[BUG]  [BUGGY]    allValuesQuoted.remove(option.getKey());  [CE]  'else'  without  'if'  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    allValuesQuoted.remove(option.getKey());  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    allValuesQuoted.remove(option.getKey());		non-compiled	[CE]  'else'  without  'if'	12	None	add
113	[BUG]  [BUGGY]    if(commandLine.looksLikeRemaining(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  cannot  find  symbol  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(commandLine.looksLikeRemaining(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(commandLine.looksLikeRemaining(allValuesQuoted))  {  arguments.previous();  break;  }		non-compiled	[CE]  cannot  find  symbol	12	None	add
114	[BUG]  [BUGGY]    allValuesQuoted.add(option);  [CE]  'else'  without  'if'  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    allValuesQuoted.add(option);  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    allValuesQuoted.add(option);		non-compiled	[CE]  'else'  without  'if'	12	None	add
115	[BUG]  [BUGGY]    addValue(option,  arguments.previous());  [CE]  'else'  without  'if'  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    addValue(option,  arguments.previous());  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    addValue(option,  arguments.previous());		non-compiled	[CE]  'else'  without  'if'	12	None	add
121	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option))  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(commandLine.looksLikeOption(option))  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option))  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	11	None	replace
122	[BUG]  [BUGGY]  else  if(commandLine.isLikeOption(option))  {  [CE]  cannot  find  symbol  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(commandLine.isLikeOption(option))  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.isLikeOption(option))  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
123	[BUG]  [BUGGY]  else  if(commandLine.looksAlikeOption(option))  {  [CE]  cannot  find  symbol  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(commandLine.looksAlikeOption(option))  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksAlikeOption(option))  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
124	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining))  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(commandLine.looksLikeOption(consumeRemaining))  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	11	1
125	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining))  {  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining))  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(consumeRemaining))  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	11	1	replace
131	[BUG]  [BUGGY]  int  argumentCount  =  arguments.length;  [CE]  cannot  find  symbol  length  [CONTEXT]  throws  OptionException  {    [BUGGY]  int  argumentCount  =  arguments.length;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	int  argumentCount  =  arguments.length;	int  argumentCount  =  0;  	non-compiled	[CE]  cannot  find  symbol  length	1	None	replace
133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {    [BUGGY]  int  argumentCount  =  1;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	add	int  argumentCount  =  1;	int  argumentCount  =  0;  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	1	1
134	[BUG]  [BUGGY]  int  argumentCount  =  1;  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {    [BUGGY]  int  argumentCount  =  1;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	int  argumentCount  =  1;	int  argumentCount  =  0;  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	1	1	replace
141	[BUG]  [BUGGY]    String  allValues  =  options.getAllValues();  [CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    String  allValues  =  options.getAllValues();  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    String  allValues  =  options.getAllValues();		non-compiled	[CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	18	None	add
142	[BUG]  [BUGGY]    allValues  =  options.getAllValues();  [CE]  cannot  assign  a  value  to  final  variable  allValues  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    allValues  =  options.getAllValues();  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    allValues  =  options.getAllValues();		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  allValues	18	None	add
143	[BUG]  [BUGGY]    List  <  Option>  allValues  =  options.getAllValues();  [CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    List  <  Option>  allValues  =  options.getAllValues();  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    List  <  Option>  allValues  =  options.getAllValues();		non-compiled	[CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	18	None	add
144	[BUG]  [BUGGY]    if(values.hasMoreTokens())  {  for(String  allValues  :  options.values)  {  processAllValues(option,  allValues);  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    if(values.hasMoreTokens())  {  for(String  allValues  :  options.values)  {  processAllValues(option,  allValues);  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    if(values.hasMoreTokens())  {  for(String  allValues  :  options.values)  {  processAllValues(option,  allValues);  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
145	[BUG]  [BUGGY]    if(values.hasMoreTokens())  {  for(String  allValues  :  options.values)  {  processAllValues(option,  arguments);  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    if(values.hasMoreTokens())  {  for(String  allValues  :  options.values)  {  processAllValues(option,  arguments);  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    if(values.hasMoreTokens())  {  for(String  allValues  :  options.values)  {  processAllValues(option,  arguments);  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
151	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]    final  String  consumeRemaining  =  allValues.substring(0,  argumentCount);  [BUGGY]  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	    final  String  consumeRemaining  =  allValues.substring(0,  argumentCount);		compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	10	1
152	[BUG]  [BUGGY]    final  String  consumeRemaining  =  allValues.substring(0,  argumentCount);  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]    final  String  consumeRemaining  =  allValues.substring(0,  argumentCount);  [BUGGY]  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	    final  String  consumeRemaining  =  allValues.substring(0,  argumentCount);		compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	10	1	add
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]    final  String  consumeRemaining  =  allValues.toString();  [BUGGY]  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	    final  String  consumeRemaining  =  allValues.toString();		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	10	1
153	[BUG]  [BUGGY]    final  String  consumeRemaining  =  allValues.toString();  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]    final  String  consumeRemaining  =  allValues.toString();  [BUGGY]  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	    final  String  consumeRemaining  =  allValues.toString();		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	10	1	add
153	[BUG]  [BUGGY]    final  String  consumeRemaining  =  allValues.toCharArray();  [CE]  incompatible  types  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]    final  String  consumeRemaining  =  allValues.toCharArray();  [BUGGY]  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	    final  String  consumeRemaining  =  allValues.toCharArray();		non-compiled	[CE]  incompatible  types	10	None	add
154	[BUG]  [BUGGY]    final  String  consumeRemaining  =(String)allValues.clone();  [CE]  clone()  has  protected  access  in  Object  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]    final  String  consumeRemaining  =(String)allValues.clone();  [BUGGY]  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	    final  String  consumeRemaining  =(String)allValues.clone();		non-compiled	[CE]  clone()  has  protected  access  in  Object	10	None	add
155	[BUG]  [BUGGY]    final  String  consumeRemaining  =  allValues.values();  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]    final  String  consumeRemaining  =  allValues.values();  [BUGGY]  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	    final  String  consumeRemaining  =  allValues.values();		non-compiled	[CE]  cannot  find  symbol	10	None	add
161	[BUG]  [BUGGY]    String  allValues  =  options.getAllValues();  [CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    String  allValues  =  options.getAllValues();  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    String  allValues  =  options.getAllValues();		non-compiled	[CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	16	None	add
162	[BUG]  [BUGGY]    String  allValues  =  options.getAllValues();  if(allValues!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    String  allValues  =  options.getAllValues();  if(allValues!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    String  allValues  =  options.getAllValues();  if(allValues!=  null)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	16	None	add
163	[BUG]  [BUGGY]    String  allValues  =  options.getAllValues();  if(allValues!=  null)  {  throw  new  OptionException( " ");  }  [CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    String  allValues  =  options.getAllValues();  if(allValues!=  null)  {  throw  new  OptionException( " ");  }  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    String  allValues  =  options.getAllValues();  if(allValues!=  null)  {  throw  new  OptionException( " ");  }		non-compiled	[CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	16	None	add
164	[BUG]  [BUGGY]    String  allValues  =  options.getAllValues();  arguments.add(allValues);  [CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    String  allValues  =  options.getAllValues();  arguments.add(allValues);  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    String  allValues  =  options.getAllValues();  arguments.add(allValues);		non-compiled	[CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	16	None	add
165	[BUG]  [BUGGY]    String  allValues  =  options.getAllValues();  if(allValues!=  null)  {  arguments.add(token);  }  [CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    String  allValues  =  options.getAllValues();  if(allValues!=  null)  {  arguments.add(token);  }  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    String  allValues  =  options.getAllValues();  if(allValues!=  null)  {  arguments.add(token);  }		non-compiled	[CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	16	None	add
172	[BUG]  [BUGGY]  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]  final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	final  String  allValuesQuoted  =(String)arguments.get(argumentCount  -  1);	final  String  allValuesQuoted  =  (String)  arguments.next();  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
174	[BUG]  [BUGGY]  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]  final  String  allValuesQuoted  =(String)arguments.get(argumentCount);  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	final  String  allValuesQuoted  =(String)arguments.get(argumentCount);	final  String  allValuesQuoted  =  (String)  arguments.next();  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
192	[BUG]  [BUGGY]  ++argumentCount  +=  arguments.nextToken();  [CE]  unexpected  type  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  ++argumentCount  +=  arguments.nextToken();  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	++argumentCount  +=  arguments.nextToken();	++argumentCount;  	non-compiled	[CE]  unexpected  type	15	None	replace
193	[BUG]  [BUGGY]  ++argumentCount  +  1;  [CE]  not  a  statement  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  ++argumentCount  +  1;  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	++argumentCount  +  1;	++argumentCount;  	non-compiled	[CE]  not  a  statement	15	None	replace
194	[BUG]  [BUGGY]  ++argumentCount  +=  arguments.size();  [CE]  unexpected  type  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  ++argumentCount  +=  arguments.size();  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	++argumentCount  +=  arguments.size();	++argumentCount;  	non-compiled	[CE]  unexpected  type	15	None	replace
2	[BUG]  [BUGGY]  int  argumentCount  =  arguments.length();  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {    [BUGGY]  int  argumentCount  =  arguments.length();  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	int  argumentCount  =  arguments.length();	int  argumentCount  =  0;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
3	[BUG]  [BUGGY]  int  argumentCount  =(arguments.length  >  0)?  arguments.length  -  1  :  0;  [CE]  cannot  find  symbol  length  [CONTEXT]  throws  OptionException  {    [BUGGY]  int  argumentCount  =(arguments.length  >  0)?  arguments.length  -  1  :  0;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	int  argumentCount  =(arguments.length  >  0)?  arguments.length  -  1  :  0;	int  argumentCount  =  0;  	non-compiled	[CE]  cannot  find  symbol  length	1	None	replace
4	[BUG]  [BUGGY]  int  argumentCount  =(arguments.length  >  0)?  arguments.length  :  0;  [CE]  cannot  find  symbol  length  [CONTEXT]  throws  OptionException  {    [BUGGY]  int  argumentCount  =(arguments.length  >  0)?  arguments.length  :  0;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	int  argumentCount  =(arguments.length  >  0)?  arguments.length  :  0;	int  argumentCount  =  0;  	non-compiled	[CE]  cannot  find  symbol  length	1	None	replace
21	[BUG]  [BUGGY]    final  ListIterator  argument  =  options.getOptions();  [CE]  cannot  find  symbol  options  [CONTEXT]  throws  OptionException  {    [BUGGY]    final  ListIterator  argument  =  options.getOptions();  [BUGGY]  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	    final  ListIterator  argument  =  options.getOptions();		non-compiled	[CE]  cannot  find  symbol  options	2	None	add
23	[BUG]  [BUGGY]    final  ListIterator  <  Option>  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {    [BUGGY]    final  ListIterator  <  Option>  arguments  =  options.getOptions();  [BUGGY]  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	    final  ListIterator  <  Option>  arguments  =  options.getOptions();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	add
24	[BUG]  [BUGGY]    final  ListIterator  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {    [BUGGY]    final  ListIterator  arguments  =  options.getOptions();  [BUGGY]  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	    final  ListIterator  arguments  =  options.getOptions();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	add
25	[BUG]  [BUGGY]    ListIterator  argument  =  options.getOptions();  [CE]  cannot  find  symbol  options  [CONTEXT]  throws  OptionException  {    [BUGGY]    ListIterator  argument  =  options.getOptions();  [BUGGY]  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	    ListIterator  argument  =  options.getOptions();		non-compiled	[CE]  cannot  find  symbol  options	2	None	add
42	[BUG]  [BUGGY]  while(arguments.hasNext()  }  (argumentCount  -  1))  {  [CE]  ')'  expected  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]  while(arguments.hasNext()  }  (argumentCount  -  1))  {  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  }  (argumentCount  -  1))  {	while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  	non-compiled	[CE]  ')'  expected	3	None	replace
43	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  ||(argumentCount  <  maximum))  {	while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	3	1
44	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||(argumentCount  <  maximum))  {	while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	3	1	replace
44	[BUG]  [BUGGY]  [FE]  NoSuchElementException  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  ||(argumentCount  >  maximum))  {	while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  	compilable	  [FE]  NoSuchElementException  testLoopingOptionLookAlike2	3	1
45	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  [FE]  NoSuchElementException  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  >  maximum))  {  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  ||(argumentCount  >  maximum))  {	while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  	compilable	  [FE]  NoSuchElementException  testLoopingOptionLookAlike2	3	1	replace
61	[BUG]  [BUGGY]    if(allValuesQuoted.equals(consumeRemaining))  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(allValuesQuoted.equals(consumeRemaining))  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(allValuesQuoted.equals(consumeRemaining))  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
62	[BUG]  [BUGGY]    if(allValuesQuoted.equals(consumeRemaining))  {  if(!commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(allValuesQuoted.equals(consumeRemaining))  {  if(!commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(allValuesQuoted.equals(consumeRemaining))  {  if(!commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
63	[BUG]  [BUGGY]    if(allValuesQuoted  ==  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(allValuesQuoted  ==  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(allValuesQuoted  ==  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
64	[BUG]  [BUGGY]    if(allValuesQuoted.equals(consumeRemaining))  {  if(!commandLine.isLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(allValuesQuoted.equals(consumeRemaining))  {  if(!commandLine.isLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(allValuesQuoted.equals(consumeRemaining))  {  if(!commandLine.isLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
65	[BUG]  [BUGGY]    if(allValuesQuoted.equals(consumeRemaining))  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  addValue(option,  arguments.previous());  }  [CE]  illegal  start  of  expression  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(allValuesQuoted.equals(consumeRemaining))  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  addValue(option,  arguments.previous());  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(allValuesQuoted.equals(consumeRemaining))  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  addValue(option,  arguments.previous());  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
81	[BUG]  [BUGGY]  ++argumentCount  -  1;  [CE]  not  a  statement  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  ++argumentCount  -  1;  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	++argumentCount  -  1;	++argumentCount;  	non-compiled	[CE]  not  a  statement	15	None	replace
83	[BUG]  [BUGGY]  ++argumentCount  for(int  argumentCount  -  1);  [CE]  ';'  expected  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  ++argumentCount  for(int  argumentCount  -  1);  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	++argumentCount  for(int  argumentCount  -  1);	++argumentCount;  	non-compiled	[CE]  ';'  expected	15	None	replace
84	[BUG]  [BUGGY]  ++argumentCount,  values.hasMoreTokens());  [CE]  ';'  expected  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  ++argumentCount,  values.hasMoreTokens());  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	++argumentCount,  values.hasMoreTokens());	++argumentCount;  	non-compiled	[CE]  ';'  expected	15	None	replace
102	[BUG]  [BUGGY]  [FE]  NoSuchElementException  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    final  String  consumeRemaining  =(String)arguments.next();  ++argumentCount;  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	add	    final  String  consumeRemaining  =(String)arguments.next();  ++argumentCount;		compilable	  [FE]  NoSuchElementException  testLoopingOptionLookAlike2	6	1
103	[BUG]  [BUGGY]    final  String  consumeRemaining  =(String)arguments.next();  ++argumentCount;  [FE]  NoSuchElementException  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    final  String  consumeRemaining  =(String)arguments.next();  ++argumentCount;  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	    final  String  consumeRemaining  =(String)arguments.next();  ++argumentCount;		compilable	  [FE]  NoSuchElementException  testLoopingOptionLookAlike2	6	1	add
103	[BUG]  [BUGGY]    final  String  consumeRemaining  =  arguments.next();  [CE]  incompatible  types  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    final  String  consumeRemaining  =  arguments.next();  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	    final  String  consumeRemaining  =  arguments.next();		non-compiled	[CE]  incompatible  types	6	None	add
124	[BUG]  [BUGGY]    List  allValues  =  options.getAllValues();  [CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    List  allValues  =  options.getAllValues();  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    List  allValues  =  options.getAllValues();		non-compiled	[CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	18	None	add
125	[BUG]  [BUGGY]    Arrays.sort(option.getDefaultValues());  [CE]  cannot  find  symbol  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    Arrays.sort(option.getDefaultValues());  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    Arrays.sort(option.getDefaultValues());		non-compiled	[CE]  cannot  find  symbol	18	None	add
141	[BUG]  [BUGGY]  final  String  allValues  =  getAllValues();  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  getAllValues();  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	final  String  allValues  =  getAllValues();	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
142	[BUG]  [BUGGY]  final  String  allValues  =  getAllValues(allValuesQuoted);  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  getAllValues(allValuesQuoted);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	final  String  allValues  =  getAllValues(allValuesQuoted);	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
143	[BUG]  [BUGGY]  final  String  allValues  =  consumeRemaining(allValuesQuoted);  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  consumeRemaining(allValuesQuoted);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	final  String  allValues  =  consumeRemaining(allValuesQuoted);	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  consumeRemaining  +  allValuesQuoted;  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	add	final  String  allValues  =  consumeRemaining  +  allValuesQuoted;	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	7	1
145	[BUG]  [BUGGY]  final  String  allValues  =  consumeRemaining  +  allValuesQuoted;  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  consumeRemaining  +  allValuesQuoted;  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	final  String  allValues  =  consumeRemaining  +  allValuesQuoted;	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	7	1	replace
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]    final  String  consumeRemaining  =  allValues.trim();  [BUGGY]  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	    final  String  consumeRemaining  =  allValues.trim();		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	10	1
162	[BUG]  [BUGGY]    final  String  consumeRemaining  =  allValues.trim();  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]    final  String  consumeRemaining  =  allValues.trim();  [BUGGY]  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	    final  String  consumeRemaining  =  allValues.trim();		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	10	1	add
183	[BUG]  [BUGGY]  else  if(!consumeSplit)  {  [CE]  cannot  find  symbol  consumeSplit  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]  else  if(!consumeSplit)  {  [BUGGY]  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(!consumeSplit)  {	else  if  (subsequentSplit)  {  	non-compiled	[CE]  cannot  find  symbol  consumeSplit	13	None	replace
184	[BUG]  [BUGGY]  else  if(!consumesQuoted)  {  [CE]  cannot  find  symbol  consumesQuoted  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]  else  if(!consumesQuoted)  {  [BUGGY]  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(!consumesQuoted)  {	else  if  (subsequentSplit)  {  	non-compiled	[CE]  cannot  find  symbol  consumesQuoted	13	None	replace
202	[BUG]  [BUGGY]  final  String  allValuesQuoted  =(String)arguments.get(0);  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]  final  String  allValuesQuoted  =(String)arguments.get(0);  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	final  String  allValuesQuoted  =(String)arguments.get(0);	final  String  allValuesQuoted  =  (String)  arguments.next();  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
203	[BUG]  [BUGGY]  final  String  allValuesQuoted  =(String)arguments.substring(0,  argumentCount);  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]  final  String  allValuesQuoted  =(String)arguments.substring(0,  argumentCount);  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	final  String  allValuesQuoted  =(String)arguments.substring(0,  argumentCount);	final  String  allValuesQuoted  =  (String)  arguments.next();  	non-compiled	[CE]  cannot  find  symbol	5	None	replace
221	[BUG]  [BUGGY]    final  ListIterator  argument  =  options.getOptions();  [CE]  cannot  find  symbol  options  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    final  ListIterator  argument  =  options.getOptions();  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    final  ListIterator  argument  =  options.getOptions();		non-compiled	[CE]  cannot  find  symbol  options	4	None	add
222	[BUG]  [BUGGY]    final  ListIterator  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    final  ListIterator  arguments  =  options.getOptions();  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    final  ListIterator  arguments  =  options.getOptions();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	4	None	add
223	[BUG]  [BUGGY]    final  ListIterator  <  Option>  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    final  ListIterator  <  Option>  arguments  =  options.getOptions();  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    final  ListIterator  <  Option>  arguments  =  options.getOptions();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	4	None	add
224	[BUG]  [BUGGY]    final  ListIterator  argument  =  options.getOptionalArg();  [CE]  cannot  find  symbol  options  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    final  ListIterator  argument  =  options.getOptionalArg();  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    final  ListIterator  argument  =  options.getOptionalArg();		non-compiled	[CE]  cannot  find  symbol  options	4	None	add
225	[BUG]  [BUGGY]    final  int  argumentCount  =  arguments.size();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    final  int  argumentCount  =  arguments.size();  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    final  int  argumentCount  =  arguments.size();		non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	4	None	add
241	[BUG]  [BUGGY]  commandLine.addValue(option,  values);  [CE]  cannot  find  symbol  values  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(option,  values);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  values);	commandLine.addValue(option,  allValues);  	non-compiled	[CE]  cannot  find  symbol  values	17	None	replace
242	[BUG]  [BUGGY]  commandLine.addValue(option,  valueDefaults);  [CE]  cannot  find  symbol  valueDefaults  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(option,  valueDefaults);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  valueDefaults);	commandLine.addValue(option,  allValues);  	non-compiled	[CE]  cannot  find  symbol  valueDefaults	17	None	replace
244	[BUG]  [BUGGY]  commandLine.addValue(option,  value);  [CE]  cannot  find  symbol  value  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(option,  value);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  value);	commandLine.addValue(option,  allValues);  	non-compiled	[CE]  cannot  find  symbol  value	17	None	replace
281	[BUG]  [BUGGY]    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  allValues.size();  ++i)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove  [CE]  not  a  statement  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  allValues.size();  ++i)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  allValues.size();  ++i)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove		non-compiled	[CE]  not  a  statement	14	None	add
282	[BUG]  [BUGGY]    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  allValues.size();  ++i)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(minimum));  arguments.remove  [CE]  not  a  statement  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  allValues.size();  ++i)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(minimum));  arguments.remove  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  allValues.size();  ++i)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(minimum));  arguments.remove		non-compiled	[CE]  not  a  statement	14	None	add
283	[BUG]  [BUGGY]    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  allValues.size();  ++i)  {  final  String  tokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove  [CE]  ';'  expected  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  allValues.size();  ++i)  {  final  String  tokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  allValues.size();  ++i)  {  final  String  tokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove		non-compiled	[CE]  ';'  expected	14	None	add
284	[BUG]  [BUGGY]    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  arguments.size();  ++i)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(minimum));  arguments.remove();  }  [CE]  'else'  without  'if'  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  arguments.size();  ++i)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(minimum));  arguments.remove();  }  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  arguments.size();  ++i)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(minimum));  arguments.remove();  }		non-compiled	[CE]  'else'  without  'if'	14	None	add
285	[BUG]  [BUGGY]    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  arguments.size();  ++i)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove();  }  [CE]  'else'  without  'if'  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  arguments.size();  ++i)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove();  }  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    if(!consumeRemaining)  {  for(int  i  =  0;  i  <  arguments.size();  ++i)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove();  }		non-compiled	[CE]  'else'  without  'if'	14	None	add
301	[BUG]  [BUGGY]    if(values.hasMoreTokens())  {  for(String  allValues  :  options.getAllValues())  {  throw  new  ResourceException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    if(values.hasMoreTokens())  {  for(String  allValues  :  options.getAllValues())  {  throw  new  ResourceException( " ");  }  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    if(values.hasMoreTokens())  {  for(String  allValues  :  options.getAllValues())  {  throw  new  ResourceException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
303	[BUG]  [BUGGY]    if(values.hasMoreTokens())  {  String  allValues  =  options.getAllValues();  if(allValues.size()  ==  1  &&  allValues.size()  >  0)  {  throw  new  ResourceException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    if(values.hasMoreTokens())  {  String  allValues  =  options.getAllValues();  if(allValues.size()  ==  1  &&  allValues.size()  >  0)  {  throw  new  ResourceException( " ");  }  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    if(values.hasMoreTokens())  {  String  allValues  =  options.getAllValues();  if(allValues.size()  ==  1  &&  allValues.size()  >  0)  {  throw  new  ResourceException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
304	[BUG]  [BUGGY]    if(values.hasMoreTokens())  {  String  allValues  =  options.getAllValues();  if(allValues.size()  ==  1  &&  allValues.size()  >  1)  {  throw  new  ResourceException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    if(values.hasMoreTokens())  {  String  allValues  =  options.getAllValues();  if(allValues.size()  ==  1  &&  allValues.size()  >  1)  {  throw  new  ResourceException( " ");  }  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    if(values.hasMoreTokens())  {  String  allValues  =  options.getAllValues();  if(allValues.size()  ==  1  &&  allValues.size()  >  1)  {  throw  new  ResourceException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
305	[BUG]  [BUGGY]    if(values.hasMoreTokens())  {  String  allValues  =  options.getAllValues();  if(allValues!=  null)  {  throw  new  ResourceException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    if(values.hasMoreTokens())  {  String  allValues  =  options.getAllValues();  if(allValues!=  null)  {  throw  new  ResourceException( " ");  }  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    if(values.hasMoreTokens())  {  String  allValues  =  options.getAllValues();  if(allValues!=  null)  {  throw  new  ResourceException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	16	None	add
321	[BUG]  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.clone();  [CE]  clone()  has  protected  access  in  Object  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.clone();  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =(String)allValuesQuoted.clone();		non-compiled	[CE]  clone()  has  protected  access  in  Object	8	None	add
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.trim();  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	add	    final  String  consumeRemaining  =(String)allValuesQuoted.trim();		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	8	1
323	[BUG]  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.trim();  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.trim();  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =(String)allValuesQuoted.trim();		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	8	1	add
323	[BUG]  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.toCharArray();  [CE]  inconvertible  types  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.toCharArray();  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =(String)allValuesQuoted.toCharArray();		non-compiled	[CE]  inconvertible  types	8	None	add
324	[BUG]  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.clone();  ++argumentCount;  [CE]  clone()  has  protected  access  in  Object  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.clone();  ++argumentCount;  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =(String)allValuesQuoted.clone();  ++argumentCount;		non-compiled	[CE]  clone()  has  protected  access  in  Object	8	None	add
325	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.substring(0,  argumentCount);  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	add	    final  String  consumeRemaining  =(String)allValuesQuoted.substring(0,  argumentCount);		compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	8	1
326	[BUG]  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.substring(0,  argumentCount);  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =(String)allValuesQuoted.substring(0,  argumentCount);  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =(String)allValuesQuoted.substring(0,  argumentCount);		compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	8	1	add
342	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(!allValuesQuoted.equals(allValues))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(!allValuesQuoted.equals(allValues))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	9	1
343	[BUG]  [BUGGY]  if(!allValuesQuoted.equals(allValues))  {  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(!allValuesQuoted.equals(allValues))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(!allValuesQuoted.equals(allValues))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	9	1	replace
344	[BUG]  [BUGGY]  if(allValues.equals(valuesQuoted))  {  [CE]  cannot  find  symbol  valuesQuoted  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(allValues.equals(valuesQuoted))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(valuesQuoted))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	non-compiled	[CE]  cannot  find  symbol  valuesQuoted	9	None	replace
362	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(allValuesQuoted.equals(consumeRemaining))  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(allValuesQuoted.equals(consumeRemaining))  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	11	1
363	[BUG]  [BUGGY]  else  if(allValuesQuoted.equals(consumeRemaining))  {  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(allValuesQuoted.equals(consumeRemaining))  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(allValuesQuoted.equals(consumeRemaining))  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	11	1	replace
2	[BUG]  [BUGGY]  ++argumentCount,  values.nextToken();  [CE]  ';'  expected  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  ++argumentCount,  values.nextToken();  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	++argumentCount,  values.nextToken();	++argumentCount;  	non-compiled	[CE]  ';'  expected	15	None	replace
4	[BUG]  [BUGGY]  ++argumentCount,  values.nextToken());  [CE]  ';'  expected  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]  ++argumentCount,  values.nextToken());  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	++argumentCount,  values.nextToken());	++argumentCount;  	non-compiled	[CE]  ';'  expected	15	None	replace
32	[BUG]  [BUGGY]    if(allValuesQuoted  ==  null)  {  final  String  allValues  =  allValuesQuoted.equals(consumeRemaining);  if(allValuesQuoted.equals(consumeRemaining))  {  arguments.previous();  }  [CE]  illegal  start  of  expression  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(allValuesQuoted  ==  null)  {  final  String  allValues  =  allValuesQuoted.equals(consumeRemaining);  if(allValuesQuoted.equals(consumeRemaining))  {  arguments.previous();  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(allValuesQuoted  ==  null)  {  final  String  allValues  =  allValuesQuoted.equals(consumeRemaining);  if(allValuesQuoted.equals(consumeRemaining))  {  arguments.previous();  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
33	[BUG]  [BUGGY]    if(allValuesQuoted  ==  null)  {  final  String  allValues  =  allValuesQuoted.equals(consumeRemaining);  if(allValuesQuoted.equals(consumeRemaining))  {  arguments.previous();  break;  }  [CE]  illegal  start  of  expression  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(allValuesQuoted  ==  null)  {  final  String  allValues  =  allValuesQuoted.equals(consumeRemaining);  if(allValuesQuoted.equals(consumeRemaining))  {  arguments.previous();  break;  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(allValuesQuoted  ==  null)  {  final  String  allValues  =  allValuesQuoted.equals(consumeRemaining);  if(allValuesQuoted.equals(consumeRemaining))  {  arguments.previous();  break;  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
34	[BUG]  [BUGGY]    if(allValuesQuoted  ==  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  }  [CE]  illegal  start  of  expression  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(allValuesQuoted  ==  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(allValuesQuoted  ==  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
35	[BUG]  [BUGGY]    if(allValuesQuoted  ==  null)  {  final  String  allValues  =  allValuesQuoted.substring(0,  argumentCount);  if(allValuesQuoted.equals(consumeRemaining))  {  arguments.previous();  }  [CE]  illegal  start  of  expression  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(allValuesQuoted  ==  null)  {  final  String  allValues  =  allValuesQuoted.substring(0,  argumentCount);  if(allValuesQuoted.equals(consumeRemaining))  {  arguments.previous();  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(allValuesQuoted  ==  null)  {  final  String  allValues  =  allValuesQuoted.substring(0,  argumentCount);  if(allValuesQuoted.equals(consumeRemaining))  {  arguments.previous();  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
62	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <=  maximum)  {  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	while(arguments.hasNext()  &&  argumentCount  <=  maximum)  {	while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	3	1
63	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <=  maximum)  {  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]  while(arguments.hasNext()  &&  argumentCount  <=  maximum)  {  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.hasNext()  &&  argumentCount  <=  maximum)  {	while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	3	1	replace
63	[BUG]  [BUGGY]  while(arguments.next()  &&  argumentCount  <=  maximum)  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]  while(arguments.next()  &&  argumentCount  <=  maximum)  {  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.next()  &&  argumentCount  <=  maximum)  {	while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	3	None	replace
64	[BUG]  [BUGGY]  while(arguments.next()  &&(argumentCount  %  2  ==  0))  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]  while(arguments.next()  &&(argumentCount  %  2  ==  0))  {  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	while(arguments.next()  &&(argumentCount  %  2  ==  0))  {	while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	3	None	replace
93	[BUG]  [BUGGY]  commandLine.addValue(value,  arguments);  [CE]  cannot  find  symbol  value  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(value,  arguments);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(value,  arguments);	commandLine.addValue(option,  allValues);  	non-compiled	[CE]  cannot  find  symbol  value	17	None	replace
121	[BUG]  [BUGGY]    String  allValues  =  values.values().toString();  [CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    String  allValues  =  values.values().toString();  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    String  allValues  =  values.values().toString();		non-compiled	[CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	18	None	add
123	[BUG]  [BUGGY]    allValues  =  values.values();  [CE]  cannot  assign  a  value  to  final  variable  allValues  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    allValues  =  values.values();  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    allValues  =  values.values();		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  allValues	18	None	add
124	[BUG]  [BUGGY]    Arrays.sort(option,  arguments);  [CE]  cannot  find  symbol  Arrays  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    Arrays.sort(option,  arguments);  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    Arrays.sort(option,  arguments);		non-compiled	[CE]  cannot  find  symbol  Arrays	18	None	add
125	[BUG]  [BUGGY]    allValues  =  values.values().toArray(values);  [CE]  cannot  assign  a  value  to  final  variable  allValues  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    allValues  =  values.values().toArray(values);  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    allValues  =  values.values().toArray(values);		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  allValues	18	None	add
153	[BUG]  [BUGGY]  else  if(commandLine.isAssignableFrom(arguments.subsequentSeparator))  {  [CE]  cannot  find  symbol  subsequentSeparator  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(commandLine.isAssignableFrom(arguments.subsequentSeparator))  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.isAssignableFrom(arguments.subsequentSeparator))  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	non-compiled	[CE]  cannot  find  symbol  subsequentSeparator	11	None	replace
154	[BUG]  [BUGGY]  else  if(commandLine.isOptionalArg())  {  [CE]  cannot  find  symbol  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(commandLine.isOptionalArg())  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.isOptionalArg())  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =  allValuesQuoted.trim();  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	add	    final  String  consumeRemaining  =  allValuesQuoted.trim();		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	8	1
182	[BUG]  [BUGGY]    final  String  consumeRemaining  =  allValuesQuoted.trim();  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =  allValuesQuoted.trim();  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =  allValuesQuoted.trim();		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	8	1	add
182	[BUG]  [BUGGY]    final  String  consumeRemaining  =  arguments.next();  [CE]  incompatible  types  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =  arguments.next();  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =  arguments.next();		non-compiled	[CE]  incompatible  types	8	None	add
183	[BUG]  [BUGGY]    final  String  consumeRemaining  =(String)consumeRemaining.clone();  [CE]  clone()  has  protected  access  in  Object  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =(String)consumeRemaining.clone();  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =(String)consumeRemaining.clone();		non-compiled	[CE]  clone()  has  protected  access  in  Object	8	None	add
184	[BUG]  [BUGGY]  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =(String)arguments.next();  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	add	    final  String  consumeRemaining  =(String)arguments.next();		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	8	1
185	[BUG]  [BUGGY]    final  String  consumeRemaining  =(String)arguments.next();  [FE]  AssertionFailedError  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =(String)arguments.next();  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =(String)arguments.next();		compilable	  [FE]  AssertionFailedError  testLoopingOptionLookAlike2	8	1	add
185	[BUG]  [BUGGY]    final  String  consumeRemaining  =(String)values.get(0);  [CE]  cannot  find  symbol  values  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]    final  String  consumeRemaining  =(String)values.get(0);  [BUGGY]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	    final  String  consumeRemaining  =(String)values.get(0);		non-compiled	[CE]  cannot  find  symbol  values	8	None	add
211	[BUG]  [BUGGY]    final  ListIterator  arguments  =  options.listIterator();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {    [BUGGY]    final  ListIterator  arguments  =  options.listIterator();  [BUGGY]  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	    final  ListIterator  arguments  =  options.listIterator();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	add
212	[BUG]  [BUGGY]    final  ListIterator  arguments  =  options.getAllIterator();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {    [BUGGY]    final  ListIterator  arguments  =  options.getAllIterator();  [BUGGY]  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	    final  ListIterator  arguments  =  options.getAllIterator();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	add
214	[BUG]  [BUGGY]    final  ListIterator  arguments  =  options.getAllIterators();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {    [BUGGY]    final  ListIterator  arguments  =  options.getAllIterators();  [BUGGY]  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	    final  ListIterator  arguments  =  options.getAllIterators();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	add
215	[BUG]  [BUGGY]    final  ListIterator  arguments  =  options.values();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {    [BUGGY]    final  ListIterator  arguments  =  options.values();  [BUGGY]  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	    final  ListIterator  arguments  =  options.values();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	add
241	[BUG]  [BUGGY]    allValues.add(value);  [CE]  cannot  find  symbol  value  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    allValues.add(value);  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    allValues.add(value);		non-compiled	[CE]  cannot  find  symbol  value	16	None	add
242	[BUG]  [BUGGY]    allValues.add(values.nextToken());  [CE]  cannot  find  symbol  values  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    allValues.add(values.nextToken());  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    allValues.add(values.nextToken());		non-compiled	[CE]  cannot  find  symbol  values	16	None	add
243	[BUG]  [BUGGY]    allValues.add(token);  [CE]  cannot  find  symbol  token  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    allValues.add(token);  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    allValues.add(token);		non-compiled	[CE]  cannot  find  symbol  token	16	None	add
244	[BUG]  [BUGGY]    allValues  =  values.values();  [CE]  cannot  assign  a  value  to  final  variable  allValues  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    allValues  =  values.values();  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    allValues  =  values.values();		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  allValues	16	None	add
245	[BUG]  [BUGGY]    allValues  =  values.values().toArray(values);  [CE]  cannot  assign  a  value  to  final  variable  allValues  [CONTEXT]  arguments.add(token);  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  [BUGGY]    allValues  =  values.values().toArray(values);  [BUGGY]  ++argumentCount;  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	    allValues  =  values.values().toArray(values);		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  allValues	16	None	add
273	[BUG]  [BUGGY]    final  int  consumeRemaining  =  arguments.next();  [CE]  incompatible  types  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    final  int  consumeRemaining  =  arguments.next();  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	    final  int  consumeRemaining  =  arguments.next();		non-compiled	[CE]  incompatible  types	6	None	add
274	[BUG]  [BUGGY]    final  String  consumeRemaining  =  arguments.next();  ++argumentCount;  [CE]  incompatible  types  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    final  String  consumeRemaining  =  arguments.next();  ++argumentCount;  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	    final  String  consumeRemaining  =  arguments.next();  ++argumentCount;		non-compiled	[CE]  incompatible  types	6	None	add
275	[BUG]  [BUGGY]    final  char  consumeRemaining  =  arguments.next();  [CE]  incompatible  types  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  [BUGGY]    final  char  consumeRemaining  =  arguments.next();  [BUGGY]  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	    final  char  consumeRemaining  =  arguments.next();		non-compiled	[CE]  incompatible  types	6	None	add
301	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  allValuesQuoted;  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	add	final  String  allValues  =  allValuesQuoted;	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	7	1
302	[BUG]  [BUGGY]  final  String  allValues  =  allValuesQuoted;  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  allValuesQuoted;  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	final  String  allValues  =  allValuesQuoted;	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	7	1	replace
302	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  allValuesQuoted.trim();  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	add	final  String  allValues  =  allValuesQuoted.trim();	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	7	1
303	[BUG]  [BUGGY]  final  String  allValues  =  allValuesQuoted.trim();  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  allValuesQuoted.trim();  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	final  String  allValues  =  allValuesQuoted.trim();	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	7	1	replace
303	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  allValuesQuoted.toLowerCase();  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	add	final  String  allValues  =  allValuesQuoted.toLowerCase();	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	7	1
304	[BUG]  [BUGGY]  final  String  allValues  =  allValuesQuoted.toLowerCase();  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  allValuesQuoted.toLowerCase();  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	final  String  allValues  =  allValuesQuoted.toLowerCase();	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	7	1	replace
304	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  allValuesQuoted.substring(0,  argumentCount);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	add	final  String  allValues  =  allValuesQuoted.substring(0,  argumentCount);	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	7	1
305	[BUG]  [BUGGY]  final  String  allValues  =  allValuesQuoted.substring(0,  argumentCount);  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  [BUGGY]  final  String  allValues  =  allValuesQuoted.substring(0,  argumentCount);  [BUGGY]    if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	final  String  allValues  =  allValuesQuoted.substring(0,  argumentCount);	final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	7	1	replace
331	[BUG]  [BUGGY]    if(arguments.size()  >  0)  {  final  StringTokenizer  allValues  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove();  }  [CE]  cannot  find  symbol  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    if(arguments.size()  >  0)  {  final  StringTokenizer  allValues  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove();  }  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    if(arguments.size()  >  0)  {  final  StringTokenizer  allValues  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove();  }		non-compiled	[CE]  cannot  find  symbol	14	None	add
332	[BUG]  [BUGGY]    if(argumentCount  >  1)  {  final  StringTokenizer  allValues  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove();  }  [CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    if(argumentCount  >  1)  {  final  StringTokenizer  allValues  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove();  }  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    if(argumentCount  >  1)  {  final  StringTokenizer  allValues  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.remove();  }		non-compiled	[CE]  variable  allValues  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	14	None	add
333	[BUG]  [BUGGY]    if(arguments.size()  >  0)  {  final  StringTokenizer  allValues  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.previous();  }  [CE]  cannot  find  symbol  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    if(arguments.size()  >  0)  {  final  StringTokenizer  allValues  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.previous();  }  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    if(arguments.size()  >  0)  {  final  StringTokenizer  allValues  =  new  StringTokenizer(allValues,  String.valueOf(maximum));  arguments.previous();  }		non-compiled	[CE]  cannot  find  symbol	14	None	add
334	[BUG]  [BUGGY]    if(arguments.size()  >  0)  {  ++argumentCount;  }  [CE]  cannot  find  symbol  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    if(arguments.size()  >  0)  {  ++argumentCount;  }  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    if(arguments.size()  >  0)  {  ++argumentCount;  }		non-compiled	[CE]  cannot  find  symbol	14	None	add
335	[BUG]  [BUGGY]    if(arguments.size()  >  0)  {  final  StringTokenizer  allValues  =  new  StringTokenizer(allValues,  null);  arguments.remove();  }  [CE]  cannot  find  symbol  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]    if(arguments.size()  >  0)  {  final  StringTokenizer  allValues  =  new  StringTokenizer(allValues,  null);  arguments.remove();  }  [BUGGY]  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	    if(arguments.size()  >  0)  {  final  StringTokenizer  allValues  =  new  StringTokenizer(allValues,  null);  arguments.remove();  }		non-compiled	[CE]  cannot  find  symbol	14	None	add
364	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]    final  String  consumeRemaining  =  allValues.substring(0,  argumentCount).trim();  [BUGGY]  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	    final  String  consumeRemaining  =  allValues.substring(0,  argumentCount).trim();		compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	10	1
365	[BUG]  [BUGGY]    final  String  consumeRemaining  =  allValues.substring(0,  argumentCount).trim();  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]    final  String  consumeRemaining  =  allValues.substring(0,  argumentCount).trim();  [BUGGY]  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	    final  String  consumeRemaining  =  allValues.substring(0,  argumentCount).trim();		compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	10	1	add
422	[BUG]  [BUGGY]  int  argumentCount  =(arguments.size()  >  0)?  arguments.get(0):  null;  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {    [BUGGY]  int  argumentCount  =(arguments.size()  >  0)?  arguments.get(0):  null;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	int  argumentCount  =(arguments.size()  >  0)?  arguments.get(0):  null;	int  argumentCount  =  0;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
423	[BUG]  [BUGGY]  int  argumentCount  =(arguments.size()  >  1)?  arguments.get(0):  0;  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {    [BUGGY]  int  argumentCount  =(arguments.size()  >  1)?  arguments.get(0):  0;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	int  argumentCount  =(arguments.size()  >  1)?  arguments.get(0):  0;	int  argumentCount  =  0;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
424	[BUG]  [BUGGY]  int  argumentCount  =(arguments.size()  >  0)?  arguments.get(0):  0;  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {    [BUGGY]  int  argumentCount  =(arguments.size()  >  0)?  arguments.get(0):  0;  [BUGGY]    while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	int  argumentCount  =(arguments.size()  >  0)?  arguments.get(0):  0;	int  argumentCount  =  0;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
481	[BUG]  [BUGGY]    final  ListIterator  arguments  =  options.listIterator();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    final  ListIterator  arguments  =  options.listIterator();  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    final  ListIterator  arguments  =  options.listIterator();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	4	None	add
482	[BUG]  [BUGGY]    final  ListIterator  arguments  =  options.getAstRoot(arguments.size()  -  1);  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    final  ListIterator  arguments  =  options.getAstRoot(arguments.size()  -  1);  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    final  ListIterator  arguments  =  options.getAstRoot(arguments.size()  -  1);		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	4	None	add
483	[BUG]  [BUGGY]    final  ListIterator  arguments  =  options.values();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    final  ListIterator  arguments  =  options.values();  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    final  ListIterator  arguments  =  options.values();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	4	None	add
484	[BUG]  [BUGGY]    ListIterator  arguments  =  options.getAllIterator();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    ListIterator  arguments  =  options.getAllIterator();  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    ListIterator  arguments  =  options.getAllIterator();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	4	None	add
485	[BUG]  [BUGGY]    final  ListIterator  arguments  =  options.getAllIterator();  [CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  [BUGGY]    final  ListIterator  arguments  =  options.getAllIterator();  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	    final  ListIterator  arguments  =  options.getAllIterator();		non-compiled	[CE]  variable  arguments  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	4	None	add
511	[BUG]  [BUGGY]  if(allValues.equals(values))  {  [CE]  cannot  find  symbol  values  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(allValues.equals(values))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(values))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	non-compiled	[CE]  cannot  find  symbol  values	9	None	replace
512	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(allValues!=  null  &&  allValuesQuoted.equals(consumeRemaining))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues!=  null  &&  allValuesQuoted.equals(consumeRemaining))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	9	1
513	[BUG]  [BUGGY]  if(allValues!=  null  &&  allValuesQuoted.equals(consumeRemaining))  {  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(allValues!=  null  &&  allValuesQuoted.equals(consumeRemaining))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues!=  null  &&  allValuesQuoted.equals(consumeRemaining))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	9	1	replace
513	[BUG]  [BUGGY]  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(allValues  ==  null  &&  allValuesQuoted.equals(consumeRemaining))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	if(allValues  ==  null  &&  allValuesQuoted.equals(consumeRemaining))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	9	1
514	[BUG]  [BUGGY]  if(allValues  ==  null  &&  allValuesQuoted.equals(consumeRemaining))  {  [FE]  ComparisonFailure  testLoopingOptionLookAlike2  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(allValues  ==  null  &&  allValuesQuoted.equals(consumeRemaining))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues  ==  null  &&  allValuesQuoted.equals(consumeRemaining))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	compilable	  [FE]  ComparisonFailure  testLoopingOptionLookAlike2	9	1	replace
514	[BUG]  [BUGGY]  if(allValues.equals(option.getValue()))  {  [CE]  cannot  find  symbol  [CONTEXT]  throws  OptionException  {  int  argumentCount  =  0;  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  final  String  allValuesQuoted  =  (String)  arguments.next();  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);    [BUGGY]  if(allValues.equals(option.getValue()))  {  [BUGGY]  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	if(allValues.equals(option.getValue()))  {	if  (allValuesQuoted.equals(consumeRemaining))  {  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
571	[BUG]  [BUGGY]  else  if(!successiveSeparator)  {  [CE]  cannot  find  symbol  successiveSeparator  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]  else  if(!successiveSeparator)  {  [BUGGY]  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(!successiveSeparator)  {	else  if  (subsequentSplit)  {  	non-compiled	[CE]  cannot  find  symbol  successiveSeparator	13	None	replace
572	[BUG]  [BUGGY]  else  if(successiveSeparator!=  null)  {  [CE]  cannot  find  symbol  successiveSeparator  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]  else  if(successiveSeparator!=  null)  {  [BUGGY]  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(successiveSeparator!=  null)  {	else  if  (subsequentSplit)  {  	non-compiled	[CE]  cannot  find  symbol  successiveSeparator	13	None	replace
573	[BUG]  [BUGGY]  else  if(!subsequentSeparator)  {  [CE]  bad  operand  type  char  for  unary  operator  '!'  [CONTEXT]  commandLine.addValue(option,  arguments.next());  }  }  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }    [BUGGY]  else  if(!subsequentSeparator)  {  [BUGGY]  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  while  (values.hasMoreTokens()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  final  String  token  =  values.nextToken();  commandLine.addValue(option,  token);  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	else  if(!subsequentSeparator)  {	else  if  (subsequentSplit)  {  	non-compiled	[CE]  bad  operand  type  char  for  unary  operator  '!'	13	None	replace
