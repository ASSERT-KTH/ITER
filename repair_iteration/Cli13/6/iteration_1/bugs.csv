bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }		compilable	  [FE]  ComparisonFailure  	12	1	add
2	[BUG]  [BUGGY]    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }		compilable	  [FE]  ComparisonFailure  	12	1	add
3	[BUG]  [BUGGY]    if(commandLine.looksLikeOption(allValuesQuoted))  {  while(arguments.hasNext()  &&  (argumentCount  <  maximum))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]      ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(commandLine.looksLikeOption(allValuesQuoted))  {  while(arguments.hasNext()  &&  (argumentCount  <  maximum))  {  arguments.previous();  break;  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(commandLine.looksLikeOption(allValuesQuoted))  {  while(arguments.hasNext()  &&  (argumentCount  <  maximum))  {  arguments.previous();  break;  }		non-compiled	[CE]  'else'  without  'if'	12	None	add
4	[BUG]  [BUGGY]    if(commandLine.looksLikeOption(allValuesQuoted))  {  while(arguments.hasNext()  &&  initialSplit)  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]        ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(commandLine.looksLikeOption(allValuesQuoted))  {  while(arguments.hasNext()  &&  initialSplit)  {  arguments.previous();  break;  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(commandLine.looksLikeOption(allValuesQuoted))  {  while(arguments.hasNext()  &&  initialSplit)  {  arguments.previous();  break;  }		non-compiled	[CE]  'else'  without  'if'	12	None	add
5	[BUG]  [BUGGY]    commandLine.addValue(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]          ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    commandLine.addValue(option,  arguments.next());  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    commandLine.addValue(option,  arguments.next());		non-compiled	[CE]  'else'  without  'if'	12	None	add
6	[BUG]  [BUGGY]    if(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    if(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    if(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }		non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	12	None	add
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	compilable	  [FE]  ComparisonFailure  	11	1	replace
8	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	compilable	  [FE]  ComparisonFailure  	11	1	replace
9	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.previous())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]      ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.previous())  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.previous())  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	11	None	replace
10	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	compilable	  [FE]  ComparisonFailure  	11	1	replace
11	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	compilable	  [FE]  ComparisonFailure  	11	1	replace
12	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
13	[BUG]  [BUGGY]    CommandLine  commandLine  =  options.getCommandLine();  [CE]  'else'  without  'if'  [FE]    ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    CommandLine  commandLine  =  options.getCommandLine();  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    CommandLine  commandLine  =  options.getCommandLine();		non-compiled	[CE]  'else'  without  'if'	12	None	add
14	[BUG]  [BUGGY]    CommandLine  commandLine  =  option.getCommandLine();  [CE]  'else'  without  'if'  [FE]      ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    CommandLine  commandLine  =  option.getCommandLine();  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    CommandLine  commandLine  =  option.getCommandLine();		non-compiled	[CE]  'else'  without  'if'	12	None	add
15	[BUG]  [BUGGY]    CommandLine  commandLine  =  options.getArgumentLine();  [CE]  'else'  without  'if'  [FE]        ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    CommandLine  commandLine  =  options.getArgumentLine();  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    CommandLine  commandLine  =  options.getArgumentLine();		non-compiled	[CE]  'else'  without  'if'	12	None	add
16	[BUG]  [BUGGY]    CommandLine  commandLine  =  resources.get(commandLine);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    CommandLine  commandLine  =  resources.get(commandLine);  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    CommandLine  commandLine  =  resources.get(commandLine);		non-compiled	[CE]  'else'  without  'if'	12	None	add
17	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {  [BUGGY]  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {	else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
18	[BUG]  [BUGGY]    commandLine.addValue(option,  options.next());  [CE]  'else'  without  'if'  [FE]    ComparisonFailure  [CONTEXT]  final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }    [BUGGY]    commandLine.addValue(option,  options.next());  [BUGGY]  else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	    commandLine.addValue(option,  options.next());		non-compiled	[CE]  'else'  without  'if'	12	None	add
