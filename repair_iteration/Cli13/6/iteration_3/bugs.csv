bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments,  initialSplit)&&  arguments.previous())  {  [CE]  cannot  find  symbol  initialSplit  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments,  initialSplit)&&  arguments.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments,  initialSplit)&&  arguments.previous())  {	  else    if(commandLine.looksLikeOption(arguments)&&    arguments.previous())    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	13	None	replace
2	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)||  arguments.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments)||  arguments.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)||  arguments.previous())  {	  else    if(commandLine.looksLikeOption(arguments)&&    arguments.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	13	None	replace
3	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.previous()  ||  arguments.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.previous()  ||  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)&&  arguments.previous()  ||  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(arguments)&&    arguments.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	13	None	replace
4	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.size()  <  maximum)  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.size()  <  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.size()  <  maximum)  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    minimum)    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
5	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  >  minimum)  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  >  minimum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  >  minimum)  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    minimum)    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	7	None	replace
6	[BUG]  [BUGGY]  CommandLine  commandLine  =  arguments.getCommandLine();  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  arguments.getCommandLine();  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  arguments.getCommandLine();	  CommandLine    commandLine    =    arguments.getArgumentLine();    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
7	[BUG]  [BUGGY]  if(arguments.hasNext())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  }  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(arguments.hasNext())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(arguments.hasNext())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    List    <    ComparisonFailure>    arguments    =    stripBoundaryQuotes(allValuesQuoted);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
8	[BUG]  [BUGGY]  if(arguments.hasNext())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValu  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(arguments.hasNext())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValu  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(arguments.hasNext())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValu	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    List    <    ComparisonFailure>    arguments    =    stripBoundaryQuotes(allValuesQuoted);    	non-compiled	[CE]  ')'  expected	57	None	replace
9	[BUG]  [BUGGY]  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    List    <    ComparisonFailure>    arguments    =    stripBoundaryQuotes(allValuesQuoted);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
10	[BUG]  [BUGGY]  if(arguments.size()  >  maximum)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(arguments.size()  >  maximum)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(arguments.size()  >  maximum)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    List    <    ComparisonFailure>    arguments    =    stripBoundaryQuotes(allValuesQuoted);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
11	[BUG]  [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    while(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
12	[BUG]  [BUGGY]  CommandLine  commandLine  =  commandLine.looksLikeOption(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  commandLine.looksLikeOption(allValuesQuoted);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  commandLine.looksLikeOption(allValuesQuoted);	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    while(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
13	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext()  ||  arguments.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext()  ||  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext()  ||  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(option)&&    arguments.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	26	None	replace
14	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option,  arguments)&&  arguments.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option,  arguments)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option,  arguments)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(option)&&    arguments.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	26	None	replace
15	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext()  &&  arguments.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext()  &&  arguments.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext()  &&  arguments.previous())  {	  else    if(commandLine.looksLikeOption(option)&&    arguments.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	26	None	replace
16	[BUG]  [BUGGY]  else  if(option.looksLikeOption(commandLine)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.looksLikeOption(commandLine)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.looksLikeOption(commandLine)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(option)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
17	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  maximum);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.next(),  maximum);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next(),  maximum);	  commandLine.addValue(option,    options.next(),    arguments.maximumSplit);    	non-compiled	[CE]  'else'  without  'if'	50	None	replace
18	[BUG]  [BUGGY]  commandLine.addValue(option,  options.next(),  maximum);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  options.next(),  maximum);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  options.next(),  maximum);	  commandLine.addValue(option,    options.next(),    arguments.maximumSplit);    	non-compiled	[CE]  'else'  without  'if'	50	None	replace
19	[BUG]  [BUGGY]  commandLine.addValue(option,  options.next(),  arguments.maximumSplit  +  1);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  options.next(),  arguments.maximumSplit  +  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  options.next(),  arguments.maximumSplit  +  1);	  commandLine.addValue(option,    options.next(),    arguments.maximumSplit);    	non-compiled	[CE]  'else'  without  'if'	50	None	replace
20	[BUG]  [BUGGY]  commandLine.addValue(option,  options.next(),  argumentCount);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  options.next(),  argumentCount);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  options.next(),  argumentCount);	  commandLine.addValue(option,    options.next(),    arguments.maximumSplit);    	non-compiled	[CE]  'else'  without  'if'	50	None	replace
21	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(arguments);	  CommandLine    commandLine    =    options.getCommandLine(commandLine);    	non-compiled	[CE]  'else'  without  'if'	44	None	replace
22	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(commandLine,  arguments);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(commandLine,  arguments);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(commandLine,  arguments);	  CommandLine    commandLine    =    options.getCommandLine(commandLine);    	non-compiled	[CE]  'else'  without  'if'	44	None	replace
23	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_INITIAL_SEPARATOR))  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_INITIAL_SEPARATOR))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_INITIAL_SEPARATOR))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(ALLValuesQuoted))    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	60	None	replace
24	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)||  argumentCount.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments)||  argumentCount.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)||  argumentCount.previous())  {	  else    if(commandLine.looksLikeOption(arguments)&&    argumentCount.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	81	None	replace
25	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  argumentCount.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  argumentCount.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  argumentCount.previous())  {	  else    if(commandLine.looksLikeOption(arguments)&&    argumentCount.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	81	None	replace
26	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.previous()  ||  subsequentSplit)  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.previous()  ||  subsequentSplit)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  arguments.previous()  ||  subsequentSplit)  {	  else    if(commandLine.looksLikeOption(option)&&    arguments.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	15	None	replace
27	[BUG]  [BUGGY]  else  if(option.looksLikeOption(commandLine)&&  arguments.previous())  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.looksLikeOption(commandLine)&&  arguments.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.looksLikeOption(commandLine)&&  arguments.previous())  {	  else    if(commandLine.looksLikeOption(option)&&    arguments.previous())    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
28	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)||  arguments.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)||  arguments.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)||  arguments.previous())  {	  else    if(commandLine.looksLikeOption(option)&&    arguments.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	15	None	replace
29	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine();  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  Option  commandLine  =  option.getCommandLine();  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	Option  commandLine  =  option.getCommandLine();	  if(commandLine.looksLikeOption(option,    arguments.next()))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	87	None	replace
30	[BUG]  [BUGGY]  ArgumentImpl  commandLine  =  options.get(option);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  ArgumentImpl  commandLine  =  options.get(option);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	ArgumentImpl  commandLine  =  options.get(option);	  if(commandLine.looksLikeOption(option,    arguments.next()))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	87	None	replace
31	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.size());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.size());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(arguments.size());	  CommandLine    commandLine    =    options.getCommandLine(arguments.size()    -    1);    	non-compiled	[CE]  'else'  without  'if'	89	None	replace
32	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.size()  +  1);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.size()  +  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(arguments.size()  +  1);	  CommandLine    commandLine    =    options.getCommandLine(arguments.size()    -    1);    	non-compiled	[CE]  'else'  without  'if'	89	None	replace
33	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.findCommandLine(arguments);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  option.findCommandLine(arguments);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.findCommandLine(arguments);	  CommandLine    commandLine    =    option.findCommandLine();    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
34	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.findCommandLine();  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.findCommandLine();  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.findCommandLine();	  CommandLine    commandLine    =    option.findCommandLine();    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
35	[BUG]  [BUGGY]  ArgumentImpl  commandLine  =  options.get(argumentCount);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  ArgumentImpl  commandLine  =  options.get(argumentCount);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	ArgumentImpl  commandLine  =  options.get(argumentCount);	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    If(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	30	None	replace
36	[BUG]  [BUGGY]  ArgumentImpl  commandLine  =  options.get(arguments.size()  -  1);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  ArgumentImpl  commandLine  =  options.get(arguments.size()  -  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	ArgumentImpl  commandLine  =  options.get(arguments.size()  -  1);	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    If(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	30	None	replace
37	[BUG]  [BUGGY]  CommandLine  commandLine  =  commandLine.next();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  commandLine.next();  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  commandLine.next();	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    If(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	30	None	replace
38	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)||  commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)||  commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)||  commandLine.looksLikeOption(option)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(option)&&    arguments.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	43	None	replace
39	[BUG]  [BUGGY]  else  if(option.hasValue(allValuesQuoted)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.hasValue(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.hasValue(allValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(option)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
40	[BUG]  [BUGGY]  commandLine.addValue(option,  options.next());  break;  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  options.next());  break;  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  options.next());  break;	  commandLine.addValue(option,    arguments.next());    break;    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
41	[BUG]  [BUGGY]  commandLine.addOption(option,  arguments.next());  break;  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addOption(option,  arguments.next());  break;  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addOption(option,  arguments.next());  break;	  commandLine.addValue(option,    arguments.next());    break;    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
42	[BUG]  [BUGGY]  commandLine.append(option,  arguments.next());  break;  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.append(option,  arguments.next());  break;  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.append(option,  arguments.next());  break;	  commandLine.addValue(option,    arguments.next());    break;    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
43	[BUG]  [BUGGY]  commandLine.addValue(option,  options.next(),  values);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  options.next(),  values);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  options.next(),  values);	  commandLine.addValue(option,    arguments.next(),    values);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
44	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  options);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.next(),  options);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next(),  options);	  commandLine.addValue(option,    arguments.next(),    values);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
45	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  values,  initialSplit);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.next(),  values,  initialSplit);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next(),  values,  initialSplit);	  commandLine.addValue(option,    arguments.next(),    values);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
46	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  [CE]  cannot  find  symbol  defaultValuesQuoted  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  defaultValuesQuoted	4	None	replace
47	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  [CE]  cannot  find  symbol  defaultValuesQuoted  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  defaultValuesQuoted	4	None	replace
48	[BUG]  [BUGGY]  else  if(commandLine!=  null  ||  commandLine.looksLikeOption(defaultValuesQuoted))  {  [CE]  cannot  find  symbol  defaultValuesQuoted  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  ||  commandLine.looksLikeOption(defaultValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  ||  commandLine.looksLikeOption(defaultValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  defaultValuesQuoted	4	None	replace
49	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  commandLine.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  commandLine.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  commandLine.previous())  {	  else    if(commandLine.looksLikeOption(arguments)&&    commandLine.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	14	None	replace
50	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)||  commandLine.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments)||  commandLine.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)||  commandLine.previous())  {	  else    if(commandLine.looksLikeOption(arguments)&&    commandLine.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	14	None	replace
51	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  commandLine.previous()  ||  arguments.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  commandLine.previous()  ||  arguments.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)&&  commandLine.previous()  ||  arguments.previous())  {	  else    if(commandLine.looksLikeOption(arguments)&&    commandLine.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	14	None	replace
52	[BUG]  [BUGGY]  while(commandLine.hasNext()  &&  initialSplit)  {  commandLine.addValue(option,  arguments.next());  break;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasNext()  &&  initialSplit)  {  commandLine.addValue(option,  arguments.next());  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasNext()  &&  initialSplit)  {  commandLine.addValue(option,  arguments.next());  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commandLine.addValue(option,    arguments.next());    break;    }    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
53	[BUG]  [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  commandLine.addValue(option,  arguments.next());  break;  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  commandLine.addValue(option,  arguments.next());  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.looksLikeOption(allValuesQuoted))  {  commandLine.addValue(option,  arguments.next());  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commandLine.addValue(option,    arguments.next());    break;    }    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
54	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  maximum)  {  commandLine.addValue(option,  arguments.next());  break;  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext()  &&  maximum)  {  commandLine.addValue(option,  arguments.next());  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&  maximum)  {  commandLine.addValue(option,  arguments.next());  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commandLine.addValue(option,    arguments.next());    break;    }    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
55	[BUG]  [BUGGY]  CommandLine  commandLine  =  commandLine.getArgumentLine();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  commandLine.getArgumentLine();  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  commandLine.getArgumentLine();	  CommandLine    commandLine    =    commandLine.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
56	[BUG]  [BUGGY]  CommandLine  commandLine  =  commandLine.getParameterType(0);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  commandLine.getParameterType(0);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  commandLine.getParameterType(0);	  CommandLine    commandLine    =    commandLine.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
57	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(option))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(option))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(option))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    commandLine.looksBoundaryOption(ALLValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
58	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(defaultValuesQuoted))  {  [CE]  cannot  find  symbol  defaultValuesQuoted  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(defaultValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(defaultValuesQuoted))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    commandLine.looksBoundaryOption(ALLValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  defaultValuesQuoted	46	None	replace
59	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(ALL_VALUES_QUOTED))  {  [CE]  cannot  find  symbol  ALL_VALUES_QUOTED  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(ALL_VALUES_QUOTED))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(ALL_VALUES_QUOTED))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    commandLine.looksBoundaryOption(ALLValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  ALL_VALUES_QUOTED	46	None	replace
60	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.hasValue(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.hasValue(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.hasValue(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
61	[BUG]  [BUGGY]  final  ArgumentImpl  commandLine  =  options.get(arguments.size()  -  1);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  final  ArgumentImpl  commandLine  =  options.get(arguments.size()  -  1);  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	final  ArgumentImpl  commandLine  =  options.get(arguments.size()  -  1);	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted    	non-compiled	[CE]  'else'  without  'if'	72	None	replace
62	[BUG]  [BUGGY]  final  ArgumentImpl  commandLine  =  options.get(argumentCount);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  final  ArgumentImpl  commandLine  =  options.get(argumentCount);  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	final  ArgumentImpl  commandLine  =  options.get(argumentCount);	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted    	non-compiled	[CE]  'else'  without  'if'	72	None	replace
63	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
64	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  argumentLine  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  argumentLine	1	None	replace
65	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commands.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  commands  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commands.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commands.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  commands	1	None	replace
66	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commands.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  commands  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commands.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commands.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  commands	83	None	replace
67	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
68	[BUG]  [BUGGY]  else  if(commandLine!=  null  ||  commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  ||  commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  ||  commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
69	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	92	None	add
70	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	92	None	add
71	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(expression)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(expression)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(expression)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	92	None	add
72	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(consumeRemaining)&&  argumentCount  <  maximum)  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(consumeRemaining)&&  argumentCount  <  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(consumeRemaining)&&  argumentCount  <  maximum)  {	  	non-compiled	[CE]  'else'  without  'if'	92	None	add
73	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments,  option);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments,  option);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(arguments,  option);	  CommandLine    commandLine    =    options.getCommandLine(option);    	non-compiled	[CE]  'else'  without  'if'	73	None	replace
74	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getArgumentLine(arguments);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  option.getArgumentLine(arguments);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.getArgumentLine(arguments);	  CommandLine    commandLine    =    option.getArgumentLine();    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
75	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(0);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  resources.get(0);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(0);	  CommandLine    commandLine    =    resources.get(commandLine    +    1);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
76	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commands.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  commands  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commands.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commands.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  commands	61	None	replace
77	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine  ==  null  &&  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
78	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  arguments.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  arguments.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  arguments.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
79	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  defaultValuesQuoted  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(defaultValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  defaultValuesQuoted	41	None	replace
80	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(defaultValuesQuoted)||  arguments.hasNext())  {  [CE]  cannot  find  symbol  defaultValuesQuoted  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(defaultValuesQuoted)||  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(defaultValuesQuoted)||  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(defaultValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  defaultValuesQuoted	41	None	replace
81	[BUG]  [BUGGY]  ArgumentImpl  commandLine  =  options.getCommandLine();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  ArgumentImpl  commandLine  =  options.getCommandLine();  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	ArgumentImpl  commandLine  =  options.getCommandLine();	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    ArgumentImpl    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
82	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  }	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    ArgumentImpl    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
83	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  }	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    ArgumentImpl    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
84	[BUG]  [BUGGY]  else  if(option.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  }	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    ArgumentImpl    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
85	[BUG]  [BUGGY]  while(commandLine.hasArg()  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasArg()  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasArg()  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	  while(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	86	None	replace
86	[BUG]  [BUGGY]  while(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  arguments.previous();  break;  }	  while(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	86	None	replace
87	[BUG]  [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.remove();  break;  }  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.remove();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.remove();  break;  }	  while(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	86	None	replace
88	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine  -  1  +  1);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine  -  1  +  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(commandLine  -  1  +  1);	  CommandLine    commandLine    =    resources.get(commandLine    -    1);    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
89	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine  -  2);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine  -  2);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(commandLine  -  2);	  CommandLine    commandLine    =    resources.get(commandLine    -    1);    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
90	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine    ==    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  	non-compiled	[CE]  'else'  without  'if'	17	None	add
91	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine    ==    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  	non-compiled	[CE]  'else'  without  'if'	17	None	add
92	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine    ==    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {	  	non-compiled	[CE]  'else'  without  'if'	17	None	add
93	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(option))  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(option))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine    ==    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(option))  {	  	non-compiled	[CE]  'else'  without  'if'	17	None	add
94	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.toString(),  arguments);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.toString(),  arguments);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(commandLine.toString(),  arguments);	  CommandLine    commandLine    =    resources.get(commandLine.toString());    	non-compiled	[CE]  'else'  without  'if'	36	None	replace
95	[BUG]  [BUGGY]  CommandLine  commandLine  =  commands.get(commandLine.toString());  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  commands.get(commandLine.toString());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  commands.get(commandLine.toString());	  CommandLine    commandLine    =    resources.get(commandLine.toString());    	non-compiled	[CE]  'else'  without  'if'	36	None	replace
96	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.toString()  +  1);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.toString()  +  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(commandLine.toString()  +  1);	  CommandLine    commandLine    =    resources.get(commandLine.toString());    	non-compiled	[CE]  'else'  without  'if'	36	None	replace
97	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(commandLine  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  else    if(commandLine    ==    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
98	[BUG]  [BUGGY]  else  if(commandLine  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine  ==  null  ||  commandLine.looksLikeOption(allValuesQuoted))  {	  else    if(commandLine    ==    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	18	1	replace
99	[BUG]  [BUGGY]  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQUoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  ';'  expected	31	None	replace
100	[BUG]  [BUGGY]  commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQUoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  ';'  expected	31	None	replace
101	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine()  -  1;  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine()  -  1;  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getArgumentLine()  -  1;	  CommandLine    commandLine    =    options.getArgumentLine()    +    1;    	non-compiled	[CE]  'else'  without  'if'	47	None	replace
102	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  arguments.previous());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.next(),  arguments.previous());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next(),  arguments.previous());	  commandLine.addValue(option,    options.next(),    arguments.previous());    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
103	[BUG]  [BUGGY]  commandLine.addValue(option,  options.next(),  arguments.second());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  options.next(),  arguments.second());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  options.next(),  arguments.second());	  commandLine.addValue(option,    options.next(),    arguments.previous());    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
104	[BUG]  [BUGGY]  commandLine.addValue(option,  options.next(),  arguments.current());  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  options.next(),  arguments.current());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  options.next(),  arguments.current());	  commandLine.addValue(option,    options.next(),    arguments.previous());    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
105	[BUG]  [BUGGY]  commandLine.removeValue(option,  arguments.previous());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.removeValue(option,  arguments.previous());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.removeValue(option,  arguments.previous());	  commandLine.addValue(option,    arguments.previous());    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
106	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  initialSeparator))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  initialSeparator))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  initialSeparator))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted,    subsequentSplit))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
107	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted,  initialSeparator))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted,  initialSeparator))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted,  initialSeparator))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted,    subsequentSplit))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
108	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  subsequentSplit))  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  subsequentSplit))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  subsequentSplit))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted,    subsequentSplit))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
109	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  subsequentSeparator))  {  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  subsequentSeparator))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  subsequentSeparator))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted,    subsequentSplit))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
110	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(option.next());  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(option.next());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(option.next());	  CommandLine    commandLine    =    options.getCommandLine(arguments.next());    	non-compiled	[CE]  'else'  without  'if'	84	None	replace
111	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.next(),  arguments.size());  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.next(),  arguments.size());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(arguments.next(),  arguments.size());	  CommandLine    commandLine    =    options.getCommandLine(arguments.next());    	non-compiled	[CE]  'else'  without  'if'	84	None	replace
112	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.next(),  argumentCount);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.next(),  argumentCount);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(arguments.next(),  argumentCount);	  CommandLine    commandLine    =    options.getCommandLine(arguments.next());    	non-compiled	[CE]  'else'  without  'if'	84	None	replace
113	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentField.hasNext())  {  [CE]  cannot  find  symbol  argumentField  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentField.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentField.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    argumentField.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  argumentField	52	None	replace
114	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)||  argumentField.hasNext())  {  [CE]  cannot  find  symbol  argumentField  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)||  argumentField.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)||  argumentField.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    argumentField.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  argumentField	52	None	replace
115	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.size()  +  1);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.size()  +  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getArgumentLine(arguments.size()  +  1);	  CommandLine    commandLine    =    options.getArgumentLine(arguments.size()    -    1);    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
116	[BUG]  [BUGGY]  CommandLine  commandLine  =  arguments.getArgumentLine(arguments.size());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  arguments.getArgumentLine(arguments.size());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  arguments.getArgumentLine(arguments.size());	  CommandLine    commandLine    =    options.getArgumentLine(arguments.size()    -    1);    	non-compiled	[CE]  'else'  without  'if'	22	None	replace
117	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.size()  -  2);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.size()  -  2);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getArgumentLine(arguments.size()  -  2);	  CommandLine    commandLine    =    options.getArgumentLine(arguments.size());    	non-compiled	[CE]  'else'  without  'if'	90	None	replace
118	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(alwaysQuoted)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  alwaysQuoted  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(alwaysQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(alwaysQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(alwaysQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  alwaysQuoted	42	None	replace
119	[BUG]  [BUGGY]  CommandLine  commandLine  =  arguments.get(option);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  arguments.get(option);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  arguments.get(option);	  CommandLine    commandLine    =    arguments.get(initialSplit);    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
120	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.get(initialSplit);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.get(initialSplit);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.get(initialSplit);	  CommandLine    commandLine    =    arguments.get(initialSplit);    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
121	[BUG]  [BUGGY]  CommandLine  commandLine  =  commands.get(initialSplit);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  commands.get(initialSplit);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  commands.get(initialSplit);	  CommandLine    commandLine    =    arguments.get(initialSplit);    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
122	[BUG]  [BUGGY]  CommandLine  commandLine  =  arguments.get(0);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  arguments.get(0);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  arguments.get(0);	  CommandLine    commandLine    =    arguments.get(initialSplit);    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
123	[BUG]  [BUGGY]  Preconditions.checkState(commandLine.looksLikeOption(option));  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  Preconditions.checkState(commandLine.looksLikeOption(option));  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	Preconditions.checkState(commandLine.looksLikeOption(option));	  Preconditions.checkState(commandLine.looksLikeOption(allValuesQuoted));    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
124	[BUG]  [BUGGY]  Preconditions.checkState(commandLine.looksLikeOption(defaultValuesQuoted));  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  Preconditions.checkState(commandLine.looksLikeOption(defaultValuesQuoted));  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	Preconditions.checkState(commandLine.looksLikeOption(defaultValuesQuoted));	  Preconditions.checkState(commandLine.looksLikeOption(allValuesQuoted));    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
125	[BUG]  [BUGGY]  Preconditions.checkState(commandLine.looksLikeOption(consumeRemaining));  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  Preconditions.checkState(commandLine.looksLikeOption(consumeRemaining));  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	Preconditions.checkState(commandLine.looksLikeOption(consumeRemaining));	  Preconditions.checkState(commandLine.looksLikeOption(allValuesQuoted));    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
126	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentLine.size()  >  maximum)  {  [CE]  cannot  find  symbol  argumentLine  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentLine.size()  >  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentLine.size()  >  maximum)  {	  else    if(arguments.looksLikeOption(allValuesQuoted)&&    commandLine.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  argumentLine	8	None	replace
127	[BUG]  [BUGGY]  else  if(allValuesQuoted.looksLikeOption(arguments)&&  commandLine.size()  >  maximum)  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(allValuesQuoted.looksLikeOption(arguments)&&  commandLine.size()  >  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(allValuesQuoted.looksLikeOption(arguments)&&  commandLine.size()  >  maximum)  {	  else    if(arguments.looksLikeOption(allValuesQuoted)&&    commandLine.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
128	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentCount.hasNext())  {  [CE]  int  cannot  be  dereferenced  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentCount.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argumentCount.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    argumentCount.hasNext())    {    	non-compiled	[CE]  int  cannot  be  dereferenced	51	None	replace
129	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  argumentCount.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  argumentCount.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  argumentCount.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    argumentCount.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	51	None	replace
130	[BUG]  [BUGGY]  else  if(option.hasOption(ALLValuesQuoted)&&  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.hasOption(ALLValuesQuoted)&&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.hasOption(ALLValuesQuoted)&&  commandLine.looksLikeOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(option))    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	5	None	replace
131	[BUG]  [BUGGY]  else  if(option.hasOption(ALLValuesQuoted)&&  option.hasOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.hasOption(ALLValuesQuoted)&&  option.hasOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.hasOption(ALLValuesQuoted)&&  option.hasOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(option))    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	5	None	replace
132	[BUG]  [BUGGY]  else  if(option.hasOption(ALLValuesQuoted)&&  commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.hasOption(ALLValuesQuoted)&&  commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.hasOption(ALLValuesQuoted)&&  commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(option))    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	5	None	replace
133	[BUG]  [BUGGY]  while(commandLine.hasNext()  &&  initialSplit)  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasNext()  &&  initialSplit)  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasNext()  &&  initialSplit)  {  arguments.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	32	None	replace
134	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  initialSeparator)  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext()  &&  initialSeparator)  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&  initialSeparator)  {  arguments.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	32	None	replace
135	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_INITIAL_SEPARATOR)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_INITIAL_SEPARATOR)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(DEFAULT_INITIAL_SEPARATOR)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine.looksLikeOption(ALLValuesQuoted)&&    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	45	None	replace
136	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine.looksLikeOption(ALLValuesQuoted)&&    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
137	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(ALLValues)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  ALLValues  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(ALLValues)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(ALLValues)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine.looksLikeOption(ALLValuesQuoted)&&    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  ALLValues	45	None	replace
138	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.size()  >  maximum)  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.size()  >  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  arguments.size()  >  maximum)  {	  else    if(commandLine.looksLikeOption(arguments)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	9	None	replace
139	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  >  minimum,  arguments.previous())  {  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  >  minimum,  arguments.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  >  minimum,  arguments.previous())  {	  else    if(commandLine.looksLikeOption(arguments)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  ')'  expected	9	None	replace
140	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments,  initialSplit)&&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  initialSplit  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments,  initialSplit)&&  arguments.size()  >  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments,  initialSplit)&&  arguments.size()  >  maximum)  {	  else    if(commandLine.looksLikeOption(arguments)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  initialSplit	9	None	replace
141	[BUG]  [BUGGY]  Preconditions.checkState(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  Preconditions.checkState(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	Preconditions.checkState(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  ';'  expected	29	None	replace
142	[BUG]  [BUGGY]  commandLine.looksLikeOption(defaultValuesQuoted))  {  arguments.previous();  break;  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.looksLikeOption(defaultValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.looksLikeOption(defaultValuesQuoted))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(defaultValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  ';'  expected	56	None	replace
143	[BUG]  [BUGGY]  CommandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(defaultValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  ';'  expected	56	None	replace
144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	68	1	replace
145	[BUG]  [BUGGY]  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	68	1	replace
146	[BUG]  [BUGGY]  if(commandLine!=  null  &&  commandLine.isLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine!=  null  &&  commandLine.isLikeOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine!=  null  &&  commandLine.isLikeOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
147	[BUG]  [BUGGY]  if(commandLine!=  null  &&  commandLine.hasValue(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine!=  null  &&  commandLine.hasValue(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine!=  null  &&  commandLine.hasValue(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
148	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.createCommandLine(arguments);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  option.createCommandLine(arguments);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.createCommandLine(arguments);	  CommandLine    commandLine    =    option.createCommandLine();    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
149	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.createCommandLine();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.createCommandLine();  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.createCommandLine();	  CommandLine    commandLine    =    option.createCommandLine();    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
150	[BUG]  [BUGGY]  while(commandLine.hasNext()  &&  initialSplit)  {  commandLine.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasNext()  &&  initialSplit)  {  commandLine.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasNext()  &&  initialSplit)  {  commandLine.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commandLine.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
151	[BUG]  [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  commandLine.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  commandLine.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.looksLikeOption(allValuesQuoted))  {  commandLine.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commandLine.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
152	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(alwaysQuoted))  {  [CE]  cannot  find  symbol  alwaysQuoted  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(alwaysQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(alwaysQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(alwaysQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  alwaysQuoted	6	None	replace
153	[BUG]  [BUGGY]  commandLine.looksLikeOption(defaultValues))  {  arguments.previous();  break;  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.looksLikeOption(defaultValues))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.looksLikeOption(defaultValues))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(defaultValues))    {    arguments.previous();    break;    }    	non-compiled	[CE]  ';'  expected	58	None	replace
154	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	94	1	replace
155	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	94	1	replace
156	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	94	1	replace
157	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine.looksLikeOption(allValuesQuoted)||  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	94	1	replace
158	[BUG]  [BUGGY]  'else'  without  'if'  [CE]  unclosed  character  literal  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  'else'  without  'if'  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	'else'  without  'if'	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  unclosed  character  literal	69	None	replace
159	[BUG]  [BUGGY]  ||  commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  ||  commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	||  commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
160	[BUG]  [BUGGY]  final  boolean  subsequentSplit  =  stripBoundaryQuotes(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  final  boolean  subsequentSplit  =  stripBoundaryQuotes(allValuesQuoted);  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	final  boolean  subsequentSplit  =  stripBoundaryQuotes(allValuesQuoted);	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
161	[BUG]  [BUGGY]  final  char[]  subsequentSplit  =  stripBoundaryQuotes(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  final  char[]  subsequentSplit  =  stripBoundaryQuotes(allValuesQuoted);  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	final  char[]  subsequentSplit  =  stripBoundaryQuotes(allValuesQuoted);	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
162	[BUG]  [BUGGY]  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	ArgumentImpl  commandLine  =  options.get(commandLine.getValue());	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    ArgumentImpl    commandLine    =    options.get(commandLine.getValue());    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
163	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  }	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    ArgumentImpl    commandLine    =    options.get(commandLine.getValue());    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
164	[BUG]  [BUGGY]  else  if(option.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  }	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    ArgumentImpl    commandLine    =    options.get(commandLine.getValue());    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
165	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option)&&  arguments.hasNext())  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	67	None	replace
166	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(arguments)&&  arguments.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(arguments)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(arguments)&&  arguments.hasNext())  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	67	None	replace
167	[BUG]  [BUGGY]  while(commandLine.hasNext()  &&  initialSplit)  {  commands.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasNext()  &&  initialSplit)  {  commands.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasNext()  &&  initialSplit)  {  commands.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commands.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
168	[BUG]  [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  commands.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  commands.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.looksLikeOption(allValuesQuoted))  {  commands.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commands.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
169	[BUG]  [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted)&&  initialSplit)  {  commands.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted)&&  initialSplit)  {  commands.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.looksLikeOption(allValuesQuoted)&&  initialSplit)  {  commands.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commands.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
170	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQUoted)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  allValuesQUoted  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQUoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQUoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQUoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  allValuesQUoted	96	None	replace
171	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.substring(0,  commandLine.length()  -  1));  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.substring(0,  commandLine.length()  -  1));  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(commandLine.substring(0,  commandLine.length()  -  1));	  CommandLine    commandLine    =    resources.get(commandLine.substring(1));    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
172	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.substring(2));  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.substring(2));  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(commandLine.substring(2));	  CommandLine    commandLine    =    resources.get(commandLine.substring(1));    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
173	[BUG]  [BUGGY]  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  [CE]  cannot  find  symbol  defaultValuesQuoted  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  defaultValuesQuoted	82	None	replace
174	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(defaultValues.isEmpty()  ||  defaultValues.isEmpty())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	if(defaultValues.isEmpty()  ||  defaultValues.isEmpty())  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	compilable	  [FE]  NullPointerException  	82	1	replace
175	[BUG]  [BUGGY]  if(defaultValues.isEmpty()  ||  defaultValues.isEmpty())  {  [FE]  NullPointerException  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(defaultValues.isEmpty()  ||  defaultValues.isEmpty())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(defaultValues.isEmpty()  ||  defaultValues.isEmpty())  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	compilable	  [FE]  NullPointerException  	82	1	replace
176	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(defaultValues!=  null)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	if(defaultValues!=  null)  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	82	1	replace
177	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(defaultValues!=  null)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(defaultValues!=  null)  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	82	1	replace
178	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argument.hasNext())  {  [CE]  cannot  find  symbol  argument  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argument.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  argument.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    argument.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  argument	95	None	replace
179	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  argument.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  argument.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  argument.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    argument.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	95	None	replace
180	[BUG]  [BUGGY]  while(commandLine.hasNext()  &&(argumentCount  <  maximum))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasNext()  &&(argumentCount  <  maximum))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasNext()  &&(argumentCount  <  maximum))  {  arguments.previous();  break;  }	  while(arguments.hasNext()    &&(argumentCount    <    maximum))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
181	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  minimum))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  minimum))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&(argumentCount  <  minimum))  {  arguments.previous();  break;  }	  while(arguments.hasNext()    &&(argumentCount    <    maximum))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
182	[BUG]  [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted)&&(argumentCount  <  maximum))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted)&&(argumentCount  <  maximum))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.looksLikeOption(allValuesQuoted)&&(argumentCount  <  maximum))  {  arguments.previous();  break;  }	  while(arguments.hasNext()    &&(argumentCount    <    maximum))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
183	[BUG]  [BUGGY]  commandLine.addValue(option,  options.remove());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  options.remove());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  options.remove());	  commandLine.addValue(option,    arguments.remove());    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
184	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.get());  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.get());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.get());	  commandLine.addValue(option,    arguments.remove());    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
185	[BUG]  [BUGGY]  commandLine.addValue(option,  allValuesQuoted);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  allValuesQuoted);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  allValuesQuoted);	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
186	[BUG]  [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  minimum)  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  minimum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  minimum)  {	  else    if(arguments.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
187	[BUG]  [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  argumentCount.size()  >  maximum)  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  argumentCount.size()  >  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(arguments.looksLikeOption(allValuesQuoted)&&  argumentCount.size()  >  maximum)  {	  else    if(arguments.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
188	[BUG]  [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  <  maximum)  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  <  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  <  maximum)  {	  else    if(arguments.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
189	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.length  -  1);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.length  -  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getArgumentLine(arguments.length  -  1);	  CommandLine    commandLine    =    options.getArgumentLine(arguments.length);    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
190	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.length  +  1);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.length  +  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getArgumentLine(arguments.length  +  1);	  CommandLine    commandLine    =    options.getArgumentLine(arguments.length);    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
191	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.length,  arguments.length);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.length,  arguments.length);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getArgumentLine(arguments.length,  arguments.length);	  CommandLine    commandLine    =    options.getArgumentLine(arguments.length);    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
192	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.length  -  2);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getArgumentLine(arguments.length  -  2);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getArgumentLine(arguments.length  -  2);	  CommandLine    commandLine    =    options.getArgumentLine(arguments.length);    	non-compiled	[CE]  'else'  without  'if'	48	None	replace
193	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)||  arguments.previous())  {  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)||  arguments.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)||  arguments.previous())  {	  else    if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&    arguments.previous())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	80	None	replace
194	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  arguments.next())  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  arguments.next())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  arguments.next())  {	  else    if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&    arguments.previous())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	80	None	replace
195	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	93	None	replace
196	[BUG]  [BUGGY]  else  if(option.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
197	[BUG]  [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  option.hasNext())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  option.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(arguments.looksLikeOption(allValuesQuoted)&&  option.hasNext())  {	  else    if(option.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
198	[BUG]  [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  options.hasNext())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  options.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(arguments.looksLikeOption(allValuesQuoted)&&  options.hasNext())  {	  else    if(option.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
199	[BUG]  [BUGGY]  else  if(option.looksLikeOption(arguments)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.looksLikeOption(arguments)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.looksLikeOption(arguments)&&  arguments.hasNext())  {	  else    if(option.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
200	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	                if(commandLine.looksLikeOption(allValuesQuoted))        {        arguments.previous();        break;        }        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
201	[BUG]  [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	                if(commandLine.looksLikeOption(allValuesQuoted))        {        arguments.previous();        break;        }        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
202	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	                if(commandLine.looksLikeOption(allValuesQuoted))        {        arguments.previous();        break;        }        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
203	[BUG]  [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	                if(commandLine.looksLikeOption(allValuesQuoted))        {        arguments.previous();        break;        }        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
204	[BUG]  [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	                if(commandLine.looksLikeOption(allValuesQuoted))        {        arguments.previous();        break;        }        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();	  	non-compiled	[CE]  'else'  without  'if'	28	None	add
205	[BUG]  [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	                if(commandLine.looksLikeOption(allValuesQuoted))        {        arguments.previous();        break;        }        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.	  	non-compiled	[CE]  <identifier>  expected	28	None	add
206	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	                if(commandLine.looksLikeOption(allValuesQuoted))        {        arguments.previous();        break;        }        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
207	[BUG]  [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	                if(commandLine.looksLikeOption(allValuesQuoted))        {        arguments.previous();        break;        }        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	  	compilable	  [FE]  ComparisonFailure  	28	1	add
208	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(arguments,  arguments);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(arguments,  arguments);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.getCommandLine(arguments,  arguments);	  CommandLine    commandLine    =    option.getCommandLine(arguments);    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
209	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(arguments,  initialSplit);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(arguments,  initialSplit);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.getCommandLine(arguments,  initialSplit);	  CommandLine    commandLine    =    option.getCommandLine(arguments);    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
210	[BUG]  [BUGGY]  commandLine.addValue(option,  options.get(argumentCount  -  1)+  1);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  options.get(argumentCount  -  1)+  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  options.get(argumentCount  -  1)+  1);	  commandLine.addValue(option,    options.get(argumentCount    -    1));    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
211	[BUG]  [BUGGY]  commandLine.addValue(option,  options.get(0));  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  options.get(0));  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  options.get(0));	  commandLine.addValue(option,    options.get(argumentCount    -    1));    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
212	[BUG]  [BUGGY]  commandLine.addValue(option,  options.get(argumentCount  -  2));  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  options.get(argumentCount  -  2));  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  options.get(argumentCount  -  2));	  commandLine.addValue(option,    options.get(argumentCount    -    1));    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
213	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option,  arguments))  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option,  arguments))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option,  arguments))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(option))    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	16	None	replace
214	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option,  argumentCount))  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option,  argumentCount))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option,  argumentCount))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(option))    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	16	None	replace
215	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option,  arguments.previous()))  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option,  arguments.previous()))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option,  arguments.previous()))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(option))    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	16	None	replace
216	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option,  arguments.next()))  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option,  arguments.next()))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(option,  arguments.next()))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(option))    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	16	None	replace
217	[BUG]  [BUGGY]  else  if(allValues.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(allValues.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(allValues.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {	  else    if(parameters.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
218	[BUG]  [BUGGY]  commandLine.setValue(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.setValue(option,  arguments.next());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.setValue(option,  arguments.next());	  commandLine.addValue(arguments.next());    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
219	[BUG]  [BUGGY]  commandLine.removeValue(option.next());  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.removeValue(option.next());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.removeValue(option.next());	  commandLine.addValue(arguments.next());    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
220	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	66	None	add
221	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	66	None	add
222	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  argumentLine.hasNext())  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  argumentLine.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  argumentLine.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	66	None	add
223	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(alwaysQuoted)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(alwaysQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else  if(commandLine!=  null  &&  commandLine.looksLikeOption(alwaysQuoted)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	66	None	add
224	[BUG]  [BUGGY]  final  ArgumentImpl  commandLine  =  options.get(option);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  final  ArgumentImpl  commandLine  =  options.get(option);  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	final  ArgumentImpl  commandLine  =  options.get(option);	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuo    	non-compiled	[CE]  'else'  without  'if'	71	None	replace
225	[BUG]  [BUGGY]  if(option.hasOption(option))  {  final  String  commandLine  =  option.getCommandLine();  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)  ==  arguments.previous();  break;  }  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(option.hasOption(option))  {  final  String  commandLine  =  option.getCommandLine();  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)  ==  arguments.previous();  break;  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(option.hasOption(option))  {  final  String  commandLine  =  option.getCommandLine();  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)  ==  arguments.previous();  break;  }	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)    	non-compiled	[CE]  ')'  expected	70	None	replace
226	[BUG]  [BUGGY]  if(option.hasOption(option))  {  final  String  commandLine  =  option.getCommandLine();  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)  ==  arguments.previous();  }  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(option.hasOption(option))  {  final  String  commandLine  =  option.getCommandLine();  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)  ==  arguments.previous();  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(option.hasOption(option))  {  final  String  commandLine  =  option.getCommandLine();  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)  ==  arguments.previous();  }	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)    	non-compiled	[CE]  ')'  expected	70	None	replace
227	[BUG]  [BUGGY]  if(option.hasOption(option))  {  final  String  commandLine  =  option.getCommandLine();  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)!=  arguments.previous();  break;  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(option.hasOption(option))  {  final  String  commandLine  =  option.getCommandLine();  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)!=  arguments.previous();  break;  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(option.hasOption(option))  {  final  String  commandLine  =  option.getCommandLine();  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)!=  arguments.previous();  break;  }	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)    	non-compiled	[CE]  ')'  expected	70	None	replace
228	[BUG]  [BUGGY]  if(option.hasOption(option))  {  final  String  commandLine  =  option.getCommandLine();  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)!=  ')'  expected  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(option.hasOption(option))  {  final  String  commandLine  =  option.getCommandLine();  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)!=  ')'  expected  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(option.hasOption(option))  {  final  String  commandLine  =  option.getCommandLine();  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)!=  ')'  expected	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)    	non-compiled	[CE]  ')'  expected	70	None	replace
229	[BUG]  [BUGGY]  else  if(commandLine.hasValue(allValuesQuoted)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.hasValue(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.hasValue(allValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
230	[BUG]  [BUGGY]  CommandLine.looksLikeOption(option,  arguments.next()))  {  arguments.previous();  break;  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine.looksLikeOption(option,  arguments.next()))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine.looksLikeOption(option,  arguments.next()))  {  arguments.previous();  break;  }	  commandLine.looksLikeOption(option,    arguments.next()))    {    arguments.previous();    break;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
231	[BUG]  [BUGGY]  CommandLine.looksLikeOption(option,  arguments.next()))  {  arguments.close();  break;  }  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine.looksLikeOption(option,  arguments.next()))  {  arguments.close();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine.looksLikeOption(option,  arguments.next()))  {  arguments.close();  break;  }	  commandLine.looksLikeOption(option,    arguments.next()))    {    arguments.previous();    break;    }    	non-compiled	[CE]  ';'  expected	21	None	replace
232	[BUG]  [BUGGY]  Preconditions.checkState(commandLine.looksLikeOption(allValues));  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  Preconditions.checkState(commandLine.looksLikeOption(allValues));  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	Preconditions.checkState(commandLine.looksLikeOption(allValues));	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(defaultValues))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
233	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(defaultValues))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine.looksLikeOption(defaultValues))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine.looksLikeOption(defaultValues))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(defaultValues))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
234	[BUG]  [BUGGY]  else  if(option.hasOption(allValuesQuoted)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.hasOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.hasOption(allValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
235	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption( "else ")&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(commandLine.looksLikeOption( "else ")&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	40	1	replace
236	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption( "else ")&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption( "else ")&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption( "else ")&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	40	1	replace
237	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	66	None	add
238	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  continue;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  continue;  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  continue;  }	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
239	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    if(commandLine!=  null  &&  commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	66	None	add
240	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  break;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  break;  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  break;  }	  	non-compiled	[CE]  illegal  start  of  expression	66	None	add
241	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  if(commandLine!=  null  &&  arguments.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  if(commandLine!=  null  &&  arguments.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    if(commandLine!=  null  &&  arguments.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	66	None	add
242	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	93	1	replace
243	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	93	1	replace
244	[BUG]  [BUGGY]  Preconditions.checkArgument(commandLine.looksLikeOption(allValuesQuoted));  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  Preconditions.checkArgument(commandLine.looksLikeOption(allValuesQuoted));  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	Preconditions.checkArgument(commandLine.looksLikeOption(allValuesQuoted));	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
245	[BUG]  [BUGGY]  else  if(commandLine.looksBoundaryOption(allValuesQuoted)&&  argument.hasNext())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksBoundaryOption(allValuesQuoted)&&  argument.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksBoundaryOption(allValuesQuoted)&&  argument.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    argument.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
246	[BUG]  [BUGGY]  commandLine.append(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.append(option,  arguments.next());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.append(option,  arguments.next());	  commandLine.addValue(option,    arguments.previous());    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
247	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(arguments.size()  -  1);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  resources.get(arguments.size()  -  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(arguments.size()  -  1);	  CommandLine    commandLine    =    resources.get(commandLine    -    1);    	non-compiled	[CE]  'else'  without  'if'	37	None	replace
248	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine  ==  null)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	if(commandLine  ==  null)  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	68	1	replace
249	[BUG]  [BUGGY]  if(commandLine  ==  null)  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine  ==  null)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine  ==  null)  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	68	1	replace
250	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksBoundaryOption(ALLValuesQuoted))  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksBoundaryOption(ALLValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksBoundaryOption(ALLValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	61	None	replace
251	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksBoundaryOption(nullValuesQuoted))  {  [CE]  cannot  find  symbol  nullValuesQuoted  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksBoundaryOption(nullValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksBoundaryOption(nullValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  nullValuesQuoted	61	None	replace
252	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALL_VALUES_QUOTED))  {  [CE]  cannot  find  symbol  ALL_VALUES_QUOTED  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALL_VALUES_QUOTED))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALL_VALUES_QUOTED))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(ALLValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  ALL_VALUES_QUOTED	60	None	replace
253	[BUG]  [BUGGY]  while(commandLine.hasNext()  &&  initialSeparator)  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasNext()  &&  initialSeparator)  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasNext()  &&  initialSeparator)  {  arguments.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	32	None	replace
254	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  maximum)  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext()  &&  maximum)  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&  maximum)  {  arguments.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	32	None	replace
255	[BUG]  [BUGGY]  while(commandLine.hasNext())  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasNext())  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasNext())  {  arguments.previous();  break;  }	  while(arguments.hasNext()    &&(argumentCount    <    maximum))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
256	[BUG]  [BUGGY]  while(commandLine.hasNext()  &&(argumentCount  <  minimum))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasNext()  &&(argumentCount  <  minimum))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasNext()  &&(argumentCount  <  minimum))  {  arguments.previous();  break;  }	  while(arguments.hasNext()    &&(argumentCount    <    maximum))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
257	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(initialSplit);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  resources.get(initialSplit);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(initialSplit);	  CommandLine    commandLine    =    arguments.get(initialSplit);    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
258	[BUG]  [BUGGY]  CommandLine  commandLine  =  arguments.get(arguments.size()  -  1);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  arguments.get(arguments.size()  -  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  arguments.get(arguments.size()  -  1);	  CommandLine    commandLine    =    arguments.get(initialSplit);    	non-compiled	[CE]  'else'  without  'if'	91	None	replace
259	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getArgumentLine(arguments.size()  -  1);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  option.getArgumentLine(arguments.size()  -  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.getArgumentLine(arguments.size()  -  1);	  CommandLine    commandLine    =    option.getArgumentLine();    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
260	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.previous());  break;  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.previous());  break;  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.previous());  break;	  commandLine.addValue(option,    arguments.next());    break;    	non-compiled	[CE]  'else'  without  'if'	39	None	replace
261	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    ArgumentImpl    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	54	None	replace
262	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQUoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	96	1	replace
263	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValues)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQUoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	96	1	replace
264	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.toString(),  options);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.toString(),  options);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(commandLine.toString(),  options);	  CommandLine    commandLine    =    resources.get(commandLine.toString());    	non-compiled	[CE]  'else'  without  'if'	36	None	replace
265	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&    arguments.previous())    {    	compilable	  [FE]  ComparisonFailure  	80	1	replace
266	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&    arguments.previous())    {    	compilable	  [FE]  ComparisonFailure  	80	1	replace
267	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  arguments.get(0))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  arguments.get(0))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  arguments.get(0))  {	  else    if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&    arguments.previous())    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
268	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  argumentField.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  argumentField.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  argumentField.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    argumentField.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	52	None	replace
269	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.next())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.next())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)&&  arguments.next())  {	  else    if(commandLine.looksLikeOption(arguments)&&    arguments.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	13	None	replace
270	[BUG]  [BUGGY]  while(commandLine.hasNext()  &&  initialSeparator)  {  commandLine.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasNext()  &&  initialSeparator)  {  commandLine.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasNext()  &&  initialSeparator)  {  commandLine.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commandLine.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
271	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  <  maximum)  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  <  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  <  maximum)  {	  else    if(commandLine.looksLikeOption(arguments)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	9	None	replace
272	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  }	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    ArgumentImpl    commandLine    =    options.get(commandLine.getValue());    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
273	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(argumentCount);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(argumentCount);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(argumentCount);	  CommandLine    commandLine    =    options.getCommandLine(commandLine);    	non-compiled	[CE]  'else'  without  'if'	44	None	replace
274	[BUG]  [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  >=  maximum)  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  >=  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  >=  maximum)  {	  else    if(arguments.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
275	[BUG]  [BUGGY]  else  if(arguments.looksLikeOption(ALLValuesQuoted)&&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(arguments.looksLikeOption(ALLValuesQuoted)&&  arguments.size()  >  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(arguments.looksLikeOption(ALLValuesQuoted)&&  arguments.size()  >  maximum)  {	  else    if(arguments.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	78	None	replace
276	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  options.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  options.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)&&  options.previous())  {	  else    if(commandLine.looksLikeOption(arguments)&&    commandLine.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	14	None	replace
277	[BUG]  [BUGGY]  Preconditions.checkState(commandLine.looksLikeOption(arguments));  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  Preconditions.checkState(commandLine.looksLikeOption(arguments));  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	Preconditions.checkState(commandLine.looksLikeOption(arguments));	  Preconditions.checkState(commandLine.looksLikeOption(allValuesQuoted));    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
278	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext()  ||  arguments.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext()  ||  arguments.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext()  ||  arguments.previous())  {	  else    if(commandLine.looksLikeOption(option)&&    arguments.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	26	None	replace
279	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksBoundaryOption(defaultValuesQuoted))  {  [CE]  cannot  find  symbol  defaultValuesQuoted  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksBoundaryOption(defaultValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksBoundaryOption(defaultValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  defaultValuesQuoted	4	None	replace
280	[BUG]  [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    while(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
281	[BUG]  [BUGGY]  while(commandLine.hasNext()  &&  initialSplit)  {  arguments.addValue(option,  arguments.next());  break;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasNext()  &&  initialSplit)  {  arguments.addValue(option,  arguments.next());  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasNext()  &&  initialSplit)  {  arguments.addValue(option,  arguments.next());  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commandLine.addValue(option,    arguments.next());    break;    }    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
282	[BUG]  [BUGGY]  else  if(option.hasOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.hasOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.hasOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(option))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
283	[BUG]  [BUGGY]  else  if(option  ==  Option.EXTENDS)  {  [CE]  cannot  find  symbol  EXTENDS  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option  ==  Option.EXTENDS)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option  ==  Option.EXTENDS)  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(option))    {    	non-compiled	[CE]  cannot  find  symbol  EXTENDS	5	None	replace
284	[BUG]  [BUGGY]  if(option  ==  null)  {  while(arguments.hasNext())  {  commandLine  =  options.next();  }  [CE]  cannot  find  symbol  options  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(option  ==  null)  {  while(arguments.hasNext())  {  commandLine  =  options.next();  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(option  ==  null)  {  while(arguments.hasNext())  {  commandLine  =  options.next();  }	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)    	non-compiled	[CE]  cannot  find  symbol  options	70	None	replace
285	[BUG]  [BUGGY]  if(option!=  null)  {  while(arguments.hasNext())  {  commandLine  =  options.next();  }  [CE]  cannot  find  symbol  options  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(option!=  null)  {  while(arguments.hasNext())  {  commandLine  =  options.next();  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(option!=  null)  {  while(arguments.hasNext())  {  commandLine  =  options.next();  }	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)    	non-compiled	[CE]  cannot  find  symbol  options	70	None	replace
286	[BUG]  [BUGGY]  Preconditions.checkState(!consumeRemaining);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  Preconditions.checkState(!consumeRemaining);  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	Preconditions.checkState(!consumeRemaining);	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)    	non-compiled	[CE]  'else'  without  'if'	70	None	replace
287	[BUG]  [BUGGY]  if(option  ==  null)  {  while(arguments.hasNext())  {  commandLine  =  options.next();  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(option  ==  null)  {  while(arguments.hasNext())  {  commandLine  =  options.next();  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(option  ==  null)  {  while(arguments.hasNext())  {  commandLine  =  options.next();	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)    	non-compiled	[CE]  'else'  without  'if'	70	None	replace
288	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	94	None	replace
289	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine.looksLikeOption( "else ")&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	if(commandLine.looksLikeOption( "else ")&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	94	1	replace
290	[BUG]  [BUGGY]  if(commandLine.looksLikeOption( "else ")&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine.looksLikeOption( "else ")&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine.looksLikeOption( "else ")&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	94	1	replace
291	[BUG]  [BUGGY]  else  if(commandLine.looksBoundaryOption(alwaysQuoted)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  alwaysQuoted  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksBoundaryOption(alwaysQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksBoundaryOption(alwaysQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(alwaysQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  alwaysQuoted	42	None	replace
292	[BUG]  [BUGGY]  if(option  ==  null)  {  while(arguments.hasNext())  {  commandLine.addValue(option,  options.next());  }  [CE]  cannot  find  symbol  options  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(option  ==  null)  {  while(arguments.hasNext())  {  commandLine.addValue(option,  options.next());  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(option  ==  null)  {  while(arguments.hasNext())  {  commandLine.addValue(option,  options.next());  }	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuo    	non-compiled	[CE]  cannot  find  symbol  options	71	None	replace
293	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(option  ==  null)  {  while(arguments.hasNext())  {  commandLine.addValue(option,  arguments.next());  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	if(option  ==  null)  {  while(arguments.hasNext())  {  commandLine.addValue(option,  arguments.next());  }	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuo    	compilable	  [FE]  ComparisonFailure  	71	1	replace
294	[BUG]  [BUGGY]  if(option  ==  null)  {  while(arguments.hasNext())  {  commandLine.addValue(option,  arguments.next());  }  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(option  ==  null)  {  while(arguments.hasNext())  {  commandLine.addValue(option,  arguments.next());  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(option  ==  null)  {  while(arguments.hasNext())  {  commandLine.addValue(option,  arguments.next());  }	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuo    	compilable	  [FE]  ComparisonFailure  	71	1	replace
295	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext()  ||  arguments.previous()!=  null)  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext()  ||  arguments.previous()!=  null)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext()  ||  arguments.previous()!=  null)  {	  	non-compiled	[CE]  'else'  without  'if'	92	None	add
296	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(consumeRemaining)&&  argumentCount.hasNext())  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(consumeRemaining)&&  argumentCount.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(consumeRemaining)&&  argumentCount.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	92	None	add
297	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext()  ||  arguments.previous()  ==  null)  {  [CE]  'else'  without  'if'  [FE]        ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext()  ||  arguments.previous()  ==  null)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext()  ||  arguments.previous()  ==  null)  {	  	non-compiled	[CE]  'else'  without  'if'	92	None	add
298	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext()  ||  arguments.previous()!=  initialSplit)  {  [CE]  'else'  without  'if'  [FE]          ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext()  ||  arguments.previous()!=  initialSplit)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext()  ||  arguments.previous()!=  initialSplit)  {	  	non-compiled	[CE]  'else'  without  'if'	92	None	add
299	[BUG]  [BUGGY]  final  boolean  hasNextSplit  =  commandLine.hasNext();  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  final  boolean  hasNextSplit  =  commandLine.hasNext();  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	final  boolean  hasNextSplit  =  commandLine.hasNext();	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
300	[BUG]  [BUGGY]  final  boolean  hasNextSeparator  =  options.hasNext();  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  final  boolean  hasNextSeparator  =  options.hasNext();  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	final  boolean  hasNextSeparator  =  options.hasNext();	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
301	[BUG]  [BUGGY]  final  boolean  hasNextSeparator  =  option.hasNext();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  final  boolean  hasNextSeparator  =  option.hasNext();  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	final  boolean  hasNextSeparator  =  option.hasNext();	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
302	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(ALLValuesQuoted)&&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(ALLValuesQuoted)&&  arguments.size()  >  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(ALLValuesQuoted)&&  arguments.size()  >  maximum)  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    minimum)    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	7	None	replace
303	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.findCommandLine(defaultValuesQuoted);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  option.findCommandLine(defaultValuesQuoted);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.findCommandLine(defaultValuesQuoted);	  CommandLine    commandLine    =    option.findCommandLine();    	non-compiled	[CE]  'else'  without  'if'	77	None	replace
304	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(option,  arguments.next());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(option,  arguments.next());	  CommandLine    commandLine    =    options.getCommandLine(arguments.next());    	non-compiled	[CE]  'else'  without  'if'	84	None	replace
305	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.next()  +  1);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.next()  +  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(arguments.next()  +  1);	  CommandLine    commandLine    =    options.getCommandLine(arguments.next());    	non-compiled	[CE]  'else'  without  'if'	84	None	replace
306	[BUG]  [BUGGY]  while(commandLine!=  null  &&  commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine!=  null  &&  commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine!=  null  &&  commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }	  while(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	86	None	replace
307	[BUG]  [BUGGY]  while(commandLine.hasArg())  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasArg())  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasArg())  {  arguments.previous();  break;  }	  while(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	86	None	replace
308	[BUG]  [BUGGY]  while(commandLine.hasValues())  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasValues())  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasValues())  {  arguments.previous();  break;  }	  while(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	86	None	replace
309	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(allValues))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine.looksLikeOption(allValues))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine.looksLikeOption(allValues))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(defaultValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	56	None	replace
310	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALLValuesQuoted)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALLValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALLValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	67	None	replace
311	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	67	1	replace
312	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	compilable	  [FE]  ComparisonFailure  	67	1	replace
313	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.next())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.next())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  arguments.next())  {	  else    if(commandLine.looksLikeOption(option)&&    arguments.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	15	None	replace
314	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option,  arguments)&&  arguments.previous())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option,  arguments)&&  arguments.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option,  arguments)&&  arguments.previous())  {	  else    if(commandLine.looksLikeOption(option)&&    arguments.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	15	None	replace
315	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_INITIAL_SEPARATOR)&&  commandLine.looksBoundaryOption(ALLValuesQuoted))  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_INITIAL_SEPARATOR)&&  commandLine.looksBoundaryOption(ALLValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(DEFAULT_INITIAL_SEPARATOR)&&  commandLine.looksBoundaryOption(ALLValuesQuoted))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    commandLine.looksBoundaryOption(ALLValuesQuoted))    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	46	None	replace
316	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  commandLine.looksBoundaryOption(ALLValuesQuoted))  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  commandLine.looksBoundaryOption(ALLValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)&&  commandLine.looksBoundaryOption(ALLValuesQuoted))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    commandLine.looksBoundaryOption(ALLValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	46	None	replace
317	[BUG]  [BUGGY]  commandLine.addValue(option,  values.remove());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  values.remove());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  values.remove());	  commandLine.addValue(option,    arguments.remove());    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
318	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALLValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALLValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALLValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	83	None	replace
319	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING)||  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
320	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_INITIAL_SEPARATOR)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_INITIAL_SEPARATOR)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_INITIAL_SEPARATOR)||  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	83	None	replace
321	[BUG]  [BUGGY]  if(commandLine!=  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  }  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine!=  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine!=  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    List    <    ComparisonFailure>    arguments    =    stripBoundaryQuotes(allValuesQuoted);    	non-compiled	[CE]  'else'  without  'if'	57	None	replace
322	[BUG]  [BUGGY]  if(commandLine!=  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine!=  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine!=  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted);	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    List    <    ComparisonFailure>    arguments    =    stripBoundaryQuotes(allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
323	[BUG]  [BUGGY]  if(commandLine!=  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine!=  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine!=  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValuesQuoted	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    List    <    ComparisonFailure>    arguments    =    stripBoundaryQuotes(allValuesQuoted);    	non-compiled	[CE]  ')'  expected	57	None	replace
324	[BUG]  [BUGGY]  CommandLine  commandLine  =  arguments.getArgumentLine(option);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  arguments.getArgumentLine(option);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  arguments.getArgumentLine(option);	  CommandLine    commandLine    =    arguments.getArgumentLine();    	non-compiled	[CE]  'else'  without  'if'	23	None	replace
325	[BUG]  [BUGGY]  ArgumentImpl  resources  =  option.getResources();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  ArgumentImpl  resources  =  option.getResources();  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	ArgumentImpl  resources  =  option.getResources();	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted    	non-compiled	[CE]  'else'  without  'if'	72	None	replace
326	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.size()  >  maximum)  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.size()  >  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.size()  >  maximum)  {	  else    if(arguments.looksLikeOption(allValuesQuoted)&&    commandLine.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
327	[BUG]  [BUGGY]  else  if(option.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximum)  {	  else    if(parameters.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
328	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.createCommandLine(defaultValuesQuoted);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  option.createCommandLine(defaultValuesQuoted);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.createCommandLine(defaultValuesQuoted);	  CommandLine    commandLine    =    option.createCommandLine();    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
329	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.createCommandLine(commandLine);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  option.createCommandLine(commandLine);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.createCommandLine(commandLine);	  CommandLine    commandLine    =    option.createCommandLine();    	non-compiled	[CE]  'else'  without  'if'	76	None	replace
330	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.substring(1)  +  1);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.substring(1)  +  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(commandLine.substring(1)  +  1);	  CommandLine    commandLine    =    resources.get(commandLine.substring(1));    	non-compiled	[CE]  'else'  without  'if'	38	None	replace
331	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  argumentCount))  {  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  argumentCount))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  argumentCount))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted,    subsequentSplit))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
332	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  negativeSeparator))  {  [CE]  cannot  find  symbol  negativeSeparator  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  negativeSeparator))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(allValuesQuoted)&&  commandLine.looksBoundaryOption(allValuesQuoted,  negativeSeparator))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted,    subsequentSplit))    {    	non-compiled	[CE]  cannot  find  symbol  negativeSeparator	2	None	replace
333	[BUG]  [BUGGY]  CommandLine  commandLine  =  commandLine.getArgument();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  commandLine.getArgument();  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  commandLine.getArgument();	  CommandLine    commandLine    =    commandLine.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
334	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  arguments);  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.next(),  arguments);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next(),  arguments);	  commandLine.addValue(option,    arguments.next(),    values);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
335	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  allValuesQuoted);  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.next(),  allValuesQuoted);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next(),  allValuesQuoted);	  commandLine.addValue(option,    arguments.next(),    values);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
336	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  preferredValues);  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.next(),  preferredValues);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next(),  preferredValues);	  commandLine.addValue(option,    arguments.next(),    values);    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
337	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine    ==    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  	non-compiled	[CE]  'else'  without  'if'	17	None	add
338	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine    ==    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {	  	non-compiled	[CE]  'else'  without  'if'	17	None	add
339	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted)  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted)  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine    ==    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted)	  	non-compiled	[CE]  ')'  expected	17	None	add
340	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuo  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuo  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine    ==    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuo	  	non-compiled	[CE]  ')'  expected	17	None	add
341	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQu  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQu  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine    ==    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQu	  	non-compiled	[CE]  ')'  expected	17	None	add
342	[BUG]  [BUGGY]  if(!commandLine.isEmpty())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(!commandLine.isEmpty())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(!commandLine.isEmpty())  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
343	[BUG]  [BUGGY]  if(!allValues.hasNext())  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(!allValues.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(!allValues.hasNext())  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
344	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  arguments.close());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.next(),  arguments.close());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next(),  arguments.close());	  commandLine.addValue(option,    options.next(),    arguments.previous());    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
345	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  arguments.maximumSplit());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.next(),  arguments.maximumSplit());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next(),  arguments.maximumSplit());	  commandLine.addValue(option,    options.next(),    arguments.previous());    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
346	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  arguments.current());  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.next(),  arguments.current());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next(),  arguments.current());	  commandLine.addValue(option,    options.next(),    arguments.previous());    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
347	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)||  arguments.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)||  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)||  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(option)&&    arguments.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	43	None	replace
348	[BUG]  [BUGGY]  else  if(option.looksLikeOption(arguments)&&  option.hasNext())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.looksLikeOption(arguments)&&  option.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.looksLikeOption(arguments)&&  option.hasNext())  {	  else    if(option.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
349	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(ALL_VALUES_REMAINING)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  ALL_VALUES_REMAINING  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(ALL_VALUES_REMAINING)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(ALL_VALUES_REMAINING)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine.looksLikeOption(ALLValuesQuoted)&&    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  ALL_VALUES_REMAINING	45	None	replace
350	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  argumentCount);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.next(),  argumentCount);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next(),  argumentCount);	  commandLine.addValue(option,    options.next(),    arguments.maximumSplit);    	non-compiled	[CE]  'else'  without  'if'	50	None	replace
351	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.previous(),  arguments.maximumSplit);  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.previous(),  arguments.maximumSplit);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.previous(),  arguments.maximumSplit);	  commandLine.addValue(option,    options.next(),    arguments.maximumSplit);    	non-compiled	[CE]  'else'  without  'if'	50	None	replace
352	[BUG]  [BUGGY]  while(commandLine.hasNext()  &&  initialSeparator)  {  commands.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasNext()  &&  initialSeparator)  {  commands.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasNext()  &&  initialSeparator)  {  commands.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commands.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
353	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  maximum)  {  commands.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext()  &&  maximum)  {  commands.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&  maximum)  {  commands.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commands.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
354	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine  +  2);  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine  +  2);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(commandLine  +  2);	  CommandLine    commandLine    =    resources.get(commandLine    +    1);    	non-compiled	[CE]  'else'  without  'if'	64	None	replace
355	[BUG]  [BUGGY]  if(commandLine.looksLikeOption(values))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(commandLine.looksLikeOption(values))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(commandLine.looksLikeOption(values))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(defaultValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	56	None	replace
356	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  initialSeparator)  {  commandLine.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext()  &&  initialSeparator)  {  commandLine.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&  initialSeparator)  {  commandLine.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commandLine.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
357	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  maximum)  {  commandLine.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext()  &&  maximum)  {  commandLine.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&  maximum)  {  commandLine.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commandLine.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	74	None	replace
358	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.previous()  ||  subsequentSplit)  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.previous()  ||  subsequentSplit)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)&&  arguments.previous()  ||  subsequentSplit)  {	  else    if(commandLine.looksLikeOption(arguments)&&    arguments.previous())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	13	None	replace
359	[BUG]  [BUGGY]  else  if(commandLine.hasOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.hasOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.hasOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  }	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    ArgumentImpl    commandLine    =    options.get(commandLine.getValue());    	non-compiled	[CE]  'else'  without  'if'	53	None	replace
360	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.get(commandLine.getValue());	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    ArgumentImpl    commandLine    =    options.get(commandLine.getValue());    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	53	None	replace
361	[BUG]  [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.  [CE]  <identifier>  expected  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	                if(commandLine.looksLikeOption(allValuesQuoted))        {        arguments.previous();        break;        }        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.	  	non-compiled	[CE]  <identifier>  expected	28	None	add
362	[BUG]  [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	                if(commandLine.looksLikeOption(allValuesQuoted))        {        arguments.previous();        break;        }        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine	  	non-compiled	[CE]  ')'  expected	28	None	add
363	[BUG]  [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looks  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looks  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	                if(commandLine.looksLikeOption(allValuesQuoted))        {        arguments.previous();        break;        }        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looks	  	non-compiled	[CE]  ')'  expected	28	None	add
364	[BUG]  [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	                if(commandLine.looksLikeOption(allValuesQuoted))        {        arguments.previous();        break;        }        if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
365	[BUG]  [BUGGY]  else  if(commandLine.hasOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.hasOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.hasOption(option)&&  arguments.hasNext())  {  ArgumentImpl  commandLine  =  options.getCommandLine();  }	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    ArgumentImpl    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	54	None	replace
366	[BUG]  [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine  ==  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine  ==  null  &&  commandLine.looksLikeOption(allValuesQuoted))  {  if(commandLine  ==  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine    ==    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine  ==  null  &&  commandLine.looksLikeOption(defaultValuesQuoted))  {	  	non-compiled	[CE]  'else'  without  'if'	17	None	add
367	[BUG]  [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.substring(0,  commandLine.length()  -  1);  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  resources.get(commandLine.substring(0,  commandLine.length()  -  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  resources.get(commandLine.substring(0,  commandLine.length()  -  1);	  CommandLine    commandLine    =    resources.get(commandLine.substring(1));    	non-compiled	[CE]  ')'  expected	38	None	replace
368	[BUG]  [BUGGY]  commandLine.removeValue(option,  arguments.remove());  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.removeValue(option,  arguments.remove());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.removeValue(option,  arguments.remove());	  commandLine.addValue(option,    arguments.remove());    	non-compiled	[CE]  'else'  without  'if'	62	None	replace
369	[BUG]  [BUGGY]  final  char  nextSeparator  =  stripBoundaryQuotes(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  final  char  nextSeparator  =  stripBoundaryQuotes(allValuesQuoted);  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	final  char  nextSeparator  =  stripBoundaryQuotes(allValuesQuoted);	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
370	[BUG]  [BUGGY]  final  boolean  followed  =  stripBoundaryQuotes(allValuesQuoted);  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  final  boolean  followed  =  stripBoundaryQuotes(allValuesQuoted);  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	final  boolean  followed  =  stripBoundaryQuotes(allValuesQuoted);	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  'else'  without  'if'	69	None	replace
371	[BUG]  [BUGGY]  else  if(commandLine.hasValue(option))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.hasValue(option))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.hasValue(option))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQUoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
372	[BUG]  [BUGGY]  while(commandLine.hasValue(option))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasValue(option))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasValue(option))  {  arguments.previous();  break;  }	  while(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	86	None	replace
373	[BUG]  [BUGGY]  while(commandLine.hasOption(option))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasOption(option))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasOption(option))  {  arguments.previous();  break;  }	  while(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	86	None	replace
374	[BUG]  [BUGGY]  else  if(option.hasOption(ALLValuesQuoted)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.hasOption(ALLValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.hasOption(ALLValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    argumentCount.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	51	None	replace
375	[BUG]  [BUGGY]  commandLine.setValue(option,  arguments.next());  break;  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.setValue(option,  arguments.next());  break;  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.setValue(option,  arguments.next());  break;	  commandLine.looksLikeOption(option,    arguments.next()))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
376	[BUG]  [BUGGY]  commandLine.removeValue(option,  arguments.next());  break;  [CE]  'else'  without  'if'  [FE]                          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.removeValue(option,  arguments.next());  break;  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.removeValue(option,  arguments.next());  break;	  commandLine.looksLikeOption(option,    arguments.next()))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
377	[BUG]  [BUGGY]  commandLine.addValue(option,  argument.next());  [CE]  'else'  without  'if'  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  argument.next());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  argument.next());	  commandLine.addValue(arguments.next());    	non-compiled	[CE]  'else'  without  'if'	63	None	replace
378	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  (argumentCount  <  maximum))  {  commandLine.addValue(option,  arguments.next());  break;  }  [CE]  'else'  without  'if'  [FE]                      ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext()  &&  (argumentCount  <  maximum))  {  commandLine.addValue(option,  arguments.next());  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&  (argumentCount  <  maximum))  {  commandLine.addValue(option,  arguments.next());  break;  }	  if(commandLine.looksLikeOption(option,    arguments.next()))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	87	None	replace
379	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  (argumentCount  <  maximum))  {  commandLine.addValue(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]                        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext()  &&  (argumentCount  <  maximum))  {  commandLine.addValue(option,  arguments.next());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&  (argumentCount  <  maximum))  {  commandLine.addValue(option,  arguments.next());	  if(commandLine.looksLikeOption(option,    arguments.next()))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	87	None	replace
380	[BUG]  [BUGGY]  if(expected)  {  while(arguments.hasNext())  {  warnings.remove();  }  [CE]  cannot  find  symbol  expected  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(expected)  {  while(arguments.hasNext())  {  warnings.remove();  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(expected)  {  while(arguments.hasNext())  {  warnings.remove();  }	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)    	non-compiled	[CE]  cannot  find  symbol  expected	70	None	replace
381	[BUG]  [BUGGY]  if(expected)  {  while(arguments.hasNext())  {  warnings.next();  }  [CE]  cannot  find  symbol  expected  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(expected)  {  while(arguments.hasNext())  {  warnings.next();  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(expected)  {  while(arguments.hasNext())  {  warnings.next();  }	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)    	non-compiled	[CE]  cannot  find  symbol  expected	70	None	replace
382	[BUG]  [BUGGY]  if(expected)  {  while(arguments.hasNext())  {  warnings.next();  break;  }  [CE]  cannot  find  symbol  expected  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(expected)  {  while(arguments.hasNext())  {  warnings.next();  break;  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(expected)  {  while(arguments.hasNext())  {  warnings.next();  break;  }	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)    	non-compiled	[CE]  cannot  find  symbol  expected	70	None	replace
383	[BUG]  [BUGGY]  if(expected)  {  while(arguments.hasNext())  {  warnings.previous();  break;  }  [CE]  cannot  find  symbol  expected  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(expected)  {  while(arguments.hasNext())  {  warnings.previous();  break;  }  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(expected)  {  while(arguments.hasNext())  {  warnings.previous();  break;  }	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)    	non-compiled	[CE]  cannot  find  symbol  expected	70	None	replace
384	[BUG]  [BUGGY]  while(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }  if(commandLine.looksLikeOption(option))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(option))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	59	None	replace
385	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  initialSeparator)  {  commands.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext()  &&  initialSeparator)  {  commands.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&  initialSeparator)  {  commands.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    commands.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	75	None	replace
386	[BUG]  [BUGGY]  Preconditions.checkState(commandLine.hasValue(allValuesQuoted));  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  Preconditions.checkState(commandLine.hasValue(allValuesQuoted));  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	Preconditions.checkState(commandLine.hasValue(allValuesQuoted));	  Preconditions.checkState(commandLine.looksLikeOption(allValuesQuoted));    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
387	[BUG]  [BUGGY]  Preconditions.checkState(commandLine.hasArg());  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  Preconditions.checkState(commandLine.hasArg());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	Preconditions.checkState(commandLine.hasArg());	  Preconditions.checkState(commandLine.looksLikeOption(allValuesQuoted));    	non-compiled	[CE]  'else'  without  'if'	49	None	replace
388	[BUG]  [BUGGY]  while(arguments.hasNext()  ||  initialSplit)  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext()  ||  initialSplit)  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  ||  initialSplit)  {  arguments.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	32	None	replace
389	[BUG]  [BUGGY]  while(arguments.hasNext())  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext())  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext())  {  arguments.previous();  break;  }	  while(arguments.hasNext()    &&    initialSplit)    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	32	None	replace
390	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.hasValue(defaultValuesQuoted))  {  [CE]  cannot  find  symbol  defaultValuesQuoted  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.hasValue(defaultValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.hasValue(defaultValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  defaultValuesQuoted	4	None	replace
391	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  defaultValuesQuoted.equals( " "))  {  [CE]  cannot  find  symbol  defaultValuesQuoted  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  defaultValuesQuoted.equals( " "))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  defaultValuesQuoted.equals( " "))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  defaultValuesQuoted	4	None	replace
392	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(defaultValues!=  null  &&  defaultValues.size()  >  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(defaultValues!=  null  &&  defaultValues.size()  >  maximum)  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
393	[BUG]  [BUGGY]  else  if(defaultValues!=  null  &&  defaultValues.size()  >  maximum)  {  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(defaultValues!=  null  &&  defaultValues.size()  >  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(defaultValues!=  null  &&  defaultValues.size()  >  maximum)  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(defaultValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	4	1	replace
394	[BUG]  [BUGGY]  while(!commandLine.isEmpty())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(!commandLine.isEmpty())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(!commandLine.isEmpty())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    while(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
395	[BUG]  [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    while(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
396	[BUG]  [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  while(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    while(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	85	None	replace
397	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments.next())&&  arguments.hasNext())  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments.next())&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments.next())&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	93	None	replace
398	[BUG]  [BUGGY]  while(commandLine.hasValue(option))  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasValue(option))  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasValue(option))  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQUoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
399	[BUG]  [BUGGY]  while(commandLine.hasValues())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasValues())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasValues())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQUoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
400	[BUG]  [BUGGY]  while(commandLine.hasValues())  {  if(commandLine.looksLikeOption(allValues))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.hasValues())  {  if(commandLine.looksLikeOption(allValues))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.hasValues())  {  if(commandLine.looksLikeOption(allValues))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQUoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
401	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  arguments.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  arguments.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  arguments.looksLikeOption(allValuesQuoted)||  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
402	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_COMMAND_SEPARATOR)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  DEFAULT_COMMAND_SEPARATOR  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_COMMAND_SEPARATOR)||  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_COMMAND_SEPARATOR)||  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)||    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_COMMAND_SEPARATOR	83	None	replace
403	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(expression)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  expression  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(expression)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(expression)&&  arguments.hasNext())  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  expression	67	None	replace
404	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(elseRemaining))  {  [CE]  cannot  find  symbol  elseRemaining  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(elseRemaining))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(elseRemaining))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(alwaysQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  elseRemaining	6	None	replace
405	[BUG]  [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximal)  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximal)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(arguments.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  maximal)  {	  else    if(arguments.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
406	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(elseRemaining)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  elseRemaining  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(elseRemaining)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(elseRemaining)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(alwaysQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  elseRemaining	42	None	replace
407	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(else)&&  arguments.hasNext())  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(else)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(else)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(alwaysQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
408	[BUG]  [BUGGY]  while(arguments.hasNext()  &&  (argumentCount  <  maximum))  {  warningLine.addValue(option,  arguments.next());  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext()  &&  (argumentCount  <  maximum))  {  warningLine.addValue(option,  arguments.next());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&  (argumentCount  <  maximum))  {  warningLine.addValue(option,  arguments.next());	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
409	[BUG]  [BUGGY]  else  if(option.hasNext())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    argument.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
410	[BUG]  [BUGGY]  CommandLine  commandLine  =  commandLine.removeFirst();  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  commandLine.removeFirst();  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  commandLine.removeFirst();	  CommandLine    commandLine    =    commandLine.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
411	[BUG]  [BUGGY]  CommandLine  commandLine  =  commandLine.remove();  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  commandLine.remove();  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  commandLine.remove();	  CommandLine    commandLine    =    commandLine.getCommandLine();    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
412	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.hasOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(commandLine!=  null  &&  commandLine.hasOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	3	1	replace
413	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.hasOption(allValuesQuoted))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.hasOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.hasOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	3	1	replace
414	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.isLikeOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.isLikeOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.isLikeOption(allValuesQuoted))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
415	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALLValuesQuoted)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALLValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else  if(commandLine!=  null  &&  commandLine.looksLikeOption(ALLValuesQuoted)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	66	None	add
416	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  argumentCount.hasNext())  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  arguments.hasNext())  {  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  argumentCount.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else  if(commandLine!=  null  &&  commandLine.looksLikeOption(allValuesQuoted)&&  argumentCount.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	66	None	add
417	[BUG]  [BUGGY]  if(!commandLine.isEmpty())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValu  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(!commandLine.isEmpty())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValu  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(!commandLine.isEmpty())  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  List  <  ComparisonFailure>  arguments  =  stripBoundaryQuotes(allValu	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    List    <    ComparisonFailure>    arguments    =    stripBoundaryQuotes(allValuesQuoted);    	non-compiled	[CE]  ')'  expected	57	None	replace
418	[BUG]  [BUGGY]  else  if(parameters.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  minimum)  {  [CE]  cannot  find  symbol  parameters  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(parameters.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  minimum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(parameters.looksLikeOption(allValuesQuoted)&&  arguments.size()  >  minimum)  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.size()    >    minimum)    {    	non-compiled	[CE]  cannot  find  symbol  parameters	7	None	replace
419	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.next(),  arguments.previous());  [CE]  'else'  without  'if'  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  options.getCommandLine(arguments.next(),  arguments.previous());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  options.getCommandLine(arguments.next(),  arguments.previous());	  CommandLine    commandLine    =    options.getCommandLine(arguments.next());    	non-compiled	[CE]  'else'  without  'if'	84	None	replace
420	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  [CE]  'else'  without  'if'  [FE]    ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	92	None	add
421	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(consumeRemaining)&&  argument.hasNext())  {  [CE]  'else'  without  'if'  [FE]      ComparisonFailure    [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(consumeRemaining)&&  arguments.hasNext())  {  else  if(commandLine.looksLikeOption(consumeRemaining)&&  argument.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else    if(commandLine.looksLikeOption(consumeRemaining)&&    arguments.hasNext())    {    else  if(commandLine.looksLikeOption(consumeRemaining)&&  argument.hasNext())  {	  	non-compiled	[CE]  'else'  without  'if'	92	None	add
422	[BUG]  [BUGGY]  else  if(option.hasOption(ALLValuesQuoted))  {  [CE]  cannot  find  symbol  ALLValuesQuoted  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.hasOption(ALLValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.hasOption(ALLValuesQuoted))  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(option)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  ALLValuesQuoted	43	None	replace
423	[BUG]  [BUGGY]  else  if(option.looksLikeOption(arguments)&&  commandLine.previous())  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(option.looksLikeOption(arguments)&&  commandLine.previous())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(option.looksLikeOption(arguments)&&  commandLine.previous())  {	  else    if(commandLine.looksLikeOption(option)&&    arguments.previous())    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
424	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  arguments.remove());  [CE]  'else'  without  'if'  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.next(),  arguments.remove());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next(),  arguments.remove());	  commandLine.addValue(option,    options.next(),    arguments.previous());    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
425	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.next(),  arguments.second());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.next(),  arguments.second());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.next(),  arguments.second());	  commandLine.addValue(option,    options.next(),    arguments.previous());    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
426	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments.get(argumentCount  -  1));  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  commandLine.addValue(option,  arguments.get(argumentCount  -  1));  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	commandLine.addValue(option,  arguments.get(argumentCount  -  1));	  commandLine.addValue(option,    options.get(argumentCount    -    1));    	non-compiled	[CE]  'else'  without  'if'	35	None	replace
427	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(defaultValues!=  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	if(defaultValues!=  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(defaultValues))    {    arguments.previous();    break;    }    	compilable	  [FE]  ComparisonFailure  	58	1	replace
428	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(defaultValues!=  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(defaultValues!=  null)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(defaultValues))    {    arguments.previous();    break;    }    	compilable	  [FE]  ComparisonFailure  	58	1	replace
429	[BUG]  [BUGGY]  while(commandLine.looksLikeOption(defaultValues))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(commandLine.looksLikeOption(defaultValues))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(commandLine.looksLikeOption(defaultValues))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    if(commandLine.looksLikeOption(defaultValues))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	58	None	replace
430	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_COLON)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [CE]  cannot  find  symbol  DEFAULT_COLON  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(DEFAULT_COLON)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(DEFAULT_COLON)&&  commandLine.looksBoundaryOption(allValuesQuoted))  {	  else    if(commandLine.looksLikeOption(ALLValuesQuoted)&&    commandLine.looksBoundaryOption(allValuesQuoted))    {    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_COLON	45	None	replace
431	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.hasValue(option))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.hasValue(option))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.hasValue(option))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(option))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
432	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.isLikeOption(option))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.isLikeOption(option))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.isLikeOption(option))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(allValuesQuoted))    {    else    if(commandLine!=    null    &&    commandLine.looksLikeOption(option))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
433	[BUG]  [BUGGY]  else  if(commandLine.hasValue(allValuesQuoted)&&  argumentField.hasNext())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.hasValue(allValuesQuoted)&&  argumentField.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.hasValue(allValuesQuoted)&&  argumentField.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(allValuesQuoted)&&    argumentField.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
434	[BUG]  [BUGGY]  if(expectedSplit)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  cannot  find  symbol  expectedSplit  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(expectedSplit)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(expectedSplit)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    If(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  cannot  find  symbol  expectedSplit	30	None	replace
435	[BUG]  [BUGGY]  if(expectedSplit)  {  if(commandLine.hasValue(allValuesQuoted))  {  arguments.previous();  break;  }  [CE]  cannot  find  symbol  expectedSplit  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(expectedSplit)  {  if(commandLine.hasValue(allValuesQuoted))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(expectedSplit)  {  if(commandLine.hasValue(allValuesQuoted))  {  arguments.previous();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    If(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  cannot  find  symbol  expectedSplit	30	None	replace
436	[BUG]  [BUGGY]  if(expectedSplit)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.remove();  break;  }  [CE]  cannot  find  symbol  expectedSplit  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(expectedSplit)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.remove();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(expectedSplit)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.remove();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    If(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  cannot  find  symbol  expectedSplit	30	None	replace
437	[BUG]  [BUGGY]  if(expectedSplit)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.before();  break;  }  [CE]  cannot  find  symbol  expectedSplit  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  if(expectedSplit)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.before();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	if(expectedSplit)  {  if(commandLine.looksLikeOption(allValuesQuoted))  {  arguments.before();  break;  }	          if(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    If(commandLine.looksLikeOption(allValuesQuoted))    {    arguments.previous();    break;    }    	non-compiled	[CE]  cannot  find  symbol  expectedSplit	30	None	replace
438	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(arguments.size());  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(arguments.size());  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.getCommandLine(arguments.size());	  CommandLine    commandLine    =    option.getCommandLine(arguments);    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
439	[BUG]  [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(arguments.size()  -  1);  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  CommandLine  commandLine  =  option.getCommandLine(arguments.size()  -  1);  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	CommandLine  commandLine  =  option.getCommandLine(arguments.size()  -  1);	  CommandLine    commandLine    =    option.getCommandLine(arguments);    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
440	[BUG]  [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  >  maximumCount)  {  [CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  >  maximumCount)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.looksLikeOption(arguments)&&  arguments.size()  >  maximumCount)  {	  else    if(commandLine.looksLikeOption(arguments)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  method  looksLikeOption  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	9	None	replace
441	[BUG]  [BUGGY]  else  if(arguments.looksLikeOption(option)&&  arguments.size()  >  maximum)  {  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(arguments.looksLikeOption(option)&&  arguments.size()  >  maximum)  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(arguments.looksLikeOption(option)&&  arguments.size()  >  maximum)  {	  else    if(commandLine.looksLikeOption(arguments)&&    arguments.size()    >    maximum)    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
442	[BUG]  [BUGGY]  else  if(defaultValues.hasNext())  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(defaultValues.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(defaultValues.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(defaultValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
443	[BUG]  [BUGGY]  else  if(commandLine.hasValue(defaultValuesQuoted)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  defaultValuesQuoted  [FE]            ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.hasValue(defaultValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.hasValue(defaultValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(defaultValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  defaultValuesQuoted	41	None	replace
444	[BUG]  [BUGGY]  else  if(commandLine.hasValue(defaultValuesQuoted)||  commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {  [CE]  cannot  find  symbol  defaultValuesQuoted  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine.hasValue(defaultValuesQuoted)||  commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine.hasValue(defaultValuesQuoted)||  commandLine.looksLikeOption(defaultValuesQuoted)&&  arguments.hasNext())  {	  else    if(commandLine.looksLikeOption(allValuesQuoted)&&    arguments.hasNext())    {    else    if(commandLine.looksLikeOption(defaultValuesQuoted)&&    arguments.hasNext())    {    	non-compiled	[CE]  cannot  find  symbol  defaultValuesQuoted	41	None	replace
445	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(ALLValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	60	1	replace
446	[BUG]  [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING))  {  [BUGGY]      arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	else  if(commandLine!=  null  &&  commandLine.looksLikeOption(DEFAULT_CONSUME_REMAINING))  {	  else    if(commandLine!=    null    &&    commandLine.looksLikeOption(ALLValuesQuoted))    {    	compilable	  [FE]  ComparisonFailure  	60	1	replace
447	[BUG]  [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  1))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]              ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext()  &&(argumentCount  <  1))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  &&(argumentCount  <  1))  {  arguments.previous();  break;  }	  while(arguments.hasNext()    &&(argumentCount    <    maximum))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
448	[BUG]  [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  arguments.previous();  break;  }  [CE]  'else'  without  'if'  [FE]                ComparisonFailure      [CONTEXT]      final  String  allValues  =  stripBoundaryQuotes(allValuesQuoted);  if  (allValuesQuoted.equals(consumeRemaining))  {  while  (arguments.hasNext()  &&  (argumentCount  <  maximum))  {  ++argumentCount;  commandLine.addValue(option,  arguments.next());  }  }        [BUGGY]  while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  arguments.previous();  break;  }  [BUGGY]      else  if  (commandLine.looksLikeOption(allValuesQuoted))  {  arguments.previous();  break;  }  else  if  (subsequentSplit)  {  final  StringTokenizer  values  =  new  StringTokenizer(allValues,  String.valueOf(subsequentSeparator));  arguments.remove();  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	while(arguments.hasNext()  ||(argumentCount  <  maximum))  {  arguments.previous();  break;  }	  while(arguments.hasNext()    &&(argumentCount    <    maximum))    {    arguments.previous();    break;    }    	non-compiled	[CE]  'else'  without  'if'	65	None	replace
