projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()<minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()<maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()<=minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)values.get(0);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.getValue(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.getValue(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()<1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validate(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()<1){if(values.size()<1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()<1){If(values.size()<1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()<=1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)values.get(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)values.get(1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)this.values.get(0);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()<maximum){if(values.size()<maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()<maximum){If(values.size()<maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()<maximum){if(values.size()<maximal){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>minimum){if(values.size()>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>minimum){If(values.size()>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>minimum){if(values.size()>minimal){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(option,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(option,resources);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(commandLine,option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commandLine.validate(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.validate(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commands.validate(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commandLine.getValue(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.getValue(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commands.getValue(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commands.getValue(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,0);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,id);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,null);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=values.getValue(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.getValue(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validate();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>=minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)values.get(index);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validate(commandLine,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()==minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()==1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,value);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,options);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,NUL);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()<1){if(values.size()>=1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=values.validate(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.getValue(commandLine,options);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.getValue(commandLine,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.getValue(commandLine,false);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commandLine.getValue(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commandLine.getValue(command);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commands.getValue(commandLine,option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validate(commandLine,option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>maximum){if(values.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>maximum){If(values.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>maximum){if(values.size()>maximal){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values!=null||values.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)values.get(2);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)this.values.get(1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commandLine.validate(commands);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commands.validate(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commands.validate(commandLine,defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commands.validate(commandLine,options);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240If(values.size()>maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validate(commandLine,values,option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validate(commandLine,values,defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validate(commandLine,values,false);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validate(commandLine,values,0);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)values.get(index+1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)values.get(index-1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commandLine.validate(values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commandLine.validateValues(values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commandLine.validateValues();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(commandLine,options);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(commandLine,resources);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(commandLine,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,valueDefaults);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,defaultValues,argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,defaultValues,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=values.getValue(option,DEFAULT_INITIAL_SEPARATOR);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.getValue(values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commands.getValue(option,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>=minimum){if(values.size()>=minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>=minimum){if(values.size()!=minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>=minimum){if(values.size()>>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>=minimum){if(values.size()==minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>=minimum){If(values.size()>=minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(option,values,0);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(option,values,null);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(option,values,false);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)this.values.get(0,values.size()-1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,argumentCount,id);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,arguments,id);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(values,defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validateValues(values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validate(values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(values,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(commandLine,defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.validate(commandLine,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.validate(commandLine,options);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.validate(commandLine,false);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.validate(commandLine,true);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,false);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commandLine.validate(option,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commandLine.validate(option,true);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commandLine.getValue(option,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commandLine.validateValue(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>1){If(values.size()<1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(commandLine,option,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(commandLine,option,defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(commandLine,option,values.size());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,NUL,initialSeparator);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,initialSeparator);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,this);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,arguments,null);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,defaultValues,null);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validateValues();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validateValue(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validate(commandLine,value);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,value,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,resources);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()==minimum){if(values.size()==minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()==minimum){if(values.size()>=minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()==minimum){If(values.size()==minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()==minimum){if(values.size()!=minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>1){if(values.size()>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>1){If(values.size()>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)values.get(defaultValue);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)values.get(option+1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.getValue(option,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.getValue(option,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.getValue(commandLine,option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>0){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values!=null||values.size()>1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()==1){if(values.size()==1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()==1){If(values.size()==1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()==1){if(values.size()!=1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(sources,option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values!=null){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(commandLine,value);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commandLine.getValues(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commandLine.getValue(option,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>1){Validatorvalidator=options.getValue(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,null,0);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.getValue(option,0);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values!=null){If(values.size()>minimum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()>argumentCount){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,valueValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,value);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,defaultValues,DEFAULT_INITIAL_SEPARATOR);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values==null){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)values.get(argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()==1){if(values.size()==2){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validate(commandLine,defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()==minimum){if(values.size()==minimal){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(option,values,argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commands.getValue(option,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.validate(commandLine,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)this.values.get(values.size()-1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(commandLine,option,0);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=commands.validate(commandLine,option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values!=null){If(values.size()<1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values!=null){If(values.size()>0){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,values,null,defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validate(commandLine,values,null);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)this.values.get(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=(ValueImpl)values.get(index++);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(commandLine,null);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.validate(commandLine,defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=options.validateValues(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=values.getValue(commandLine);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=option.validate(values,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.getValue(commandLine,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.getValue(commandLine,value);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=resources.getValue(option,value);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values.size()==1){if(values.size(){1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=getValue(option,values,defaultValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240if(values==null){If(values.size()<1){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java240Validatorvalidator=values.getValue(option,defaultValues);
