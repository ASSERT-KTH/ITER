bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(argumentCount  >  1)  {  for(int  i  =  0,  is  =  arguments.size();  i  <  is.size();  i++)  {  options.addValue(values.get(i));  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    if(argumentCount  >  1)  {  for(int  i  =  0,  is  =  arguments.size();  i  <  is.size();  i++)  {  options.addValue(values.get(i));  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    if(argumentCount  >  1)  {  for(int  i  =  0,  is  =  arguments.size();  i  <  is.size();  i++)  {  options.addValue(values.get(i));  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
2	[BUG]  [BUGGY]    if(argumentCount  >  1)  {  for(int  id  =  arguments.size()  -  1;  id  <  =  arguments.size();  id++)  {  options.addValue(values.get(id).toString());  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    if(argumentCount  >  1)  {  for(int  id  =  arguments.size()  -  1;  id  <  =  arguments.size();  id++)  {  options.addValue(values.get(id).toString());  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    if(argumentCount  >  1)  {  for(int  id  =  arguments.size()  -  1;  id  <  =  arguments.size();  id++)  {  options.addValue(values.get(id).toString());  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
3	[BUG]  [BUGGY]    if(argumentCount  >  1)  {  for(int  id  =  arguments.size()  -  1;  id  <  =  arguments.size();  id++)  {  options.addValue(values.get(id));  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    if(argumentCount  >  1)  {  for(int  id  =  arguments.size()  -  1;  id  <  =  arguments.size();  id++)  {  options.addValue(values.get(id));  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    if(argumentCount  >  1)  {  for(int  id  =  arguments.size()  -  1;  id  <  =  arguments.size();  id++)  {  options.addValue(values.get(id));  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
4	[BUG]  [BUGGY]    if(argumentCount  >  1)  {  for(int  i  =  0,  is  =  arguments.size();  i  <  is.size();  ++i)  {  options.addValue(values.get(i));  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    if(argumentCount  >  1)  {  for(int  i  =  0,  is  =  arguments.size();  i  <  is.size();  ++i)  {  options.addValue(values.get(i));  }  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    if(argumentCount  >  1)  {  for(int  i  =  0,  is  =  arguments.size();  i  <  is.size();  ++i)  {  options.addValue(values.get(i));  }		non-compiled	[CE]  illegal  start  of  expression	18	None	add
5	[BUG]  [BUGGY]    Validator  validator  =  options.getValue(argumentCount);  [CE]  cannot  find  symbol  options  [FE]            ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    Validator  validator  =  options.getValue(argumentCount);  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    Validator  validator  =  options.getValue(argumentCount);		non-compiled	[CE]  cannot  find  symbol  options	18	None	add
6	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(argumentCount,  allValues);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  allValues);	commandLine.addValue(option,  allValues);  	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	17	None	replace
7	[BUG]  [BUGGY]  commandLine.addValue(argument,  allValues);  [CE]  cannot  find  symbol  argument  [FE]      ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(argument,  allValues);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  allValues);	commandLine.addValue(option,  allValues);  	non-compiled	[CE]  cannot  find  symbol  argument	17	None	replace
8	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(option,  arguments);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	add	commandLine.addValue(option,  arguments);	commandLine.addValue(option,  allValues);  	compilable	  [FE]  ClassCastException  	17	1	replace
9	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments);  [FE]  ClassCastException  [FE]        ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(option,  arguments);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  arguments);	commandLine.addValue(option,  allValues);  	compilable	  [FE]  ClassCastException  	17	1	replace
10	[BUG]  [BUGGY]  commandLine.addValue(arguments,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(arguments,  allValues);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  allValues);	commandLine.addValue(option,  allValues);  	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	17	None	replace
11	[BUG]  [BUGGY]    String  allValuesQuoted  =  arguments.get(argumentCount  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]    ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    String  allValuesQuoted  =  arguments.get(argumentCount  -  1);  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    String  allValuesQuoted  =  arguments.get(argumentCount  -  1);		non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	18	None	add
12	[BUG]  [BUGGY]    String  allValuesQuoted  =  arguments.get(argumentCount);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]      ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    String  allValuesQuoted  =  arguments.get(argumentCount);  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    String  allValuesQuoted  =  arguments.get(argumentCount);		non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	18	None	add
13	[BUG]  [BUGGY]    String  allValuesQuoted  =  arguments.remove(argumentCount);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    String  allValuesQuoted  =  arguments.remove(argumentCount);  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    String  allValuesQuoted  =  arguments.remove(argumentCount);		non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	18	None	add
14	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  allValues);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.setValue(argumentCount,  allValues);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  allValues);	commandLine.addValue(option,  allValues);  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
15	[BUG]  [BUGGY]  commandLine.addValue(argument,  allValuesQuoted);  [CE]  cannot  find  symbol  argument  [FE]    ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(argument,  allValuesQuoted);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  allValuesQuoted);	commandLine.addValue(option,  allValues);  	non-compiled	[CE]  cannot  find  symbol  argument	17	None	replace
16	[BUG]  [BUGGY]  commandLine.addValue(argument,  values);  [CE]  cannot  find  symbol  argument  [FE]      ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]  commandLine.addValue(argument,  values);  [BUGGY]  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  values);	commandLine.addValue(option,  allValues);  	non-compiled	[CE]  cannot  find  symbol  argument	17	None	replace
17	[BUG]  [BUGGY]    String  allValuesQuoted  =  values.get(argumentCount);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]    ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    String  allValuesQuoted  =  values.get(argumentCount);  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    String  allValuesQuoted  =  values.get(argumentCount);		non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	18	None	add
18	[BUG]  [BUGGY]    String  allValuesQuoted  =  values.get(argumentCount  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]      ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    String  allValuesQuoted  =  values.get(argumentCount  -  1);  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    String  allValuesQuoted  =  values.get(argumentCount  -  1);		non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	18	None	add
19	[BUG]  [BUGGY]    Arguments  arguments  =  options.getArgumentCount();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;  [BUGGY]    Arguments  arguments  =  options.getArgumentCount();  [BUGGY]  commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	    Arguments  arguments  =  options.getArgumentCount();		non-compiled	[CE]  cannot  find  symbol	18	None	add
