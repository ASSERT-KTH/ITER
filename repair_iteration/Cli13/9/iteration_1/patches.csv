bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  commandLine.addValue(arguments,  arguments,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(arguments,  arguments,  allValues);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  arguments,  allValues);	  commandLine.addValue(arguments,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	10	None	replace
2	[BUG]  [BUGGY]  commandLine.addValue(arguments,  values,  allValues);  [CE]  cannot  find  symbol  values  [FE]                ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(arguments,  values,  allValues);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  values,  allValues);	  commandLine.addValue(arguments,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	10	None	replace
3	[BUG]  [BUGGY]  commandLine.addValue(arguments,  arguments,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(arguments,  arguments,  allValuesQuoted);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  arguments,  allValuesQuoted);	  commandLine.addValue(arguments,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	10	None	replace
4	[BUG]  [BUGGY]  commandLine.addValue(arguments,  allValues,  argumentCount);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(arguments,  allValues,  argumentCount);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  allValues,  argumentCount);	  commandLine.addValue(arguments,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	10	None	replace
5	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  arguments.get(argumentCount);	      if(argumentCount    >    1)    {    for(int    i    =    0,    is    =    arguments.size();    i    <    is.size();    ++i)    {    options.addValue(values.get(i));    }    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	4	None	replace
6	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount).intValue();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount).intValue();  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  arguments.get(argumentCount).intValue();	      if(argumentCount    >    1)    {    for(int    i    =    0,    is    =    arguments.size();    i    <    is.size();    ++i)    {    options.addValue(values.get(i));    }    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	4	None	replace
7	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount  -  1);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount  -  1);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  arguments.get(argumentCount  -  1);	      if(argumentCount    >    1)    {    for(int    i    =    0,    is    =    arguments.size();    i    <    is.size();    ++i)    {    options.addValue(values.get(i));    }    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	4	None	replace
8	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  cannot  find  symbol  Context  [FE]                    ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Context.reportCodeChange();  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Context.reportCodeChange();	      if(argumentCount    >    1)    {    for(int    i    =    0,    is    =    arguments.size();    i    <    is.size();    ++i)    {    options.addValue(values.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  Context	4	None	replace
9	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  values);  [CE]  cannot  find  symbol  values  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argumentCount,  values);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  values);	  commandLine.addValue(argument,    values);    	non-compiled	[CE]  cannot  find  symbol  values	16	None	replace
10	[BUG]  [BUGGY]  commandLine.addValue(option,  values);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(option,  values);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  values);	  commandLine.addValue(argument,    values);    	non-compiled	[CE]  cannot  find  symbol  values	16	None	replace
11	[BUG]  [BUGGY]  commandLine.addValue(values,  argumentCount);  [CE]  cannot  find  symbol  values  [FE]              ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(values,  argumentCount);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(values,  argumentCount);	  commandLine.addValue(argument,    values);    	non-compiled	[CE]  cannot  find  symbol  values	16	None	replace
12	[BUG]  [BUGGY]  Option  argument  =  options.getOptionalValue(argumentCount);  [CE]  cannot  find  symbol  options  [FE]        ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Option  argument  =  options.getOptionalValue(argumentCount);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  argument  =  options.getOptionalValue(argumentCount);	      if(argumentCount    >    1)    {    for(int    i    =    0,    is    =    arguments.size();    i    <    is.size();    i++)    {    options.addValue(values.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  options	1	None	replace
13	[BUG]  [BUGGY]  commandLine.addValue(values,  allValues);  [CE]  cannot  find  symbol  values  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(values,  allValues);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(values,  allValues);	  commandLine.addValue(argument,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	7	None	replace
14	[BUG]  [BUGGY]  Validator  validator  =  arguments.get(argumentCount);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Validator  validator  =  arguments.get(argumentCount);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  arguments.get(argumentCount);	      if(argumentCount    >    1)    {    for(int    id    =    arguments.size()    -    1;    id    <    =    arguments.size();    id++)    {    options.addValue(values.get(id));    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
15	[BUG]  [BUGGY]  Validator  validator  =  arguments.get(argumentCount  -  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Validator  validator  =  arguments.get(argumentCount  -  1);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  arguments.get(argumentCount  -  1);	      if(argumentCount    >    1)    {    for(int    id    =    arguments.size()    -    1;    id    <    =    arguments.size();    id++)    {    options.addValue(values.get(id));    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
16	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	add	commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);	  	compilable	  [FE]  ClassCastException  	8	1	add
17	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);	  	compilable	  [FE]  ClassCastException  	8	1	add
18	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments);  CommandLine  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  arguments);  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(option,  arguments);  CommandLine  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  arguments);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,    arguments);    CommandLine  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  arguments);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
19	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments);  CommandLine  commandLine  =  getCommandLine(option);  commandLine.addValue(option,  arguments);  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(option,  arguments);  CommandLine  commandLine  =  getCommandLine(option);  commandLine.addValue(option,  arguments);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,    arguments);    CommandLine  commandLine  =  getCommandLine(option);  commandLine.addValue(option,  arguments);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
20	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments);  CommandLine  commandLine  =  options.getCommandLine();  commands.addValue(option,  arguments);  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(option,  arguments);  CommandLine  commandLine  =  options.getCommandLine();  commands.addValue(option,  arguments);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,    arguments);    CommandLine  commandLine  =  options.getCommandLine();  commands.addValue(option,  arguments);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
21	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  +  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  +  1);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(argumentCount  +  1);	      String    allValuesQuoted    =    arguments.get(argumentCount);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	12	None	replace
22	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(0);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  String  allValuesQuoted  =  arguments.get(0);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(0);	      String    allValuesQuoted    =    arguments.get(argumentCount);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	12	None	replace
23	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount).toString();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount).toString();  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  arguments.get(argumentCount).toString();	      if(argumentCount    >    1)    {    for(int    id    =    arguments.size()    -    1;    id    <    =    arguments.size();    id++)    {    options.addValue(values.get(id).toString());    }    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	replace
24	[BUG]  [BUGGY]  Arguments  arguments  =  option.getArgumentCount();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Arguments  arguments  =  option.getArgumentCount();  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  arguments  =  option.getArgumentCount();	      Arguments    arguments    =    options.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
25	[BUG]  [BUGGY]  Arguments  arguments  =  options.getArgumentCount()  -  1;  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Arguments  arguments  =  options.getArgumentCount()  -  1;  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  arguments  =  options.getArgumentCount()  -  1;	      Arguments    arguments    =    options.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
26	[BUG]  [BUGGY]  Arguments  arguments  =  options.getArgumentCount()  -  2;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Arguments  arguments  =  options.getArgumentCount()  -  2;  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  arguments  =  options.getArgumentCount()  -  2;	      Arguments    arguments    =    options.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
27	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.remove(argumentCount  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  String  allValuesQuoted  =  arguments.remove(argumentCount  -  1);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.remove(argumentCount  -  1);	      String    allValuesQuoted    =    arguments.remove(argumentCount);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	13	None	replace
28	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.remove(argumentCount  +  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  String  allValuesQuoted  =  arguments.remove(argumentCount  +  1);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.remove(argumentCount  +  1);	      String    allValuesQuoted    =    arguments.remove(argumentCount);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	13	None	replace
29	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  arguments,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argumentCount,  arguments,  allValues);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  arguments,  allValues);	  commandLine.addValue(argumentCount,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	6	None	replace
30	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  values,  allValues);  [CE]  cannot  find  symbol  values  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argumentCount,  values,  allValues);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  values,  allValues);	  commandLine.addValue(argumentCount,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	6	None	replace
31	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  arguments,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argumentCount,  arguments,  allValuesQuoted);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  arguments,  allValuesQuoted);	  commandLine.addValue(argumentCount,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	6	None	replace
32	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  0,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argumentCount,  0,  allValues);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  0,  allValues);	  commandLine.addValue(argumentCount,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	6	None	replace
33	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  option);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]    ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argumentCount,  option);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  option);	  commandLine.addValue(option,    arguments);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	9	None	replace
34	[BUG]  [BUGGY]  commandLine.addValue(argument,  option);  [CE]  cannot  find  symbol  argument  [FE]      ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argument,  option);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  option);	  commandLine.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol  argument	9	None	replace
35	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  options);  [CE]  cannot  find  symbol  options  [FE]        ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argumentCount,  options);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  options);	  commandLine.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol  options	9	None	replace
36	[BUG]  [BUGGY]  Validator  validator  =  arguments.getValue(argumentCount);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Validator  validator  =  arguments.getValue(argumentCount);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  arguments.getValue(argumentCount);	      Validator    validator    =    options.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
37	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(argumentCount);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Validator  validator  =  resources.getValue(argumentCount);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  resources.getValue(argumentCount);	      Validator    validator    =    options.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
38	[BUG]  [BUGGY]  Validator  validator  =  values.getValue(argumentCount);  [CE]  cannot  find  symbol  values  [FE]                    ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Validator  validator  =  values.getValue(argumentCount);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  values.getValue(argumentCount);	      Validator    validator    =    options.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol  values	5	None	replace
39	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  arguments);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.setValue(argumentCount,  arguments);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  arguments);	  commandLine.setValue(argumentCount,    allValues);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
40	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  values);  [CE]  cannot  find  symbol  values  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.setValue(argumentCount,  values);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  values);	  commandLine.setValue(argumentCount,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	14	None	replace
41	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  values.allValues);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.setValue(argumentCount,  values.allValues);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  values.allValues);	  commandLine.setValue(argumentCount,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	14	None	replace
42	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  values.values());  [CE]  cannot  find  symbol  values  [FE]              ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.setValue(argumentCount,  values.values());  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  values.values());	  commandLine.setValue(argumentCount,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	14	None	replace
43	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argumentCount,  allValuesQuoted);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  allValuesQuoted);	  commandLine.addValue(argument,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	15	None	replace
44	[BUG]  [BUGGY]  commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [CE]  cannot  find  symbol  argument  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);	  commandLine.addValue(argument,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  argument	15	None	replace
45	[BUG]  [BUGGY]  commandLine.addValue(DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(DEFAULT_CONSUME_REMAINING,  allValuesQuoted);	  commandLine.addValue(argument,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	15	None	replace
46	[BUG]  [BUGGY]  commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);  [CE]  cannot  find  symbol  argument  [FE]              ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);	  commandLine.addValue(argument,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  argument	15	None	replace
47	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  1  +  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  1  +  1);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(argumentCount  -  1  +  1);	      String    allValuesQuoted    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	11	None	replace
48	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  2);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  2);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(argumentCount  -  2);	      String    allValuesQuoted    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	11	None	replace
49	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  2);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  2);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.get(argumentCount  -  2);	      String    allValuesQuoted    =    values.get(argumentCount    -    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	18	None	replace
50	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  1  +  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  1  +  1);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.get(argumentCount  -  1  +  1);	      String    allValuesQuoted    =    values.get(argumentCount    -    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	18	None	replace
51	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  +  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  +  1);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.get(argumentCount  +  1);	      String    allValuesQuoted    =    values.get(argumentCount);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	17	None	replace
52	[BUG]  [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  resources.get(argumentCount);	      String    allValuesQuoted    =    values.get(argumentCount);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	17	None	replace
53	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  values,  allValues);  [CE]  cannot  find  symbol  values  [FE]        ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.setValue(argumentCount,  values,  allValues);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  values,  allValues);	  commandLine.setValue(argumentCount,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	14	None	replace
54	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNEXPECTED_VALUE);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNEXPECTED_VALUE);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_UNEXPECTED_VALUE);	      if(argumentCount    >    1)    {    for(int    id    =    arguments.size()    -    1;    id    <    =    arguments.size();    id++)    {    options.addValue(values.get(id).toString());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	replace
55	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE);	      if(argumentCount    >    1)    {    for(int    id    =    arguments.size()    -    1;    id    <    =    arguments.size();    id++)    {    options.addValue(values.get(id).toString());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	replace
56	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.remove(argumentCount);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  String  allValuesQuoted  =  values.remove(argumentCount);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.remove(argumentCount);	      String    allValuesQuoted    =    arguments.remove(argumentCount);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	13	None	replace
57	[BUG]  [BUGGY]  Arguments  argument  =  options.getArgumentCount();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Arguments  argument  =  options.getArgumentCount();  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  argument  =  options.getArgumentCount();	      Arguments    arguments    =    options.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
58	[BUG]  [BUGGY]  Arguments  arguments  =  resources.getArgumentCount();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Arguments  arguments  =  resources.getArgumentCount();  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  arguments  =  resources.getArgumentCount();	      Arguments    arguments    =    options.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
59	[BUG]  [BUGGY]  commandLine.addValue(arguments,  option);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]    ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(arguments,  option);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  option);	  commandLine.addValue(option,    arguments);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	9	None	replace
60	[BUG]  [BUGGY]  commandLine.setArgumentCount(argumentCount);  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.setArgumentCount(argumentCount);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setArgumentCount(argumentCount);	  commandLine.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
61	[BUG]  [BUGGY]  commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING,  allValues);  [CE]  cannot  find  symbol  argument  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING,  allValues);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING,  allValues);	  commandLine.addValue(argument,    allValues);    	non-compiled	[CE]  cannot  find  symbol  argument	7	None	replace
62	[BUG]  [BUGGY]  commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING);  [CE]  cannot  find  symbol  argument  [FE]        ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING);	  commandLine.addValue(argument,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  argument	15	None	replace
63	[BUG]  [BUGGY]  commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR);  [CE]  cannot  find  symbol  argument  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR);	  commandLine.addValue(argument,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  argument	15	None	replace
64	[BUG]  [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount  -  1);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  resources.get(argumentCount  -  1);	      String    allValuesQuoted    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	11	None	replace
65	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  values.nextToken(),  allValues);  [CE]  cannot  find  symbol  values  [FE]        ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argumentCount,  values.nextToken(),  allValues);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  values.nextToken(),  allValues);	  commandLine.addValue(argumentCount,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	6	None	replace
66	[BUG]  [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  allValues);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  allValues);	  commandLine.addValue(arguments,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	10	None	replace
67	[BUG]  [BUGGY]  commandLine.addValue(arguments,  allValues,  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]                ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(arguments,  allValues,  id);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  allValues,  id);	  commandLine.addValue(arguments,    allValues);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	10	None	replace
68	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments);  CommandLine  commandLine  =  options.getCommandLine();  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(option,  arguments);  CommandLine  commandLine  =  options.getCommandLine();  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,    arguments);    CommandLine  commandLine  =  options.getCommandLine();	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
69	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments);  CommandLine  commandLine.addValue(option,  arguments);  [CE]  ';'  expected  [FE]      ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(option,  arguments);  CommandLine  commandLine.addValue(option,  arguments);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,    arguments);    CommandLine  commandLine.addValue(option,  arguments);	  	non-compiled	[CE]  ';'  expected	8	None	add
70	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments);  commands.addValue(option,  arguments);  [CE]  cannot  find  symbol  commands  [FE]        ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(option,  arguments);  commands.addValue(option,  arguments);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,    arguments);    commands.addValue(option,  arguments);	  	non-compiled	[CE]  cannot  find  symbol  commands	8	None	add
71	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments);  CommandLine.addValue(option,  arguments);  [CE]  cannot  find  symbol  CommandLine  [FE]          ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(option,  arguments);  CommandLine.addValue(option,  arguments);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,    arguments);    CommandLine.addValue(option,  arguments);	  	non-compiled	[CE]  cannot  find  symbol  CommandLine	8	None	add
72	[BUG]  [BUGGY]  commandLine.addValue(argument,  valueCount);  [CE]  cannot  find  symbol  argument  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argument,  valueCount);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  valueCount);	  commandLine.addValue(argument,    values);    	non-compiled	[CE]  cannot  find  symbol  argument	16	None	replace
73	[BUG]  [BUGGY]  commandLine.addValue(argument);  [CE]  cannot  find  symbol  argument  [FE]    ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(argument);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument);	  commandLine.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol  argument	9	None	replace
74	[BUG]  [BUGGY]  commandLine.addArg(argumentCount,  option);  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addArg(argumentCount,  option);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addArg(argumentCount,  option);	  commandLine.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
75	[BUG]  [BUGGY]  commandLine.addValue(values,  argument);  [CE]  cannot  find  symbol  values  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(values,  argument);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(values,  argument);	  commandLine.addValue(argument,    values);    	non-compiled	[CE]  cannot  find  symbol  values	16	None	replace
76	[BUG]  [BUGGY]  commandLine.addValue(values,  arguments);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(values,  arguments);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(values,  arguments);	  commandLine.addValue(argument,    values);    	non-compiled	[CE]  cannot  find  symbol  values	16	None	replace
77	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  }  [CE]  class,  interface,  or  enum  expected  [FE]    ClassCastException    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  }  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	add
78	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  valueValues);  [CE]  cannot  find  symbol  valueValues  [FE]        ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.setValue(argumentCount,  valueValues);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  valueValues);	  commandLine.setValue(argumentCount,    allValues);    	non-compiled	[CE]  cannot  find  symbol  valueValues	14	None	replace
79	[BUG]  [BUGGY]  commandLine.setValue(0,  allValues);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  commandLine.setValue(0,  allValues);  [BUGGY]    }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(0,  allValues);	  commandLine.setValue(argumentCount,    allValues);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
80	[BUG]  [BUGGY]  option.addValue(values.get(id));  [CE]  id  has  private  access  in  OptionImpl  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  option.addValue(values.get(id));  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	option.addValue(values.get(id));	      if(argumentCount    >    1)    {    for(int    id    =    arguments.size()    -    1;    id    <    =    arguments.size();    id++)    {    options.addValue(values.get(id));    }    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	3	None	replace
81	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine();  [CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Option  commandLine  =  option.getCommandLine();  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  commandLine  =  option.getCommandLine();	      if(argumentCount    >    1)    {    for(int    id    =    arguments.size()    -    1;    id    <    =    arguments.size();    id++)    {    options.addValue(values.get(id));    }    	non-compiled	[CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	3	None	replace
82	[BUG]  [BUGGY]  Option  option  =  option.getOption(ARGUMENT_EXPECTED_VALUE);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]        ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Option  option  =  option.getOption(ARGUMENT_EXPECTED_VALUE);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  option.getOption(ARGUMENT_EXPECTED_VALUE);	      if(argumentCount    >    1)    {    for(int    i    =    0,    is    =    arguments.size();    i    <    is.size();    i++)    {    options.addValue(values.get(i));    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	1	None	replace
83	[BUG]  [BUGGY]  option.addValue(values.get(id).toString());  [CE]  id  has  private  access  in  OptionImpl  [FE]          ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  option.addValue(values.get(id).toString());  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	option.addValue(values.get(id).toString());	      if(argumentCount    >    1)    {    for(int    id    =    arguments.size()    -    1;    id    <    =    arguments.size();    id++)    {    options.addValue(values.get(id).toString());    }    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	2	None	replace
84	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken());  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken());  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken());	      if(argumentCount    >    1)    {    for(int    id    =    arguments.size()    -    1;    id    <    =    arguments.size();    id++)    {    options.addValue(values.get(id).toString());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	replace
85	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE);  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE);	      if(argumentCount    >    1)    {    for(int    id    =    arguments.size()    -    1;    id    <    =    arguments.size();    id++)    {    options.addValue(values.get(id).toString());    }    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	2	None	replace
86	[BUG]  [BUGGY]  option.addValue(values.get(i));  [CE]  cannot  find  symbol  i  [FE]              ComparisonFailure    [CONTEXT]    }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;    [BUGGY]  option.addValue(values.get(i));  [BUGGY]    commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	option.addValue(values.get(i));	      if(argumentCount    >    1)    {    for(int    i    =    0,    is    =    arguments.size();    i    <    is.size();    ++i)    {    options.addValue(values.get(i));    }    	non-compiled	[CE]  cannot  find  symbol  i	4	None	replace
