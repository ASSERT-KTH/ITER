bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  commandLine.addValue(arguments,  allValues,  0);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  allValues,  0);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  allValues,  0);	  commandLine.addValue(arguments,    allValues,    id);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	67	None	replace
2	[BUG]  [BUGGY]  commandLine.addValue(id,  allValues,  argumentCount);  [CE]  id  has  private  access  in  OptionImpl  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(id,  allValues,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(id,  allValues,  argumentCount);	  commandLine.addValue(arguments,    allValues,    id);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	67	None	replace
3	[BUG]  [BUGGY]  commandLine.addValue(id,  allValues,  arguments);  [CE]  id  has  private  access  in  OptionImpl  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(id,  allValues,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(id,  allValues,  arguments);	  commandLine.addValue(arguments,    allValues,    id);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	67	None	replace
4	[BUG]  [BUGGY]  commandLine.addValue(arguments,  id,  allValues);  [CE]  id  has  private  access  in  OptionImpl  [FE]                          ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  id,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  id,  allValues);	  commandLine.addValue(arguments,    allValues,    id);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	67	None	replace
5	[BUG]  [BUGGY]  Arguments  argument  =  arguments.getArgumentCount();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Arguments  argument  =  arguments.getArgumentCount();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  argument  =  arguments.getArgumentCount();	  Arguments    argument    =    options.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
6	[BUG]  [BUGGY]  Arguments  argument  =  options.getArgumentCount()  -  1;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Arguments  argument  =  options.getArgumentCount()  -  1;  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  argument  =  options.getArgumentCount()  -  1;	  Arguments    argument    =    options.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
7	[BUG]  [BUGGY]  Arguments  arguments  =  options.getArgumentCount()  /  2;  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Arguments  arguments  =  options.getArgumentCount()  /  2;  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  arguments  =  options.getArgumentCount()  /  2;	  Arguments    arguments    =    options.getArgumentCount()    -    2;    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
8	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);	  commandLine.addValue(argumentCount,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	43	None	replace
9	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  argumentCount,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  argumentCount,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  argumentCount,  allValuesQuoted);	  commandLine.addValue(argumentCount,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	43	None	replace
10	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  values.size()  -  1,  allValuesQuoted);  [CE]  cannot  find  symbol  values  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  values.size()  -  1,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  values.size()  -  1,  allValuesQuoted);	  commandLine.addValue(argumentCount,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  values	43	None	replace
11	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  arguments);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  arguments);	  commandLine.addValue(values,    arguments);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	76	None	replace
12	[BUG]  [BUGGY]  commandLine.addValue(arguments,  arguments);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  arguments);	  commandLine.addValue(values,    arguments);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	76	None	replace
13	[BUG]  [BUGGY]  commandLine.addValue(arguments,  values);  [CE]  cannot  find  symbol  values  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  values);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  values);	  commandLine.addValue(values,    arguments);    	non-compiled	[CE]  cannot  find  symbol  values	76	None	replace
14	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ClassCastException    [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  null);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	add	commandLine.addValue(option,  null);	  commandLine.addValue(option,    arguments);    commandLine.addValue(option,    arguments);    	compilable	  [FE]  ComparisonFailure  	17	1	replace
15	[BUG]  [BUGGY]  commandLine.addValue(option,  null);  [FE]  ComparisonFailure  [FE]    ClassCastException    [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  null);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  null);	  commandLine.addValue(option,    arguments);    commandLine.addValue(option,    arguments);    	compilable	  [FE]  ComparisonFailure  	17	1	replace
16	[BUG]  [BUGGY]  commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);	  commandLine.addValue(argument,    DEFAULT_CONSUME_REMAINING,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	44	None	replace
17	[BUG]  [BUGGY]  commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING,  values);  [CE]  cannot  find  symbol  argument  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING,  values);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING,  values);	  commandLine.addValue(argument,    DEFAULT_CONSUME_REMAINING,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  argument	44	None	replace
18	[BUG]  [BUGGY]  commandLine.addValue(values,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [CE]  cannot  find  symbol  values  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(values,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(values,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);	  commandLine.addValue(argument,    DEFAULT_CONSUME_REMAINING,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  values	44	None	replace
19	[BUG]  [BUGGY]  commandLine.addValue(arguments,  arguments,  argumentCount);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  arguments,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  arguments,  argumentCount);	  commandLine.addValue(arguments,    allValues,    argumentCount);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	4	None	replace
20	[BUG]  [BUGGY]  commandLine.addValue(arguments,  arguments,  allValues,  argumentCount);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  arguments,  allValues,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  arguments,  allValues,  argumentCount);	  commandLine.addValue(arguments,    allValues,    argumentCount);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	4	None	replace
21	[BUG]  [BUGGY]  commandLine.addValue(arguments,  arguments,  allValuesQuoted,  argumentCount);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  arguments,  allValuesQuoted,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  arguments,  allValuesQuoted,  argumentCount);	  commandLine.addValue(arguments,    allValues,    argumentCount);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	4	None	replace
22	[BUG]  [BUGGY]  commandLine.addValue(arguments,  allValues,  argumentCount,  valueDefaults);  [CE]  cannot  find  symbol  valueDefaults  [FE]                              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  allValues,  argumentCount,  valueDefaults);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  allValues,  argumentCount,  valueDefaults);	  commandLine.addValue(arguments,    allValues,    argumentCount);    	non-compiled	[CE]  cannot  find  symbol  valueDefaults	4	None	replace
23	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  arguments,  allValues);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  arguments,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  arguments,  allValues);	  commandLine.setValue(argumentCount,    values,    allValues);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
24	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR,  allValues);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR,  allValues);	  commandLine.setValue(argumentCount,    values,    allValues);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
25	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  allValues);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  allValues);	  commandLine.setValue(argumentCount,    values,    allValues);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
26	[BUG]  [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount  -  1  +  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount  -  1  +  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  resources.get(argumentCount  -  1  +  1);	  String    allValuesQuoted    =    resources.get(argumentCount    -    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	64	None	replace
27	[BUG]  [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount  -  2);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount  -  2);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  resources.get(argumentCount  -  2);	  String    allValuesQuoted    =    resources.get(argumentCount    -    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	64	None	replace
28	[BUG]  [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount  -  1  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount  -  1  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  resources.get(argumentCount  -  1  -  1);	  String    allValuesQuoted    =    resources.get(argumentCount    -    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	64	None	replace
29	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount  -  1  -  1);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount  -  1  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  arguments.get(argumentCount  -  1  -  1);	  Integer    argumentCount    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	7	None	replace
30	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount  -  1  +  1);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount  -  1  +  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  arguments.get(argumentCount  -  1  +  1);	  Integer    argumentCount    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	7	None	replace
31	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount  -  2);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                          ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount  -  2);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  arguments.get(argumentCount  -  2);	  Integer    argumentCount    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	7	None	replace
32	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(option);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  arguments.get(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  arguments.get(option);	  Integer    argumentCount    =    arguments.get(argumentCount);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	5	None	replace
33	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount  +  1);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  arguments.get(argumentCount  +  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  arguments.get(argumentCount  +  1);	  Integer    argumentCount    =    arguments.get(argumentCount);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	5	None	replace
34	[BUG]  [BUGGY]  Integer  argumentCount  =  resources.get(argumentCount);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  resources.get(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  resources.get(argumentCount);	  Integer    argumentCount    =    arguments.get(argumentCount);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	5	None	replace
35	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  0);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  0);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  0);	  commandLine.addValue(argumentCount,    values);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	9	None	replace
36	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  valueDefaults);  [CE]  cannot  find  symbol  valueDefaults  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  valueDefaults);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  valueDefaults);	  commandLine.addValue(argumentCount,    values);    	non-compiled	[CE]  cannot  find  symbol  valueDefaults	9	None	replace
37	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  0);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  0);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  0);	  commandLine.setValue(argumentCount,    values);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
38	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  defaultValues);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  defaultValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  defaultValues);	  commandLine.setValue(argumentCount,    values);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
39	[BUG]  [BUGGY]  commandLine.addValue(arguments,  DEFAULT_INITIAL_SEPARATOR,  arguments,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  DEFAULT_INITIAL_SEPARATOR,  arguments,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  DEFAULT_INITIAL_SEPARATOR,  arguments,  allValues);	  commandLine.addValue(arguments,    arguments,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	1	None	replace
40	[BUG]  [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  arguments,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  arguments,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  arguments,  allValues);	  commandLine.addValue(arguments,    arguments,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	1	None	replace
41	[BUG]  [BUGGY]  commandLine.addValue(arguments,  offset,  allValues);  [CE]  cannot  find  symbol  offset  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  offset,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  offset,  allValues);	  commandLine.addValue(arguments,    arguments,    allValues);    	non-compiled	[CE]  cannot  find  symbol  offset	1	None	replace
42	[BUG]  [BUGGY]  commandLine.addValue(arguments,  allValues,  arguments);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  allValues,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  allValues,  arguments);	  commandLine.addValue(arguments,    arguments,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	1	None	replace
43	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  arguments,  values,  allValues);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  arguments,  values,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  arguments,  values,  allValues);	  commandLine.addValue(argumentCount,    arguments,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	29	None	replace
44	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  1,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  1,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  1,  allValues);	  commandLine.addValue(argumentCount,    arguments,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	29	None	replace
45	[BUG]  [BUGGY]  commandLine  =  getCommandLine(option);  commandLine.addValue(option,  arguments);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine  =  getCommandLine(option);  commandLine.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine  =  getCommandLine(option);  commandLine.addValue(option,  arguments);	  commandLine.addValue(option,    arguments);    CommandLine    commandLine    =    getCommandLine(option);    commandLine.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
46	[BUG]  [BUGGY]  CommandLine  commandLine  =  getCommandLine(option);  commandLine.addValue(option,  arguments);  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  CommandLine  commandLine  =  getCommandLine(option);  commandLine.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	CommandLine  commandLine  =  getCommandLine(option);  commandLine.addValue(option,  arguments);	  commandLine.addValue(option,    arguments);    CommandLine    commandLine    =    getCommandLine(option);    commandLine.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
47	[BUG]  [BUGGY]  commandLine  =  getCommandLine(option);  commandLine.addValue(option,  argumentCount);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine  =  getCommandLine(option);  commandLine.addValue(option,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine  =  getCommandLine(option);  commandLine.addValue(option,  argumentCount);	  commandLine.addValue(option,    arguments);    CommandLine    commandLine    =    getCommandLine(option);    commandLine.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
48	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(0).toString();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  arguments.get(0).toString();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  arguments.get(0).toString();	  Integer    argumentCount    =    arguments.get(argumentCount).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	23	None	replace
49	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(option).toString();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  arguments.get(option).toString();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  arguments.get(option).toString();	  Integer    argumentCount    =    arguments.get(argumentCount).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	23	None	replace
50	[BUG]  [BUGGY]  Integer  argumentCount  =  resources.get(argumentCount).toString();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  resources.get(argumentCount).toString();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  resources.get(argumentCount).toString();	  Integer    argumentCount    =    arguments.get(argumentCount).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	23	None	replace
51	[BUG]  [BUGGY]  commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING,  allValues);	  commandLine.addValue(argument,    DEFAULT_CONSUME_REMAINING,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	61	None	replace
52	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  allValues);	  commandLine.addValue(argument,    DEFAULT_CONSUME_REMAINING,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	61	None	replace
53	[BUG]  [BUGGY]  commandLine.addValue(values,  DEFAULT_CONSUME_REMAINING,  allValues);  [CE]  cannot  find  symbol  values  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(values,  DEFAULT_CONSUME_REMAINING,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(values,  DEFAULT_CONSUME_REMAINING,  allValues);	  commandLine.addValue(argument,    DEFAULT_CONSUME_REMAINING,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	61	None	replace
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	add	commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING);	  commandLine.addValue(argument,    DEFAULT_CONSUME_REMAINING);    	compilable	  [FE]  ComparisonFailure  	62	1	replace
55	[BUG]  [BUGGY]  commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING);  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  DEFAULT_CONSUME_REMAINING);	  commandLine.addValue(argument,    DEFAULT_CONSUME_REMAINING);    	compilable	  [FE]  ComparisonFailure  	62	1	replace
56	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING);	  commandLine.addValue(argument,    DEFAULT_CONSUME_REMAINING);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	62	None	replace
57	[BUG]  [BUGGY]  commandLine.addValue(values,  DEFAULT_CONSUME_REMAINING);  [CE]  cannot  find  symbol  values  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(values,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(values,  DEFAULT_CONSUME_REMAINING);	  commandLine.addValue(argument,    DEFAULT_CONSUME_REMAINING);    	non-compiled	[CE]  cannot  find  symbol  values	62	None	replace
58	[BUG]  [BUGGY]  commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING,  arguments);  [CE]  cannot  find  symbol  argument  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  DEFAULT_CONSUME_REMAINING,  arguments);	  commandLine.addValue(argument,    DEFAULT_CONSUME_REMAINING);    	non-compiled	[CE]  cannot  find  symbol  argument	62	None	replace
59	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.length  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.length  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.length  -  1);	  String    allValuesQuoted    =    arguments.get(argumentCount    -    2);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	48	None	replace
60	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  2  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  2  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(argumentCount  -  2  -  1);	  String    allValuesQuoted    =    arguments.get(argumentCount    -    2);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	48	None	replace
61	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.length  -  2);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.length  -  2);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.length  -  2);	  String    allValuesQuoted    =    arguments.get(argumentCount    -    2);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	48	None	replace
62	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  option);  commands.addValue(option,  arguments);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  option);  commands.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  option);  commands.addValue(option,  arguments);	  commandLine.addValue(option,    arguments);    commands.addValue(option,    arguments);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	70	None	replace
63	[BUG]  [BUGGY]  commands.addValue(option,  arguments);  [CE]  cannot  find  symbol  commands  [FE]              ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commands.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commands.addValue(option,  arguments);	  commandLine.addValue(option,    arguments);    commands.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol  commands	70	None	replace
64	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  +  2);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  +  2);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(argumentCount  +  2);	  String    allValuesQuoted    =    arguments.get(argumentCount    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	21	None	replace
65	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  *  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  *  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(argumentCount  *  1);	  String    allValuesQuoted    =    arguments.get(argumentCount    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	21	None	replace
66	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  +  2);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  +  2);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.get(argumentCount  +  2);	  String    allValuesQuoted    =    values.get(argumentCount    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	51	None	replace
67	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  arguments,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  arguments,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  arguments,  allValuesQuoted);	  commandLine.addValue(argumentCount,    arguments,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	31	None	replace
68	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  0,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  0,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  0,  allValuesQuoted);	  commandLine.addValue(argumentCount,    arguments,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	31	None	replace
69	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR,  arguments,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR,  arguments,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR,  arguments,  allValuesQuoted);	  commandLine.addValue(argumentCount,    arguments,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	31	None	replace
70	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  arguments,  valueDefaults,  allValuesQuoted);  [CE]  cannot  find  symbol  valueDefaults  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  arguments,  valueDefaults,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  arguments,  valueDefaults,  allValuesQuoted);	  commandLine.addValue(argumentCount,    arguments,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  valueDefaults	31	None	replace
71	[BUG]  [BUGGY]  CommandLine.addValue(option,  arguments);  [CE]  cannot  find  symbol  CommandLine  [FE]              ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  CommandLine.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	CommandLine.addValue(option,  arguments);	  commandLine.addValue(option,    arguments);    CommandLine.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol  CommandLine	71	None	replace
72	[BUG]  [BUGGY]  option.addValue(values.get(argumentCount).toString());  [CE]  cannot  find  symbol  values  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  option.addValue(values.get(argumentCount).toString());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	option.addValue(values.get(argumentCount).toString());	  option.addValue(values.get(id).toString());    	non-compiled	[CE]  cannot  find  symbol  values	83	None	replace
73	[BUG]  [BUGGY]  option.addValue(values.get(0).toString());  [CE]  cannot  find  symbol  values  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  option.addValue(values.get(0).toString());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	option.addValue(values.get(0).toString());	  option.addValue(values.get(id).toString());    	non-compiled	[CE]  cannot  find  symbol  values	83	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.getOptionalValue(argumentCount).toString();  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOptionalValue(argumentCount).toString();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOptionalValue(argumentCount).toString();	  option.addValue(values.get(id).toString());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	83	None	replace
75	[BUG]  [BUGGY]  option.addValue(values.get(argumentCount));  [CE]  cannot  find  symbol  values  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  option.addValue(values.get(argumentCount));  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	option.addValue(values.get(argumentCount));	  option.addValue(values.get(id));    	non-compiled	[CE]  cannot  find  symbol  values	80	None	replace
76	[BUG]  [BUGGY]  Option  commandLine  =  options.get(id);  [CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  commandLine  =  options.get(id);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  commandLine  =  options.get(id);	  option.addValue(values.get(id));    	non-compiled	[CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	80	None	replace
77	[BUG]  [BUGGY]  option.addValue(values.get(0));  [CE]  cannot  find  symbol  values  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  option.addValue(values.get(0));  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	option.addValue(values.get(0));	  option.addValue(values.get(id));    	non-compiled	[CE]  cannot  find  symbol  values	80	None	replace
78	[BUG]  [BUGGY]  Option  argument  =  resources.getOptionalValue(argumentCount);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  argument  =  resources.getOptionalValue(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  argument  =  resources.getOptionalValue(argumentCount);	  Option    argument    =    options.getOptionalValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
79	[BUG]  [BUGGY]  Option  argument  =  arguments.getOptionalValue(argumentCount);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  argument  =  arguments.getOptionalValue(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  argument  =  arguments.getOptionalValue(argumentCount);	  Option    argument    =    options.getOptionalValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
80	[BUG]  [BUGGY]  Option  argument  =  values.getOptionalValue(argumentCount);  [CE]  cannot  find  symbol  values  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  argument  =  values.getOptionalValue(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  argument  =  values.getOptionalValue(argumentCount);	  Option    argument    =    options.getOptionalValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol  values	12	None	replace
81	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.length  +  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.length  +  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.length  +  1);	  String    allValuesQuoted    =    arguments.get(argumentCount    -    1    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	47	None	replace
82	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  argumentCount  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  argumentCount  -  1);	  String    allValuesQuoted    =    arguments.get(argumentCount    -    1    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	47	None	replace
83	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.size()  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.size()  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.size()  -  1);	  String    allValuesQuoted    =    arguments.get(argumentCount    -    1    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	47	None	replace
84	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(0).toString();  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  arguments.get(0).toString();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(0).toString();	  String    allValuesQuoted    =    arguments.get(0);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	22	None	replace
85	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(0).toLowerCase();  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  arguments.get(0).toLowerCase();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(0).toLowerCase();	  String    allValuesQuoted    =    arguments.get(0);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	22	None	replace
86	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  values.nextToken());  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  values.nextToken());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  values.nextToken());	  Option    option    =    options.getOption(ARGUMENT_EXPECTED_VALUE,    arguments.nextToken());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	84	None	replace
87	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken(),  arguments);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken(),  arguments);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken(),  arguments);	  Option    option    =    options.getOption(ARGUMENT_EXPECTED_VALUE,    arguments.nextToken());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	84	None	replace
88	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken()  +  1);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken()  +  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken()  +  1);	  Option    option    =    options.getOption(ARGUMENT_EXPECTED_VALUE,    arguments.nextToken());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	84	None	replace
89	[BUG]  [BUGGY]  Option  option  =  option.getOption(ARGUMENT_EXPECTED_VALUE,  arguments);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  option.getOption(ARGUMENT_EXPECTED_VALUE,  arguments);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  option.getOption(ARGUMENT_EXPECTED_VALUE,  arguments);	  Option    option    =    option.getOption(ARGUMENT_EXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	82	None	replace
90	[BUG]  [BUGGY]  Option  option  =  commandLine.getOption(ARGUMENT_EXPECTED_VALUE);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  commandLine.getOption(ARGUMENT_EXPECTED_VALUE);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  commandLine.getOption(ARGUMENT_EXPECTED_VALUE);	  Option    option    =    option.getOption(ARGUMENT_EXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	82	None	replace
91	[BUG]  [BUGGY]  Option  option  =  option.getOption(argumentCount);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  option.getOption(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  option.getOption(argumentCount);	  Option    option    =    option.getOption(ARGUMENT_EXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	82	None	replace
92	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR,  allValues);	  commandLine.addValue(argumentCount,    values,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	30	None	replace
93	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments);	  Option    option    =    options.getOption(ARGUMENT_EXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	55	None	replace
94	[BUG]  [BUGGY]  Option  option  =  options.getOption(argumentCount);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(argumentCount);	  Option    option    =    options.getOption(ARGUMENT_EXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	55	None	replace
95	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  argumentCount);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  argumentCount);	  Option    option    =    options.getOption(ARGUMENT_EXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	55	None	replace
96	[BUG]  [BUGGY]  Option  option  =  arguments.getOption(ARGUMENT_EXPECTED_VALUE);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  arguments.getOption(ARGUMENT_EXPECTED_VALUE);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  arguments.getOption(ARGUMENT_EXPECTED_VALUE);	  Option    option    =    options.getOption(ARGUMENT_EXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	55	None	replace
97	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  0,  arguments.length,  allValues);  [CE]  cannot  find  symbol  length  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  0,  arguments.length,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  0,  arguments.length,  allValues);	  commandLine.addValue(argumentCount,    0,    allValues);    	non-compiled	[CE]  cannot  find  symbol  length	32	None	replace
98	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  arguments,  0,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  arguments,  0,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  arguments,  0,  allValues);	  commandLine.addValue(argumentCount,    0,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	32	None	replace
99	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  0,  values.size(),  allValues);  [CE]  cannot  find  symbol  values  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  0,  values.size(),  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  0,  values.size(),  allValues);	  commandLine.addValue(argumentCount,    0,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	32	None	replace
100	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  0,  arguments.size(),  allValues);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  0,  arguments.size(),  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  0,  arguments.size(),  allValues);	  commandLine.addValue(argumentCount,    0,    allValues);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
101	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	add	commandLine.addValue(option,  DEFAULT_INITIAL_SEPARATOR);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR);    	compilable	  [FE]  ClassCastException  	63	1	replace
102	[BUG]  [BUGGY]  commandLine.addValue(option,  DEFAULT_INITIAL_SEPARATOR);  [FE]  ClassCastException  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  DEFAULT_INITIAL_SEPARATOR);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR);    	compilable	  [FE]  ClassCastException  	63	1	replace
103	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	63	None	replace
104	[BUG]  [BUGGY]  commandLine.addValue(values,  DEFAULT_INITIAL_SEPARATOR);  [CE]  cannot  find  symbol  values  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(values,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(values,  DEFAULT_INITIAL_SEPARATOR);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  values	63	None	replace
105	[BUG]  [BUGGY]  commandLine.addValue(ARGUMENT_NAME,  DEFAULT_INITIAL_SEPARATOR);  [CE]  cannot  find  symbol  ARGUMENT_NAME  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(ARGUMENT_NAME,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(ARGUMENT_NAME,  DEFAULT_INITIAL_SEPARATOR);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  ARGUMENT_NAME	63	None	replace
106	[BUG]  [BUGGY]  commandLine.addValue(arguments,  option,  values);  [CE]  cannot  find  symbol  values  [FE]        ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  option,  values);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  option,  values);	  commandLine.addValue(arguments,    option);    	non-compiled	[CE]  cannot  find  symbol  values	59	None	replace
107	[BUG]  [BUGGY]  commandLine.addValue(arguments,  option,  arguments);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  option,  arguments);	  commandLine.addValue(arguments,    option);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	59	None	replace
108	[BUG]  [BUGGY]  commandLine.addValue(arguments,  option,  valueDefaults);  [CE]  cannot  find  symbol  valueDefaults  [FE]            ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  option,  valueDefaults);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  option,  valueDefaults);	  commandLine.addValue(arguments,    option);    	non-compiled	[CE]  cannot  find  symbol  valueDefaults	59	None	replace
109	[BUG]  [BUGGY]  Arguments  arguments  =  resources.getArgumentCount()  -  1;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Arguments  arguments  =  resources.getArgumentCount()  -  1;  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  arguments  =  resources.getArgumentCount()  -  1;	  Arguments    arguments    =    resources.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
110	[BUG]  [BUGGY]  Arguments  arguments  =  resources.getArgumentCount()  +  1;  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Arguments  arguments  =  resources.getArgumentCount()  +  1;  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  arguments  =  resources.getArgumentCount()  +  1;	  Arguments    arguments    =    resources.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
111	[BUG]  [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount  +  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount  +  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  resources.get(argumentCount  +  1);	  String    allValuesQuoted    =    resources.get(argumentCount);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	52	None	replace
112	[BUG]  [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount,  arguments.length);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount,  arguments.length);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  resources.get(argumentCount,  arguments.length);	  String    allValuesQuoted    =    resources.get(argumentCount);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	52	None	replace
113	[BUG]  [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount,  argumentCount);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount,  argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  resources.get(argumentCount,  argumentCount);	  String    allValuesQuoted    =    resources.get(argumentCount);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	52	None	replace
114	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE,  arguments);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE,  arguments);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE,  arguments);	  Option    option    =    options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	85	None	replace
115	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE,  argumentCount);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE,  argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE,  argumentCount);	  Option    option    =    options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	85	None	replace
116	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNKNOWN_VALUE,  arguments);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNKNOWN_VALUE,  arguments);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_UNKNOWN_VALUE,  arguments);	  Option    option    =    options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	85	None	replace
117	[BUG]  [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  values,  allValues);  [CE]  cannot  find  symbol  values  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  values,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  values,  allValues);	  commandLine.addValue(arguments,    DEFAULT_CONSUME_REMAINING,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	66	None	replace
118	[BUG]  [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  arguments,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  arguments,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  arguments,  allValuesQuoted);	  commandLine.addValue(arguments,    DEFAULT_CONSUME_REMAINING,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	66	None	replace
119	[BUG]  [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);	  commandLine.addValue(arguments,    DEFAULT_CONSUME_REMAINING,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	66	None	replace
120	[BUG]  [BUGGY]  commandLine.addValue(option,  arguments,  DEFAULT_CONSUME_REMAINING,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  arguments,  DEFAULT_CONSUME_REMAINING,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  arguments,  DEFAULT_CONSUME_REMAINING,  allValues);	  commandLine.addValue(arguments,    DEFAULT_CONSUME_REMAINING,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	66	None	replace
121	[BUG]  [BUGGY]  Validator  validator  =  arguments.getValue(option);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  arguments.getValue(option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  arguments.getValue(option);	  Validator    validator    =    arguments.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
122	[BUG]  [BUGGY]  Validator  validator  =  arguments.getValue(argumentCount,  argumentCount);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  arguments.getValue(argumentCount,  argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  arguments.getValue(argumentCount,  argumentCount);	  Validator    validator    =    arguments.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
123	[BUG]  [BUGGY]  Validator  validator  =  arguments.getValue(argumentCount,  0);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  arguments.getValue(argumentCount,  0);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  arguments.getValue(argumentCount,  0);	  Validator    validator    =    arguments.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
124	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNEXPECTED_VALUE,  arguments);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNEXPECTED_VALUE,  arguments);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_UNEXPECTED_VALUE,  arguments);	  Option    option    =    options.getOption(ARGUMENT_UNEXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	54	None	replace
125	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNEXPECTED_VALUE,  argumentCount);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNEXPECTED_VALUE,  argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_UNEXPECTED_VALUE,  argumentCount);	  Option    option    =    options.getOption(ARGUMENT_UNEXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	54	None	replace
126	[BUG]  [BUGGY]  Option  option  =  arguments.getOption(ARGUMENT_UNEXPECTED_VALUE);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  arguments.getOption(ARGUMENT_UNEXPECTED_VALUE);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  arguments.getOption(ARGUMENT_UNEXPECTED_VALUE);	  Option    option    =    options.getOption(ARGUMENT_UNEXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	54	None	replace
127	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  values.values);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  values.values);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  values.values);	  commandLine.setValue(argumentCount,    valueValues);    	non-compiled	[CE]  cannot  find  symbol  values	78	None	replace
128	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  arguments);  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  CommandLine  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	CommandLine  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  arguments);	  commandLine.addValue(option,    arguments);    CommandLine    commandLine    =    options.getCommandLine();    commandLine.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
129	[BUG]  [BUGGY]  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  arguments);  [CE]  cannot  find  symbol  options  [FE]            ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine  =  options.getCommandLine();  commandLine.addValue(option,  arguments);	  commandLine.addValue(option,    arguments);    CommandLine    commandLine    =    options.getCommandLine();    commandLine.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol  options	18	None	replace
130	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  argumentCount);  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  CommandLine  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	CommandLine  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  argumentCount);	  commandLine.addValue(option,    arguments);    CommandLine    commandLine    =    options.getCommandLine();    commandLine.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
131	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.remove(argumentCount  -  1  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  arguments.remove(argumentCount  -  1  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.remove(argumentCount  -  1  -  1);	  String    allValuesQuoted    =    arguments.remove(argumentCount    -    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	27	None	replace
132	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.remove(argumentCount  -  1  +  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  arguments.remove(argumentCount  -  1  +  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.remove(argumentCount  -  1  +  1);	  String    allValuesQuoted    =    arguments.remove(argumentCount    -    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	27	None	replace
133	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  1,  arguments.length  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  1,  arguments.length  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.get(argumentCount  -  1,  arguments.length  -  1);	  String    allValuesQuoted    =    values.get(argumentCount    -    2);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	49	None	replace
134	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  arguments,  option);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]        ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  arguments,  option);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  arguments,  option);	  commandLine.addValue(argumentCount,    option);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	33	None	replace
135	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	add	commandLine.addValue(option,  argumentCount);	  commandLine.addValue(argumentCount,    option);    	compilable	  [FE]  ClassCastException  	33	1	replace
136	[BUG]  [BUGGY]  commandLine.addValue(option,  argumentCount);  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  argumentCount);	  commandLine.addValue(argumentCount,    option);    	compilable	  [FE]  ClassCastException  	33	1	replace
137	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  arguments[0],  option);  [CE]  array  required,  but  ListIterator  found  [FE]            ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  arguments[0],  option);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  arguments[0],  option);	  commandLine.addValue(argumentCount,    option);    	non-compiled	[CE]  array  required,  but  ListIterator  found	33	None	replace
138	[BUG]  [BUGGY]  commandLine.addValue(option,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	46	None	replace
139	[BUG]  [BUGGY]  commandLine.addValue(values,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);  [CE]  cannot  find  symbol  values  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(values,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(values,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  values	46	None	replace
140	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	46	None	replace
141	[BUG]  [BUGGY]  commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR,  arguments);  [CE]  cannot  find  symbol  argument  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR,  arguments);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  argument	46	None	replace
142	[BUG]  [BUGGY]  commandLine.addValue(arguments,  DEFAULT_INITIAL_SEPARATOR,  arguments,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  DEFAULT_INITIAL_SEPARATOR,  arguments,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  DEFAULT_INITIAL_SEPARATOR,  arguments,  allValuesQuoted);	  commandLine.addValue(arguments,    arguments,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	3	None	replace
143	[BUG]  [BUGGY]  commandLine.addValue(arguments,  argumentCount,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  argumentCount,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  argumentCount,  allValuesQuoted);	  commandLine.addValue(arguments,    arguments,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	3	None	replace
144	[BUG]  [BUGGY]  commandLine.addValue(option,  options);  [CE]  cannot  find  symbol  options  [FE]        ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  options);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  options);	  commandLine.addValue(option,    arguments);    commandLine.addValue(option,    arguments);    }    	non-compiled	[CE]  cannot  find  symbol  options	77	None	replace
145	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(argumentCount,  arguments.length);  [CE]  cannot  find  symbol  length  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  resources.getValue(argumentCount,  arguments.length);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  resources.getValue(argumentCount,  arguments.length);	  Validator    validator    =    resources.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol  length	37	None	replace
146	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(argumentCount,  arguments.size());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  resources.getValue(argumentCount,  arguments.size());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  resources.getValue(argumentCount,  arguments.size());	  Validator    validator    =    resources.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
147	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(argumentCount,  argumentCount);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  resources.getValue(argumentCount,  argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  resources.getValue(argumentCount,  argumentCount);	  Validator    validator    =    resources.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
148	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(argumentCount,  arguments.intValue());  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  resources.getValue(argumentCount,  arguments.intValue());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  resources.getValue(argumentCount,  arguments.intValue());	  Validator    validator    =    resources.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
149	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  arguments.allValues);  [CE]  cannot  find  symbol  allValues  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  arguments.allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  arguments.allValues);	  commandLine.setValue(argumentCount,    values.allValues);    	non-compiled	[CE]  cannot  find  symbol  allValues	41	None	replace
150	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  resources.allValues);  [CE]  cannot  find  symbol  allValues  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  resources.allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  resources.allValues);	  commandLine.setValue(argumentCount,    values.allValues);    	non-compiled	[CE]  cannot  find  symbol  allValues	41	None	replace
151	[BUG]  [BUGGY]  commandLine.setValue(ARGUMENT_Count,  arguments.allValues);  [CE]  cannot  find  symbol  ARGUMENT_Count  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(ARGUMENT_Count,  arguments.allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(ARGUMENT_Count,  arguments.allValues);	  commandLine.setValue(argumentCount,    values.allValues);    	non-compiled	[CE]  cannot  find  symbol  ARGUMENT_Count	41	None	replace
152	[BUG]  [BUGGY]  Arguments  arguments  =  option.getArgumentCount()  -  1;  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Arguments  arguments  =  option.getArgumentCount()  -  1;  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  arguments  =  option.getArgumentCount()  -  1;	  Arguments    arguments    =    option.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
153	[BUG]  [BUGGY]  Arguments  arguments  =  option.getArgumentCount()  -  argumentCount;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Arguments  arguments  =  option.getArgumentCount()  -  argumentCount;  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  arguments  =  option.getArgumentCount()  -  argumentCount;	  Arguments    arguments    =    option.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
154	[BUG]  [BUGGY]  commandLine.addValue(values,  option);  [CE]  cannot  find  symbol  values  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(values,  option);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(values,  option);	  commandLine.addValue(argument,    option);    	non-compiled	[CE]  cannot  find  symbol  values	34	None	replace
155	[BUG]  [BUGGY]  commandLine.addValue(option,  argument);  [CE]  cannot  find  symbol  argument  [FE]            ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  argument);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  argument);	  commandLine.addValue(argument,    option);    	non-compiled	[CE]  cannot  find  symbol  argument	34	None	replace
156	[BUG]  [BUGGY]  commandLine.addValue(DEFAULT_CONSUME_REMAINING,  arguments,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(DEFAULT_CONSUME_REMAINING,  arguments,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(DEFAULT_CONSUME_REMAINING,  arguments,  allValuesQuoted);	  commandLine.addValue(DEFAULT_CONSUME_REMAINING,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	45	None	replace
157	[BUG]  [BUGGY]  Context.report(JSError.make(sources,  arguments,  DEFAULT_INITIAL_SEPARATOR));  [CE]  cannot  find  symbol  sources  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Context.report(JSError.make(sources,  arguments,  DEFAULT_INITIAL_SEPARATOR));  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Context.report(JSError.make(sources,  arguments,  DEFAULT_INITIAL_SEPARATOR));	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  sources	8	None	replace
158	[BUG]  [BUGGY]  Context.report(JSError.make(commandLine,  DEFAULT_INITIAL_SEPARATOR));  [CE]  cannot  find  symbol  JSError  [FE]                          ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Context.report(JSError.make(commandLine,  DEFAULT_INITIAL_SEPARATOR));  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Context.report(JSError.make(commandLine,  DEFAULT_INITIAL_SEPARATOR));	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  JSError	8	None	replace
159	[BUG]  [BUGGY]  Context.report(JSError.make(commandLine,  DEFAULT_CONSUME_REMAINING,  arguments));  [CE]  cannot  find  symbol  JSError  [FE]                            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Context.report(JSError.make(commandLine,  DEFAULT_CONSUME_REMAINING,  arguments));  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Context.report(JSError.make(commandLine,  DEFAULT_CONSUME_REMAINING,  arguments));	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  JSError	8	None	replace
160	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(option).intValue();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  arguments.get(option).intValue();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  arguments.get(option).intValue();	  Integer    argumentCount    =    arguments.get(argumentCount).intValue();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	6	None	replace
161	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(0).intValue();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  arguments.get(0).intValue();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  arguments.get(0).intValue();	  Integer    argumentCount    =    arguments.get(argumentCount).intValue();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	6	None	replace
162	[BUG]  [BUGGY]  Integer  argumentCount  =  resources.get(argumentCount).intValue();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  resources.get(argumentCount).intValue();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  resources.get(argumentCount).intValue();	  Integer    argumentCount    =    arguments.get(argumentCount).intValue();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	6	None	replace
163	[BUG]  [BUGGY]  Integer  argumentCount  =  arguments.get(commandLine).intValue();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                          ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  arguments.get(commandLine).intValue();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  arguments.get(commandLine).intValue();	  Integer    argumentCount    =    arguments.get(argumentCount).intValue();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	6	None	replace
164	[BUG]  [BUGGY]  commandLine.addValue(values);  [CE]  cannot  find  symbol  values  [FE]        ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(values);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(values);	  commandLine.addValue(argument);    	non-compiled	[CE]  cannot  find  symbol  values	73	None	replace
165	[BUG]  [BUGGY]  commandLine.addValue(argumentCount);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount);	  commandLine.addValue(argument);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	73	None	replace
166	[BUG]  [BUGGY]  commandLine.addValue(option);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option);	  commandLine.addValue(argument);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	73	None	replace
167	[BUG]  [BUGGY]  commandLine.addValue(args);  [CE]  cannot  find  symbol  args  [FE]              ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(args);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(args);	  commandLine.addValue(argument);    	non-compiled	[CE]  cannot  find  symbol  args	73	None	replace
168	[BUG]  [BUGGY]  commandLine.setValue(0,  arguments);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(0,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(0,  arguments);	  commandLine.setValue(0,    allValues);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
169	[BUG]  [BUGGY]  commandLine.setValue(0,  values);  [CE]  cannot  find  symbol  values  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(0,  values);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(0,  values);	  commandLine.setValue(0,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	79	None	replace
170	[BUG]  [BUGGY]  commandLine.setValue(0,  allValuesQuoted);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(0,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(0,  allValuesQuoted);	  commandLine.setValue(0,    allValues);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
171	[BUG]  [BUGGY]  commandLine.setValue(0,  argumentCount);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(0,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(0,  argumentCount);	  commandLine.setValue(0,    allValues);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
172	[BUG]  [BUGGY]  commandLine.setArgumentCount(argumentCount  +  1);  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setArgumentCount(argumentCount  +  1);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setArgumentCount(argumentCount  +  1);	  commandLine.setArgumentCount(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
173	[BUG]  [BUGGY]  commandLine.setArgumentCount(argumentCount  -  1);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setArgumentCount(argumentCount  -  1);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setArgumentCount(argumentCount  -  1);	  commandLine.setArgumentCount(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
174	[BUG]  [BUGGY]  commandLine.setArgumentCount(arguments.size());  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setArgumentCount(arguments.size());  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setArgumentCount(arguments.size());	  commandLine.setArgumentCount(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
175	[BUG]  [BUGGY]  commandLine.addValue(arguments,  DEFAULT_INITIAL_SEPARATOR,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  DEFAULT_INITIAL_SEPARATOR,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  DEFAULT_INITIAL_SEPARATOR,  allValues);	  commandLine.addValue(arguments,    values,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	2	None	replace
176	[BUG]  [BUGGY]  commandLine.addValue(arguments,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  allValuesQuoted);	  commandLine.addValue(arguments,    values,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	2	None	replace
177	[BUG]  [BUGGY]  commandLine.addValue(arguments,  defaultValues,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  defaultValues,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  defaultValues,  allValues);	  commandLine.addValue(arguments,    values,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	2	None	replace
178	[BUG]  [BUGGY]  Option  commandLine  =  options.getCommandLine();  [CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  commandLine  =  options.getCommandLine();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  commandLine  =  options.getCommandLine();	  Option    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	81	None	replace
179	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(argumentCount);  [CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  commandLine  =  option.getCommandLine(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  commandLine  =  option.getCommandLine(argumentCount);	  Option    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	81	None	replace
180	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(),  arguments);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  commandLine  =  option.getCommandLine(),  arguments);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  commandLine  =  option.getCommandLine(),  arguments);	  Option    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  ';'  expected	81	None	replace
181	[BUG]  [BUGGY]  Option  option  =  values.get(argumentCount);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  values.get(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  values.get(argumentCount);	  option.addValue(values.get(i));    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	86	None	replace
182	[BUG]  [BUGGY]  Validator  validator  =  arguments.get(argumentCount  +  1);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  arguments.get(argumentCount  +  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  arguments.get(argumentCount  +  1);	  Validator    validator    =    arguments.get(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
183	[BUG]  [BUGGY]  CommandLine  commandLine  =  options.getCommandLine();  commands.addValue(option,  arguments);  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  CommandLine  commandLine  =  options.getCommandLine();  commands.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	CommandLine  commandLine  =  options.getCommandLine();  commands.addValue(option,  arguments);	  commandLine.addValue(option,    arguments);    CommandLine    commandLine    =    options.getCommandLine();    commands.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
184	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  arguments.nextToken(),  allValues);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  arguments.nextToken(),  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  arguments.nextToken(),  allValues);	  commandLine.addValue(argumentCount,    values.nextToken(),    allValues);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
185	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  resources.nextToken(),  allValues);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  resources.nextToken(),  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  resources.nextToken(),  allValues);	  commandLine.addValue(argumentCount,    values.nextToken(),    allValues);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
186	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  values.nextToken(),  arguments);  [CE]  cannot  find  symbol  values  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  values.nextToken(),  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  values.nextToken(),  arguments);	  commandLine.addValue(argumentCount,    values.nextToken(),    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	65	None	replace
187	[BUG]  [BUGGY]  Validator  validator  =  commandLine.get(argumentCount  -  1);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  commandLine.get(argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  commandLine.get(argumentCount  -  1);	  Validator    validator    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
188	[BUG]  [BUGGY]  Validator  validator  =  resources.get(argumentCount  -  1);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  resources.get(argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  resources.get(argumentCount  -  1);	  Validator    validator    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
189	[BUG]  [BUGGY]  Validator  validator  =  commands.get(argumentCount  -  1);  [CE]  cannot  find  symbol  commands  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  commands.get(argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  commands.get(argumentCount  -  1);	  Validator    validator    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  cannot  find  symbol  commands	15	None	replace
190	[BUG]  [BUGGY]  commandLine.addValue(option,  valueCount);  [CE]  cannot  find  symbol  valueCount  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  valueCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  valueCount);	  commandLine.addValue(argument,    valueCount);    	non-compiled	[CE]  cannot  find  symbol  valueCount	72	None	replace
191	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  valueCount);  [CE]  cannot  find  symbol  valueCount  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  valueCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  valueCount);	  commandLine.addValue(argument,    valueCount);    	non-compiled	[CE]  cannot  find  symbol  valueCount	72	None	replace
192	[BUG]  [BUGGY]  commandLine.addValue(argument,  valueDefaults);  [CE]  cannot  find  symbol  argument  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argument,  valueDefaults);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  valueDefaults);	  commandLine.addValue(argument,    valueCount);    	non-compiled	[CE]  cannot  find  symbol  argument	72	None	replace
193	[BUG]  [BUGGY]  commandLine.addArg(argumentCount,  valueDefaults);  [CE]  cannot  find  symbol  valueDefaults  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addArg(argumentCount,  valueDefaults);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addArg(argumentCount,  valueDefaults);	  commandLine.addArg(argumentCount,    option);    	non-compiled	[CE]  cannot  find  symbol  valueDefaults	74	None	replace
194	[BUG]  [BUGGY]  commandLine.addArg(argumentCount,  arguments.size()  -  1);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addArg(argumentCount,  arguments.size()  -  1);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addArg(argumentCount,  arguments.size()  -  1);	  commandLine.addArg(argumentCount,    option);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
195	[BUG]  [BUGGY]  commandLine.addArg(argumentCount,  arguments,  option);  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addArg(argumentCount,  arguments,  option);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addArg(argumentCount,  arguments,  option);	  commandLine.addArg(argumentCount,    option);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
196	[BUG]  [BUGGY]  commandLine.addArg(argumentCount,  arguments[0],  option);  [CE]  array  required,  but  ListIterator  found  [FE]                ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addArg(argumentCount,  arguments[0],  option);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addArg(argumentCount,  arguments[0],  option);	  commandLine.addArg(argumentCount,    option);    	non-compiled	[CE]  array  required,  but  ListIterator  found	74	None	replace
197	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  1,  arguments.length  +  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  1,  arguments.length  +  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.get(argumentCount  -  1,  arguments.length  +  1);	  String    allValuesQuoted    =    values.get(argumentCount    -    1    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	50	None	replace
198	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  1,  argumentCount  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  1,  argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.get(argumentCount  -  1,  argumentCount  -  1);	  String    allValuesQuoted    =    values.get(argumentCount    -    1    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	50	None	replace
199	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	add	commandLine.addValue(option,        arguments);        commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);	  	compilable	  [FE]  ClassCastException  	16	1	add
200	[BUG]  [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,        arguments);        commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);	  	compilable	  [FE]  ClassCastException  	16	1	add
201	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  if(argumentCount  >  1)  {  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  }  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	add	commandLine.addValue(option,        arguments);        commandLine.addValue(option,    arguments);    if(argumentCount  >  1)  {  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  }	  	compilable	  [FE]  ClassCastException  	16	1	add
202	[BUG]  [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  if(argumentCount  >  1)  {  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  }  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  if(argumentCount  >  1)  {  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  }  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,        arguments);        commandLine.addValue(option,    arguments);    if(argumentCount  >  1)  {  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  }	  	compilable	  [FE]  ClassCastException  	16	1	add
203	[BUG]  [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  commandLine.addValue(option,  argument);  commandLine.addValue(option,  arguments);  [CE]  cannot  find  symbol  argument  [FE]        ClassCastException    [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  commandLine.addValue(option,  argument);  commandLine.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,        arguments);        commandLine.addValue(option,    arguments);    commandLine.addValue(option,  argument);  commandLine.addValue(option,  arguments);	  	non-compiled	[CE]  cannot  find  symbol  argument	16	None	add
204	[BUG]  [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  CommandLine  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  arguments);  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  CommandLine  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,        arguments);        commandLine.addValue(option,    arguments);    CommandLine  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  arguments);	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
205	[BUG]  [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  }  [CE]  class,  interface,  or  enum  expected  [FE]            ClassCastException    [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  }  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,        arguments);        commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  }	  	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	add
206	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.remove(argumentCount  +  2);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  arguments.remove(argumentCount  +  2);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.remove(argumentCount  +  2);	  String    allValuesQuoted    =    arguments.remove(argumentCount    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	28	None	replace
207	[BUG]  [BUGGY]  Arguments  arguments  =  arguments.getArgumentCount()  -  1;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Arguments  arguments  =  arguments.getArgumentCount()  -  1;  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  arguments  =  arguments.getArgumentCount()  -  1;	  Arguments    arguments    =    options.getArgumentCount()    -    1;    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
208	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  arguments,  option);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  arguments,  option);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  arguments,  option);	  commandLine.setValue(argumentCount,    arguments);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
209	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  valueDefaults);  [CE]  cannot  find  symbol  valueDefaults  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  valueDefaults);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  valueDefaults);	  commandLine.setValue(argumentCount,    arguments);    	non-compiled	[CE]  cannot  find  symbol  valueDefaults	39	None	replace
210	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  arguments.values());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  arguments.values());  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  arguments.values());	  commandLine.setValue(argumentCount,    values.values());    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
211	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  resources.values());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  resources.values());  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  resources.values());	  commandLine.setValue(argumentCount,    values.values());    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
212	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  valueDefaults.values());  [CE]  cannot  find  symbol  valueDefaults  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  valueDefaults.values());  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  valueDefaults.values());	  commandLine.setValue(argumentCount,    values.values());    	non-compiled	[CE]  cannot  find  symbol  valueDefaults	42	None	replace
213	[BUG]  [BUGGY]  commandLine.addValue(args,  allValues);  [CE]  cannot  find  symbol  args  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(args,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(args,  allValues);	  commandLine.addValue(values,    allValues);    	non-compiled	[CE]  cannot  find  symbol  args	13	None	replace
214	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  argumentCount);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  argumentCount);	  commandLine.addValue(values,    argumentCount);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	11	None	replace
215	[BUG]  [BUGGY]  commandLine.addValue(argument,  argumentCount);  [CE]  cannot  find  symbol  argument  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argument,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  argumentCount);	  commandLine.addValue(values,    argumentCount);    	non-compiled	[CE]  cannot  find  symbol  argument	11	None	replace
216	[BUG]  [BUGGY]  commandLine.addValue(argument,  arguments);  [CE]  cannot  find  symbol  argument  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argument,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  arguments);	  commandLine.addValue(values,    argument);    	non-compiled	[CE]  cannot  find  symbol  argument	75	None	replace
217	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  argument);  [CE]  cannot  find  symbol  argument  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  argument);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  argument);	  commandLine.addValue(values,    argument);    	non-compiled	[CE]  cannot  find  symbol  argument	75	None	replace
218	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  valueDefaults,  option);  [CE]  cannot  find  symbol  valueDefaults  [FE]        ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  valueDefaults,  option);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  valueDefaults,  option);	  commandLine.addValue(argumentCount,    option);    	non-compiled	[CE]  cannot  find  symbol  valueDefaults	33	None	replace
219	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.remove(argumentCount  +  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  values.remove(argumentCount  +  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.remove(argumentCount  +  1);	  String    allValuesQuoted    =    arguments.remove(argumentCount    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	28	None	replace
220	[BUG]  [BUGGY]  commandLine.addValue(ARGUMENT_INITIAL_SEPARATOR,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);  [CE]  cannot  find  symbol  ARGUMENT_INITIAL_SEPARATOR  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(ARGUMENT_INITIAL_SEPARATOR,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(ARGUMENT_INITIAL_SEPARATOR,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  ARGUMENT_INITIAL_SEPARATOR	46	None	replace
221	[BUG]  [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount++);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  resources.get(argumentCount++);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  resources.get(argumentCount++);	  String    allValuesQuoted    =    resources.get(argumentCount);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	52	None	replace
222	[BUG]  [BUGGY]  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  argumentCount);  [CE]  cannot  find  symbol  options  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine  =  options.getCommandLine();  commandLine.addValue(option,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine  =  options.getCommandLine();  commandLine.addValue(option,  argumentCount);	  commandLine.addValue(option,    arguments);    CommandLine    commandLine    =    options.getCommandLine();    commandLine.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol  options	18	None	replace
223	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  0);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	add	commandLine.addValue(option,  0);	  commandLine.addValue(option,    arguments);    CommandLine    commandLine.addValue(option,    arguments);    	compilable	  [FE]  ClassCastException  	69	1	replace
224	[BUG]  [BUGGY]  commandLine.addValue(option,  0);  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,  0);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,  0);	  commandLine.addValue(option,    arguments);    CommandLine    commandLine.addValue(option,    arguments);    	compilable	  [FE]  ClassCastException  	69	1	replace
225	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  2  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  2  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.get(argumentCount  -  2  -  1);	  String    allValuesQuoted    =    values.get(argumentCount    -    2);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	49	None	replace
226	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());	  Option    option    =    options.getOption(ARGUMENT_UNEXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	54	None	replace
227	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNKNOWN);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNKNOWN);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_UNKNOWN);	  Option    option    =    options.getOption(ARGUMENT_UNEXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	54	None	replace
228	[BUG]  [BUGGY]  Arguments  argument  =  resources.getArgumentCount();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Arguments  argument  =  resources.getArgumentCount();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  argument  =  resources.getArgumentCount();	  Arguments    arguments    =    resources.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
229	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken(),  argumentCount);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken(),  argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken(),  argumentCount);	  Option    option    =    options.getOption(ARGUMENT_EXPECTED_VALUE,    arguments.nextToken());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	84	None	replace
230	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  argumentCount));  [CE]  cannot  find  symbol  sourceName  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Context.report(JSError.make(sourceName,  argumentCount));  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Context.report(JSError.make(sourceName,  argumentCount));	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  sourceName	8	None	replace
231	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  argumentCount,  NUL));  [CE]  cannot  find  symbol  sourceName  [FE]                          ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Context.report(JSError.make(sourceName,  argumentCount,  NUL));  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Context.report(JSError.make(sourceName,  argumentCount,  NUL));	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  sourceName	8	None	replace
232	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  arguments));  [CE]  cannot  find  symbol  sourceName  [FE]                            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Context.report(JSError.make(sourceName,  arguments));  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Context.report(JSError.make(sourceName,  arguments));	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  sourceName	8	None	replace
233	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(argumentCount,  arguments);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  resources.getValue(argumentCount,  arguments);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  resources.getValue(argumentCount,  arguments);	  Validator    validator    =    resources.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
234	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(argumentCount,  0);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  resources.getValue(argumentCount,  0);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  resources.getValue(argumentCount,  0);	  Validator    validator    =    resources.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
235	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.remove(argumentCount  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  values.remove(argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.remove(argumentCount  -  1);	  String    allValuesQuoted    =    arguments.remove(argumentCount    -    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	27	None	replace
236	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  value.nextToken(),  allValues);  [CE]  cannot  find  symbol  value  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  value.nextToken(),  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  value.nextToken(),  allValues);	  commandLine.addValue(argumentCount,    values.nextToken(),    allValues);    	non-compiled	[CE]  cannot  find  symbol  value	65	None	replace
237	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  values);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  values);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  values);	  Option    option    =    options.getOption(ARGUMENT_EXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	55	None	replace
238	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  /  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  /  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.get(argumentCount  /  1);	  String    allValuesQuoted    =    values.get(argumentCount    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	51	None	replace
239	[BUG]  [BUGGY]  Arguments  argument  =  option.getArgumentCount();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Arguments  argument  =  option.getArgumentCount();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  argument  =  option.getArgumentCount();	  Arguments    argument    =    options.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
240	[BUG]  [BUGGY]  Integer  argumentCount  =  values.get(argumentCount).intValue();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  values.get(argumentCount).intValue();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  values.get(argumentCount).intValue();	  Integer    argumentCount    =    arguments.get(argumentCount).intValue();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	6	None	replace
241	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  1,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  1,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  1,  allValuesQuoted);	  commandLine.addValue(argumentCount,    arguments,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	31	None	replace
242	[BUG]  [BUGGY]  Validator  validator  =  resources.get(argumentCount);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  resources.get(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  resources.get(argumentCount);	  Validator    validator    =    arguments.get(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
243	[BUG]  [BUGGY]  Validator  validator  =  options.get(argumentCount);  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  options.get(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  options.get(argumentCount);	  Validator    validator    =    arguments.get(argumentCount);    	non-compiled	[CE]  cannot  find  symbol  options	14	None	replace
244	[BUG]  [BUGGY]  Option  option  =  option.getOption(ARGUMENT_EXPECTED_VALUE,  argumentCount);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  option.getOption(ARGUMENT_EXPECTED_VALUE,  argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  option.getOption(ARGUMENT_EXPECTED_VALUE,  argumentCount);	  Option    option    =    option.getOption(ARGUMENT_EXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	82	None	replace
245	[BUG]  [BUGGY]  Option  option  =  option.getOption(ARGUMENT_EXPECTED_VALUE,  values);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  option.getOption(ARGUMENT_EXPECTED_VALUE,  values);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  option.getOption(ARGUMENT_EXPECTED_VALUE,  values);	  Option    option    =    option.getOption(ARGUMENT_EXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	82	None	replace
246	[BUG]  [BUGGY]  commandLine.addValue(ARGUMENT_INITIAL_SEPARATOR,  DEFAULT_INITIAL_SEPARATOR);  [CE]  cannot  find  symbol  ARGUMENT_INITIAL_SEPARATOR  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(ARGUMENT_INITIAL_SEPARATOR,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(ARGUMENT_INITIAL_SEPARATOR,  DEFAULT_INITIAL_SEPARATOR);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  ARGUMENT_INITIAL_SEPARATOR	63	None	replace
247	[BUG]  [BUGGY]  commandLine.addValue(ARGUMENT_NUMBER,  DEFAULT_INITIAL_SEPARATOR);  [CE]  cannot  find  symbol  ARGUMENT_NUMBER  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(ARGUMENT_NUMBER,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(ARGUMENT_NUMBER,  DEFAULT_INITIAL_SEPARATOR);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  ARGUMENT_NUMBER	63	None	replace
248	[BUG]  [BUGGY]  option.addValue(values.get(argumentCount  -  1));  [CE]  cannot  find  symbol  values  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  option.addValue(values.get(argumentCount  -  1));  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	option.addValue(values.get(argumentCount  -  1));	  option.addValue(values.get(id));    	non-compiled	[CE]  cannot  find  symbol  values	80	None	replace
249	[BUG]  [BUGGY]  Option  option  =  options.get(argumentCount);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.get(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.get(argumentCount);	  option.addValue(values.get(i));    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	86	None	replace
250	[BUG]  [BUGGY]  Integer  argumentCount  =  resources.get(argumentCount  -  1);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  resources.get(argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  resources.get(argumentCount  -  1);	  Integer    argumentCount    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	7	None	replace
251	[BUG]  [BUGGY]  commandLine  =  options.getCommandLine();  commands.addValue(option,  arguments);  [CE]  cannot  find  symbol  options  [FE]              ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine  =  options.getCommandLine();  commands.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine  =  options.getCommandLine();  commands.addValue(option,  arguments);	  commandLine.addValue(option,    arguments);    CommandLine    commandLine    =    options.getCommandLine();    commands.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol  options	20	None	replace
252	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  valueValues.allValues);  [CE]  cannot  find  symbol  valueValues  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  valueValues.allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  valueValues.allValues);	  commandLine.setValue(argumentCount,    values.allValues);    	non-compiled	[CE]  cannot  find  symbol  valueValues	41	None	replace
253	[BUG]  [BUGGY]  commandLine.addValue(ARRAY,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [CE]  cannot  find  symbol  ARRAY  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(ARRAY,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(ARRAY,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);	  commandLine.addValue(DEFAULT_CONSUME_REMAINING,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  ARRAY	45	None	replace
254	[BUG]  [BUGGY]  commandLine.addValue(ARGUMENTS,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [CE]  cannot  find  symbol  ARGUMENTS  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(ARGUMENTS,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(ARGUMENTS,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);	  commandLine.addValue(DEFAULT_CONSUME_REMAINING,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  ARGUMENTS	45	None	replace
255	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE,  values.nextToken());  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE,  values.nextToken());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE,  values.nextToken());	  Option    option    =    options.getOption(ARGUMENT_UNKNOWN_EXPECTED_VALUE);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	85	None	replace
256	[BUG]  [BUGGY]  commandLine.addArg(argumentCount,  values.nextToken());  [CE]  cannot  find  symbol  values  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addArg(argumentCount,  values.nextToken());  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addArg(argumentCount,  values.nextToken());	  commandLine.addArg(argumentCount,    option);    	non-compiled	[CE]  cannot  find  symbol  values	74	None	replace
257	[BUG]  [BUGGY]  commandLine.addArg(argumentCount,  arguments[option.getArgumentCount()  ]);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addArg(argumentCount,  arguments[option.getArgumentCount()  ]);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addArg(argumentCount,  arguments[option.getArgumentCount()  ]);	  commandLine.addArg(argumentCount,    option);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
258	[BUG]  [BUGGY]  commandLine.addArg(argumentCount,  1);  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addArg(argumentCount,  1);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addArg(argumentCount,  1);	  commandLine.addArg(argumentCount,    option);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
259	[BUG]  [BUGGY]  Validator  validator  =  options.get(argumentCount  -  1);  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  options.get(argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  options.get(argumentCount  -  1);	  Validator    validator    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  cannot  find  symbol  options	15	None	replace
260	[BUG]  [BUGGY]  Validator  validator  =  values.get(argumentCount  -  1);  [CE]  cannot  find  symbol  values  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  values.get(argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  values.get(argumentCount  -  1);	  Validator    validator    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  cannot  find  symbol  values	15	None	replace
261	[BUG]  [BUGGY]  Option  commandLine  =  option.getArgument();  [CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  commandLine  =  option.getArgument();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  commandLine  =  option.getArgument();	  Option    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	81	None	replace
262	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  arguments.size());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  arguments.size());  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  arguments.size());	  commandLine.setValue(argumentCount,    arguments);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
263	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  1);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  1);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  1);	  commandLine.setValue(argumentCount,    arguments);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
264	[BUG]  [BUGGY]  commandLine.addValue(values,  valueCount);  [CE]  cannot  find  symbol  values  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(values,  valueCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(values,  valueCount);	  commandLine.addValue(argument,    valueCount);    	non-compiled	[CE]  cannot  find  symbol  values	72	None	replace
265	[BUG]  [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  allValues,  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  allValues,  id);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  allValues,  id);	  commandLine.addValue(arguments,    allValues,    id);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	67	None	replace
266	[BUG]  [BUGGY]  commandLine.addValue(arguments,  arguments,  id);  [CE]  id  has  private  access  in  OptionImpl  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  arguments,  id);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  arguments,  id);	  commandLine.addValue(arguments,    allValues,    id);    	non-compiled	[CE]  id  has  private  access  in  OptionImpl	67	None	replace
267	[BUG]  [BUGGY]  Integer  argumentCount  =  values.get(argumentCount).toString();  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  values.get(argumentCount).toString();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  values.get(argumentCount).toString();	  Integer    argumentCount    =    arguments.get(argumentCount).toString();    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	23	None	replace
268	[BUG]  [BUGGY]  commandLine.addValue(arguments,  argumentCount);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  argumentCount);	  commandLine.addValue(values,    argumentCount);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	11	None	replace
269	[BUG]  [BUGGY]  commandLine.addValue(arguments,  argumentCount,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  argumentCount,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  argumentCount,  allValues);	  commandLine.addValue(arguments,    allValues,    argumentCount);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	4	None	replace
270	[BUG]  [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  allValues,  argumentCount);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  allValues,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  allValues,  argumentCount);	  commandLine.addValue(arguments,    allValues,    argumentCount);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	4	None	replace
271	[BUG]  [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  CommandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  [CE]  cannot  find  symbol  CommandLine  [FE]    ClassCastException    [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  CommandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,        arguments);        commandLine.addValue(option,    arguments);    CommandLine.addValue(option,  arguments);  commandLine.addValue(option,  arguments);	  	non-compiled	[CE]  cannot  find  symbol  CommandLine	16	None	add
272	[BUG]  [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  CommandLine  commandLine  =  options.getCommandLine();  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  CommandLine  commandLine  =  options.getCommandLine();  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,        arguments);        commandLine.addValue(option,    arguments);    CommandLine  commandLine  =  options.getCommandLine();	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
273	[BUG]  [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  CommandLine  commandLine  =  option.getCommandLine();  commandLine.addValue(option,  arguments);  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(option,    arguments);    commandLine.addValue(option,  arguments);  CommandLine  commandLine  =  option.getCommandLine();  commandLine.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(option,        arguments);        commandLine.addValue(option,    arguments);    CommandLine  commandLine  =  option.getCommandLine();  commandLine.addValue(option,  arguments);	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
274	[BUG]  [BUGGY]  commandLine.addValue(argument,  argument);  [CE]  cannot  find  symbol  argument  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argument,  argument);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  argument);	  commandLine.addValue(values,    argument);    	non-compiled	[CE]  cannot  find  symbol  argument	75	None	replace
275	[BUG]  [BUGGY]  commandLine.addValue(argument,  value);  [CE]  cannot  find  symbol  argument  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argument,  value);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  value);	  commandLine.addValue(values,    argument);    	non-compiled	[CE]  cannot  find  symbol  argument	75	None	replace
276	[BUG]  [BUGGY]  Integer  argumentCount  =  values.get(argumentCount);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  values.get(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  values.get(argumentCount);	  Integer    argumentCount    =    arguments.get(argumentCount);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	5	None	replace
277	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  1,  arguments.size()  -  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  1,  arguments.size()  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.get(argumentCount  -  1,  arguments.size()  -  1);	  String    allValuesQuoted    =    values.get(argumentCount    -    1    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	50	None	replace
278	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  1,  arguments.nextToken());  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  -  1,  arguments.nextToken());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.get(argumentCount  -  1,  arguments.nextToken());	  String    allValuesQuoted    =    values.get(argumentCount    -    1    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	50	None	replace
279	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  0,  values.values());  [CE]  cannot  find  symbol  values  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  0,  values.values());  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  0,  values.values());	  commandLine.addValue(argumentCount,    0,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	32	None	replace
280	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  0,  values.size()  -  1);  [CE]  cannot  find  symbol  values  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  0,  values.size()  -  1);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  0,  values.size()  -  1);	  commandLine.addValue(argumentCount,    0,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	32	None	replace
281	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  0,  values.allValues);  [CE]  cannot  find  symbol  values  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  0,  values.allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  0,  values.allValues);	  commandLine.addValue(argumentCount,    0,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	32	None	replace
282	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  values.nextToken(),  allValuesQuoted);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  values.nextToken(),  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  values.nextToken(),  allValuesQuoted);	  commandLine.addValue(argumentCount,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  values	43	None	replace
283	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  values.allValuesQuoted);  [CE]  cannot  find  symbol  values  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  values.allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  values.allValuesQuoted);	  commandLine.addValue(argumentCount,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  values	43	None	replace
284	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  1);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  1);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  1);	  commandLine.addValue(argumentCount,    values);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	9	None	replace
285	[BUG]  [BUGGY]  Validator  validator  =  arguments.getValue(ARGUMENT_Count);  [CE]  cannot  find  symbol  ARGUMENT_Count  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  arguments.getValue(ARGUMENT_Count);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  arguments.getValue(ARGUMENT_Count);	  Validator    validator    =    arguments.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol  ARGUMENT_Count	36	None	replace
286	[BUG]  [BUGGY]  Validator  validator  =  arguments.getValue(argumentCount,  option);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  arguments.getValue(argumentCount,  option);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  arguments.getValue(argumentCount,  option);	  Validator    validator    =    arguments.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
287	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.get(0);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  values.get(0);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.get(0);	  String    allValuesQuoted    =    arguments.get(0);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	22	None	replace
288	[BUG]  [BUGGY]  commandLine.addValue(arguments,  values,  allValues,  argumentCount);  [CE]  cannot  find  symbol  values  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  values,  allValues,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  values,  allValues,  argumentCount);	  commandLine.addValue(arguments,    allValues,    argumentCount);    	non-compiled	[CE]  cannot  find  symbol  values	4	None	replace
289	[BUG]  [BUGGY]  commandLine.addValue(arguments,  options,  option);  [CE]  cannot  find  symbol  options  [FE]        ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  options,  option);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  options,  option);	  commandLine.addValue(arguments,    option);    	non-compiled	[CE]  cannot  find  symbol  options	59	None	replace
290	[BUG]  [BUGGY]  commandLine.addValue(arguments,  option,  value);  [CE]  cannot  find  symbol  value  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  option,  value);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  option,  value);	  commandLine.addValue(arguments,    option);    	non-compiled	[CE]  cannot  find  symbol  value	59	None	replace
291	[BUG]  [BUGGY]  Option  option  =  options.getOptionalValue(argumentCount);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOptionalValue(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOptionalValue(argumentCount);	  Option    argument    =    options.getOptionalValue(argumentCount);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	12	None	replace
292	[BUG]  [BUGGY]  Option  option  =  resources.getOptionalValue(argumentCount);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  resources.getOptionalValue(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  resources.getOptionalValue(argumentCount);	  Option    argument    =    options.getOptionalValue(argumentCount);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	12	None	replace
293	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  arguments,  values,  allValuesQuoted);  [CE]  cannot  find  symbol  values  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  arguments,  values,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  arguments,  values,  allValuesQuoted);	  commandLine.addValue(argumentCount,    arguments,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  values	31	None	replace
294	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  values,  allValuesQuoted);  [CE]  cannot  find  symbol  values  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  values,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  values,  allValuesQuoted);	  commandLine.addValue(argumentCount,    arguments,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  values	31	None	replace
295	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  values,  allValuesQuoted);  [CE]  cannot  find  symbol  values  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  values,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  values,  allValuesQuoted);	  commandLine.addValue(argumentCount,    arguments,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  values	31	None	replace
296	[BUG]  [BUGGY]  commandLine  =  options.getCommandLine();  [CE]  cannot  find  symbol  options  [FE]        ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine  =  options.getCommandLine();  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine  =  options.getCommandLine();	  commandLine.addValue(option,    arguments);    CommandLine    commandLine    =    options.getCommandLine();    	non-compiled	[CE]  cannot  find  symbol  options	68	None	replace
297	[BUG]  [BUGGY]  Integer  argumentCount  =  values.get(argumentCount  -  1);  [CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Integer  argumentCount  =  values.get(argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Integer  argumentCount  =  values.get(argumentCount  -  1);	  Integer    argumentCount    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  variable  argumentCount  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	7	None	replace
298	[BUG]  [BUGGY]  commandLine.addValue(arguments,  arguments,  allValuesQuoted,  DEFAULT_CONSUME_REMAINING);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  arguments,  allValuesQuoted,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  arguments,  allValuesQuoted,  DEFAULT_CONSUME_REMAINING);	  commandLine.addValue(arguments,    arguments,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	3	None	replace
299	[BUG]  [BUGGY]  commandLine.addValue(arguments,  arguments,  values,  allValuesQuoted);  [CE]  cannot  find  symbol  values  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  arguments,  values,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  arguments,  values,  allValuesQuoted);	  commandLine.addValue(arguments,    arguments,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  values	3	None	replace
300	[BUG]  [BUGGY]  Validator  validator  =  arguments.remove(argumentCount  -  1);  [CE]  no  suitable  method  found  for  remove(int)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  arguments.remove(argumentCount  -  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  arguments.remove(argumentCount  -  1);	  Validator    validator    =    arguments.get(argumentCount    -    1);    	non-compiled	[CE]  no  suitable  method  found  for  remove(int)	15	None	replace
301	[BUG]  [BUGGY]  commandLine.addValue(value,  option);  [CE]  cannot  find  symbol  value  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(value,  option);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(value,  option);	  commandLine.addValue(argument,    option);    	non-compiled	[CE]  cannot  find  symbol  value	34	None	replace
302	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  2);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  2);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  2);	  commandLine.addValue(argumentCount,    values);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	9	None	replace
303	[BUG]  [BUGGY]  commandLine.addValue(value,  argumentCount);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(value,  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(value,  argumentCount);	  commandLine.addValue(argument,    valueCount);    	non-compiled	[CE]  cannot  find  symbol  value	72	None	replace
304	[BUG]  [BUGGY]  commandLine.addValue(argument,  values.nextToken());  [CE]  cannot  find  symbol  argument  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argument,  values.nextToken());  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  values.nextToken());	  commandLine.addValue(argument,    valueCount);    	non-compiled	[CE]  cannot  find  symbol  argument	72	None	replace
305	[BUG]  [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.nextToken());  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.nextToken());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  arguments.get(argumentCount  -  1,  arguments.nextToken());	  String    allValuesQuoted    =    arguments.get(argumentCount    -    1    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	47	None	replace
306	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  values.nextToken(),  option);  [CE]  cannot  find  symbol  values  [FE]        ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  values.nextToken(),  option);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  values.nextToken(),  option);	  commandLine.addValue(argumentCount,    option);    	non-compiled	[CE]  cannot  find  symbol  values	33	None	replace
307	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  values.nextToken());  [CE]  cannot  find  symbol  values  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  values.nextToken());  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  values.nextToken());	  commandLine.addValue(argumentCount,    option);    	non-compiled	[CE]  cannot  find  symbol  values	33	None	replace
308	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  values.size(),  allValuesQuoted);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  values.size(),  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  values.size(),  allValuesQuoted);	  commandLine.addValue(argumentCount,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  values	43	None	replace
309	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  values.valuesQuoted);  [CE]  cannot  find  symbol  values  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  values.valuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  values.valuesQuoted);	  commandLine.addValue(argumentCount,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  values	43	None	replace
310	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  values.size()  -  1);  [CE]  cannot  find  symbol  values  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  values.size()  -  1);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  values.size()  -  1);	  commandLine.addValue(argumentCount,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  values	43	None	replace
311	[BUG]  [BUGGY]  commandLine  =  getCommandLine(argumentCount);  commandLine.addValue(option,  arguments);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine  =  getCommandLine(argumentCount);  commandLine.addValue(option,  arguments);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine  =  getCommandLine(argumentCount);  commandLine.addValue(option,  arguments);	  commandLine.addValue(option,    arguments);    CommandLine    commandLine    =    getCommandLine(option);    commandLine.addValue(option,    arguments);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
312	[BUG]  [BUGGY]  Option  option  =  options.getOption(argumentCount).toString();  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(argumentCount).toString();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(argumentCount).toString();	  option.addValue(values.get(id).toString());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	83	None	replace
313	[BUG]  [BUGGY]  Arguments  arguments  =  options.getArgumentCount()  /  1;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Arguments  arguments  =  options.getArgumentCount()  /  1;  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  arguments  =  options.getArgumentCount()  /  1;	  Arguments    arguments    =    options.getArgumentCount()    -    1;    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
314	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  values.nextToken(),  argumentCount);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  values.nextToken(),  argumentCount);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  values.nextToken(),  argumentCount);	  commandLine.addValue(argumentCount,    values.nextToken(),    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	65	None	replace
315	[BUG]  [BUGGY]  Option  commandLine  =  option.processValues(argumentCount,  arguments);  [CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  commandLine  =  option.processValues(argumentCount,  arguments);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  commandLine  =  option.processValues(argumentCount,  arguments);	  Option    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	81	None	replace
316	[BUG]  [BUGGY]  Option  commandLine  =  option.getArgumentCount();  [CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  commandLine  =  option.getArgumentCount();  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  commandLine  =  option.getArgumentCount();	  Option    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  variable  commandLine  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	81	None	replace
317	[BUG]  [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  values,  allValuesQuoted);  [CE]  cannot  find  symbol  values  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  values,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  DEFAULT_CONSUME_REMAINING,  values,  allValuesQuoted);	  commandLine.addValue(arguments,    DEFAULT_CONSUME_REMAINING,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	66	None	replace
318	[BUG]  [BUGGY]  commandLine.addValue(arguments,  arguments,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  arguments,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  arguments,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);	  commandLine.addValue(arguments,    DEFAULT_CONSUME_REMAINING,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	66	None	replace
319	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  values,  allValuesQuoted);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  values,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  values,  allValuesQuoted);	  commandLine.setValue(argumentCount,    values,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	53	None	replace
320	[BUG]  [BUGGY]  commandLine.addValue(DEFAULT_CONSUME_REMAINING,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(DEFAULT_CONSUME_REMAINING,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(DEFAULT_CONSUME_REMAINING,  DEFAULT_INITIAL_SEPARATOR,  allValuesQuoted);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR,    allValuesQuoted);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	46	None	replace
321	[BUG]  [BUGGY]  commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR,  values);  [CE]  cannot  find  symbol  argument  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR,  values);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR,  values);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  argument	46	None	replace
322	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  2);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  2);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  2);	  commandLine.setValue(argumentCount,    arguments);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
323	[BUG]  [BUGGY]  commandLine.addValue(defaultValues,  allValues);  [CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(defaultValues,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(defaultValues,  allValues);	  commandLine.addValue(values,    allValues);    	non-compiled	[CE]  method  addValue  in  interface  WriteableCommandLine  cannot  be  applied  to  given  types;	13	None	replace
324	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  0,  values.size());  [CE]  cannot  find  symbol  values  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  0,  values.size());  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  0,  values.size());	  commandLine.addValue(argumentCount,    0,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	32	None	replace
325	[BUG]  [BUGGY]  commandLine.setValue(argumentCount,  options.values());  [CE]  cannot  find  symbol  options  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.setValue(argumentCount,  options.values());  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.setValue(argumentCount,  options.values());	  commandLine.setValue(argumentCount,    values.values());    	non-compiled	[CE]  cannot  find  symbol  options	42	None	replace
326	[BUG]  [BUGGY]  commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR,  NUL);  [CE]  cannot  find  symbol  argument  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR,  NUL);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argument,  DEFAULT_INITIAL_SEPARATOR,  NUL);	  commandLine.addValue(argument,    DEFAULT_INITIAL_SEPARATOR);    	non-compiled	[CE]  cannot  find  symbol  argument	63	None	replace
327	[BUG]  [BUGGY]  Arguments  arguments  =  resources.getArgumentCount(argumentCount);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Arguments  arguments  =  resources.getArgumentCount(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Arguments  arguments  =  resources.getArgumentCount(argumentCount);	  Arguments    arguments    =    resources.getArgumentCount();    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
328	[BUG]  [BUGGY]  commandLine.addValue(arguments,  argument);  [CE]  cannot  find  symbol  argument  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  argument);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  argument);	  commandLine.addValue(values,    argument);    	non-compiled	[CE]  cannot  find  symbol  argument	75	None	replace
329	[BUG]  [BUGGY]  commandLine.addValue(value);  [CE]  cannot  find  symbol  value  [FE]        ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(value);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(value);	  commandLine.addValue(argument);    	non-compiled	[CE]  cannot  find  symbol  value	73	None	replace
330	[BUG]  [BUGGY]  commandLine.addArg(argumentCount,  value);  [CE]  cannot  find  symbol  value  [FE]          ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addArg(argumentCount,  value);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addArg(argumentCount,  value);	  commandLine.addArg(argumentCount,    option);    	non-compiled	[CE]  cannot  find  symbol  value	74	None	replace
331	[BUG]  [BUGGY]  commandLine.addArg(argumentCount,  arguments.size());  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addArg(argumentCount,  arguments.size());  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addArg(argumentCount,  arguments.size());	  commandLine.addArg(argumentCount,    option);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
332	[BUG]  [BUGGY]  commandLine.addArg(argumentCount,  values);  [CE]  cannot  find  symbol  values  [FE]              ClassCastException      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addArg(argumentCount,  values);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addArg(argumentCount,  values);	  commandLine.addArg(argumentCount,    option);    	non-compiled	[CE]  cannot  find  symbol  values	74	None	replace
333	[BUG]  [BUGGY]  Validator  validator  =  arguments.remove(argumentCount);  [CE]  no  suitable  method  found  for  remove(int)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  arguments.remove(argumentCount);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  arguments.remove(argumentCount);	  Validator    validator    =    arguments.get(argumentCount);    	non-compiled	[CE]  no  suitable  method  found  for  remove(int)	14	None	replace
334	[BUG]  [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  *  1);  [CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  String  allValuesQuoted  =  values.get(argumentCount  *  1);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	String  allValuesQuoted  =  values.get(argumentCount  *  1);	  String    allValuesQuoted    =    values.get(argumentCount    +    1);    	non-compiled	[CE]  variable  allValuesQuoted  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	51	None	replace
335	[BUG]  [BUGGY]  commandLine.addValue(arguments,  values,  allValues,  id);  [CE]  cannot  find  symbol  values  [FE]                    ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  values,  allValues,  id);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  values,  allValues,  id);	  commandLine.addValue(arguments,    allValues,    id);    	non-compiled	[CE]  cannot  find  symbol  values	67	None	replace
336	[BUG]  [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken(),  options);  [CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)  [FE]                ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken(),  options);  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Option  option  =  options.getOption(ARGUMENT_EXPECTED_VALUE,  arguments.nextToken(),  options);	  Option    option    =    options.getOption(ARGUMENT_EXPECTED_VALUE,    arguments.nextToken());    	non-compiled	[CE]  variable  option  is  already  defined  in  method  processValues(WriteableCommandLine,ListIterator,Option)	84	None	replace
337	[BUG]  [BUGGY]  commandLine.addValue(arguments,  arguments,  values,  allValues);  [CE]  cannot  find  symbol  values  [FE]                  ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(arguments,  arguments,  values,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(arguments,  arguments,  values,  allValues);	  commandLine.addValue(arguments,    arguments,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	1	None	replace
338	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  arguments,  DEFAULT_INITIAL_SEPARATOR));  [CE]  cannot  find  symbol  sourceName  [FE]                        ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Context.report(JSError.make(sourceName,  arguments,  DEFAULT_INITIAL_SEPARATOR));  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Context.report(JSError.make(sourceName,  arguments,  DEFAULT_INITIAL_SEPARATOR));	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  sourceName	8	None	replace
339	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  arguments,  DEFAULT_CONSUME_REMAINING,  argumentCount));  [CE]  cannot  find  symbol  sourceName  [FE]                          ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Context.report(JSError.make(sourceName,  arguments,  DEFAULT_CONSUME_REMAINING,  argumentCount));  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Context.report(JSError.make(sourceName,  arguments,  DEFAULT_CONSUME_REMAINING,  argumentCount));	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  sourceName	8	None	replace
340	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  arguments,  DEFAULT_CONSUME_REMAINING));  [CE]  cannot  find  symbol  sourceName  [FE]                            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Context.report(JSError.make(sourceName,  arguments,  DEFAULT_CONSUME_REMAINING));  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Context.report(JSError.make(sourceName,  arguments,  DEFAULT_CONSUME_REMAINING));	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  sourceName	8	None	replace
341	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(argumentCount,  values.nextToken());  [CE]  cannot  find  symbol  values  [FE]                      ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  Validator  validator  =  resources.getValue(argumentCount,  values.nextToken());  [BUGGY]      commandLine.addValue(option,  allValues);  }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	Validator  validator  =  resources.getValue(argumentCount,  values.nextToken());	  Validator    validator    =    resources.getValue(argumentCount);    	non-compiled	[CE]  cannot  find  symbol  values	37	None	replace
342	[BUG]  [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  values,  allValues);  [CE]  cannot  find  symbol  values  [FE]            ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  values,  allValues);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(argumentCount,  DEFAULT_CONSUME_REMAINING,  values,  allValues);	  commandLine.addValue(argumentCount,    arguments,    allValues);    	non-compiled	[CE]  cannot  find  symbol  values	29	None	replace
343	[BUG]  [BUGGY]  commandLine.addValue(value,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [CE]  cannot  find  symbol  value  [FE]              ComparisonFailure      [CONTEXT]      }  if  (values.hasMoreTokens())  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  values.nextToken());  }  }  else  {  ++argumentCount;      [BUGGY]  commandLine.addValue(value,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);  [BUGGY]      }  [CLASS]  ArgumentImpl  [METHOD]  processValues  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  Option  option  [VARIABLES]  StringTokenizer  values  boolean  subsequentSplit  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  consumeRemaining  description  name  token  ListIterator  arguments  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	commandLine.addValue(value,  DEFAULT_CONSUME_REMAINING,  allValuesQuoted);	  commandLine.addValue(argument,    DEFAULT_CONSUME_REMAINING,    allValuesQuoted);    	non-compiled	[CE]  cannot  find  symbol  value	44	None	replace
