bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(values,  minimum);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validateValue(values,  minimum);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validateValue(values,  minimum);	  Validator    validator    =    option.validateValue(values);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(values,  defaultValues);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validateValue(values,  defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validateValue(values,  defaultValues);	  Validator    validator    =    option.validateValue(values);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(defaultValues);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validateValue(defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validateValue(defaultValues);	  Validator    validator    =    option.validateValue(values);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  Validator  validator  =  resources.get(commandLine,  defaultValues);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.get(commandLine,  defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.get(commandLine,  defaultValues);	  Validator    validator    =    resources.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
5	[BUG]  [BUGGY]  Validator  validator  =  resources.get(commandLine,  option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.get(commandLine,  option);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.get(commandLine,  option);	  Validator    validator    =    resources.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  Validator  validator  =  resources.get(commandLine,  0);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.get(commandLine,  0);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.get(commandLine,  0);	  Validator    validator    =    resources.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  Validator  validator  =  resources.get(commandLine,  false);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.get(commandLine,  false);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.get(commandLine,  false);	  Validator    validator    =    resources.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  Validator  validator  =  getValuesImpl(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValuesImpl(option);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValuesImpl(option);	  Validator    validator    =    getValuesImpl();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
9	[BUG]  [BUGGY]  Validator  validator  =  getValuesImpl(commandLine);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValuesImpl(commandLine);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValuesImpl(commandLine);	  Validator    validator    =    getValuesImpl();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
10	[BUG]  [BUGGY]  Validator  validator  =  getValuesImpl().validate(commandLine);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValuesImpl().validate(commandLine);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValuesImpl().validate(commandLine);	  Validator    validator    =    getValuesImpl();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
11	[BUG]  [BUGGY]  Validator  validator  =  commandline.validate(option,  values);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandline.validate(option,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandline.validate(option,  values);	  Validator    validator    =    commandline.validate(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
12	[BUG]  [BUGGY]  Validator  validator  =  commandLine.validate(defaultValues);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.validate(defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.validate(defaultValues);	  Validator    validator    =    commandline.validate(option);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(option,  values);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.getValue(option,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.getValue(option,  values);	  Validator    validator    =    resources.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
14	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(option,  arguments);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.getValue(option,  arguments);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.getValue(option,  arguments);	  Validator    validator    =    resources.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
15	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(option,  valueDefaults);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.getValue(option,  valueDefaults);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.getValue(option,  valueDefaults);	  Validator    validator    =    resources.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
16	[BUG]  [BUGGY]  Validator  validator  =  options.validate(commandLine);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.validate(commandLine);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.validate(commandLine);	  Validator    validator    =    options.validate();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  Validator  validator  =  options.validate(option);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.validate(option);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.validate(option);	  Validator    validator    =    options.validate();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  Validator  validator  =  options.validateValue(option);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.validateValue(option);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.validateValue(option);	  Validator    validator    =    options.validate();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  id);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  id);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  minimum,  id);	  Validator    validator    =    option.validate(values,    id);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
20	[BUG]  [BUGGY]  Validator  validator  =  option.validate(id,  values);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(id,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(id,  values);	  Validator    validator    =    option.validate(values,    id);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
21	[BUG]  [BUGGY]  Validator  validator  =  commandLine.get(command);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.get(command);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.get(command);	  Validator    validator    =    commands.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValues();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.getValues();  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.getValues();	  Validator    validator    =    commands.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  Validator  validator  =  commandLine.get(commands);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.get(commands);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.get(commands);	  Validator    validator    =    commands.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
24	[BUG]  [BUGGY]  Validator  validator  =  commands.get(commandLine,  option);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commands.get(commandLine,  option);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commands.get(commandLine,  option);	  Validator    validator    =    commands.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
25	[BUG]  [BUGGY]  if(values.size()  <  maximal)  {  [CE]  cannot  find  symbol  maximal  [FE]        AssertionFailedError      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  if(values.size()  <  maximal)  {  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if(values.size()  <  maximal)  {	  if(values.size()    <    argumentCount)    {    	non-compiled	[CE]  cannot  find  symbol  maximal	45	None	replace
26	[BUG]  [BUGGY]  Validator  validator  =  getValue(commandLine,  values);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(commandLine,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(commandLine,  values);	  Validator    validator    =    getValue(option,    values);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
27	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  values,  0);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  values,  0);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  values,  0);	  Validator    validator    =    getValue(option,    values);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
28	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  values,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  values,  null);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  values,  null);	  Validator    validator    =    getValue(option,    values);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
29	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  maximum);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  maximum);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  maximum);	  Validator    validator    =    option.validate(values,    valueCount);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
30	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  argumentsCount);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  argumentsCount);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  argumentsCount);	  Validator    validator    =    option.validate(values,    valueCount);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
31	[BUG]  [BUGGY]  Validator  validator  =  getValue(commandLine,  options);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(commandLine,  options);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(commandLine,  options);	  Validator    validator    =    getValue(option,    options);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
32	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  arguments);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  arguments);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  arguments);	  Validator    validator    =    getValue(option,    options);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
33	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValues(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.getValues(option);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.getValues(option);	  Validator    validator    =    commandLine.get(option);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
34	[BUG]  [BUGGY]  Validator  validator  =  commandLine.get(option  +  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.get(option  +  1);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.get(option  +  1);	  Validator    validator    =    commandLine.get(option);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
35	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  argumentCount);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  argumentCount);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  minimum,  argumentCount);	  Validator    validator    =    option.validate(values,    minimum);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
36	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  arguments);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  arguments);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  minimum,  arguments);	  Validator    validator    =    option.validate(values,    minimum);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
37	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  maximum);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  maximum);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  minimum,  maximum);	  Validator    validator    =    option.validate(values,    minimum);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
38	[BUG]  [BUGGY]  Validator  validator  =  commands.getValue(option,  values);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commands.getValue(option,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commands.getValue(option,  values);	  Validator    validator    =    commands.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
39	[BUG]  [BUGGY]  Validator  validator  =  getValue(commandLine,  value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(commandLine,  value);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(commandLine,  value);	  Validator    validator    =    getValue(option,    value);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
40	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  value,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  value,  null);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  value,  null);	  Validator    validator    =    getValue(option,    value);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
41	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  value,  values.size());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  value,  values.size());  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  value,  values.size());	  Validator    validator    =    getValue(option,    value);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
42	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  resources,  0);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  resources,  0);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  resources,  0);	  Validator    validator    =    getValue(option,    resources);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
43	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  resources,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  resources,  null);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  resources,  null);	  Validator    validator    =    getValue(option,    resources);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
44	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(resources);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.getValue(resources);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.getValue(resources);	  Validator    validator    =    resources.getValue(commandLine);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
45	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(commandLine,  option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.getValue(commandLine,  option);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.getValue(commandLine,  option);	  Validator    validator    =    resources.getValue(commandLine);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
46	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  options);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  options);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  options);	  Validator    validator    =    option.validate(values,    option);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
47	[BUG]  [BUGGY]  Validator  validator  =  commandLine.validate(option,  values);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.validate(option,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.validate(option,  values);	  Validator    validator    =    commandLine.validate(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
48	[BUG]  [BUGGY]  Validator  validator  =  commandLine.validate(option,  true);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.validate(option,  true);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.validate(option,  true);	  Validator    validator    =    commandLine.validate(option);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
49	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(option,  values);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.getValue(option,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.getValue(option,  values);	  Validator    validator    =    commandLine.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
50	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(option,  DEFAULT_INITIAL_SEPARATOR);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.getValue(option,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.getValue(option,  DEFAULT_INITIAL_SEPARATOR);	  Validator    validator    =    commandLine.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
51	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(option,  false);  [CE]  illegal  start  of  type  [FE]                            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.getValue(option,  false);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.getValue(option,  false);	  Validator    validator    =    commandLine.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
52	[BUG]  [BUGGY]  Validator  validator  =  getValues().validate(commandLine,  values);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValues().validate(commandLine,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues().validate(commandLine,  values);	  Validator    validator    =    getValues().values;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
53	[BUG]  [BUGGY]  Validator  validator  =  getValues().defaultValues;  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValues().defaultValues;  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues().defaultValues;	  Validator    validator    =    getValues().values;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
54	[BUG]  [BUGGY]  if  (values.size()  <  minimum)  {  if  (values.size()  <  minimum)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  if  (values.size()  <  minimum)  {  if  (values.size()  <  minimum)  {  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if    (values.size()    <    minimum)    {    if  (values.size()  <  minimum)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
55	[BUG]  [BUGGY]  if  (values.size()  <  minimum)  {  If  (values.size()  <  minimum)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  if  (values.size()  <  minimum)  {  If  (values.size()  <  minimum)  {  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if    (values.size()    <    minimum)    {    If  (values.size()  <  minimum)  {	  	non-compiled	[CE]  ';'  expected	11	None	add
56	[BUG]  [BUGGY]  if  (values.size()  <  minimum)  {  if  (values.size()  <  minimal)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  if  (values.size()  <  minimum)  {  if  (values.size()  <  minimal)  {  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if    (values.size()    <    minimum)    {    if  (values.size()  <  minimal)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
57	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(option,  values);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.getValue(option,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.getValue(option,  values);	  Validator    validator    =    option.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
58	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(commandLine);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.getValue(commandLine);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.getValue(commandLine);	  Validator    validator    =    option.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
59	[BUG]  [BUGGY]  Validator  validator  =  getValues(option,  values);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValues(option,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues(option,  values);	  Validator    validator    =    getValues(option);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
60	[BUG]  [BUGGY]  Validator  validator  =  getValues(commandLine);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValues(commandLine);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues(commandLine);	  Validator    validator    =    getValues(option);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
61	[BUG]  [BUGGY]  Validator  validator  =  getValues(option,  values.size());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValues(option,  values.size());  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues(option,  values.size());	  Validator    validator    =    getValues(option);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
62	[BUG]  [BUGGY]  Validator  validator  =  getValue(commandLine,  defaultValues);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(commandLine,  defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(commandLine,  defaultValues);	  Validator    validator    =    getValue(option,    defaultValues);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
63	[BUG]  [BUGGY]  Validator  validator  =  getValue(defaultValues,  option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(defaultValues,  option);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(defaultValues,  option);	  Validator    validator    =    getValue(option,    defaultValues);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
64	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  valueDefaults);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  valueDefaults);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  valueDefaults);	  Validator    validator    =    getValue(option,    defaultValues);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
65	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(commandLine);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.getValue(commandLine);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.getValue(commandLine);	  Validator    validator    =    commands.getValue(commandLine);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
66	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(command);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.getValue(command);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.getValue(command);	  Validator    validator    =    commands.getValue(commandLine);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
67	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(commandline);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.getValue(commandline);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.getValue(commandline);	  Validator    validator    =    commands.getValue(commandLine);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
68	[BUG]  [BUGGY]  If  (values.size()  <  maximum)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  If  (values.size()  <  maximum)  {  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	If  (values.size()  <  maximum)  {	  if    (values.size()    <    maximum)    {    If    (values.size()    <    maximum)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
69	[BUG]  [BUGGY]  If  (values.size()  >  maximum)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  If  (values.size()  >  maximum)  {  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	If  (values.size()  >  maximum)  {	  if    (values.size()    <    maximum)    {    If    (values.size()    <    maximum)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
70	[BUG]  [BUGGY]  Validator  validator  =  values.getValue(option,  DEFAULT_INITIAL_SEPARATOR);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  values.getValue(option,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  values.getValue(option,  DEFAULT_INITIAL_SEPARATOR);	  Validator    validator    =    values.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
71	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(values);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.getValue(values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.getValue(values);	  Validator    validator    =    values.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
72	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  valueDefaults);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  valueDefaults);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  valueDefaults);	  Validator    validator    =    option.validate(values,    defaultValues);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
73	[BUG]  [BUGGY]  Validator  validator  =  option.validate(defaultValues,  values);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(defaultValues,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(defaultValues,  values);	  Validator    validator    =    option.validate(values,    defaultValues);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
74	[BUG]  [BUGGY]  Validator  validator  =  options.validate(values,  defaultValues);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.validate(values,  defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.validate(values,  defaultValues);	  Validator    validator    =    option.validate(values,    defaultValues);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
75	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  values.size()  -  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  values.size()  -  1);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  values.size()  -  1);	  Validator    validator    =    getValue(option,    values.size());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
76	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  values.size()  +  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  values.size()  +  1);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  values.size()  +  1);	  Validator    validator    =    getValue(option,    values.size());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
77	[BUG]  [BUGGY]  Validator  validator  =  getValue(commandLine,  values.size());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(commandLine,  values.size());  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(commandLine,  values.size());	  Validator    validator    =    getValue(option,    values.size());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
78	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  values.get(argumentCount));  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  values.get(argumentCount));  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  values.get(argumentCount));	  Validator    validator    =    getValue(option,    values.size());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
79	[BUG]  [BUGGY]  Validator  validator  =  option.validate(defaultValues,  valueDefaults);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(defaultValues,  valueDefaults);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(defaultValues,  valueDefaults);	  Validator    validator    =    option.validate(commandLine,    valueDefaults);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
80	[BUG]  [BUGGY]  Validator  validator  =  options.validate(commandLine,  valueDefaults);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.validate(commandLine,  valueDefaults);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.validate(commandLine,  valueDefaults);	  Validator    validator    =    option.validate(commandLine,    valueDefaults);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
81	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  valueDefaults,  values);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(commandLine,  valueDefaults,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  valueDefaults,  values);	  Validator    validator    =    option.validate(commandLine,    valueDefaults);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
82	[BUG]  [BUGGY]  Validator  validator  =  options.validate(defaultValues);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.validate(defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.validate(defaultValues);	  Validator    validator    =    option.validate(defaultValues);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
83	[BUG]  [BUGGY]  Validator  validator  =  options.validate(commandLine,  option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.validate(commandLine,  option);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.validate(commandLine,  option);	  Validator    validator    =    option.validate(commandLine,    options);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
84	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  resources);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(commandLine,  resources);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  resources);	  Validator    validator    =    option.validate(commandLine,    options);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
85	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  arguments);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(commandLine,  arguments);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  arguments);	  Validator    validator    =    option.validate(commandLine,    options);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
86	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(option,  DEFAULT_INITIAL_SEPARATOR);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.getValue(option,  DEFAULT_INITIAL_SEPARATOR);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.getValue(option,  DEFAULT_INITIAL_SEPARATOR);	  Validator    validator    =    options.getValue(option,    values);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
87	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(option,  values,  0);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.getValue(option,  values,  0);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.getValue(option,  values,  0);	  Validator    validator    =    options.getValue(option,    values);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
88	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(option,  values,  null);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.getValue(option,  values,  null);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.getValue(option,  values,  null);	  Validator    validator    =    options.getValue(option,    values);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
89	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(option,  arguments);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.getValue(option,  arguments);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.getValue(option,  arguments);	  Validator    validator    =    options.getValue(option,    values);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
90	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  arguments);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  arguments);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  arguments);	  Validator    validator    =    option.validate(values,    values);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
91	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  value,  values);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(commandLine,  value,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  value,  values);	  Validator    validator    =    option.validate(commandLine,    value);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
92	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  value,  defaultValues);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(commandLine,  value,  defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  value,  defaultValues);	  Validator    validator    =    option.validate(commandLine,    value);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
93	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  defaultValues);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(commandLine,  defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  defaultValues);	  Validator    validator    =    option.validate(commandLine,    value);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
94	[BUG]  [BUGGY]  Validator  validator  =  getValues().values().iterator();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValues().values().iterator();  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues().values().iterator();	  Validator    validator    =    getValues().iterator();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
95	[BUG]  [BUGGY]  Validator  validator  =  getValues().toArray(new  Validator[values.size()  ]);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValues().toArray(new  Validator[values.size()  ]);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues().toArray(new  Validator[values.size()  ]);	  Validator    validator    =    getValues().iterator();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
96	[BUG]  [BUGGY]  Validator  validator  =  getValues().iterator()  :  null;  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValues().iterator()  :  null;  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues().iterator()  :  null;	  Validator    validator    =    getValues().iterator();    	non-compiled	[CE]  ';'  expected	31	None	replace
97	[BUG]  [BUGGY]  Validator  validator  =(ValueImpl)values.get(minimum);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =(ValueImpl)values.get(minimum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =(ValueImpl)values.get(minimum);	  Validator    validator    =(ValueImpl)values.get(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
98	[BUG]  [BUGGY]  Validator  validator  =(ValueImpl)values.get(0,  values.size()  -  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =(ValueImpl)values.get(0,  values.size()  -  1);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =(ValueImpl)values.get(0,  values.size()  -  1);	  Validator    validator    =(ValueImpl)values.get(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
99	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  values,  defaultValues);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(commandLine,  values,  defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  values,  defaultValues);	  Validator    validator    =    option.validate(commandLine,    values);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
100	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  values,  null);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(commandLine,  values,  null);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  values,  null);	  Validator    validator    =    option.validate(commandLine,    values);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
101	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  values,  0);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(commandLine,  values,  0);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  values,  0);	  Validator    validator    =    option.validate(commandLine,    values);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
102	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  values,  false);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(commandLine,  values,  false);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  values,  false);	  Validator    validator    =    option.validate(commandLine,    values);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
103	[BUG]  [BUGGY]  Validator  validator  =  getValuesInvalid(option,  values);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValuesInvalid(option,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValuesInvalid(option,  values);	  Validator    validator    =    getValuesInvalid(option);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
104	[BUG]  [BUGGY]  Validator  validator  =  getValuesInvalid(option,  arguments);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValuesInvalid(option,  arguments);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValuesInvalid(option,  arguments);	  Validator    validator    =    getValuesInvalid(option);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
105	[BUG]  [BUGGY]  Validator  validator  =  getValuesInvalid(commandLine);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValuesInvalid(commandLine);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValuesInvalid(commandLine);	  Validator    validator    =    getValuesInvalid(option);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
106	[BUG]  [BUGGY]  Validator  validator  =  getValuesInvalid(option,  values.size());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValuesInvalid(option,  values.size());  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValuesInvalid(option,  values.size());	  Validator    validator    =    getValuesInvalid(option);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
107	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(commandLine,  arguments);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.getValue(commandLine,  arguments);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.getValue(commandLine,  arguments);	  Validator    validator    =    resources.getValue(commandLine);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
108	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(commandLine,  0);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.getValue(commandLine,  0);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.getValue(commandLine,  0);	  Validator    validator    =    resources.getValue(commandLine);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
109	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(commandLine,  false);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.getValue(commandLine,  false);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.getValue(commandLine,  false);	  Validator    validator    =    resources.getValue(commandLine);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
110	[BUG]  [BUGGY]  Validator  validator  =  values.getValue(option,  defaultValues);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  values.getValue(option,  defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  values.getValue(option,  defaultValues);	  Validator    validator    =    values.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
111	[BUG]  [BUGGY]  Validator  validator  =  getValues(option,  arguments);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValues(option,  arguments);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues(option,  arguments);	  Validator    validator    =    getValues(option);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
112	[BUG]  [BUGGY]  if  (values.size()  <  minimum)  {  if  (values.size()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  if  (values.size()  <  minimum)  {  if  (values.size()  <  maximum)  {  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if    (values.size()    <    minimum)    {    if  (values.size()  <  maximum)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
113	[BUG]  [BUGGY]  [FE]  java.lang.IndexOutOfBoundsException:  Index:  1  [FE]          AssertionFailedError      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  if  (values.size()  ==  maximum)  {  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	add	if  (values.size()  ==  maximum)  {	  if    (values.size()    <    =    maximum)    {    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  1  	13	1	replace
114	[BUG]  [BUGGY]  if  (values.size()  ==  maximum)  {  [FE]  java.lang.IndexOutOfBoundsException:  Index:  1  [FE]          AssertionFailedError      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  if  (values.size()  ==  maximum)  {  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if  (values.size()  ==  maximum)  {	  if    (values.size()    <    =    maximum)    {    	compilable	  [FE]  java.lang.IndexOutOfBoundsException:  Index:  1  	13	1	replace
115	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            AssertionFailedError      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  if  (values.size()  >=  maximum)  {  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	add	if  (values.size()  >=  maximum)  {	  if    (values.size()    <    =    maximum)    {    	compilable	  [FE]  ComparisonFailure  	13	1	replace
116	[BUG]  [BUGGY]  if  (values.size()  >=  maximum)  {  [FE]  ComparisonFailure  [FE]            AssertionFailedError      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  if  (values.size()  >=  maximum)  {  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if  (values.size()  >=  maximum)  {	  if    (values.size()    <    =    maximum)    {    	compilable	  [FE]  ComparisonFailure  	13	1	replace
117	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  values.get(argumentCount  -  1));  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  values.get(argumentCount  -  1));  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  values.get(argumentCount  -  1));	  Validator    validator    =    getValue(option,    values.size());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
118	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  values.values());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  values.values());  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  values.values());	  Validator    validator    =    getValue(option,    values.size());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
119	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  0);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  0);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  minimum,  0);	  Validator    validator    =    option.validate(values,    minimum);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
120	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  null);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  null);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  null);	  Validator    validator    =    option.validate(values,    id);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
121	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  resources,  argumentCount);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  resources,  argumentCount);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  resources,  argumentCount);	  Validator    validator    =    getValue(option,    resources);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
122	[BUG]  [BUGGY]  Validator  validator  =  getValue(commandLine,  resources);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(commandLine,  resources);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(commandLine,  resources);	  Validator    validator    =    getValue(option,    resources);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
123	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  values.size());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  values.size());  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  values.size());	  Validator    validator    =    option.validate(values,    valueCount);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
124	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  valueValues);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  valueValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  valueValues);	  Validator    validator    =    option.validate(values,    defaultValues);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
125	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  value,  0);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  value,  0);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  value,  0);	  Validator    validator    =    getValue(option,    value);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
126	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(values,  argumentCount);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validateValue(values,  argumentCount);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validateValue(values,  argumentCount);	  Validator    validator    =    option.validateValue(values);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
127	[BUG]  [BUGGY]  Validator  validator  =  getValues().validate(values);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValues().validate(values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues().validate(values);	  Validator    validator    =    getValues().values;    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
128	[BUG]  [BUGGY]  Validator  validator  =  resources.get(commandLine  +  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.get(commandLine  +  1);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.get(commandLine  +  1);	  Validator    validator    =    resources.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
129	[BUG]  [BUGGY]  Validator  validator  =  resources.get(commandLine  -  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.get(commandLine  -  1);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.get(commandLine  -  1);	  Validator    validator    =    resources.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
130	[BUG]  [BUGGY]  Validator  validator  =  option.getValue(defaultValues);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.getValue(defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.getValue(defaultValues);	  Validator    validator    =    option.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
131	[BUG]  [BUGGY]  Validator  validator  =  options.validate(values);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.validate(values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.validate(values);	  Validator    validator    =    options.validate();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
132	[BUG]  [BUGGY]  Validator  validator  =  getValues().values.iterator();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValues().values.iterator();  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues().values.iterator();	  Validator    validator    =    getValues().iterator();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
133	[BUG]  [BUGGY]  Validator  validator  =  getValues().toArray(values);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValues().toArray(values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValues().toArray(values);	  Validator    validator    =    getValues().iterator();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
134	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  null);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(commandLine,  null);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  null);	  Validator    validator    =    option.validate(commandLine,    options);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
135	[BUG]  [BUGGY]  Validator  validator  =(ValueImpl)values.get(defaultValue);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =(ValueImpl)values.get(defaultValue);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =(ValueImpl)values.get(defaultValue);	  Validator    validator    =(ValueImpl)values.get(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
136	[BUG]  [BUGGY]  Validator  validator  =(ValueImpl)values.get(maximum);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =(ValueImpl)values.get(maximum);  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =(ValueImpl)values.get(maximum);	  Validator    validator    =(ValueImpl)values.get(0);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
137	[BUG]  [BUGGY]  Validator  validator  =  commandLine.validate(values);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.validate(values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.validate(values);	  Validator    validator    =    commandLine.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
138	[BUG]  [BUGGY]  Validator  validator  =  commandLine.getValue(option,  arguments);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.getValue(option,  arguments);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.getValue(option,  arguments);	  Validator    validator    =    commandLine.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
139	[BUG]  [BUGGY]  Validator  validator  =  commands.get(option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commands.get(option);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commands.get(option);	  Validator    validator    =    commands.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
140	[BUG]  [BUGGY]  Validator  validator  =  commands.get(commandLine  +  1);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commands.get(commandLine  +  1);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commands.get(commandLine  +  1);	  Validator    validator    =    commands.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
141	[BUG]  [BUGGY]  Validator  validator  =  commandLine.get(commandLine);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.get(commandLine);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.get(commandLine);	  Validator    validator    =    commands.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
142	[BUG]  [BUGGY]  Validator  validator  =  commands.getValue(option,  arguments);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commands.getValue(option,  arguments);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commands.getValue(option,  arguments);	  Validator    validator    =    commands.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
143	[BUG]  [BUGGY]  Validator  validator  =  getValuesImpl(null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValuesImpl(null);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValuesImpl(null);	  Validator    validator    =    getValuesImpl();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
144	[BUG]  [BUGGY]  Validator  validator  =  getValuesImpl(defaultValues);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValuesImpl(defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValuesImpl(defaultValues);	  Validator    validator    =    getValuesImpl();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
145	[BUG]  [BUGGY]  Validator  validator  =  commandLine.get(defaultValues);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commandLine.get(defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commandLine.get(defaultValues);	  Validator    validator    =    commandLine.get(option);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
146	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  commandLine);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  commandLine);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  commandLine);	  Validator    validator    =    option.validate(commandLine,    valueDefaults);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
147	[BUG]  [BUGGY]  Validator  validator  =  option.validate(defaultValues,  option);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(defaultValues,  option);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(defaultValues,  option);	  Validator    validator    =    option.validate(commandLine,    valueDefaults);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
148	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(option,  0);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.getValue(option,  0);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.getValue(option,  0);	  Validator    validator    =    resources.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
149	[BUG]  [BUGGY]  Validator  validator  =  resources.get(commandLine.toString());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.get(commandLine.toString());  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.get(commandLine.toString());	  Validator    validator    =    resources.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
150	[BUG]  [BUGGY]  Validator  validator  =  resources.get(commandLine,  null);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.get(commandLine,  null);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.get(commandLine,  null);	  Validator    validator    =    resources.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
151	[BUG]  [BUGGY]  Validator  validator  =  values.getValue(option,  DEFAULT_CONSUME_REMAINING);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  values.getValue(option,  DEFAULT_CONSUME_REMAINING);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  values.getValue(option,  DEFAULT_CONSUME_REMAINING);	  Validator    validator    =    values.getValue(option);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
152	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  value);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  value);	  Validator    validator    =    option.validate(values,    defaultValues);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
153	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  values,  defaultValues);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  values,  defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  values,  defaultValues);	  Validator    validator    =    getValue(option,    values);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
154	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  if(values.get(maximum)!=  null)  {  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	add	if(values.get(maximum)!=  null)  {	  if    (values.size()    <    maximum)    {    if    (values.size()    <    maximum)    {    	compilable	  [FE]  ComparisonFailure  	14	1	replace
155	[BUG]  [BUGGY]  if(values.get(maximum)!=  null)  {  [FE]  ComparisonFailure  [FE]        AssertionFailedError      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  if(values.get(maximum)!=  null)  {  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if(values.get(maximum)!=  null)  {	  if    (values.size()    <    maximum)    {    if    (values.size()    <    maximum)    {    	compilable	  [FE]  ComparisonFailure  	14	1	replace
156	[BUG]  [BUGGY]  Validator  validator  =  options.getValue(option,  values,  defaultValues);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.getValue(option,  values,  defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.getValue(option,  values,  defaultValues);	  Validator    validator    =    options.getValue(option,    values);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
157	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  resources,  defaultValues);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  resources,  defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  resources,  defaultValues);	  Validator    validator    =    getValue(option,    resources);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
158	[BUG]  [BUGGY]  Validator  validator  =  commands.get(commandLine.toString());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  commands.get(commandLine.toString());  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  commands.get(commandLine.toString());	  Validator    validator    =    commands.get(commandLine);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
159	[BUG]  [BUGGY]  Validator  validator  =  option.validate(commandLine,  valueValues);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(commandLine,  valueValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(commandLine,  valueValues);	  Validator    validator    =    option.validate(commandLine,    valueDefaults);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
160	[BUG]  [BUGGY]  Validator  validator  =  options.validate(commandLine,  values);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.validate(commandLine,  values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.validate(commandLine,  values);	  Validator    validator    =    option.validate(commandLine,    valueDefaults);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
161	[BUG]  [BUGGY]  Validator  validator  =  options.get(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  options.get(option);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  options.get(option);	  Validator    validator    =    commandLine.get(option);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
162	[BUG]  [BUGGY]  Validator  validator  =  option.validateValue(values,  null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validateValue(values,  null);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validateValue(values,  null);	  Validator    validator    =    option.validateValue(values);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
163	[BUG]  [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  null);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validate(values,  minimum,  null);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validate(values,  minimum,  null);	  Validator    validator    =    option.validate(values,    minimum);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
164	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  values.iterator());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  values.iterator());  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  values.iterator());	  Validator    validator    =    getValue(option,    values.size());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
165	[BUG]  [BUGGY]  Validator  validator  =  getValue(option,  values.get(id));  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(option,  values.get(id));  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(option,  values.get(id));	  Validator    validator    =    getValue(option,    values.size());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
166	[BUG]  [BUGGY]  Validator  validator  =  option.validateValues(values);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  option.validateValues(values);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  option.validateValues(values);	  Validator    validator    =    option.validate(defaultValues);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
167	[BUG]  [BUGGY]  If  (values.size()  <  maximal)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  If  (values.size()  <  maximal)  {  [BUGGY]      throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	If  (values.size()  <  maximal)  {	  if    (values.size()    <    maximum)    {    If    (values.size()    <    maximum)    {    	non-compiled	[CE]  ';'  expected	15	None	replace
168	[BUG]  [BUGGY]  Validator  validator  =  getValue(commandLine,  option,  defaultValues);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  getValue(commandLine,  option,  defaultValues);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  getValue(commandLine,  option,  defaultValues);	  Validator    validator    =    getValue(option,    defaultValues);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
169	[BUG]  [BUGGY]  Validator  validator  =  resources.getValue(commandLine,  options);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }      [BUGGY]  Validator  validator  =  resources.getValue(commandLine,  options);  [BUGGY]      if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	Validator  validator  =  resources.getValue(commandLine,  options);	  Validator    validator    =    resources.getValue(commandLine);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
