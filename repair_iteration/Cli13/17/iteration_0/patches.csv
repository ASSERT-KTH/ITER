bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  [BUGGY]  if  (values.size()  <  maximum)  {  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	add	if  (values.size()  <  maximum)  {	if  (values.size()  >  maximum)  {  	compilable	  [FE]  AssertionFailedError  	34	1	replace
2	[BUG]  [BUGGY]  if  (values.size()  <  maximum)  {  [FE]  AssertionFailedError  [FE]    ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  [BUGGY]  if  (values.size()  <  maximum)  {  [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	if  (values.size()  <  maximum)  {	if  (values.size()  >  maximum)  {  	compilable	  [FE]  AssertionFailedError  	34	1	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]      ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  [BUGGY]    [BUGGY]  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	  	if  (values.size()  >  maximum)  {  	non-compiled	[CE]  illegal  start  of  type	34	None	replace
4	[BUG]  [BUGGY]    Validator  validator  =  options.getValue(commandLine);  [CE]  cannot  find  symbol  options  [FE]    ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  [BUGGY]    Validator  validator  =  options.getValue(commandLine);  [BUGGY]  if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	    Validator  validator  =  options.getValue(commandLine);		non-compiled	[CE]  cannot  find  symbol  options	35	None	add
5	[BUG]  [BUGGY]    Validator  validator  =  option.validate(commandLine);  [CE]  incompatible  types  [FE]      ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  [BUGGY]    Validator  validator  =  option.validate(commandLine);  [BUGGY]  if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	    Validator  validator  =  option.validate(commandLine);		non-compiled	[CE]  incompatible  types	35	None	add
6	[BUG]  [BUGGY]    Validator  validator  =  getValues();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  [BUGGY]    Validator  validator  =  getValues();  [BUGGY]  if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	    Validator  validator  =  getValues();		non-compiled	[CE]  cannot  find  symbol	35	None	add
7	[BUG]  [BUGGY]    Validator  validator  =  option.validate();  [CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  [BUGGY]    Validator  validator  =  option.validate();  [BUGGY]  if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	    Validator  validator  =  option.validate();		non-compiled	[CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;	35	None	add
8	[BUG]  [BUGGY]    Validator  validator  =  options.getValue(option);  [CE]  cannot  find  symbol  options  [FE]            ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  [BUGGY]    Validator  validator  =  options.getValue(option);  [BUGGY]  if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	    Validator  validator  =  options.getValue(option);		non-compiled	[CE]  cannot  find  symbol  options	35	None	add
9	[BUG]  [BUGGY]    Validator  validator  =  option.validate(values);  [CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  [BUGGY]    Validator  validator  =  option.validate(values);  [BUGGY]  if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	    Validator  validator  =  option.validate(values);		non-compiled	[CE]  method  validate  in  interface  Option  cannot  be  applied  to  given  types;	35	None	add
10	[BUG]  [BUGGY]    Validator  validator  =  options.get(commandLine);  [CE]  cannot  find  symbol  options  [FE]      ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  [BUGGY]    Validator  validator  =  options.get(commandLine);  [BUGGY]  if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	    Validator  validator  =  options.get(commandLine);		non-compiled	[CE]  cannot  find  symbol  options	35	None	add
11	[BUG]  [BUGGY]    Validator  validator  =  getValue(option);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  public  void  validate(final  WriteableCommandLine  commandLine,  final  Option  option)  throws  OptionException  {  final  List  values  =  commandLine.getValues(option);  if  (values.size()  <  minimum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_MISSING_VALUES);  }  [BUGGY]    Validator  validator  =  getValue(option);  [BUGGY]  if  (values.size()  >  maximum)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  (String)  values.get(maximum));  }  if  (validator  !=  null)  {  try  {  validator.validate(values);  }  catch  (InvalidArgumentException  ive)  {  throw  new  OptionException(option,  ResourceConstants.ARGUMENT_UNEXPECTED_VALUE,  ive.getMessage());  [CLASS]  ArgumentImpl  [METHOD]  validate  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  Option  option  [VARIABLES]  boolean  subsequentSplit  InvalidArgumentException  ive  char  DEFAULT_INITIAL_SEPARATOR  DEFAULT_SUBSEQUENT_SEPARATOR  NUL  initialSeparator  subsequentSeparator  WriteableCommandLine  commandLine  ResourceHelper  resources  List  defaultValues  valueDefaults  values  Option  option  String  DEFAULT_CONSUME_REMAINING  allValues  allValuesQuoted  arg  consumeRemaining  description  name  token  int  argumentCount  id  maximum  minimum  Validator  validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	244	244	1	replace	    Validator  validator  =  getValue(option);		non-compiled	[CE]  cannot  find  symbol	35	None	add
