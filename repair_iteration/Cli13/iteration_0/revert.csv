projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=stripBoundaryQuotes(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=stripBoundaryQuotes(allValuesQuoted);if(consumeRemaining.equals(consumeRemaining)){++argumentCount;commandLine.addValue(option,arguments.next());}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=(String)allValuesQuoted.toLowerCase();if(consumeRemaining.equals(consumeRemaining)){++argumentCount;commandLine.addValue(option,arguments.next());}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=stripBoundaryQuotes(allValuesQuoted);if(consumeRemaining.equals(consumeRemaining)){++argumentCount;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=stripBoundaryQuotes(allValuesQuoted);if(consumeRemaining.equals(consumeRemaining)){++argumentCount;commandsLine.addValue(option,arguments.next());}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146while(arguments.hasNext()&&(argumentCount<maximum)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146while(arguments.hasNext()&&(argumentCount>1)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146while(arguments.hasNext()&&(argumentCount>maximum)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146while(arguments.hasNext()&&(argumentCount>2)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188if(values.hasMoreTokens()){for(intid=0;i<arguments.size();++argumentCount){processValues(option,allValues);}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188if(values.hasMoreTokens()){for(intid=0;i<arguments.size();i++argumentCount){processValues(option,allValues);}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188addValue(values.nextToken(),arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188if(values.hasMoreTokens()){for(intid=0;i<arguments.size();++argumentCount){processValues(option,arguments);}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146intargumentCount=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146intmaximum=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146finalintmaximum=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146finalStringconsumeRemaining=options.getConsumeRemaining();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146finalStringconsumeRemaining=options.get(argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164if(arguments.hasMoreTokens()){++argumentCount;}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164booleansubsequentSplit=arguments.hasMoreTokens()&&argumentCount>maximum;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164booleansubsequentSplit=arguments.hasMoreTokens();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164booleansubsequentSplit=arguments.hasMoreTokens()&&arguments.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164booleansubsequentSplit=options.hasMoreTokens();arguments.remove();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147++argumentCount;commandLine.addValue(option,arguments.next());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147++argumentCount;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147finalStringconsumeRemaining=(String)arguments.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147++argumentCount;arguments.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147++argumentCount;commandLine.addValue(option,argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringallValues=stripBoundaryQuotes(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringallValues=consumeRemaining;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringallValues=getBoundaryQuotes(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringallValues=consumeBoundaryQuotes(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringallValues=consumeRemaining.substring(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValuesQuoted.equals(consumeRemaining)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(consumeRemaining)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValues.equals(consumeRemaining)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(consume)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValuesQuoted.equals(consumeRemaining)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSplit){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparator!=null){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(!subsequentSplit){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparatorinstanceofStringTokenizer){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(subsequentSeparatorinstanceofString){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144ListIteratorarguments=options.getOptions();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144intargumentCount=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144ListIteratorarguments=options.getRawClass();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144ListIteratorarguments=options.getAllIterator();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144ListIteratorarguments=options.getAllIterators();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186commandLine.addValue(option,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186commandLine.addValue(option,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186commandLine.addValue(values,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186commandLine.addValue(value,allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158if(commandLine.looksLikeRemaining(allValuesQuoted)){++argumentCount;break;}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158allValuesQuoted.remove(option.getKey());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158if(commandLine.looksLikeRemaining(allValuesQuoted)){arguments.previous();break;}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158allValuesQuoted.add(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158addValue(option,arguments.previous());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158elseif(commandLine.looksLikeOption(allValuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158elseif(commandLine.looksLikeOption(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158elseif(commandLine.isLikeOption(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158elseif(commandLine.looksAlikeOption(option)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158elseif(commandLine.looksLikeOption(consumeRemaining)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144intargumentCount=0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144intargumentCount=arguments.length;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144intargumentCount=1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186StringallValues=options.getAllValues();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186allValues=options.getAllValues();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186List<Option>allValues=options.getAllValues();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186if(values.hasMoreTokens()){for(StringallValues:options.values){processAllValues(option,allValues);}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186if(values.hasMoreTokens()){for(StringallValues:options.values){processAllValues(option,arguments);}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151finalStringconsumeRemaining=allValues.substring(0,argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151finalStringconsumeRemaining=allValues.toString();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151finalStringconsumeRemaining=allValues.toCharArray();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151finalStringconsumeRemaining=(String)allValues.clone();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151finalStringconsumeRemaining=allValues.values();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185StringallValues=options.getAllValues();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185StringallValues=options.getAllValues();if(allValues!=null){thrownewIllegalArgumentException("");}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185StringallValues=options.getAllValues();if(allValues!=null){thrownewOptionException("");}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185StringallValues=options.getAllValues();arguments.add(allValues);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185StringallValues=options.getAllValues();if(allValues!=null){arguments.add(token);}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147finalStringallValuesQuoted=(String)arguments.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147finalStringallValuesQuoted=(String)arguments.get(argumentCount-1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147finalStringallValuesQuoted=(String)arguments.get(argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188if(values.hasMoreTokens()){intargumentCount=arguments.size();if(arguments.size()>1){processValues(option,allValues);}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185++argumentCount;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185++argumentCount+=arguments.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185++argumentCount+1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185++argumentCount+=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144intargumentCount=arguments.length();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144intargumentCount=(arguments.length>0)?arguments.length-1:0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144intargumentCount=(arguments.length>0)?arguments.length:0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144finalListIteratorargument=options.getOptions();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144finalListIterator<Option>arguments=options.getOptions();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144finalListIteratorarguments=options.getOptions();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144ListIteratorargument=options.getOptions();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146while(arguments.hasNext()}(argumentCount-1)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146while(arguments.hasNext()||(argumentCount<maximum)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146while(arguments.hasNext()||(argumentCount>maximum)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158if(allValuesQuoted.equals(consumeRemaining)){if(commandLine.looksLikeOption(allValuesQuoted)){arguments.previous();break;}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158if(allValuesQuoted.equals(consumeRemaining)){if(!commandLine.looksLikeOption(allValuesQuoted)){arguments.previous();break;}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158if(allValuesQuoted==null){if(commandLine.looksLikeOption(allValuesQuoted)){arguments.previous();break;}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158if(allValuesQuoted.equals(consumeRemaining)){if(!commandLine.isLikeOption(allValuesQuoted)){arguments.previous();break;}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158if(allValuesQuoted.equals(consumeRemaining)){if(commandLine.looksLikeOption(allValuesQuoted)){addValue(option,arguments.previous());}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185++argumentCount-1;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185++argumentCountfor(intargumentCount-1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185++argumentCount,values.hasMoreTokens());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147finalStringconsumeRemaining=(String)arguments.next();++argumentCount;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147finalStringconsumeRemaining=arguments.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186ListallValues=options.getAllValues();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186Arrays.sort(option.getDefaultValues());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringallValues=getAllValues();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringallValues=getAllValues(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringallValues=consumeRemaining(allValuesQuoted);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringallValues=consumeRemaining+allValuesQuoted;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151finalStringconsumeRemaining=allValues.trim();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(!consumeSplit){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(!consumesQuoted){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147finalStringallValuesQuoted=(String)arguments.get(0);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147finalStringallValuesQuoted=(String)arguments.substring(0,argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146finalListIteratorargument=options.getOptions();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146finalListIteratorarguments=options.getOptions();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146finalListIterator<Option>arguments=options.getOptions();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146finalListIteratorargument=options.getOptionalArg();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146finalintargumentCount=arguments.size();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186commandLine.addValue(option,values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186commandLine.addValue(option,valueDefaults);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186commandLine.addValue(option,value);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188if(values.hasMoreTokens()){++argumentCount;commandLine.addValue(option,allValues);}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188if(values.hasMoreTokens()){++argumentCount;arguments.addValue(option,allValues);}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188if(values.hasMoreTokens()){for(inti=0;i<allValues.size();++i){thrownewArgumentException("");}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188if(values.hasMoreTokens()){for(intid=0;i<arguments.size();++idCount);}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164if(!consumeRemaining){for(inti=0;i<allValues.size();++i){finalStringTokenizervalues=newStringTokenizer(allValues,String.valueOf(maximum));arguments.remove
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164if(!consumeRemaining){for(inti=0;i<allValues.size();++i){finalStringTokenizervalues=newStringTokenizer(allValues,String.valueOf(minimum));arguments.remove
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164if(!consumeRemaining){for(inti=0;i<allValues.size();++i){finalStringtokenizervalues=newStringTokenizer(allValues,String.valueOf(maximum));arguments.remove
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164if(!consumeRemaining){for(inti=0;i<arguments.size();++i){finalStringTokenizervalues=newStringTokenizer(allValues,String.valueOf(minimum));arguments.remove();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164if(!consumeRemaining){for(inti=0;i<arguments.size();++i){finalStringTokenizervalues=newStringTokenizer(allValues,String.valueOf(maximum));arguments.remove();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185if(values.hasMoreTokens()){for(StringallValues:options.getAllValues()){thrownewResourceException("");}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185if(values.hasMoreTokens()){StringallValues=options.getAllValues();if(allValues.size()==1&&allValues.size()>0){thrownewResourceException("");}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185if(values.hasMoreTokens()){StringallValues=options.getAllValues();if(allValues.size()==1&&allValues.size()>1){thrownewResourceException("");}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185if(values.hasMoreTokens()){StringallValues=options.getAllValues();if(allValues!=null){thrownewResourceException("");}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=(String)allValuesQuoted.clone();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=(String)allValuesQuoted.trim();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=(String)allValuesQuoted.toCharArray();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=(String)allValuesQuoted.clone();++argumentCount;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=(String)allValuesQuoted.substring(0,argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(!allValuesQuoted.equals(allValues)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(valuesQuoted)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158elseif(allValuesQuoted.equals(consumeRemaining)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188arguments.addValue(values.nextToken());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185++argumentCount,values.nextToken();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185++argumentCount,values.nextToken());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158if(allValuesQuoted==null){finalStringallValues=allValuesQuoted.equals(consumeRemaining);if(allValuesQuoted.equals(consumeRemaining)){arguments.previous();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158if(allValuesQuoted==null){finalStringallValues=allValuesQuoted.equals(consumeRemaining);if(allValuesQuoted.equals(consumeRemaining)){arguments.previous();break;}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158if(allValuesQuoted==null){if(commandLine.looksLikeOption(allValuesQuoted)){arguments.previous();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158if(allValuesQuoted==null){finalStringallValues=allValuesQuoted.substring(0,argumentCount);if(allValuesQuoted.equals(consumeRemaining)){arguments.previous();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146while(arguments.hasNext()&&argumentCount<=maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146while(arguments.next()&&argumentCount<=maximum){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146while(arguments.next()&&(argumentCount%2==0)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186commandLine.addValue(value,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186StringallValues=values.values().toString();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186allValues=values.values();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186Arrays.sort(option,arguments);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java186allValues=values.values().toArray(values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158elseif(commandLine.isAssignableFrom(arguments.subsequentSeparator)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java158elseif(commandLine.isOptionalArg()){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=allValuesQuoted.trim();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=arguments.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=(String)consumeRemaining.clone();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=(String)arguments.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringconsumeRemaining=(String)values.get(0);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144finalListIteratorarguments=options.listIterator();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144finalListIteratorarguments=options.getAllIterator();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144finalListIteratorarguments=options.getAllIterators();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144finalListIteratorarguments=options.values();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185allValues.add(value);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185allValues.add(values.nextToken());
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185allValues.add(token);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185allValues=values.values();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java185allValues=values.values().toArray(values);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147finalintconsumeRemaining=arguments.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147finalStringconsumeRemaining=arguments.next();++argumentCount;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java147finalcharconsumeRemaining=arguments.next();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringallValues=allValuesQuoted;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringallValues=allValuesQuoted.trim();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringallValues=allValuesQuoted.toLowerCase();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java148finalStringallValues=allValuesQuoted.substring(0,argumentCount);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164if(arguments.size()>0){finalStringTokenizerallValues=newStringTokenizer(allValues,String.valueOf(maximum));arguments.remove();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164if(argumentCount>1){finalStringTokenizerallValues=newStringTokenizer(allValues,String.valueOf(maximum));arguments.remove();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164if(arguments.size()>0){finalStringTokenizerallValues=newStringTokenizer(allValues,String.valueOf(maximum));arguments.previous();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164if(arguments.size()>0){++argumentCount;}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164if(arguments.size()>0){finalStringTokenizerallValues=newStringTokenizer(allValues,null);arguments.remove();}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151finalStringconsumeRemaining=allValues.substring(0,argumentCount).trim();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188allValues.add(option);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188if(values.hasMoreTokens()){++argumentCount;for(intid=0;i<arguments.size();i++){values.addValue(option,arguments.nextToken());}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188if(values.hasMoreTokens()){++argumentCount;for(intid=0;i<arguments.size();i++){addValue(option,arguments.nextToken(),arguments.get(id));}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188if(values.hasMoreTokens()){++argumentCount;for(intid=0;item!=allValues.size();id++){addValue(option,arguments);}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144intargumentCount=(arguments.size()>0)?arguments.get(0):null;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144intargumentCount=(arguments.size()>1)?arguments.get(0):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java144intargumentCount=(arguments.size()>0)?arguments.get(0):0;
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146finalListIteratorarguments=options.listIterator();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146finalListIteratorarguments=options.getAstRoot(arguments.size()-1);
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146finalListIteratorarguments=options.values();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146ListIteratorarguments=options.getAllIterator();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java146finalListIteratorarguments=options.getAllIterator();
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(values)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues!=null&&allValuesQuoted.equals(consumeRemaining)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues==null&&allValuesQuoted.equals(consumeRemaining)){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java151if(allValues.equals(option.getValue())){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java188if(values.hasMoreTokens()){++argumentCount;}
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(!successiveSeparator){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(successiveSeparator!=null){
projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java164elseif(!subsequentSeparator){
