bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] int argumentCount = 0; [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] throws OptionException {  [BUGGY] int argumentCount = 0; [BUGGY]  while (arguments.hasNext() && (argumentCount < maximum)) { final String allValuesQuoted = (String) arguments.next(); final String allValues = stripBoundaryQuotes(allValuesQuoted);  if (allValuesQuoted.equals(consumeRemaining)) { while (arguments.hasNext() && (argumentCount < maximum)) { ++argumentCount; commandLine.addValue(option, arguments.next()); [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	replace	
2	[BUG] [BUGGY] [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] throws OptionException {  [BUGGY] [BUGGY] int argumentCount = 0; while (arguments.hasNext() && (argumentCount < maximum)) { final String allValuesQuoted = (String) arguments.next(); final String allValues = stripBoundaryQuotes(allValuesQuoted);  if (allValuesQuoted.equals(consumeRemaining)) { while (arguments.hasNext() && (argumentCount < maximum)) { ++argumentCount; commandLine.addValue(option, arguments.next()); [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	144	144	1	add	
3	[BUG] [BUGGY] while (arguments.hasNext() && (argumentCount < maximum)) { [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] throws OptionException {  int argumentCount = 0; [BUGGY] while (arguments.hasNext() && (argumentCount < maximum)) { [BUGGY] final String allValuesQuoted = (String) arguments.next(); final String allValues = stripBoundaryQuotes(allValuesQuoted);  if (allValuesQuoted.equals(consumeRemaining)) { while (arguments.hasNext() && (argumentCount < maximum)) { ++argumentCount; commandLine.addValue(option, arguments.next()); } } [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	replace	
4	[BUG] [BUGGY] [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] throws OptionException {  int argumentCount = 0; [BUGGY] [BUGGY] while (arguments.hasNext() && (argumentCount < maximum)) { final String allValuesQuoted = (String) arguments.next(); final String allValues = stripBoundaryQuotes(allValuesQuoted);  if (allValuesQuoted.equals(consumeRemaining)) { while (arguments.hasNext() && (argumentCount < maximum)) { ++argumentCount; commandLine.addValue(option, arguments.next()); } } [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	146	146	1	add	
5	[BUG] [BUGGY] final String allValuesQuoted = (String) arguments.next(); [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] throws OptionException {  int argumentCount = 0; while (arguments.hasNext() && (argumentCount < maximum)) { [BUGGY] final String allValuesQuoted = (String) arguments.next(); [BUGGY] final String allValues = stripBoundaryQuotes(allValuesQuoted);  if (allValuesQuoted.equals(consumeRemaining)) { while (arguments.hasNext() && (argumentCount < maximum)) { ++argumentCount; commandLine.addValue(option, arguments.next()); } }  [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	replace	
6	[BUG] [BUGGY] [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] throws OptionException {  int argumentCount = 0; while (arguments.hasNext() && (argumentCount < maximum)) { [BUGGY] [BUGGY] final String allValuesQuoted = (String) arguments.next(); final String allValues = stripBoundaryQuotes(allValuesQuoted);  if (allValuesQuoted.equals(consumeRemaining)) { while (arguments.hasNext() && (argumentCount < maximum)) { ++argumentCount; commandLine.addValue(option, arguments.next()); } }  [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	147	147	1	add	
7	[BUG] [BUGGY] final String allValues = stripBoundaryQuotes(allValuesQuoted); [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] throws OptionException {  int argumentCount = 0; while (arguments.hasNext() && (argumentCount < maximum)) { final String allValuesQuoted = (String) arguments.next(); [BUGGY] final String allValues = stripBoundaryQuotes(allValuesQuoted); [BUGGY]   if (allValuesQuoted.equals(consumeRemaining)) { while (arguments.hasNext() && (argumentCount < maximum)) { ++argumentCount; commandLine.addValue(option, arguments.next()); } }  else if (commandLine.looksLikeOption(allValuesQuoted)) { [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	replace	
8	[BUG] [BUGGY] [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] throws OptionException {  int argumentCount = 0; while (arguments.hasNext() && (argumentCount < maximum)) { final String allValuesQuoted = (String) arguments.next(); [BUGGY] [BUGGY] final String allValues = stripBoundaryQuotes(allValuesQuoted);  if (allValuesQuoted.equals(consumeRemaining)) { while (arguments.hasNext() && (argumentCount < maximum)) { ++argumentCount; commandLine.addValue(option, arguments.next()); } }  else if (commandLine.looksLikeOption(allValuesQuoted)) { [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	148	148	1	add	
9	[BUG] [BUGGY] if (allValuesQuoted.equals(consumeRemaining)) { [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] throws OptionException {  int argumentCount = 0; while (arguments.hasNext() && (argumentCount < maximum)) { final String allValuesQuoted = (String) arguments.next(); final String allValues = stripBoundaryQuotes(allValuesQuoted);  [BUGGY] if (allValuesQuoted.equals(consumeRemaining)) { [BUGGY] while (arguments.hasNext() && (argumentCount < maximum)) { ++argumentCount; commandLine.addValue(option, arguments.next()); } }  else if (commandLine.looksLikeOption(allValuesQuoted)) { arguments.previous(); break; [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	replace	
10	[BUG] [BUGGY] [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] throws OptionException {  int argumentCount = 0; while (arguments.hasNext() && (argumentCount < maximum)) { final String allValuesQuoted = (String) arguments.next(); final String allValues = stripBoundaryQuotes(allValuesQuoted);  [BUGGY] [BUGGY] if (allValuesQuoted.equals(consumeRemaining)) { while (arguments.hasNext() && (argumentCount < maximum)) { ++argumentCount; commandLine.addValue(option, arguments.next()); } }  else if (commandLine.looksLikeOption(allValuesQuoted)) { arguments.previous(); break; [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	151	151	1	add	
11	[BUG] [BUGGY] else if (commandLine.looksLikeOption(allValuesQuoted)) { [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] final String allValues = stripBoundaryQuotes(allValuesQuoted);  if (allValuesQuoted.equals(consumeRemaining)) { while (arguments.hasNext() && (argumentCount < maximum)) { ++argumentCount; commandLine.addValue(option, arguments.next()); } }  [BUGGY] else if (commandLine.looksLikeOption(allValuesQuoted)) { [BUGGY] arguments.previous(); break; }  else if (subsequentSplit) { final StringTokenizer values = new StringTokenizer(allValues, String.valueOf(subsequentSeparator)); arguments.remove(); [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	replace	
12	[BUG] [BUGGY] [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] final String allValues = stripBoundaryQuotes(allValuesQuoted);  if (allValuesQuoted.equals(consumeRemaining)) { while (arguments.hasNext() && (argumentCount < maximum)) { ++argumentCount; commandLine.addValue(option, arguments.next()); } }  [BUGGY] [BUGGY] else if (commandLine.looksLikeOption(allValuesQuoted)) { arguments.previous(); break; }  else if (subsequentSplit) { final StringTokenizer values = new StringTokenizer(allValues, String.valueOf(subsequentSeparator)); arguments.remove(); [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	158	158	1	add	
13	[BUG] [BUGGY] else if (subsequentSplit) { [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] commandLine.addValue(option, arguments.next()); } }  else if (commandLine.looksLikeOption(allValuesQuoted)) { arguments.previous(); break; }  [BUGGY] else if (subsequentSplit) { [BUGGY] final StringTokenizer values = new StringTokenizer(allValues, String.valueOf(subsequentSeparator)); arguments.remove(); while (values.hasMoreTokens() && (argumentCount < maximum)) { ++argumentCount; final String token = values.nextToken(); commandLine.addValue(option, token); [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	replace	
14	[BUG] [BUGGY] [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] commandLine.addValue(option, arguments.next()); } }  else if (commandLine.looksLikeOption(allValuesQuoted)) { arguments.previous(); break; }  [BUGGY] [BUGGY] else if (subsequentSplit) { final StringTokenizer values = new StringTokenizer(allValues, String.valueOf(subsequentSeparator)); arguments.remove(); while (values.hasMoreTokens() && (argumentCount < maximum)) { ++argumentCount; final String token = values.nextToken(); commandLine.addValue(option, token); [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	164	164	1	add	
15	[BUG] [BUGGY] ++argumentCount; [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] arguments.add(token); } if (values.hasMoreTokens()) { throw new OptionException(option, ResourceConstants.ARGUMENT_UNEXPECTED_VALUE, values.nextToken()); } }  else { [BUGGY] ++argumentCount; [BUGGY] commandLine.addValue(option, allValues); } [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	replace	
16	[BUG] [BUGGY] [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] arguments.add(token); } if (values.hasMoreTokens()) { throw new OptionException(option, ResourceConstants.ARGUMENT_UNEXPECTED_VALUE, values.nextToken()); } }  else { [BUGGY] [BUGGY] ++argumentCount; commandLine.addValue(option, allValues); } [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	185	185	1	add	
17	[BUG] [BUGGY] commandLine.addValue(option, allValues); [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] } if (values.hasMoreTokens()) { throw new OptionException(option, ResourceConstants.ARGUMENT_UNEXPECTED_VALUE, values.nextToken()); } }  else { ++argumentCount; [BUGGY] commandLine.addValue(option, allValues); [BUGGY] } [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	replace	
18	[BUG] [BUGGY] [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] } if (values.hasMoreTokens()) { throw new OptionException(option, ResourceConstants.ARGUMENT_UNEXPECTED_VALUE, values.nextToken()); } }  else { ++argumentCount; [BUGGY] [BUGGY] commandLine.addValue(option, allValues); } [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	186	186	1	add	
19	[BUG] [BUGGY] [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] if (values.hasMoreTokens()) { throw new OptionException(option, ResourceConstants.ARGUMENT_UNEXPECTED_VALUE, values.nextToken()); } }  else { ++argumentCount; commandLine.addValue(option, allValues); } [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	188	188	1	replace	
20	[BUG] [BUGGY] [FE] ComparisonFailure testLoopingOptionLookAlike2 [CONTEXT] if (values.hasMoreTokens()) { throw new OptionException(option, ResourceConstants.ARGUMENT_UNEXPECTED_VALUE, values.nextToken()); } }  else { ++argumentCount; commandLine.addValue(option, allValues); } [CLASS] ArgumentImpl [METHOD] processValues [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments Option option [VARIABLES] StringTokenizer values boolean subsequentSplit char DEFAULT_INITIAL_SEPARATOR DEFAULT_SUBSEQUENT_SEPARATOR NUL initialSeparator subsequentSeparator WriteableCommandLine commandLine ResourceHelper resources List defaultValues valueDefaults Option option String DEFAULT_CONSUME_REMAINING allValues allValuesQuoted consumeRemaining description name token ListIterator arguments int argumentCount id maximum minimum Validator validator  	projects/Cli13/src/java/org/apache/commons/cli2/option/ArgumentImpl.java	1.0	188	188	1	add	
