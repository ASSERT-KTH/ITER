bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	add	    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);		compilable	  [FE]  AssertionFailedError  	2	2	add
2	[BUG]  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);		compilable	  [FE]  AssertionFailedError  	2	2	add
3	[BUG]  [BUGGY]    int  lineSeparator  =  getEncodeSize(pArray,  0,  pArray.length);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    int  lineSeparator  =  getEncodeSize(pArray,  0,  pArray.length);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    int  lineSeparator  =  getEncodeSize(pArray,  0,  pArray.length);		non-compiled	[CE]  cannot  find  symbol	2	None	add
4	[BUG]  [BUGGY]    byte[]  pArray  =(byte[])pArray.clone();  [CE]  variable  pArray  is  already  defined  in  method  encode(byte[])  [FE]        AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    byte[]  pArray  =(byte[])pArray.clone();  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    byte[]  pArray  =(byte[])pArray.clone();		non-compiled	[CE]  variable  pArray  is  already  defined  in  method  encode(byte[])	2	None	add
5	[BUG]  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  readResults(pArray,  0,  pArray.length);  [CE]  variable  pArray  is  already  defined  in  method  encode(byte[])  [FE]          AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  readResults(pArray,  0,  pArray.length);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  readResults(pArray,  0,  pArray.length);		non-compiled	[CE]  variable  pArray  is  already  defined  in  method  encode(byte[])	2	None	add
6	[BUG]  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  len  =  getEncodeLength(pArray,  0,  pArray.length);  [CE]  cannot  find  symbol  len  [FE]            AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  len  =  getEncodeLength(pArray,  0,  pArray.length);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  len  =  getEncodeLength(pArray,  0,  pArray.length);		non-compiled	[CE]  cannot  find  symbol  len	2	None	add
7	[BUG]  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  setInitialBuffer(pArray,  0,  pArray.length);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  setInitialBuffer(pArray,  0,  pArray.length);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  setInitialBuffer(pArray,  0,  pArray.length);		non-compiled	[CE]  cannot  find  symbol	2	None	add
8	[BUG]  [BUGGY]    byte[]  pArray  =  getEncode(pArray,  0,  pArray.length);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    byte[]  pArray  =  getEncode(pArray,  0,  pArray.length);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    byte[]  pArray  =  getEncode(pArray,  0,  pArray.length);		non-compiled	[CE]  cannot  find  symbol	2	None	add
9	[BUG]  [BUGGY]    int  lineSeparator  =  getEncodeSize(pArray,  0,  pArray.length);  readResults(pArray,  0,  pArray.length);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    int  lineSeparator  =  getEncodeSize(pArray,  0,  pArray.length);  readResults(pArray,  0,  pArray.length);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    int  lineSeparator  =  getEncodeSize(pArray,  0,  pArray.length);  readResults(pArray,  0,  pArray.length);		non-compiled	[CE]  cannot  find  symbol	2	None	add
10	[BUG]  [BUGGY]    byte[]  pArray  =  encode(pArray,  0,  pArray.length);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    byte[]  pArray  =  encode(pArray,  0,  pArray.length);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    byte[]  pArray  =  encode(pArray,  0,  pArray.length);		non-compiled	[CE]  cannot  find  symbol	2	None	add
11	[BUG]  [BUGGY]    int  lineSeparator  =  getEncodeSize(pArray);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    int  lineSeparator  =  getEncodeSize(pArray);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    int  lineSeparator  =  getEncodeSize(pArray);		non-compiled	[CE]  cannot  find  symbol	2	None	add
12	[BUG]  [BUGGY]  return  pArray.toByteArray();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]  return  pArray.toByteArray();  [BUGGY]  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	return  pArray.toByteArray();	return  pArray;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
13	[BUG]  [BUGGY]  return  pArray.clone();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]  return  pArray.clone();  [BUGGY]  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	return  pArray.clone();	return  pArray;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
14	[BUG]  [BUGGY]  return  pArray.length;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]  return  pArray.length;  [BUGGY]  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	return  pArray.length;	return  pArray;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
15	[BUG]  [BUGGY]  return(pArray  ==  null)?  null  :  pArray;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]  return(pArray  ==  null)?  null  :  pArray;  [BUGGY]  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	return(pArray  ==  null)?  null  :  pArray;	return  pArray;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
16	[BUG]  [BUGGY]  return(pArray  ==  null)?  null  :  pArray.toByteArray();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]  return(pArray  ==  null)?  null  :  pArray.toByteArray();  [BUGGY]  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	return(pArray  ==  null)?  null  :  pArray.toByteArray();	return  pArray;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
17	[BUG]  [BUGGY]  return(pArray!=  null)?  null  :  pArray.toByteArray();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]  return(pArray!=  null)?  null  :  pArray.toByteArray();  [BUGGY]  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	return(pArray!=  null)?  null  :  pArray.toByteArray();	return  pArray;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
18	[BUG]  [BUGGY]  return(pArray!=  null)?  null  :  pArray;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]  return(pArray!=  null)?  null  :  pArray;  [BUGGY]  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	return(pArray!=  null)?  null  :  pArray;	return  pArray;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
19	[BUG]  [BUGGY]  return(pArray  ==  null)?  null  :  pArray.length;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]  return(pArray  ==  null)?  null  :  pArray.length;  [BUGGY]  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	return(pArray  ==  null)?  null  :  pArray.length;	return  pArray;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
20	[BUG]  [BUGGY]  return  pArray.cloneTree();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]  return  pArray.cloneTree();  [BUGGY]  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	return  pArray.cloneTree();	return  pArray;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
21	[BUG]  [BUGGY]    int  lineSeparator  =  getEncodeSize(pArray.length);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    int  lineSeparator  =  getEncodeSize(pArray.length);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    int  lineSeparator  =  getEncodeSize(pArray.length);		non-compiled	[CE]  cannot  find  symbol	2	None	add
22	[BUG]  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  1,  pArray.length);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  1,  pArray.length);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    System.arraycopy(pArray,  0,  pArray,  1,  pArray.length);		non-compiled	[CE]  cannot  find  symbol	2	None	add
23	[BUG]  [BUGGY]    byte[]  pArray  =  getEncodeBase64(pArray);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    byte[]  pArray  =  getEncodeBase64(pArray);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    byte[]  pArray  =  getEncodeBase64(pArray);		non-compiled	[CE]  cannot  find  symbol	2	None	add
24	[BUG]  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  fileSeparator  =  base64;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  fileSeparator  =  base64;  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    System.arraycopy(pArray,  0,  pArray,  0,  pArray.length);  fileSeparator  =  base64;		non-compiled	[CE]  cannot  find  symbol	2	None	add
25	[BUG]  [BUGGY]    byte[]  pArray  =  getEncodeBase64(pArray,  0,  pArray.length);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    byte[]  pArray  =  getEncodeBase64(pArray,  0,  pArray.length);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    byte[]  pArray  =  getEncodeBase64(pArray,  0,  pArray.length);		non-compiled	[CE]  cannot  find  symbol	2	None	add
26	[BUG]  [BUGGY]  return(pArray!=  null)?  null  :  pArray.length;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]  return(pArray!=  null)?  null  :  pArray.length;  [BUGGY]  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	return(pArray!=  null)?  null  :  pArray.length;	return  pArray;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
27	[BUG]  [BUGGY]    Integer  lineSeparator  =  getEncodeSize(pArray,  0,  pArray.length);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    Integer  lineSeparator  =  getEncodeSize(pArray,  0,  pArray.length);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    Integer  lineSeparator  =  getEncodeSize(pArray,  0,  pArray.length);		non-compiled	[CE]  cannot  find  symbol	2	None	add
28	[BUG]  [BUGGY]    int  lineSeparator  =  getLineSeparator(pArray);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    int  lineSeparator  =  getLineSeparator(pArray);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    int  lineSeparator  =  getLineSeparator(pArray);		non-compiled	[CE]  cannot  find  symbol	2	None	add
29	[BUG]  [BUGGY]    int  lineSeparator  =  getLineSeparator();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    int  lineSeparator  =  getLineSeparator();  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    int  lineSeparator  =  getLineSeparator();		non-compiled	[CE]  cannot  find  symbol	2	None	add
30	[BUG]  [BUGGY]    Integer  lineSeparator  =  getEncodeSize(pArray.length);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]    Integer  lineSeparator  =  getEncodeSize(pArray.length);  [BUGGY]  return  pArray;  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	    Integer  lineSeparator  =  getEncodeSize(pArray.length);		non-compiled	[CE]  cannot  find  symbol	2	None	add
31	[BUG]  [BUGGY]  return  new  byte[pArray.length];  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]  return  new  byte[pArray.length];  [BUGGY]  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	return  new  byte[pArray.length];	return  pArray;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
32	[BUG]  [BUGGY]  return(pArray  ==  null)?  null  :  pArray.clone();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  byte[]  encode(byte[]  pArray)  {  reset();  if  (pArray  ==  null  ||  pArray.length  ==  0)  {  [BUGGY]  return(pArray  ==  null)?  null  :  pArray.clone();  [BUGGY]  }  long  len  =  getEncodeLength(pArray,  lineLength,  lineSeparator);  byte[]  buf  =  new  byte[(int)  len];  setInitialBuffer(buf,  0,  buf.length);  encode(pArray,  0,  pArray.length);  encode(pArray,  0,  -1);  //  Notify  encoder  of  EOF.  if  (buffer  !=  buf)  {  readResults(buf,  0,  buf.length);  }  [CLASS]  Base64  [METHOD]  encode  [RETURN_TYPE]  byte[]  byte[]  pArray  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  arrayOctet  b  base64Data  binaryData  buf  buffer  data  encodeTable  groomedData  in  lineSeparator  out  pArray  packedData  result  smallerBuf  boolean  eof  isChunked  urlSafe  byte  PAD  b  byteToCheck  octet  int  CHUNK_SIZE  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  b  bAvail  bPos  bytesCopied  currentLinePos  decodeSize  encodeSize  i  inAvail  inPos  len  lineLength  maxResultSize  modulus  outAvail  outPos  pos  readPos  result  x  long  len  	projects/Codec4/src/java/org/apache/commons/codec/binary/Base64.java	1.0	931	931	2	replace	return(pArray  ==  null)?  null  :  pArray.clone();	return  pArray;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
