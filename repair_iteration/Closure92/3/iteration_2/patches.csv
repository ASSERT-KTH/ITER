bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  providedNames.get(pos).addProvide(prefixNs,  module,  false  /*  implicit  */,  node);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(pos).addProvide(prefixNs,  module,  false  /*  implicit  */,  node);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(pos).addProvide(prefixNs,  module,  false  /*  implicit  */,  node);	  providedNames.get(pos).addProvide(node,    module,    false    /*    implicit    */,    prefixNs);    	non-compiled	[CE]  not  a  statement	18	None	replace
2	[BUG]  [BUGGY]  providedNames.get(pos).addProvide(prefixNs,  module,  false  /*  implicit  */,  prefixNs);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(pos).addProvide(prefixNs,  module,  false  /*  implicit  */,  prefixNs);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(pos).addProvide(prefixNs,  module,  false  /*  implicit  */,  prefixNs);	  providedNames.get(pos).addProvide(node,    module,    false    /*    implicit    */,    prefixNs);    	non-compiled	[CE]  ';'  expected	18	None	replace
3	[BUG]  [BUGGY]  providedNames.get(pos).addProvide(node,  module,  true  /*  implicit  */,  prefixNs);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(pos).addProvide(node,  module,  true  /*  implicit  */,  prefixNs);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(pos).addProvide(node,  module,  true  /*  implicit  */,  prefixNs);	  providedNames.get(pos).addProvide(node,    module,    false    /*    implicit    */,    prefixNs);    	non-compiled	[CE]  ';'  expected	18	None	replace
4	[BUG]  [BUGGY]  providedNames.get(pos).addProvide(prefixNs,  node,  module,  true  /*  implicit  */);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(pos).addProvide(prefixNs,  node,  module,  true  /*  implicit  */);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(pos).addProvide(prefixNs,  node,  module,  true  /*  implicit  */);	  providedNames.get(pos).addProvide(prefixNs,    node,    module,    false    /*    implicit    */);    	non-compiled	[CE]  ';'  expected	10	None	replace
5	[BUG]  [BUGGY]  providedNames.get(0).addProvide(prefixNs,  node,  module,  false  /*  implicit  */);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(0).addProvide(prefixNs,  node,  module,  false  /*  implicit  */);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(0).addProvide(prefixNs,  node,  module,  false  /*  implicit  */);	  providedNames.get(pos).addProvide(prefixNs,    node,    module,    false    /*    implicit    */);    	non-compiled	[CE]  ';'  expected	10	None	replace
6	[BUG]  [BUGGY]  providedNames.get(pos).addProvide(prefixNs,  ns,  module,  false  /*  implicit  */);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(pos).addProvide(prefixNs,  ns,  module,  false  /*  implicit  */);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(pos).addProvide(prefixNs,  ns,  module,  false  /*  implicit  */);	  providedNames.get(pos).addProvide(prefixNs,    node,    module,    false    /*    implicit    */);    	non-compiled	[CE]  ';'  expected	10	None	replace
7	[BUG]  [BUGGY]  providedNames.get(pos).addProvide(prefixNs,  module,  true  /*  implicit  */);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(pos).addProvide(prefixNs,  module,  true  /*  implicit  */);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(pos).addProvide(prefixNs,  module,  true  /*  implicit  */);	  providedNames.get(pos).addProvide(node,    module,    true    /*    implicit    */);    	non-compiled	[CE]  ';'  expected	9	None	replace
8	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  module,  ns);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  module,  ns);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  module,  ns);	  NodeTraversal.traverse(compiler,    node,    module);    	non-compiled	[CE]  ';'  expected	17	None	replace
9	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  module,  false);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  module,  false);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  module,  false);	  NodeTraversal.traverse(compiler,    node,    module);    	non-compiled	[CE]  ';'  expected	17	None	replace
10	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  module,  explicit);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  module,  explicit);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  module,  explicit);	  NodeTraversal.traverse(compiler,    node,    module);    	non-compiled	[CE]  ';'  expected	17	None	replace
11	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  module,  providedNames);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  module,  providedNames);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  module,  providedNames);	  NodeTraversal.traverse(compiler,    node,    module);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
12	[BUG]  [BUGGY]  providedNames.get(0).addProvide(prefixNs,  module,  false  /*  implicit  */);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(0).addProvide(prefixNs,  module,  false  /*  implicit  */);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(0).addProvide(prefixNs,  module,  false  /*  implicit  */);	  providedNames.get(pos).addProvide(prefixNs,    module,    false    /*    implicit    */);    	non-compiled	[CE]  ';'  expected	8	None	replace
13	[BUG]  [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  true  /*  implicit  */,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  true  /*  implicit  */,  pos  +  1);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(prefixNs).addProvide(node,  module,  true  /*  implicit  */,  pos  +  1);	  providedNames.get(prefixNs).addProvide(node,    module,    true    /*    implicit    */,    pos);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  ns  =  ns.substring(0,  pos  +  1);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  ns  =  ns.substring(0,  pos  +  1);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	ns  =  ns.substring(0,  pos  +  1);	  ns    =    ns.substring(0,    pos);    	non-compiled	[CE]  ';'  expected	15	None	replace
15	[BUG]  [BUGGY]  ns  =  prefixNs.substring(0,  pos);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  ns  =  prefixNs.substring(0,  pos);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	ns  =  prefixNs.substring(0,  pos);	  ns    =    ns.substring(0,    pos);    	non-compiled	[CE]  ';'  expected	15	None	replace
16	[BUG]  [BUGGY]  ns  =  ns.substring(0,  pos  +  2);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  ns  =  ns.substring(0,  pos  +  2);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	ns  =  ns.substring(0,  pos  +  2);	  ns    =    ns.substring(0,    pos);    	non-compiled	[CE]  ';'  expected	15	None	replace
17	[BUG]  [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  true  /*  implicit  */,  ns,  pos);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  true  /*  implicit  */,  ns,  pos);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(prefixNs).addProvide(node,  module,  true  /*  implicit  */,  ns,  pos);	  providedNames.get(prefixNs).addProvide(node,    module,    false    /*    implicit    */,    ns,    pos);    	non-compiled	[CE]  ';'  expected	19	None	replace
18	[BUG]  [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */,  prefixNs,  pos);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */,  prefixNs,  pos);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */,  prefixNs,  pos);	  providedNames.get(prefixNs).addProvide(node,    module,    false    /*    implicit    */,    ns,    pos);    	non-compiled	[CE]  ';'  expected	19	None	replace
19	[BUG]  [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */,  ns,  pos  +  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */,  ns,  pos  +  1);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */,  ns,  pos  +  1);	  providedNames.get(prefixNs).addProvide(node,    module,    false    /*    implicit    */,    ns,    pos);    	non-compiled	[CE]  ';'  expected	19	None	replace
20	[BUG]  [BUGGY]  Node  module  =  ns.substring(pos  +  1,  pos);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  ns.substring(pos  +  1,  pos);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  ns.substring(pos  +  1,  pos);	  Node    module    =    ns.substring(pos    +    1);    	non-compiled	[CE]  ';'  expected	3	None	replace
21	[BUG]  [BUGGY]  Node  module  =  node.substring(pos  +  1);  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  node.substring(pos  +  1);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  node.substring(pos  +  1);	  Node    module    =    ns.substring(pos    +    1);    	non-compiled	[CE]  ';'  expected	3	None	replace
22	[BUG]  [BUGGY]  Node  module  =  ns.substring(pos  +  1,  prefixNs);  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  ns.substring(pos  +  1,  prefixNs);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  ns.substring(pos  +  1,  prefixNs);	  Node    module    =    ns.substring(pos    +    1);    	non-compiled	[CE]  ';'  expected	3	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(providedNames.containsKey(ns));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Preconditions.checkState(providedNames.containsKey(ns));  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Preconditions.checkState(providedNames.containsKey(ns));	  Preconditions.checkState(providedNames.containsKey(prefixNs));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(providedNames.containsKey(prefixNs),  module);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Preconditions.checkState(providedNames.containsKey(prefixNs),  module);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Preconditions.checkState(providedNames.containsKey(prefixNs),  module);	  Preconditions.checkState(providedNames.containsKey(prefixNs));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  Preconditions.checkState(providedNames.containsKey(prefixNs,  pos));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Preconditions.checkState(providedNames.containsKey(prefixNs,  pos));  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Preconditions.checkState(providedNames.containsKey(prefixNs,  pos));	  Preconditions.checkState(providedNames.containsKey(prefixNs));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
26	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  providedNames,  prefixNs);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  providedNames,  prefixNs);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  providedNames,  prefixNs);	  NodeTraversal.traverse(compiler,    node,    providedNames);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
27	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  providedNames,  module);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  providedNames,  module);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  providedNames,  module);	  NodeTraversal.traverse(compiler,    node,    providedNames);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  providedNames,  pos);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  providedNames,  pos);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  providedNames,  pos);	  NodeTraversal.traverse(compiler,    node,    providedNames);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
29	[BUG]  [BUGGY]  providedNames.get(0).addProvide(node,  module,  false  /*  implicit  */);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(0).addProvide(node,  module,  false  /*  implicit  */);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(0).addProvide(node,  module,  false  /*  implicit  */);	  providedNames.get(0).addProvide(node,    module,    true    /*    implicit    */);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
30	[BUG]  [BUGGY]  providedNames.get(0).addProvide(prefixNs,  module,  true  /*  implicit  */);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(0).addProvide(prefixNs,  module,  true  /*  implicit  */);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(0).addProvide(prefixNs,  module,  true  /*  implicit  */);	  providedNames.get(0).addProvide(node,    module,    true    /*    implicit    */);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  providedNames.get(1).addProvide(node,  module,  false  /*  implicit  */);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(1).addProvide(node,  module,  false  /*  implicit  */);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(1).addProvide(node,  module,  false  /*  implicit  */);	  providedNames.get(0).addProvide(node,    module,    true    /*    implicit    */);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  providedNames.get(0).addProvide(prefixNs,  node,  module,  true  /*  implicit  */);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(0).addProvide(prefixNs,  node,  module,  true  /*  implicit  */);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(0).addProvide(prefixNs,  node,  module,  true  /*  implicit  */);	  providedNames.get(0).addProvide(node,    module,    true    /*    implicit    */);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  Node  module  =  ns.substring(0,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  ns.substring(0,  pos  +  1);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  ns.substring(0,  pos  +  1);	  Node    module    =    ns.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  Node  module  =  node.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  node.substring(0,  pos);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  node.substring(0,  pos);	  Node    module    =    ns.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
35	[BUG]  [BUGGY]  Node  module  =  prefixNs.substring(0,  pos);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  prefixNs.substring(0,  pos);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  prefixNs.substring(0,  pos);	  Node    module    =    ns.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
36	[BUG]  [BUGGY]  Node  module  =  ns.substring(0,  pos  +  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  ns.substring(0,  pos  +  2);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  ns.substring(0,  pos  +  2);	  Node    module    =    ns.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
37	[BUG]  [BUGGY]  Node  module  =  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  node.getFirstChild();  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  node.getFirstChild();	  Node    module    =    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  Node  module  =  ns.getLastChild();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  ns.getLastChild();  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  ns.getLastChild();	  Node    module    =    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */,  pos  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */,  pos  +  1);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */,  pos  +  1);	  providedNames.get(prefixNs).addProvide(node,    module,    false    /*    implicit    */,    pos);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */,  prefixNs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */,  prefixNs);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(prefixNs).addProvide(node,  module,  false  /*  implicit  */,  prefixNs);	  providedNames.get(prefixNs).addProvide(node,    module,    false    /*    implicit    */,    pos);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  Node  module  =  node.getModule();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  node.getModule();  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  node.getModule();	  Node    module    =    node.getParent();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
42	[BUG]  [BUGGY]  Node  module  =  node.getNext();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  node.getNext();  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  node.getNext();	  Node    module    =    node.getParent();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ProvidedName(ns,  module));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ProvidedName(ns,  module));  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  new  ProvidedName(ns,  module));	  NodeTraversal.traverse(compiler,    node,    new    ProvidedName(prefixNs,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
44	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ProvidedName(prefixNs,  module),  ns);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ProvidedName(prefixNs,  module),  ns);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  new  ProvidedName(prefixNs,  module),  ns);	  NodeTraversal.traverse(compiler,    node,    new    ProvidedName(prefixNs,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ProvidedName(prefixNs,  module),  providedNames);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ProvidedName(prefixNs,  module),  providedNames);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  new  ProvidedName(prefixNs,  module),  providedNames);	  NodeTraversal.traverse(compiler,    node,    new    ProvidedName(prefixNs,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
46	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ProvidedName(prefixNs,  module,  false));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ProvidedName(prefixNs,  module,  false));  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  new  ProvidedName(prefixNs,  module,  false));	  NodeTraversal.traverse(compiler,    node,    new    ProvidedName(prefixNs,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
47	[BUG]  [BUGGY]  ns  =  ns.substring(0,  pos  +  3);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  ns  =  ns.substring(0,  pos  +  3);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	ns  =  ns.substring(0,  pos  +  3);	  ns    =    ns.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
48	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  providedNames);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  providedNames);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  ns,  providedNames);	  NodeTraversal.traverse(compiler,    node,    providedNames);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  providedNames.get(pos).addProvide(node,  module,  false  /*  implicit  */,  ns,  prefixNs);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(pos).addProvide(node,  module,  false  /*  implicit  */,  ns,  prefixNs);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(pos).addProvide(node,  module,  false  /*  implicit  */,  ns,  prefixNs);	  providedNames.get(prefixNs).addProvide(node,    module,    false    /*    implicit    */,    ns,    pos);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
50	[BUG]  [BUGGY]  Node  module  =  ns.substring(0,  pos  +  3);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  ns.substring(0,  pos  +  3);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  ns.substring(0,  pos  +  3);	  Node    module    =    ns.substring(0,    pos);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
51	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  module,  expr);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  module,  expr);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  module,  expr);	  NodeTraversal.traverse(compiler,    node,    module);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
52	[BUG]  [BUGGY]  Node  module  =  ns.substring(pos  +  1,  prefixNs.length());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  ns.substring(pos  +  1,  prefixNs.length());  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  ns.substring(pos  +  1,  prefixNs.length());	  Node    module    =    ns.substring(pos    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ProvidedName(node,  module));  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ProvidedName(node,  module));  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  new  ProvidedName(node,  module));	  NodeTraversal.traverse(compiler,    node,    new    ProvidedName(prefixNs,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(prefixNs,  module));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(prefixNs,  module));  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(prefixNs,  module));	  NodeTraversal.traverse(compiler,    node,    new    ProvidedName(prefixNs,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  providedNames.get(pos).addProvide(new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(pos).addProvide(new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(pos).addProvide(new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */);	  providedNames.get(pos).addProvide(prefixNs,    node,    module,    false    /*    implicit    */);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
56	[BUG]  [BUGGY]  Preconditions.checkState(providedNames.containsKey(prefixNs,  module));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Preconditions.checkState(providedNames.containsKey(prefixNs,  module));  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Preconditions.checkState(providedNames.containsKey(prefixNs,  module));	  Preconditions.checkState(providedNames.containsKey(prefixNs));    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
57	[BUG]  [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  true  /*  implicit  */,  prefixNs);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  true  /*  implicit  */,  prefixNs);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(prefixNs).addProvide(node,  module,  true  /*  implicit  */,  prefixNs);	  providedNames.get(prefixNs).addProvide(node,    module,    true    /*    implicit    */,    pos);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  Node  module  =  ns.removeFirstChild();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  ns.removeFirstChild();  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  ns.removeFirstChild();	  Node    module    =    ns.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
59	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  module,  implicit);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  module,  implicit);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  module,  implicit);	  NodeTraversal.traverse(compiler,    node,    module);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
60	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ProvidedName(prefixNs,  module),  this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  new  ProvidedName(prefixNs,  module),  this);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  new  ProvidedName(prefixNs,  module),  this);	  NodeTraversal.traverse(compiler,    node,    new    ProvidedName(prefixNs,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
61	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  module,  new  ProvidedName(prefixNs,  module));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  module,  new  ProvidedName(prefixNs,  module));  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  module,  new  ProvidedName(prefixNs,  module));	  NodeTraversal.traverse(compiler,    node,    new    ProvidedName(prefixNs,    module));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
62	[BUG]  [BUGGY]  providedNames.get(pos).addProvide(prefixNs,  module,  false  /*  implicit  */,  ns);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(pos).addProvide(prefixNs,  module,  false  /*  implicit  */,  ns);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(pos).addProvide(prefixNs,  module,  false  /*  implicit  */,  ns);	  providedNames.get(pos).addProvide(prefixNs,    module,    false    /*    implicit    */);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
63	[BUG]  [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  ns,  false  /*  implicit  */,  pos);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  providedNames.get(prefixNs).addProvide(node,  module,  ns,  false  /*  implicit  */,  pos);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	providedNames.get(prefixNs).addProvide(node,  module,  ns,  false  /*  implicit  */,  pos);	  providedNames.get(prefixNs).addProvide(node,    module,    false    /*    implicit    */,    ns,    pos);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
64	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  node,  modules);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  NodeTraversal.traverse(compiler,  node,  modules);  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	NodeTraversal.traverse(compiler,  node,  modules);	  NodeTraversal.traverse(compiler,    node,    providedNames);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
65	[BUG]  [BUGGY]  Node  module  =  node.removeFirstChild();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  registerAnyProvidedPrefixes(  String  ns,  Node  node,  JSModule  module)  {  int  pos  =  ns.indexOf('.');  while  (pos  !=  -1)  {  String  prefixNs  =  ns.substring(0,  pos);  pos  =  ns.indexOf('.',  pos  +  1);  if  (providedNames.containsKey(prefixNs))  {      [BUGGY]  Node  module  =  node.removeFirstChild();  [BUGGY]      node,  module,  false  /*  implicit  */);  }  else  {  providedNames.put(  prefixNs,  new  ProvidedName(prefixNs,  node,  module,  false  /*  implicit  */));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  registerAnyProvidedPrefixes  [RETURN_TYPE]  void  String  ns  Node  node  JSModule  module  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  node  parent  replacementNode  requireNode  root  scopeRoot  thisArg  value  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  int  pos  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.17677669529663687	643	644	1	replace	Node  module  =  node.removeFirstChild();	  Node    module    =    node.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
