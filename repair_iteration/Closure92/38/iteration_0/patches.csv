bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if  ( "requireCall ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  ( "base ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [BUGGY]  }  else  if  ( "requireCall ".equals(methodName))  {  [BUGGY]  processRequireCall(t,  n,  parent);  }  else  if  ( "provide ".equals(methodName))  {  processProvideCall(t,  n,  parent);  }  else  if  ( "exportSymbol ".equals(methodName))  {  Node  arg  =  left.getNext();  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.12803687993289598	163	163	1	replace	}  else  if  ( "requireCall ".equals(methodName))  {	}  else  if  ( "require ".equals(methodName))  {  	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
2	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  ( "base ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [BUGGY]    [BUGGY]  processRequireCall(t,  n,  parent);  }  else  if  ( "provide ".equals(methodName))  {  processProvideCall(t,  n,  parent);  }  else  if  ( "exportSymbol ".equals(methodName))  {  Node  arg  =  left.getNext();  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.12803687993289598	163	163	1	replace	  	}  else  if  ( "require ".equals(methodName))  {  	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
3	[BUG]  [BUGGY]  }  else  if( ".require ".equals(methodName))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  ( "base ".equals(methodName))  {  processBaseClassCall(t,  n);  }  else  if  (!isExpr)  {  break;  [BUGGY]  }  else  if( ".require ".equals(methodName))  {  [BUGGY]  processRequireCall(t,  n,  parent);  }  else  if  ( "provide ".equals(methodName))  {  processProvideCall(t,  n,  parent);  }  else  if  ( "exportSymbol ".equals(methodName))  {  Node  arg  =  left.getNext();  [CLASS]  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.12803687993289598	163	163	1	replace	}  else  if( ".require ".equals(methodName))  {	}  else  if  ( "require ".equals(methodName))  {  	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
