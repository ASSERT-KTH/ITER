bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  false));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  false));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ns,  new  ProvidedName(ns,  parent,  t.getModule(),  false));	  ns,    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  not  a  statement	8	None	replace
2	[BUG]  [BUGGY]  ns,  new  ProvidedName(ns,  previousProvided,  t.getModule(),  true));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ns,  new  ProvidedName(ns,  previousProvided,  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ns,  new  ProvidedName(ns,  previousProvided,  t.getModule(),  true));	  ns,    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  not  a  statement	8	None	replace
3	[BUG]  [BUGGY]  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true),  previousProvided);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true),  previousProvided);  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true),  previousProvided);	  ns,    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  not  a  statement	8	None	replace
4	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitives(),  previousProvided);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitives(),  previousProvided);  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProcessClosurePrimitives(),  previousProvided);	  NodeTraversal.traverse(compiler,    ns,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
5	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  registerAnyProvidedPrefixes());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  registerAnyProvidedPrefixes());  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  registerAnyProvidedPrefixes());	  NodeTraversal.traverse(compiler,    ns,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProcessClosurePrimitives(),  previousProvided);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProcessClosurePrimitives(),  previousProvided);  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProcessClosurePrimitives(),  previousProvided);	  NodeTraversal.traverse(compiler,    ns,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  ProvidedName  previousProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  previousProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  previousProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true));	  ProvidedName    previousProvided    =    new    ProvidedName(ns,    parent,    t.getModule(),    false));    	non-compiled	[CE]  ';'  expected	13	None	replace
8	[BUG]  [BUGGY]  providedName  previousProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  providedName  previousProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	providedName  previousProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true));	  ProvidedName    previousProvided    =    new    ProvidedName(ns,    parent,    t.getModule(),    false));    	non-compiled	[CE]  ';'  expected	13	None	replace
9	[BUG]  [BUGGY]  ProvidedName  previousProvided  =  new  ProvidedName(parent,  t.getModule(),  true));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  previousProvided  =  new  ProvidedName(parent,  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  previousProvided  =  new  ProvidedName(parent,  t.getModule(),  true));	  ProvidedName    previousProvided    =    new    ProvidedName(ns,    parent,    t.getModule(),    false));    	non-compiled	[CE]  ';'  expected	13	None	replace
10	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  false));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  false));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  false));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(ns,    parent,    t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previousProvided,  t.getModule()));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previousProvided,  t.getModule()));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previousProvided,  t.getModule()));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(ns,    parent,    t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  providedNames.put(ns,  new  ProvidedName(ns,  parent,  t.getModule(),  false),  previouslyProvided);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  providedNames.put(ns,  new  ProvidedName(ns,  parent,  t.getModule(),  false),  previouslyProvided);  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	providedNames.put(ns,  new  ProvidedName(ns,  parent,  t.getModule(),  false),  previouslyProvided);	  providedNames.put(ns,    new    ProvidedName(ns,    parent,    t.getModule(),    true),    previouslyProvided);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  previouslyProvided,  new  ProvidedName(ns),  t.getModule());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  previouslyProvided,  new  ProvidedName(ns),  t.getModule());  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  previouslyProvided,  new  ProvidedName(ns),  t.getModule());	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided),    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
14	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previouslyProvided),  t.getModule());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previouslyProvided),  t.getModule());  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previouslyProvided),  t.getModule());	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided),    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
15	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(previouslyProvided),  t.getModule(),  true);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(previouslyProvided),  t.getModule(),  true);  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProvidedName(previouslyProvided),  t.getModule(),  true);	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided),    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
16	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided),  t.getModule(),  true);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided),  t.getModule(),  true);  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided),  t.getModule(),  true);	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided),    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
17	[BUG]  [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  previousProvided,  t.getModule(),  null));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  previousProvided,  t.getModule(),  null));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  providedNames  =  new  ProvidedName(ns,  previousProvided,  t.getModule(),  null));	  ProvidedName    providedNames    =    new    ProvidedName(ns,    parent,    t.getModule(),    null));    	non-compiled	[CE]  ';'  expected	16	None	replace
18	[BUG]  [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  null,  false));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  null,  false));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  null,  false));	  ProvidedName    providedNames    =    new    ProvidedName(ns,    parent,    t.getModule(),    null));    	non-compiled	[CE]  ';'  expected	16	None	replace
19	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previousProvided,  t.getModule(),  true));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previousProvided,  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previousProvided,  t.getModule(),  true));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(ns,  parent,  t.getModule(),  false));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  ProvidedName(ns,  parent,  t.getModule(),  false));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  n,  new  ProvidedName(ns,  parent,  t.getModule(),  false));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true),  previousProvided);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true),  previousProvided);  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true),  previousProvided);	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  previouslyProvided,  new  ProvidedName(ns,  t.getModule()));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  previouslyProvided,  new  ProvidedName(ns,  t.getModule()));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  previouslyProvided,  new  ProvidedName(ns,  t.getModule()));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided,    t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
23	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided,  parent,  t.getModule()));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided,  parent,  t.getModule()));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided,  parent,  t.getModule()));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided,    t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
24	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previouslyProvided,  t.getModule()));  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previouslyProvided,  t.getModule()));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previouslyProvided,  t.getModule()));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided,    t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
25	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  previouslyProvided,  new  ProvidedName(ns),  t.getModule(),  true));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  previouslyProvided,  new  ProvidedName(ns),  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  previouslyProvided,  new  ProvidedName(ns),  t.getModule(),  true));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided),    t.getModule(),    true));    	non-compiled	[CE]  ';'  expected	14	None	replace
26	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided),  t.getModule(),  false));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided),  t.getModule(),  false));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided),  t.getModule(),  false));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided),    t.getModule(),    true));    	non-compiled	[CE]  ';'  expected	14	None	replace
27	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided,  t.getModule(),  false));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided,  t.getModule(),  false));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided,  t.getModule(),  false));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided),    t.getModule(),    true));    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previouslyProvided),  t.getModule(),  true));  [CE]  ';'  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previouslyProvided),  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  previouslyProvided),  t.getModule(),  true));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided),    t.getModule(),    true));    	non-compiled	[CE]  ';'  expected	14	None	replace
29	[BUG]  [BUGGY]  ProvidedName  suppliedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  false));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  suppliedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  false));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  suppliedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  false));	  ProvidedName    suppliedNames    =    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  ';'  expected	6	None	replace
30	[BUG]  [BUGGY]  ProvidedName  suppliedNames  =  new  ProvidedName(ns,  previousProvided,  t.getModule(),  true));  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  suppliedNames  =  new  ProvidedName(ns,  previousProvided,  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  suppliedNames  =  new  ProvidedName(ns,  previousProvided,  t.getModule(),  true));	  ProvidedName    suppliedNames    =    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  ';'  expected	6	None	replace
31	[BUG]  [BUGGY]  providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  false));  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  false));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  false));	  ProvidedName    suppliedNames    =    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  ';'  expected	6	None	replace
32	[BUG]  [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  previousProvided,  t.getModule(),  true));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  previousProvided,  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  providedNames  =  new  ProvidedName(ns,  previousProvided,  t.getModule(),  true));	  ProvidedName    providedNames    =    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  ';'  expected	3	None	replace
33	[BUG]  [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  previouslyProvided,  t.getModule(),  false));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  previouslyProvided,  t.getModule(),  false));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  providedNames  =  new  ProvidedName(ns,  previouslyProvided,  t.getModule(),  false));	  ProvidedName    providedNames    =    new    ProvidedName(ns,    previousProvided,    t.getModule(),    false));    	non-compiled	[CE]  ';'  expected	4	None	replace
34	[BUG]  [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(previouslyProvided,  t.getModule(),  true));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(previouslyProvided,  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  providedNames  =  new  ProvidedName(previouslyProvided,  t.getModule(),  true));	  ProvidedName    providedNames    =    new    ProvidedName(ns,    previousProvided,    t.getModule(),    false));    	non-compiled	[CE]  ';'  expected	4	None	replace
35	[BUG]  [BUGGY]  ns  =  new  ProvidedName(ns,  parent,  t.getModule(),  false));  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ns  =  new  ProvidedName(ns,  parent,  t.getModule(),  false));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ns  =  new  ProvidedName(ns,  parent,  t.getModule(),  false));	  providedNames    =    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  ';'  expected	5	None	replace
36	[BUG]  [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(parent,  t.getModule(),  true));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(parent,  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  providedNames  =  new  ProvidedName(parent,  t.getModule(),  true));	  ProvidedName    providedNames    =    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  ';'  expected	3	None	replace
37	[BUG]  [BUGGY]  ns,  new  ProvidedName(parent,  t.getModule(),  true));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ns,  new  ProvidedName(parent,  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ns,  new  ProvidedName(parent,  t.getModule(),  true));	  ns,    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  not  a  statement	8	None	replace
38	[BUG]  [BUGGY]  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  null));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  null));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ns,  new  ProvidedName(ns,  parent,  t.getModule(),  null));	  ns,    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  not  a  statement	8	None	replace
39	[BUG]  [BUGGY]  ProvidedName  previousProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true),  previouslyProvided);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  previousProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true),  previouslyProvided);  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  previousProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true),  previouslyProvided);	  ProvidedName    previousProvided    =    new    ProvidedName(ns,    parent,    t.getModule(),    false));    	non-compiled	[CE]  ';'  expected	13	None	replace
40	[BUG]  [BUGGY]  ProvidedName  previouslyProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  previouslyProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  previouslyProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true));	  ProvidedName    previousProvided    =    new    ProvidedName(ns,    parent,    t.getModule(),    false));    	non-compiled	[CE]  ';'  expected	13	None	replace
41	[BUG]  [BUGGY]  ProvidedName  suppliedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  null));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  suppliedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  null));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  suppliedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  null));	  ProvidedName    suppliedNames    =    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  ';'  expected	6	None	replace
42	[BUG]  [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  previouslyProvided,  t.getModule(),  true));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  previouslyProvided,  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  providedNames  =  new  ProvidedName(ns,  previouslyProvided,  t.getModule(),  true));	  ProvidedName    providedNames    =    new    ProvidedName(ns,    previousProvided,    t.getModule(),    false));    	non-compiled	[CE]  ';'  expected	4	None	replace
43	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  previousProvided,  new  ProvidedName(ns),  t.getModule(),  true));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  previousProvided,  new  ProvidedName(ns),  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  previousProvided,  new  ProvidedName(ns),  t.getModule(),  true));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided),    t.getModule(),    true));    	non-compiled	[CE]  ';'  expected	14	None	replace
44	[BUG]  [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  null,  previousProvided));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  null,  previousProvided));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  null,  previousProvided));	  ProvidedName    providedNames    =    new    ProvidedName(ns,    parent,    t.getModule(),    null));    	non-compiled	[CE]  ';'  expected	16	None	replace
45	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided,  t.getModule(),  true));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided,  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(previouslyProvided,  t.getModule(),  true));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided,    t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(n,  previouslyProvided,  t.getModule()));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(n,  previouslyProvided,  t.getModule()));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(n,  previouslyProvided,  t.getModule()));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided,    t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
47	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(parent,  t.getModule()));  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(parent,  t.getModule()));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(parent,  t.getModule()));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided,    t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
48	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  null));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  null));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns,  parent,  t.getModule(),  null));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
49	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName());  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName());	  NodeTraversal.traverse(compiler,    ns,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(wrappedProvided),  t.getModule());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(wrappedProvided),  t.getModule());  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(wrappedProvided),  t.getModule());	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided),    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
51	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns),  t.getModule());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns),  t.getModule());  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(ns),  t.getModule());	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided),    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
52	[BUG]  [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  null,  true));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  null,  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  null,  true));	  ProvidedName    providedNames    =    new    ProvidedName(ns,    parent,    t.getModule(),    null));    	non-compiled	[CE]  ';'  expected	16	None	replace
53	[BUG]  [BUGGY]  ProvidedName  previousProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  previousProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true);  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  previousProvided  =  new  ProvidedName(ns,  parent,  t.getModule(),  true);	  ProvidedName    previousProvided    =    new    ProvidedName(ns,    parent,    t.getModule(),    false));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  false);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  ProvidedName  providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  false);  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	ProvidedName  providedNames  =  new  ProvidedName(ns,  parent,  t.getModule(),  false);	  ProvidedName    providedNames    =    new    ProvidedName(ns,    parent,    t.getModule(),    true));    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
55	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProcessClosurePrimitives(t));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProcessClosurePrimitives(t));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProcessClosurePrimitives(t));	  NodeTraversal.traverse(compiler,    ns,    new    ProcessClosurePrimitives());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
56	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(parent,  previouslyProvided),  t.getModule(),  true));  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(parent,  previouslyProvided),  t.getModule(),  true));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(parent,  previouslyProvided),  t.getModule(),  true));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided),    t.getModule(),    true));    	non-compiled	[CE]  ';'  expected	14	None	replace
57	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(node,  previouslyProvided),  t.getModule());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(node,  previouslyProvided),  t.getModule());  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(node,  previouslyProvided),  t.getModule());	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(previouslyProvided),    t.getModule());    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
58	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(null,  parent,  t.getModule()));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (providedNames.containsKey(ns))  {  ProvidedName  previouslyProvided  =  providedNames.get(ns);  if  (!previouslyProvided.isExplicitlyProvided())  {  previouslyProvided.addProvide(parent,  t.getModule(),  true);  }  else  {  compiler.report(  t.makeError(n,  DUPLICATE_NAMESPACE_ERROR,  ns));  }  }  else  {  registerAnyProvidedPrefixes(ns,  parent,  t.getModule());      [BUGGY]  NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(null,  parent,  t.getModule()));  [BUGGY]      ns,  new  ProvidedName(ns,  parent,  t.getModule(),  true));  }  }  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  processProvideCall  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  Set  exportedVariables  NodeTraversal  t  CheckLevel  requiresLevel  ProvidedName  previouslyProvided  Node  arg  candidateDefinition  explicitNode  externs  firstNode  left  n  name  node  parent  replacementNode  requireNode  root  String  GOOG  inputName  methodName  name  namespace  ns  typeDecl  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  error  JSModule  explicitModule  firstModule  minimumModule  module  providedModule  List  typeDecls  unrecognizedRequires  Map  providedNames  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.1386750490563073	291	292	1	replace	NodeTraversal.traverse(compiler,  ns,  new  ProvidedName(null,  parent,  t.getModule()));	  NodeTraversal.traverse(compiler,    ns,    new    ProvidedName(ns,    parent,    t.getModule()));    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
