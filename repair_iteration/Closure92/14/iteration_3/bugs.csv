bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.OBJECTLIT)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.OBJECTLIT)  {	  }    else    if(value.getType()    ==    Token.VAR    &&    n.getType()    ==    Token.OBJECTLIT)    {    	non-compiled	[CE]  ')'  expected	28	None	replace
2	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.OBJECTLIT)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.OBJECTLIT)  {	  }    else    if(value.getType()    ==    Token.VAR    &&    n.getType()    ==    Token.OBJECTLIT)    {    	non-compiled	[CE]  ')'  expected	28	None	replace
3	[BUG]  [BUGGY]  n.removeChild(value);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  n.removeChild(value);  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	n.removeChild(value);	  n.removeChild(assign);    	non-compiled	[CE]  ')'  expected	34	None	replace
4	[BUG]  [BUGGY]  node.removeChild(assign);  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  node.removeChild(assign);  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	node.removeChild(assign);	  n.removeChild(assign);    	non-compiled	[CE]  ')'  expected	34	None	replace
5	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  n.getType()!=  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  n.getType()!=  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  n.getType()!=  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.VAR    ||    n.getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	3	None	replace
6	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  n.getType()!=  Token.NAME)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  n.getType()!=  Token.NAME)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  n.getType()!=  Token.NAME)  {	  }    else    if(n.getType()    ==    Token.VAR    ||    n.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	22	None	replace
7	[BUG]  [BUGGY]  }  else  if(n.getType()!=  Token.VAR  &&  n.getType()!=  Token.NAME)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()!=  Token.VAR  &&  n.getType()!=  Token.NAME)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()!=  Token.VAR  &&  n.getType()!=  Token.NAME)  {	  }    else    if(n.getType()    ==    Token.VAR    ||    n.getType()!=    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	22	None	replace
8	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.VAR)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.VAR)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.VAR)  {	  }    else    if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ')'  expected	2	None	replace
9	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.VAR)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.VAR)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.VAR)  {	  }    else    if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ')'  expected	2	None	replace
10	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.FUNCTION  ||  assign.getType()  ==  Token.VAR)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.FUNCTION  ||  assign.getType()  ==  Token.VAR)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.FUNCTION  ||  assign.getType()  ==  Token.VAR)  {	  }    else    if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ')'  expected	2	None	replace
11	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  NodeUtil.isAssignmentOp(n))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  NodeUtil.isAssignmentOp(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  ||  NodeUtil.isAssignmentOp(n))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(n))    {    	non-compiled	[CE]  ')'  expected	30	None	replace
12	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.VAR)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.VAR)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.VAR)  {	  }    else    if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
13	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.VAR)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.VAR)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.VAR)  {	  }    else    if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
14	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceDeclaration(value))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceDeclaration(value))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceDeclaration(value))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isNamespaceDeclaration(n))    {    	non-compiled	[CE]  ')'  expected	10	None	replace
15	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isNamespaceDeclaration(n))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isNamespaceDeclaration(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isNamespaceDeclaration(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isNamespaceDeclaration(n))    {    	non-compiled	[CE]  ')'  expected	10	None	replace
16	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.OBJECTLIT)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.OBJECTLIT)  {	  }    else    if(n.getType()!=    Token.VAR    &&    n.getType()    ==    Token.OBJECTLIT)    {    	non-compiled	[CE]  ')'  expected	16	None	replace
17	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isExpressionNode(n))  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isExpressionNode(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isExpressionNode(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  ')'  expected	13	None	replace
18	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceNode(n))  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceNode(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceNode(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  ')'  expected	13	None	replace
19	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(n))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isAssignmentOp(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(n))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
20	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespacePlaceholder(n))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespacePlaceholder(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespacePlaceholder(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(n))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
21	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.CALL  &&  n.getType()  ==  Token.VAR)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.CALL  &&  n.getType()  ==  Token.VAR)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.CALL  &&  n.getType()  ==  Token.VAR)  {	  }    else    if(n.getType()    ==    Token.CALL    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
22	[BUG]  [BUGGY]  }  else  if(n.getType()!=  Token.CALL  &&  n.getType()  ==  Token.VAR)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()!=  Token.CALL  &&  n.getType()  ==  Token.VAR)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()!=  Token.CALL  &&  n.getType()  ==  Token.VAR)  {	  }    else    if(n.getType()    ==    Token.CALL    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
23	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.CALL  &&  n.getType()!=  Token.VAR)  {  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.CALL  &&  n.getType()!=  Token.VAR)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.CALL  &&  n.getType()!=  Token.VAR)  {	  }    else    if(n.getType()    ==    Token.CALL    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
24	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.NAME)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.NAME)  {	  }    else    if(n.getType()    ==    Token.VAR    ||    assign.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
25	[BUG]  [BUGGY]  }  else  if(assign.getType()  ==  Token.VAR  ||  assign.getType()  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(assign.getType()  ==  Token.VAR  ||  assign.getType()  ==  Token.NAME)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(assign.getType()  ==  Token.VAR  ||  assign.getType()  ==  Token.NAME)  {	  }    else    if(n.getType()    ==    Token.VAR    ||    assign.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
26	[BUG]  [BUGGY]  }  else  if(assign.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(assign.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.NAME)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(assign.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.NAME)  {	  }    else    if(n.getType()    ==    Token.VAR    ||    assign.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
27	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.CALL)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.CALL)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.CALL)  {	  }    else    if(value.getType()    ==    Token.VAR    &&    n.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  ')'  expected	26	None	replace
28	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.CALL)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.CALL)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.CALL)  {	  }    else    if(value.getType()    ==    Token.VAR    &&    n.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  ')'  expected	26	None	replace
29	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.VAR    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	1	None	replace
30	[BUG]  [BUGGY]  Node  value  =  n.getFirstChild();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  value  =  n.getFirstChild();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  value  =  n.getFirstChild();	  Node    value    =    assign.getFirstChild();    	non-compiled	[CE]  ')'  expected	17	None	replace
31	[BUG]  [BUGGY]  Node  arg  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  arg  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  arg  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    arg    =    assign.getLastChild();    	non-compiled	[CE]  ')'  expected	24	None	replace
32	[BUG]  [BUGGY]  Node  arg  =  n.getLastChild();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  arg  =  n.getLastChild();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  arg  =  n.getLastChild();	  Node    arg    =    assign.getLastChild();    	non-compiled	[CE]  ')'  expected	24	None	replace
33	[BUG]  [BUGGY]  Node  arg  =  assignment.getFirstChild();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  arg  =  assignment.getFirstChild();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  arg  =  assignment.getFirstChild();	  Node    arg    =    assign.getLastChild();    	non-compiled	[CE]  ')'  expected	24	None	replace
34	[BUG]  [BUGGY]  Node  arg  =  assign.getNext();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  arg  =  assign.getNext();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  arg  =  assign.getNext();	  Node    arg    =    assign.getFirstChild();    	non-compiled	[CE]  ')'  expected	25	None	replace
35	[BUG]  [BUGGY]  Node  arg  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  arg  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  arg  =  assign!=  null?  assign.getLastChild()  :  assign.getFirstChild();	  Node    arg    =    assign.getFirstChild();    	non-compiled	[CE]  ')'  expected	25	None	replace
36	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.CALL)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.CALL)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.CALL)  {	  }    else    if(n.getType()    ==    Token.VAR    &&    n.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
37	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  n.getType()!=  Token.CALL)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  n.getType()!=  Token.CALL)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  n.getType()!=  Token.CALL)  {	  }    else    if(n.getType()    ==    Token.VAR    &&    n.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
38	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	7	None	replace
39	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {	  }    else    if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	7	None	replace
40	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	7	None	replace
41	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  NodeUtil.isFunctionAnonymous(n))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  NodeUtil.isFunctionAnonymous(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  ||  NodeUtil.isFunctionAnonymous(n))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isFunctionAnonymous(n))    {    	non-compiled	[CE]  ')'  expected	31	None	replace
42	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isNamespaceAnonymous(n))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isNamespaceAnonymous(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isNamespaceAnonymous(n))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isFunctionAnonymous(n))    {    	non-compiled	[CE]  ')'  expected	31	None	replace
43	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionAnonymous(n)||  assign.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionAnonymous(n)||  assign.getType()  ==  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionAnonymous(n)||  assign.getType()  ==  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isFunctionAnonymous(n))    {    	non-compiled	[CE]  ')'  expected	31	None	replace
44	[BUG]  [BUGGY]  Node  name  =  assign.getLastChild();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  name  =  assign.getLastChild();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  name  =  assign.getLastChild();	  Node    name    =    assign.getFirstChild();    	non-compiled	[CE]  ')'  expected	19	None	replace
45	[BUG]  [BUGGY]  Node  name  =  n.getFirstChild();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  name  =  n.getFirstChild();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  name  =  n.getFirstChild();	  Node    name    =    assign.getFirstChild();    	non-compiled	[CE]  ')'  expected	19	None	replace
46	[BUG]  [BUGGY]  Node  name  =  assign.getNext();  [CE]  ')'  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  name  =  assign.getNext();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  name  =  assign.getNext();	  Node    name    =    assign.getFirstChild();    	non-compiled	[CE]  ')'  expected	19	None	replace
47	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isStatementBlock(n))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isStatementBlock(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isStatementBlock(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isStatementBlock(n))    {    	non-compiled	[CE]  ')'  expected	36	None	replace
48	[BUG]  [BUGGY]  }  else  if(n.getType()!=  Token.VAR  &&  n.getType()!=  Token.CALL)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()!=  Token.VAR  &&  n.getType()!=  Token.CALL)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()!=  Token.VAR  &&  n.getType()!=  Token.CALL)  {	  }    else    if(n.getType()    ==    Token.VAR    ||    n.getType()!=    Token.CALL)    {    	non-compiled	[CE]  ')'  expected	5	None	replace
49	[BUG]  [BUGGY]  }  else  if(assign.getType()  ==  Token.VAR  ||  assign.getType()  ==  Token.CALL)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(assign.getType()  ==  Token.VAR  ||  assign.getType()  ==  Token.CALL)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(assign.getType()  ==  Token.VAR  ||  assign.getType()  ==  Token.CALL)  {	  }    else    if(n.getType()    ==    Token.VAR    ||    assign.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  ')'  expected	27	None	replace
50	[BUG]  [BUGGY]  }  else  if(assign.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.CALL)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(assign.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.CALL)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(assign.getType()  ==  Token.VAR  &&  assign.getType()  ==  Token.CALL)  {	  }    else    if(n.getType()    ==    Token.VAR    ||    assign.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  ')'  expected	27	None	replace
51	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  value.getType()  ==  Token.OBJECTLIT)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  value.getType()  ==  Token.OBJECTLIT)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  ||  value.getType()  ==  Token.OBJECTLIT)  {	  }    else    if(value.getType()    ==    Token.VAR    ||    value.getType()    ==    Token.OBJECTLIT)    {    	non-compiled	[CE]  ')'  expected	29	None	replace
52	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isFunctionDeclaration(n)||    assign.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
53	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(assign)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(assign)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(assign)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isFunctionDeclaration(n)||    assign.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
54	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n)&&  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n)&&  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n)&&  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isFunctionDeclaration(n)||    assign.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
55	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  n.getType()!=  Token.OBJECTLIT)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  n.getType()!=  Token.OBJECTLIT)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  n.getType()!=  Token.OBJECTLIT)  {	  }    else    if(n.getType()    ==    Token.VAR    ||    n.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
56	[BUG]  [BUGGY]  }  else  if(n.getType()!=  Token.VAR  &&  n.getType()!=  Token.OBJECTLIT)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()!=  Token.VAR  &&  n.getType()!=  Token.OBJECTLIT)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()!=  Token.VAR  &&  n.getType()!=  Token.OBJECTLIT)  {	  }    else    if(n.getType()    ==    Token.VAR    ||    n.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
57	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isGetProp(n))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isGetProp(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isGetProp(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isGetProp(n))    {    	non-compiled	[CE]  ')'  expected	23	None	replace
58	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceProp(n))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceProp(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceProp(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isGetProp(n))    {    	non-compiled	[CE]  ')'  expected	23	None	replace
59	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  NodeUtil.isExpressionNode(n))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  NodeUtil.isExpressionNode(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  ||  NodeUtil.isExpressionNode(n))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  ')'  expected	35	None	replace
60	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isNamespaceNode(n))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isNamespaceNode(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isNamespaceNode(n))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  ')'  expected	35	None	replace
61	[BUG]  [BUGGY]  Node  value  =  n.getNext();  [CE]  ')'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  value  =  n.getNext();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  value  =  n.getNext();	  Node    value    =    assign.getNext();    	non-compiled	[CE]  ')'  expected	20	None	replace
62	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.FUNCTION)  {	  }    else    if(value.getType()    ==    Token.VAR    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	33	None	replace
63	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.VAR  &&  value.getType()  ==  Token.FUNCTION)  {	  }    else    if(value.getType()    ==    Token.VAR    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	33	None	replace
64	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  NodeUtil.isFunctionDeclaration(n))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  NodeUtil.isFunctionDeclaration(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  ||  NodeUtil.isFunctionDeclaration(n))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isFunctionDeclaration(n))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
65	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isNamespaceDeclaration(n))  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isNamespaceDeclaration(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isNamespaceDeclaration(n))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isFunctionDeclaration(n))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
66	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(assign))  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(assign))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(assign))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isFunctionDeclaration(n))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
67	[BUG]  [BUGGY]  Node  value  =  n.getLastChild();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  value  =  n.getLastChild();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  value  =  n.getLastChild();	  Node    value    =    assign.getLastChild();    	non-compiled	[CE]  ')'  expected	18	None	replace
68	[BUG]  [BUGGY]  Node  value  =  assign!=  null?  assign.getFirstChild()  :  null;  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  value  =  assign!=  null?  assign.getFirstChild()  :  null;  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  value  =  assign!=  null?  assign.getFirstChild()  :  null;	  Node    value    =    assign.getLastChild();    	non-compiled	[CE]  ')'  expected	18	None	replace
69	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  assign.getType()  ==  Token.VAR)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  assign.getType()  ==  Token.VAR)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  ||  assign.getType()  ==  Token.VAR)  {	  }    else    if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ')'  expected	8	None	replace
70	[BUG]  [BUGGY]  Node  name  =  assign!=  null?  null  :  assign.getFirstChild();  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  name  =  assign!=  null?  null  :  assign.getFirstChild();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  name  =  assign!=  null?  null  :  assign.getFirstChild();	  Node    name    =    assign.getFirstChild();    	non-compiled	[CE]  ')'  expected	19	None	replace
71	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isGetProp(n))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isGetProp(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isGetProp(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isGetProp(n))    {    	non-compiled	[CE]  ')'  expected	23	None	replace
72	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isFunction(n))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isFunction(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isFunction(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isGetProp(n))    {    	non-compiled	[CE]  ')'  expected	23	None	replace
73	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespace(n))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespace(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespace(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isGetProp(n))    {    	non-compiled	[CE]  ')'  expected	23	None	replace
74	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.FUNCTION  ||  value.getType()  ==  Token.VAR)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.FUNCTION  ||  value.getType()  ==  Token.VAR)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.FUNCTION  ||  value.getType()  ==  Token.VAR)  {	  }    else    if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ')'  expected	2	None	replace
75	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isStatementBlock(n))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isStatementBlock(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isStatementBlock(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isStatementBlock(n))    {    	non-compiled	[CE]  ')'  expected	36	None	replace
76	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isStatementBlock(assign))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isStatementBlock(assign))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isStatementBlock(assign))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isStatementBlock(n))    {    	non-compiled	[CE]  ')'  expected	36	None	replace
77	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)  {	  }    else    if(n.getType()    ==    Token.CALL    ||    n.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  ')'  expected	6	None	replace
78	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(n))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(n))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isFunctionDeclaration(n))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
79	[BUG]  [BUGGY]  Node  arg  =  node.getLastChild();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  arg  =  node.getLastChild();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  arg  =  node.getLastChild();	  Node    arg    =    assign.getLastChild();    	non-compiled	[CE]  ')'  expected	24	None	replace
80	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(n))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(n))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(n))    {    	non-compiled	[CE]  ')'  expected	30	None	replace
81	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(assign))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(assign))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(assign))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(n))    {    	non-compiled	[CE]  ')'  expected	30	None	replace
82	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isForIn(n))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isForIn(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isForIn(n))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(n))    {    	non-compiled	[CE]  ')'  expected	30	None	replace
83	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionAnonymous(n))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionAnonymous(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionAnonymous(n))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isFunctionAnonymous(n))    {    	non-compiled	[CE]  ')'  expected	31	None	replace
84	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceDeclaration(n))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceDeclaration(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceDeclaration(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isNamespaceDeclaration(n))    {    	non-compiled	[CE]  ')'  expected	10	None	replace
85	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceDeclaration(assign))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceDeclaration(assign))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceDeclaration(assign))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isNamespaceDeclaration(n))    {    	non-compiled	[CE]  ')'  expected	10	None	replace
86	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(n))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(n))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
87	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceOp(n))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceOp(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceOp(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(n))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
88	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  n.getType()!=  Token.OBJECTLIT)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  n.getType()!=  Token.OBJECTLIT)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.VAR  &&  n.getType()!=  Token.OBJECTLIT)  {	  }    else    if(n.getType()    ==    Token.VAR    ||    n.getType()!=    Token.OBJECTLIT)    {    	non-compiled	[CE]  ')'  expected	15	None	replace
89	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  assign.getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  ||  assign.getType()  ==  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  ||  assign.getType()  ==  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	7	None	replace
90	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n))  {	  }    else    if(n.getType()    ==    Token.VAR    ||    NodeUtil.isFunctionDeclaration(n))    {    	non-compiled	[CE]  ')'  expected	12	None	replace
91	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(n))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.NAME  &&  NodeUtil.isExpressionNode(n))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isExpressionNode(n))    {    	non-compiled	[CE]  ')'  expected	35	None	replace
92	[BUG]  [BUGGY]  n.replaceChild(assign,  value);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  n.replaceChild(assign,  value);  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	n.replaceChild(assign,  value);	  n.removeChild(assign);    	non-compiled	[CE]  ')'  expected	34	None	replace
93	[BUG]  [BUGGY]  Node  value  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  value  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  value  =  assign!=  null?  assign.getFirstChild()  :  assign.getLastChild();	  Node    value    =    assign.getLastChild();    	non-compiled	[CE]  ')'  expected	18	None	replace
94	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  name.getType()  ==  Token.NAME)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  name.getType()  ==  Token.NAME)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  name.getType()  ==  Token.NAME)  {	  }    else    if(n.getType()    ==    Token.VAR    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	21	None	replace
95	[BUG]  [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(value.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isFunctionDeclaration(n)||    assign.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
96	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  n.getChildCount()  >  1)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  n.getChildCount()  >  1)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  n.getChildCount()  >  1)  {	  }    else    if(n.getType()    ==    Token.VAR    &&    n.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	1	None	replace
97	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isName(n))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isName(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isName(n))  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isFunctionDeclaration(n))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
98	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isFunctionDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isFunctionDeclaration(n))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
99	[BUG]  [BUGGY]  }  else  if(n.getType()!=  Token.VAR  &&  n.getType()!=  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()!=  Token.VAR  &&  n.getType()!=  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()!=  Token.VAR  &&  n.getType()!=  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.VAR    ||    n.getType()!=    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	3	None	replace
100	[BUG]  [BUGGY]  Node  value  =  assign!=  null?  assign.getFirstChild()  :  n.getLastChild();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  value  =  assign!=  null?  assign.getFirstChild()  :  n.getLastChild();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  value  =  assign!=  null?  assign.getFirstChild()  :  n.getLastChild();	  Node    value    =    assign.getLastChild();    	non-compiled	[CE]  ')'  expected	18	None	replace
101	[BUG]  [BUGGY]  Node  arg  =  assign.removeFirstChild();  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  Node  arg  =  assign.removeFirstChild();  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	Node  arg  =  assign.removeFirstChild();	  Node    arg    =    assign.getFirstChild();    	non-compiled	[CE]  ')'  expected	25	None	replace
102	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  n.getType()  ==  Token.NAME  &&  n.hasChildren())  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  n.getType()  ==  Token.NAME  &&  n.hasChildren())  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  n.getType()  ==  Token.NAME  &&  n.hasChildren())  {	  }    else    if(n.getType()    ==    Token.VAR    &&    n.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  ')'  expected	21	None	replace
103	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(n,  assign))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(n,  assign))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isAssignmentOp(n,  assign))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isAssignmentOp(n))    {    	non-compiled	[CE]  ')'  expected	11	None	replace
104	[BUG]  [BUGGY]  }  else  if(n.getType()!=  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n))  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()!=  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()!=  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n))  {	  }    else    if(n.getType()    ==    Token.VAR    ||    NodeUtil.isFunctionDeclaration(n))    {    	non-compiled	[CE]  ')'  expected	12	None	replace
105	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isFunctionDeclaration(n)&&  NodeUtil.isAssignmentOp(n))  {  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isFunctionDeclaration(n)&&  NodeUtil.isAssignmentOp(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isFunctionDeclaration(n)&&  NodeUtil.isAssignmentOp(n))  {	  }    else    if(n.getType()    ==    Token.VAR    ||    NodeUtil.isFunctionDeclaration(n))    {    	non-compiled	[CE]  ')'  expected	12	None	replace
106	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceAssignmentOp(n))  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceAssignmentOp(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isNamespaceAssignmentOp(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isNamespaceDeclaration(n))    {    	non-compiled	[CE]  ')'  expected	10	None	replace
107	[BUG]  [BUGGY]  n.addChildToFront(assign);  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  n.addChildToFront(assign);  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	n.addChildToFront(assign);	  n.removeChild(assign);    	non-compiled	[CE]  ')'  expected	34	None	replace
108	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  n.getType()  ==  Token.CALL  &&!NodeUtil.isAssignmentOp(n))  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  n.getType()  ==  Token.CALL  &&!NodeUtil.isAssignmentOp(n))  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  n.getType()  ==  Token.CALL  &&!NodeUtil.isAssignmentOp(n))  {	  }    else    if(n.getType()    ==    Token.VAR    &&    n.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  ')'  expected	4	None	replace
109	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(n)||  assign.getType()  ==  Token.ASSIGN)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(n)||  assign.getType()  ==  Token.ASSIGN)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.NAME  &&  NodeUtil.isAssignmentOp(n)||  assign.getType()  ==  Token.ASSIGN)  {	  }    else    if(n.getType()    ==    Token.NAME    &&    NodeUtil.isAssignmentOp(n))    {    	non-compiled	[CE]  ')'  expected	30	None	replace
110	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isFunctionDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isFunctionDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  ||  NodeUtil.isFunctionDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isFunctionDeclaration(n)||    assign.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
111	[BUG]  [BUGGY]  }  else  if(assign.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(assign.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(assign.getType()  ==  Token.VAR  &&  NodeUtil.isFunctionDeclaration(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isFunctionDeclaration(n)||    assign.getFirstChild().getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  ')'  expected	37	None	replace
112	[BUG]  [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isGetProp(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  static  boolean  isNamespacePlaceholder(Node  n)  {  if  (!n.getBooleanProp(Node.IS_NAMESPACE))  {  return  false;  }  Node  value  =  null;  if  (n.getType()  ==  Token.EXPR_RESULT)  {  Node  assign  =  n.getFirstChild();  value  =  assign.getLastChild();      [BUGGY]  }  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isGetProp(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {  [BUGGY]      Node  name  =  n.getFirstChild();  value  =  name.getFirstChild();  }  return  value  !=  null  &&  value.getType()  ==  Token.OBJECTLIT  &&  !value.hasChildren();  }  [CLASS]  ProcessClosurePrimitives  1  ProvidedName  UnrecognizedRequire  [METHOD]  isNamespacePlaceholder  [RETURN_TYPE]  boolean  Node  n  [VARIABLES]  AbstractCompiler  compiler  Set  exportedVariables  boolean  explicit  isExpr  rewriteNewDateGoogNow  DiagnosticType  BASE_CLASS_ERROR  DUPLICATE_NAMESPACE_ERROR  FUNCTION_NAMESPACE_ERROR  INVALID_ARGUMENT_ERROR  INVALID_PROVIDE_ERROR  LATE_PROVIDE_ERROR  MISSING_PROVIDE_ERROR  NON_STRING_PASSED_TO_SET_CSS_NAME_MAPPING_ERROR  NULL_ARGUMENT_ERROR  TOO_MANY_ARGUMENTS_ERROR  XMODULE_REQUIRE_ERROR  diagnostic  error  CheckLevel  requiresLevel  Node  arg  assign  assignNode  baseClassNode  callGoogNow  callNode  callee  candidateDefinition  className  date  decl  enclosingFnNameNode  enclosingParent  explicitNode  expr  externs  firstNode  googNow  key  left  maybeInheritsExpr  methodName  methodNameNode  n  name  nameNode  node  objlit  parent  replacementNode  requireNode  root  scopeRoot  sourceNode  thisArg  value  valueNode  varNode  JSModule  explicitModule  firstModule  minimumModule  module  newModule  providedModule  List  typeDecls  unrecognizedRequires  String  GOOG  enclosingQname  ending  extraMessage  googNowQName  inputName  methodName  name  namespace  ns  part  prefixNs  typeDecl  value  Map  cssNames  providedNames  JSModuleGraph  moduleGraph  	projects/Closure92/src/com/google/javascript/jscomp/ProcessClosurePrimitives.java	0.14744195615489714	890	890	1	replace	}  else  if(n.getType()  ==  Token.VAR  &&  NodeUtil.isGetProp(n)||  assign.getFirstChild().getType()  ==  Token.FUNCTION)  {	  }    else    if(n.getType()    ==    Token.VAR    &&    NodeUtil.isGetProp(n))    {    	non-compiled	[CE]  ')'  expected	23	None	replace
